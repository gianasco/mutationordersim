(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1299137,      25909]
NotebookOptionsPosition[   1290549,      25637]
NotebookOutlinePosition[   1290903,      25653]
CellTagsIndexPosition[   1290860,      25650]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.656414024833804*^9, 3.656414026304658*^9}}],

Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<CompiledFunctionTools`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<CCodeGenerator`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"On", "[", 
  RowBox[{"Compile", "::", "noinfo"}], "]"}]}], "Input",
 CellChangeTimes->{{3.656065953642845*^9, 3.656065953643821*^9}, {
  3.657084570762505*^9, 3.6570845715919113`*^9}, {3.670050679044035*^9, 
  3.670050679419751*^9}}],

Cell[CellGroupData[{

Cell["Analytical Functions", "Subsection",
 CellChangeTimes->{{3.657005728173622*^9, 3.657005732093895*^9}, {
   3.7565712665654383`*^9, 3.756571296181531*^9}, 3.756571389402556*^9}],

Cell["\<\
The following functions do not compile due to the recquired modification of \
the arguments. Nevertheless, it is possible to make them work by substituting \
their definitions inside those calling functions which include the arguments \
as internal variables. 
There were troubles because bisectionC and shiftbisectionC were iterative \
functions. They has been redefined as cycles.\
\>", "Text",
 CellChangeTimes->{{3.657005865375554*^9, 3.6570060725385227`*^9}, {
  3.6570845199663343`*^9, 3.6570845483513308`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Bisection ",
 Cell[BoxData[
  ButtonBox["\<\"Evaluate\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
       EvaluationNotebook[], All, ButtonCell] SelectionMove[
       EvaluationNotebook[], All, CellGroup]) SelectionEvaluateCreateCell[
      EvaluationNotebook[]],
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False,
  CellChangeTimes->{3.6252904677946167`*^9, 3.626670633881194*^9, 
   3.6519101150134897`*^9}]
}], "Subsubsection",
 CellChangeTimes->{{3.651910339748372*^9, 3.651910345476472*^9}, {
  3.6519103897649527`*^9, 3.651910391384837*^9}, {3.6519104588379927`*^9, 
  3.651910460430045*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "delsC", " ", "copies", " ", "the", " ", "vector", " ", "shifted", " ", 
     "by", " ", "1", " ", "to", " ", "left", " ", "into", " ", 
     RowBox[{"itself", ".", "\[IndentingNewLine]", "As"}], " ", "result"}], 
    ",", " ", 
    RowBox[{
    "the", " ", "first", " ", "element", " ", "is", " ", "overwritten"}], ",",
     " ", 
    RowBox[{"the", " ", "vector", " ", "is", " ", "shifted"}], ",", " ", 
    RowBox[{
     RowBox[{
     "and", " ", "the", " ", "last", " ", "element", " ", "is", " ", "alos", 
      " ", "in", " ", "position", " ", "end"}], "-", "1"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"SetAttributes", "[", 
    RowBox[{"delsC", ",", "HoldFirst"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"delsC", "[", "vec_", "]"}], ":=", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"vec", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", 
           RowBox[{"-", "2"}]}], "]"}], "]"}], "=", 
        RowBox[{"vec", "[", 
         RowBox[{"[", 
          RowBox[{"2", ";;", 
           RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]",
       ")"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
      "shiftinsertC", " ", "shifts", " ", "the", " ", "portion", " ", "of", 
       " ", "the", " ", "vector", " ", "till", " ", "pos"}], "-", 
      RowBox[{
      "1", " ", "by", " ", "1", " ", "to", " ", "left", " ", "into", " ", 
       "itself", " ", "and", " ", "copies", " ", "the", " ", "element", " ", 
       "in", " ", "pos"}], "-", 
      RowBox[{"1.", "\[IndentingNewLine]", "As", " ", "result"}]}], ",", " ", 
     
     RowBox[{
     "the", " ", "first", " ", "element", " ", "is", " ", "overwritten"}], 
     ",", " ", 
     RowBox[{
      RowBox[{"the", " ", "vector", " ", "till", " ", "pos"}], "-", 
      RowBox[{"1", " ", "is", " ", "shifted"}]}], ",", " ", 
     RowBox[{
      RowBox[{
      "a", " ", "new", " ", "element", " ", "is", " ", "placed", " ", "in", 
       " ", "pos"}], "-", "1"}], ",", " ", 
     RowBox[{
     "and", " ", "the", " ", "vector", " ", "from", " ", "pos", " ", "to", 
      " ", "the", " ", "end", " ", "is", " ", "unchanged"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"SetAttributes", "[", 
    RowBox[{"shiftinsertC", ",", "HoldFirst"}], "]"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"shiftinsertC", "[", 
      RowBox[{"vec_", ",", "elem_", ",", "pos_"}], "]"}], ":=", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"pos", ">", "2"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"vec", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", 
             RowBox[{"pos", "-", "2"}]}], "]"}], "]"}], "=", 
          RowBox[{"vec", "[", 
           RowBox[{"[", 
            RowBox[{"2", ";;", 
             RowBox[{"pos", "-", "1"}]}], "]"}], "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"vec", "[", 
         RowBox[{"[", 
          RowBox[{"pos", "-", "1"}], "]"}], "]"}], "=", "elem"}]}], 
      "\[IndentingNewLine]", ")"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "insertC", " ", "shifts", " ", "the", " ", "portion", " ", "of", " ", 
      "the", " ", "vector", " ", "from", " ", "pos", " ", "by", " ", "1", " ",
       "to", " ", "right", " ", "into", " ", "itself", " ", "and", " ", 
      "copies", " ", "the", " ", "element", " ", "in", " ", 
      RowBox[{"pos", ".", "\[IndentingNewLine]", "As"}], " ", "result"}], ",",
      " ", 
     RowBox[{
      RowBox[{"the", " ", "vector", " ", "till", " ", "pos"}], "-", 
      RowBox[{"1", " ", "is", " ", "unchanged"}]}], ",", " ", 
     RowBox[{
     "the", " ", "vector", " ", "from", " ", "pos", " ", "is", " ", 
      "shifted"}], ",", " ", 
     RowBox[{
     "the", " ", "last", " ", "element", " ", "is", " ", "overwritten"}], ",",
      " ", 
     RowBox[{
     "and", " ", "new", " ", "element", " ", "is", " ", "placed", " ", "in", 
      " ", "pos"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"SetAttributes", "[", 
    RowBox[{"insertC", ",", "HoldFirst"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"insertC", "[", 
      RowBox[{"vec_", ",", "elem_", ",", "pos_"}], "]"}], ":=", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"vec", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"pos", "+", "1"}], ";;", 
           RowBox[{"-", "1"}]}], "]"}], "]"}], "=", 
        RowBox[{"vec", "[", 
         RowBox[{"[", 
          RowBox[{"pos", ";;", 
           RowBox[{"-", "2"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"vec", "[", 
         RowBox[{"[", "pos", "]"}], "]"}], "=", "elem"}]}], 
      "\[IndentingNewLine]", ")"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.6490766850080347`*^9, 3.6490767521530313`*^9}, {
   3.649076782850421*^9, 3.649076796835091*^9}, {3.649076997089551*^9, 
   3.6490771053447237`*^9}, {3.649475879807219*^9, 3.6494759070631657`*^9}, {
   3.650014484785226*^9, 3.65001455633805*^9}, {3.6502672987521973`*^9, 
   3.65026729952666*^9}, {3.650267387704341*^9, 3.650267499140769*^9}, {
   3.650267537302277*^9, 3.650267608375084*^9}, {3.6502676546966553`*^9, 
   3.650267664610148*^9}, 3.6506069841252613`*^9, {3.650608741689341*^9, 
   3.65060875693655*^9}, {3.6506088009206657`*^9, 3.650608802999942*^9}, {
   3.650609089131501*^9, 3.6506090907100067`*^9}, 3.650609150903974*^9, {
   3.6506094249918327`*^9, 3.6506094258664417`*^9}, {3.65060974235483*^9, 
   3.650609816277137*^9}, {3.650611080273575*^9, 3.650611087688901*^9}, {
   3.650611121568242*^9, 3.650611189015106*^9}, {3.6506116523034897`*^9, 
   3.650611712135542*^9}, 3.650611895338996*^9, {3.650612063239004*^9, 
   3.650612071426351*^9}, {3.650612122411955*^9, 3.6506121629624157`*^9}, {
   3.6506122155027723`*^9, 3.650612218236683*^9}, {3.650612354883354*^9, 
   3.650612385016314*^9}, {3.650612463124424*^9, 3.65061247019762*^9}, {
   3.656398701579659*^9, 3.656398702634822*^9}, {3.656414872029584*^9, 
   3.656414883814645*^9}, {3.657005796697682*^9, 3.657005831339037*^9}, {
   3.657032448407708*^9, 3.6570324521179237`*^9}, {3.657052748132575*^9, 
   3.657052748329624*^9}, {3.6572770492844143`*^9, 3.6572770521125603`*^9}, {
   3.662875982644456*^9, 3.6628760398801117`*^9}, {3.662876080880817*^9, 
   3.662876155501499*^9}, {3.6628762473026648`*^9, 3.6628763120946693`*^9}, {
   3.662876349875815*^9, 3.6628765772593412`*^9}, {3.662876620703499*^9, 
   3.66287662595409*^9}, {3.662876690955976*^9, 3.662876914791168*^9}}],

Cell["Further more this version does not implement block", "Text",
 CellChangeTimes->{{3.657260091022223*^9, 3.6572601213921633`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"bisectionC", ",", "HoldFirst"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"bisectionC", "[", 
     RowBox[{"vec_", ",", "elem_", ",", "i_", ",", "f_"}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"mid", "=", "1"}], ";", 
      RowBox[{"midr", "=", "1."}], ";", 
      RowBox[{"in", "=", "i"}], ";", 
      RowBox[{"fn", "=", "f"}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"midr", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"fn", "+", "1", "-", "in"}], ")"}], "/", "2."}]}], ";", 
         RowBox[{"midr", "\[GreaterEqual]", "1"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"mid", "=", 
          RowBox[{
           RowBox[{"IntegerPart", "[", "midr", "]"}], "+", "in"}]}], ";", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"vec", "[", 
             RowBox[{"[", 
              RowBox[{"mid", ",", 
               RowBox[{"-", "1"}]}], "]"}], "]"}], ">", " ", 
            RowBox[{"elem", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}]}], ",", 
           RowBox[{"fn", "=", 
            RowBox[{"mid", "-", "1"}]}], ",", 
           RowBox[{"in", "=", 
            RowBox[{"mid", "+", "1"}]}]}], "]"}]}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"midr", "\[LessEqual]", " ", "0"}], ",", 
        RowBox[{"fn", "+=", "1"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"vec", "[", 
            RowBox[{"[", 
             RowBox[{"fn", ",", 
              RowBox[{"-", "1"}]}], "]"}], "]"}], "<", " ", 
           RowBox[{"elem", " ", "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}]}], ",", 
          RowBox[{"fn", "+=", "1"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"insertC", "[", 
       RowBox[{"vec", ",", "elem", ",", "fn"}], "]"}]}], 
     "\[IndentingNewLine]", ")"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"shiftbisectionC", ",", "HoldFirst"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"shiftbisectionC", "[", 
     RowBox[{"vec_", ",", "elem_", ",", "i_", ",", "f_"}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"mid", "=", "1"}], ";", 
      RowBox[{"midr", "=", "1."}], ";", 
      RowBox[{"in", "=", "i"}], ";", 
      RowBox[{"fn", "=", "f"}], ";", " ", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"midr", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"fn", "+", "1", "-", "in"}], ")"}], "/", "2."}]}], ";", 
         RowBox[{"midr", "\[GreaterEqual]", "1"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"mid", "=", 
          RowBox[{
           RowBox[{"IntegerPart", "[", "midr", "]"}], "+", "in"}]}], ";", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"vec", "[", 
             RowBox[{"[", 
              RowBox[{"mid", ",", 
               RowBox[{"-", "1"}]}], "]"}], "]"}], ">", " ", 
            RowBox[{"elem", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}]}], ",", 
           RowBox[{"fn", "=", 
            RowBox[{"mid", "-", "1"}]}], ",", 
           RowBox[{"in", "=", 
            RowBox[{"mid", "+", "1"}]}]}], "]"}]}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"midr", "\[LessEqual]", " ", "0"}], ",", 
        RowBox[{"fn", "+=", "1"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"vec", "[", 
            RowBox[{"[", 
             RowBox[{"fn", ",", 
              RowBox[{"-", "1"}]}], "]"}], "]"}], "<", " ", 
           RowBox[{"elem", " ", "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}]}], ",", 
          RowBox[{"fn", "+=", "1"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"shiftinsertC", "[", 
       RowBox[{"vec", ",", "elem", ",", "fn"}], "]"}]}], 
     "\[IndentingNewLine]", ")"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.657051839857373*^9, {3.6570519855084047`*^9, 3.657051998870625*^9}, {
   3.657052063897843*^9, 3.6570520807420893`*^9}, {3.6570521134383373`*^9, 
   3.657052134777339*^9}, {3.657084431599177*^9, 3.657084469726164*^9}, {
   3.6570846122082653`*^9, 3.657084619618862*^9}, {3.6570879755482893`*^9, 
   3.657087982990295*^9}, {3.657260133606618*^9, 3.657260204415221*^9}, {
   3.657273158987802*^9, 3.657273173737193*^9}, {3.657274743907963*^9, 
   3.657274755762375*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Compilable Functions", "Subsection",
 CellChangeTimes->{{3.65700552785121*^9, 3.657005545355627*^9}, {
   3.75657131014295*^9, 3.756571322044845*^9}, 3.7565713919763412`*^9}],

Cell[CellGroupData[{

Cell[TextData[{
 "Cancer Stemness ",
 Cell[BoxData[
  ButtonBox["\<\"Evaluate\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
       EvaluationNotebook[], All, ButtonCell] SelectionMove[
       EvaluationNotebook[], All, CellGroup]) SelectionEvaluateCreateCell[
      EvaluationNotebook[]],
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False,
  CellChangeTimes->{3.6252904677946167`*^9, 3.626670633881194*^9, 
   3.6519101150134897`*^9}]
}], "Subsubsection",
 CellChangeTimes->{{3.651910339748372*^9, 3.651910345476472*^9}, {
  3.6519103897649527`*^9, 3.651910391384837*^9}, {3.651910480974146*^9, 
  3.651910484694303*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ssC", "[", 
   RowBox[{"i_", ",", "m_"}], "]"}], ":=", 
  RowBox[{"2", 
   RowBox[{"(", 
    FractionBox["\[ExponentialE]", 
     RowBox[{"\[ExponentialE]", "-", "1"}]], ")"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"-", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "10.0"}], 
         FractionBox[
          RowBox[{"i", "+", "1"}], 
          RowBox[{"10", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"m", "^", "0.5"}], "/", "2"}], "]"}]}]]}], " ", "]"}]}], 
      "]"}], "-", 
     FractionBox["1", "\[ExponentialE]"]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.656147240293681*^9, 3.656147309097273*^9}, {
   3.656147341526009*^9, 3.6561473439007473`*^9}, 3.6572768787391644`*^9, {
   3.663326088588706*^9, 3.663326096844616*^9}, {3.664016177107601*^9, 
   3.6640161842837048`*^9}, {3.6704230600966597`*^9, 3.6704230767969112`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"ssC", "[", 
    RowBox[{"i", ",", "0"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0", ",", "7"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6705826627515574`*^9, 3.670582753803734*^9}, {
  3.670582965431678*^9, 3.670582969927672*^9}, {3.670583008624227*^9, 
  3.6705830188073683`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.0261371248071232`", ",", "1.5995163272605621`", ",", 
   "1.8463330881389064`", ",", "1.9425776406577664`", ",", 
   "1.978753110183275`", ",", "1.9921670555634658`", ",", 
   "1.997116163001465`", ",", "1.9989387898813855`"}], "}"}]], "Output",
 CellChangeTimes->{{3.670582698930171*^9, 3.670582754239851*^9}, 
   3.670582872017208*^9, {3.670582965774324*^9, 3.670582970308145*^9}, {
   3.670583009232971*^9, 3.670583019113254*^9}, 3.670648427845331*^9, 
   3.670653658095978*^9, 3.670654178203169*^9, 3.670654631266611*^9, 
   3.671341855879364*^9, 3.671342093817214*^9, 3.6713592472068768`*^9, {
   3.671359467889843*^9, 3.67135948756813*^9}, 3.672641384418116*^9, 
   3.672641442603107*^9, 3.672654456357986*^9, 3.672654976031546*^9, 
   3.67265572621357*^9, 3.6729817520661583`*^9, 3.672983615040513*^9, 
   3.6729836482616177`*^9, 3.672998171921522*^9, 3.672999226060157*^9, 
   3.6729992715139637`*^9, 3.67299953587197*^9, 3.673014097585713*^9, 
   3.673027206842507*^9, 3.673028451676339*^9, 3.673028726179097*^9, 
   3.75656704966369*^9, 3.7565672253213167`*^9, 3.756567318682077*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Action support ",
 Cell[BoxData[
  ButtonBox["\<\"Evaluate\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
       EvaluationNotebook[], All, ButtonCell] SelectionMove[
       EvaluationNotebook[], All, CellGroup]) SelectionEvaluateCreateCell[
      EvaluationNotebook[]],
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False,
  CellChangeTimes->{3.6252904677946167`*^9, 3.626670633881194*^9, 
   3.6519101150134897`*^9}]
}], "Subsubsection",
 CellChangeTimes->{{3.651910339748372*^9, 3.651910345476472*^9}, {
  3.6519103897649527`*^9, 3.651910391384837*^9}, {3.651910590335656*^9, 
  3.651910597823724*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"supC", "[", 
   RowBox[{"s_", ",", "cen_", ",", "wide_", ",", "slope_"}], "]"}], ":=", " ", 
  RowBox[{"Exp", "[", 
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{"slope", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "wide"}], "/", "2"}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cosh", "[", 
         RowBox[{
          RowBox[{"-", "wide"}], 
          RowBox[{"(", 
           RowBox[{"s", "-", "cen"}], ")"}]}], "]"}], "-", "1"}], ")"}]}], 
     ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.656064241712059*^9, 3.6560642709044857`*^9}, {
   3.6560646931676064`*^9, 3.6560646991030817`*^9}, {3.656065974921217*^9, 
   3.65606597721579*^9}, {3.656146514839862*^9, 3.6561465227285957`*^9}, 
   3.6561465953883533`*^9, 3.657276886538007*^9, 3.663326215798525*^9, {
   3.664016197602516*^9, 3.66401620511701*^9}, {3.670310960139868*^9, 
   3.6703109754363832`*^9}, {3.6704229996468363`*^9, 3.670423043266717*^9}, 
   3.670423198399049*^9},
 CellID->2053928453],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"supC", "[", 
    RowBox[{"s", ",", "0.5", ",", "20", ",", "0.01"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", ",", "0", ",", "2", ",", "0.2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6705828853571444`*^9, 3.670582937151767*^9}, {
  3.6705829852883453`*^9, 3.670582991368423*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.9950129309174972`", ",", "0.9999088793939127`", ",", 
   "0.9999987459658827`", ",", "0.9999987459658827`", ",", 
   "0.9999088793939127`", ",", "0.9950129309174972`", ",", 
   "0.7611001731823713`", ",", "3.3645901903413`*^-7", ",", 
   "3.82350017347081764159739486411148576527087801368729`13.035762007000908*^-\
354", ",", 
   "1.13809103457017760878635733129506169734331059625`11.306908055407394*^-\
19296", ",", 
   "1.4591847193466373032049618157425312`9.537475518761623*^-1053523"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.670582897785007*^9, 3.6705829378498087`*^9}, {
   3.670582985846766*^9, 3.6705829916442633`*^9}, 3.670648427927741*^9, 
   3.670653658217557*^9, 3.670654178254416*^9, 3.670654631313699*^9, 
   3.671341855911551*^9, 3.671342093858639*^9, 3.6713592472656097`*^9, {
   3.671359467928439*^9, 3.6713594876019382`*^9}, 3.672641384644848*^9, 
   3.672641442654962*^9, 3.6726544564063673`*^9, 3.672654976142123*^9, 
   3.6726557262720747`*^9, 3.672981752119836*^9, 3.672983615094681*^9, 
   3.672983648406406*^9, 3.672998171986342*^9, 3.672999226128269*^9, 
   3.672999271568245*^9, 3.6729995359645443`*^9, 3.6730140977901287`*^9, 
   3.673027206973198*^9, 3.673028451757004*^9, 3.6730287263142776`*^9, 
   3.75656704976545*^9, 3.756567225392146*^9, 3.7565673187645063`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Rates and amplitudes ",
 Cell[BoxData[
  ButtonBox["\<\"Evaluate\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
       EvaluationNotebook[], All, ButtonCell] SelectionMove[
       EvaluationNotebook[], All, CellGroup]) SelectionEvaluateCreateCell[
      EvaluationNotebook[]],
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False,
  CellChangeTimes->{3.6252904677946167`*^9, 3.626670633881194*^9, 
   3.6519101150134897`*^9}]
}], "Subsubsection",
 CellChangeTimes->{{3.651910339748372*^9, 3.651910345476472*^9}, {
  3.6519103897649527`*^9, 3.651910391384837*^9}, {3.6519108777871323`*^9, 
  3.6519108863075333`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"raFC00", "[", 
    RowBox[{"s_", ",", "k_", ",", "cen_"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"Aasym", "[", 
     RowBox[{"[", "k", "]"}], "]"}], 
    RowBox[{"supC", "[", 
     RowBox[{"s", ",", "2.", ",", "wide", ",", "slope"}], "]"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"raFC", "[", 
    RowBox[{"s_", ",", "k_"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"Aasym", "[", 
     RowBox[{"[", "k", "]"}], "]"}], 
    RowBox[{"supC", "[", 
     RowBox[{"s", ",", "2.", ",", "wide", ",", "slope"}], "]"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rsFC00", "[", 
    RowBox[{"s_", ",", "k_", ",", "cen_"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"Asym", "[", 
     RowBox[{"[", "k", "]"}], "]"}], 
    RowBox[{"supC", "[", 
     RowBox[{"s", ",", "cen", ",", "wide", ",", "slope"}], "]"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rsFC", "[", 
    RowBox[{"s_", ",", "k_"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"Asym", "[", 
     RowBox[{"[", "k", "]"}], "]"}], 
    RowBox[{"supC", "[", 
     RowBox[{"s", ",", "1.", ",", "wide", ",", "slope"}], "]"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rdFC00", "[", 
    RowBox[{"s_", ",", "k_", ",", "cen_"}], "]"}], ":=", " ", " ", 
   RowBox[{
    RowBox[{"Aapop", "[", 
     RowBox[{"[", "k", "]"}], "]"}], 
    RowBox[{"supC", "[", 
     RowBox[{"s", ",", "cen", ",", "wide", ",", "slope"}], "]"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rdFC", "[", 
    RowBox[{"s_", ",", "k_"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"Aapop", "[", 
     RowBox[{"[", "k", "]"}], "]"}], 
    RowBox[{"supC", "[", 
     RowBox[{"s", ",", "0.5", ",", "wide", ",", "slope"}], "]"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ratesFC00", "[", 
    RowBox[{"s_", ",", "k_", ",", "cen_"}], "]"}], ":=", " ", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"raFC00", "[", 
      RowBox[{"s", ",", "k", ",", 
       RowBox[{"cen", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"rsFC00", "[", 
      RowBox[{"s", ",", "k", ",", 
       RowBox[{"cen", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"rdFC00", "[", 
      RowBox[{"s", ",", "k", ",", 
       RowBox[{"cen", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], "}"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ratesFC", "[", 
    RowBox[{"s_", ",", "k_"}], "]"}], ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"raFC", "[", 
      RowBox[{"s", ",", "k"}], "]"}], ",", 
     RowBox[{"rsFC", "[", 
      RowBox[{"s", ",", "k"}], "]"}], ",", 
     RowBox[{"rdFC", "[", 
      RowBox[{"s", ",", "k"}], "]"}]}], "}"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.637923865126196*^9, 3.637923983792659*^9}, {
   3.63792406022381*^9, 3.637924085569261*^9}, 3.637924510139997*^9, {
   3.637924548446463*^9, 3.637924631804875*^9}, 3.637925270772182*^9, {
   3.6379258561607857`*^9, 3.637925865721979*^9}, {3.6379263257687902`*^9, 
   3.63792633027458*^9}, {3.637926813591329*^9, 3.637926824101845*^9}, {
   3.637927618983234*^9, 3.637927621766492*^9}, {3.637927894623289*^9, 
   3.637927922266301*^9}, {3.6379842453788157`*^9, 3.637984270940329*^9}, {
   3.638158792213601*^9, 3.63815879877457*^9}, {3.6392883059139*^9, 
   3.6392883261288633`*^9}, {3.639288509612357*^9, 3.639288555357937*^9}, {
   3.6392892590697403`*^9, 3.6392893980090313`*^9}, 3.639297722470641*^9, {
   3.639298093341783*^9, 3.6392980997144117`*^9}, {3.643520411945228*^9, 
   3.643520494635128*^9}, {3.643520612688265*^9, 3.643520707321321*^9}, {
   3.650093536871958*^9, 3.6500935627507563`*^9}, {3.6500937831935053`*^9, 
   3.65009378537501*^9}, {3.6542467184612217`*^9, 3.65424677154917*^9}, {
   3.654248558342001*^9, 3.6542485882446012`*^9}, {3.6542489868996487`*^9, 
   3.6542490164394712`*^9}, {3.65425457995487*^9, 3.654254593311275*^9}, 
   3.6543207292346773`*^9, {3.654426387710677*^9, 3.654426389357829*^9}, {
   3.654426433447804*^9, 3.6544264339602547`*^9}, {3.6544264831761837`*^9, 
   3.6544264850317707`*^9}, {3.654426583124916*^9, 3.6544265863208237`*^9}, {
   3.6544274052677402`*^9, 3.6544274102108727`*^9}, {3.654428828748747*^9, 
   3.654428865125211*^9}, {3.6544289078142776`*^9, 3.654428931023636*^9}, {
   3.656412014641169*^9, 3.65641223334065*^9}, {3.6564123245152483`*^9, 
   3.656412356177485*^9}, {3.657276889561431*^9, 3.657276894592888*^9}, {
   3.663311581318409*^9, 3.663311592373445*^9}, {3.66331176635329*^9, 
   3.663311806718502*^9}, {3.6633118610322638`*^9, 3.663311875302394*^9}, {
   3.663326160590268*^9, 3.663326176298579*^9}, {3.6633262636948843`*^9, 
   3.663326280050103*^9}, 3.6633263326744337`*^9, {3.66332636902288*^9, 
   3.66332637709087*^9}, 3.6633265912575808`*^9, {3.663326794859198*^9, 
   3.663326803877977*^9}, {3.664016217925068*^9, 3.6640162393653593`*^9}, {
   3.6640163491878147`*^9, 3.664016371544887*^9}, {3.66547485286423*^9, 
   3.665474917608755*^9}, {3.665474977969599*^9, 3.665474981129273*^9}, {
   3.665475638717886*^9, 3.665475748340144*^9}, 3.669967614169368*^9, {
   3.6700499326293907`*^9, 3.670050006531*^9}, {3.670050112836091*^9, 
   3.670050141751281*^9}, {3.67005028133539*^9, 3.670050290695552*^9}, {
   3.670050414090151*^9, 3.670050459191947*^9}, {3.670050959274678*^9, 
   3.6700509740056458`*^9}, 3.6700511688098307`*^9, {3.670051590097653*^9, 
   3.6700515979789963`*^9}, {3.670051659335181*^9, 3.670051666475177*^9}, 
   3.670051718487137*^9, {3.670051823141302*^9, 3.670051871020652*^9}, {
   3.6700523672914*^9, 3.67005237685765*^9}, {3.670052513527508*^9, 
   3.670052558829741*^9}, 3.6700525995769176`*^9, 3.670052645584661*^9, 
   3.6700526938918467`*^9, {3.6700631600112123`*^9, 3.670063160911666*^9}, {
   3.670310512153501*^9, 3.6703105368198957`*^9}, {3.670310645641073*^9, 
   3.6703106620667133`*^9}, {3.6703108157999496`*^9, 3.670310832312285*^9}, {
   3.670423409226357*^9, 3.670423525489787*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Variables ",
 Cell[BoxData[
  ButtonBox["\<\"Evaluate\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
       EvaluationNotebook[], All, ButtonCell] SelectionMove[
       EvaluationNotebook[], All, CellGroup]) SelectionEvaluateCreateCell[
      EvaluationNotebook[]],
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False,
  CellChangeTimes->{3.6252904677946167`*^9, 3.626670633881194*^9, 
   3.6519101150134897`*^9}]
}], "Subsubsection",
 CellChangeTimes->{{3.651910339748372*^9, 3.651910345476472*^9}, {
  3.6519103897649527`*^9, 3.651910391384837*^9}, {3.6519108777871323`*^9, 
  3.6519108863075333`*^9}, {3.651910979876584*^9, 3.651910981589077*^9}, {
  3.6519110122131357`*^9, 3.651911012564948*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ratesC", "[", 
   RowBox[{"s_", ",", "k_", ",", "keyg_"}], "]"}], ":=", " ", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"ratesFC", "[", 
     RowBox[{"s", ",", "k"}], "]"}], "  ", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"krates", "[", 
       RowBox[{"[", "k", "]"}], "]"}], "keyg"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.638694955521809*^9, 3.638695030505768*^9}, {
   3.638695554024352*^9, 3.638695575431457*^9}, {3.6386956155837717`*^9, 
   3.6386957242011003`*^9}, {3.6386957784890137`*^9, 
   3.6386958257166758`*^9}, {3.6386960943992367`*^9, 
   3.6386961519602613`*^9}, {3.6386969102563763`*^9, 3.638696914111958*^9}, {
   3.63869705152219*^9, 3.638697053274434*^9}, 3.63869724174673*^9, {
   3.6389660456281567`*^9, 3.6389660504047947`*^9}, {3.639121359345209*^9, 
   3.639121361565*^9}, {3.6391237411158037`*^9, 3.6391237713306007`*^9}, {
   3.639206327464335*^9, 3.63920632767073*^9}, {3.6392064419456053`*^9, 
   3.639206480993161*^9}, {3.639207221803763*^9, 3.6392072233384027`*^9}, {
   3.639207700959847*^9, 3.639207704101816*^9}, 3.6392167854935513`*^9, 
   3.639217680053884*^9, {3.639283778944253*^9, 3.6392838998258047`*^9}, {
   3.6393085368805532`*^9, 3.639308540463224*^9}, {3.6393085843666267`*^9, 
   3.639308591373817*^9}, {3.639308648342613*^9, 3.6393086620234118`*^9}, 
   3.6410169578179626`*^9, {3.641019506825345*^9, 3.641019544946463*^9}, {
   3.6410195783795424`*^9, 3.6410196373162117`*^9}, {3.641020193899803*^9, 
   3.64102021628197*^9}, {3.64102025782677*^9, 3.64102028898702*^9}, 
   3.641023330896634*^9, {3.64127797836331*^9, 3.6412779930538588`*^9}, {
   3.641283331357725*^9, 3.641283380687335*^9}, {3.6412834364079523`*^9, 
   3.641283452712311*^9}, {3.641540859283637*^9, 3.641540877166334*^9}, 
   3.641546667947564*^9, 3.641623912547621*^9, {3.6416239921367188`*^9, 
   3.641624014994446*^9}, {3.641624048387106*^9, 3.641624119873928*^9}, {
   3.641633338273287*^9, 3.6416334222494793`*^9}, {3.6416340354249887`*^9, 
   3.641634041295476*^9}, {3.641643263389215*^9, 3.64164327487882*^9}, {
   3.6416433365130377`*^9, 3.6416433381119328`*^9}, {3.641643526336809*^9, 
   3.6416435545393248`*^9}, {3.641643675836976*^9, 3.641643827246749*^9}, {
   3.641643862206954*^9, 3.641644085497631*^9}, 3.641705606063496*^9, {
   3.641707172732501*^9, 3.641707206444726*^9}, {3.641707293618114*^9, 
   3.641707329778531*^9}, {3.641709587533483*^9, 3.641709602590825*^9}, {
   3.6435192149671583`*^9, 3.6435192683276453`*^9}, {3.6435194149681*^9, 
   3.643519501194818*^9}, {3.6435195319454536`*^9, 3.643519718559209*^9}, {
   3.643519750806738*^9, 3.64351979655786*^9}, {3.6435199315786037`*^9, 
   3.6435199403142843`*^9}, {3.643520607291871*^9, 3.643520607738846*^9}, {
   3.643520876415677*^9, 3.643520876822804*^9}, {3.6500214007069483`*^9, 
   3.650021407483713*^9}, {3.6500855221726027`*^9, 3.6500855833308773`*^9}, {
   3.650085618859889*^9, 3.6500856544851503`*^9}, {3.650093572396237*^9, 
   3.650093580919098*^9}, {3.6500938002794*^9, 3.650093835932722*^9}, {
   3.650094038484788*^9, 3.650094049011876*^9}, 3.650106515359761*^9, {
   3.650108560022328*^9, 3.650108613376882*^9}, {3.650108797975449*^9, 
   3.650108799541196*^9}, {3.651320561183435*^9, 3.6513205862933683`*^9}, {
   3.651320662549768*^9, 3.65132066294189*^9}, {3.65132085516984*^9, 
   3.6513208886972723`*^9}, {3.651489674749305*^9, 3.651489732011107*^9}, {
   3.651490058671908*^9, 3.651490064999752*^9}, {3.654254656870957*^9, 
   3.654254676483076*^9}, {3.654426256961688*^9, 3.654426257665173*^9}, {
   3.654426325166514*^9, 3.654426326034412*^9}, {3.654426401707859*^9, 
   3.654426430529278*^9}, {3.654426551179405*^9, 3.654426566834303*^9}, {
   3.6544268548252296`*^9, 3.654426857286704*^9}, {3.654427269952547*^9, 
   3.654427288692322*^9}, {3.654427420279063*^9, 3.654427487542796*^9}, {
   3.654427551406641*^9, 3.654427555439631*^9}, {3.654427606760339*^9, 
   3.6544276126082783`*^9}, {3.654427845771555*^9, 3.654427851721984*^9}, {
   3.6544301295122004`*^9, 3.6544301326163197`*^9}, {3.6544302854364967`*^9, 
   3.654430287267374*^9}, {3.654430668710559*^9, 3.654430670198484*^9}, {
   3.654431258509305*^9, 3.654431260143289*^9}, {3.6564127111411877`*^9, 
   3.65641282597456*^9}, {3.6564139868633137`*^9, 3.6564140170056267`*^9}, 
   3.6572597954831553`*^9, {3.657262298431814*^9, 3.657262304755629*^9}, 
   3.657276906310287*^9, 3.662983091244054*^9, {3.663311612184026*^9, 
   3.663311646390143*^9}, {3.663311902951795*^9, 3.6633119262945147`*^9}, 
   3.6633261166836777`*^9, 3.663326809101664*^9, {3.664016251377099*^9, 
   3.664016276980028*^9}, {3.664274887725113*^9, 3.664274888484185*^9}, {
   3.664622721398684*^9, 3.664622730109436*^9}, 3.670052750191551*^9, {
   3.6701529362164707`*^9, 3.670152945249052*^9}, 3.670153416659905*^9, {
   3.6701534572436543`*^9, 3.670153462685663*^9}, {3.6703107366754847`*^9, 
   3.670310738273879*^9}, {3.67031076947654*^9, 3.670310805255514*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Key and keygens ",
 Cell[BoxData[
  ButtonBox["\<\"Evaluate\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
       EvaluationNotebook[], All, ButtonCell] SelectionMove[
       EvaluationNotebook[], All, CellGroup]) SelectionEvaluateCreateCell[
      EvaluationNotebook[]],
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False,
  CellChangeTimes->{3.6252904677946167`*^9, 3.626670633881194*^9, 
   3.6519101150134897`*^9}]
}], "Subsubsection",
 CellChangeTimes->{{3.651910339748372*^9, 3.651910345476472*^9}, {
  3.6519103897649527`*^9, 3.651910391384837*^9}, {3.651910545903038*^9, 
  3.6519105539831333`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"keygenesC", "[", 
   RowBox[{
   "k_", ",", "mv_", ",", "compkeystep_", ",", "genes_", ",", "signature_"}], 
   "]"}], ":=", 
  RowBox[{"Apply", "[", 
   RowBox[{"Times", ",", 
    RowBox[{
     RowBox[{"Power", "[", 
      RowBox[{"genes", ",", 
       RowBox[{"mv", "  ", "signature"}]}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", 
       RowBox[{"compkeystep", "[", 
        RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.656066093167087*^9, 3.656066172161388*^9}, {
   3.656066237068645*^9, 3.656066267405223*^9}, {3.656066680251129*^9, 
   3.65606668659449*^9}, {3.656066724764245*^9, 3.656066725906912*^9}, {
   3.656066986047269*^9, 3.656066986454308*^9}, 3.6560670905610533`*^9, 
   3.656067469206604*^9, {3.656146585264936*^9, 3.656146604170877*^9}, 
   3.657276930571788*^9, {3.6633124949106216`*^9, 3.6633124962776527`*^9}, {
   3.663312931340513*^9, 3.663312932571435*^9}, {3.664016286845192*^9, 
   3.664016292643785*^9}, {3.664619261395286*^9, 3.6646193081659203`*^9}, {
   3.664619347142448*^9, 3.664619359652033*^9}, 3.6646194899710703`*^9, {
   3.664619836571241*^9, 3.6646198459768543`*^9}, {3.6646201399798393`*^9, 
   3.664620185388769*^9}, {3.664621116568637*^9, 3.664621120686799*^9}, {
   3.6646226883636913`*^9, 3.66462269642802*^9}, 3.669972168261374*^9, {
   3.669975938934046*^9, 3.669975942278098*^9}, {3.669976562847362*^9, 
   3.6699765641752*^9}, 3.6701467802853193`*^9, {3.670220343430113*^9, 
   3.670220401126273*^9}, {3.6703111405591373`*^9, 3.670311210132104*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"keyC", "[", 
   RowBox[{"k_", ",", "mv_", ",", "compkeystep_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Plus", "@@", 
   RowBox[{"mv", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", 
      RowBox[{"compkeystep", "[", 
       RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.656067188756817*^9, 3.6560671998687468`*^9}, {
   3.656067286894121*^9, 3.656067367194388*^9}, 3.656067480060751*^9, {
   3.656146485591653*^9, 3.656146485934904*^9}, 3.65614657587567*^9, 
   3.656146620416572*^9, {3.656398468589849*^9, 3.656398475356843*^9}, 
   3.656410924256549*^9, 3.6572769325652742`*^9, {3.6640163228165483`*^9, 
   3.6640163274546003`*^9}, {3.6699715031437197`*^9, 3.669971504393475*^9}, {
   3.669975947571138*^9, 3.669975948321581*^9}, {3.669977115554591*^9, 
   3.669977116792327*^9}, 3.670146777092546*^9, {3.670152222216563*^9, 
   3.670152241350428*^9}, {3.6702190586699133`*^9, 3.6702192219596977`*^9}, {
   3.670219598498969*^9, 3.670219650576973*^9}, {3.6702198755380983`*^9, 
   3.670219927527112*^9}, {3.670219966370049*^9, 3.670219974625049*^9}, {
   3.670221141189584*^9, 3.670221145809133*^9}, {3.670221252971393*^9, 
   3.670221256001543*^9}, {3.670311216880767*^9, 3.670311245327942*^9}, {
   3.6712783496018467`*^9, 3.67127838236281*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Key and keygens from 6 ",
 Cell[BoxData[
  ButtonBox["\<\"Evaluate\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
       EvaluationNotebook[], All, ButtonCell] SelectionMove[
       EvaluationNotebook[], All, CellGroup]) SelectionEvaluateCreateCell[
      EvaluationNotebook[]],
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False,
  CellChangeTimes->{3.6252904677946167`*^9, 3.626670633881194*^9, 
   3.6519101150134897`*^9}]
}], "Subsubsection",
 CellChangeTimes->{{3.651910339748372*^9, 3.651910345476472*^9}, {
  3.6519103897649527`*^9, 3.651910391384837*^9}, {3.651910545903038*^9, 
  3.6519105539831333`*^9}, {3.669968342713632*^9, 3.669968343897789*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"keygenesC", "=", 
    RowBox[{
     RowBox[{"Compile", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"k", ",", "_Integer"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"mv", ",", "_Integer", ",", "1"}], "}"}]}], "}"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{"Times", "[", 
          RowBox[{"mv", ",", "genes", ",", "signature"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{";;", 
           RowBox[{"compkeystep", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"genes", ",", "_Real", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"signature", ",", "_Integer", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"compkeystep", ",", "_Integer", ",", "1"}], "}"}]}], "}"}], 
       ",", 
       RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}], ",", 
       RowBox[{"CompilationOptions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<InlineExternalDefinitions\>\"", "\[Rule]", "True"}], 
          ",", 
          RowBox[{"\"\<InlineCompiledFunctions\>\"", "\[Rule]", "True"}], ",", 
          RowBox[{"\"\<ExpressionOptimization\>\"", "\[Rule]", "True"}]}], 
         "}"}]}], ",", 
       RowBox[{"RuntimeOptions", "\[Rule]", "\"\<Speed\>\""}]}], "]"}], 
     "\[IndentingNewLine]", 
     RowBox[{"StringPosition", "[", 
      RowBox[{
       RowBox[{"CompilePrint", "[", "keygenesC", "]"}], ",", 
       "\"\<MainEvaluate\>\""}], "]"}], "\[IndentingNewLine]", 
     RowBox[{"CompilePrint", "[", "keygenesC", "]"}]}]}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.656066093167087*^9, 3.656066172161388*^9}, {
   3.656066237068645*^9, 3.656066267405223*^9}, {3.656066680251129*^9, 
   3.65606668659449*^9}, {3.656066724764245*^9, 3.656066725906912*^9}, {
   3.656066986047269*^9, 3.656066986454308*^9}, 3.6560670905610533`*^9, 
   3.656067469206604*^9, {3.656146585264936*^9, 3.656146604170877*^9}, 
   3.657276930571788*^9, {3.6633124949106216`*^9, 3.6633124962776527`*^9}, {
   3.663312931340513*^9, 3.663312932571435*^9}, {3.664016286845192*^9, 
   3.664016292643785*^9}, 3.6699715138427134`*^9, 3.669971710942143*^9, 
   3.669972173355095*^9, 3.669974433401573*^9, 3.66997536578232*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"keyC", "=", 
    RowBox[{
     RowBox[{"Compile", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"k", ",", "_Integer"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"mv", ",", "_Real", ",", "1"}], "}"}]}], "}"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"mv", "[", 
         RowBox[{"[", 
          RowBox[{";;", 
           RowBox[{"compkeystep", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"compkeystep", ",", "_Integer", ",", "1"}], "}"}], "}"}], 
       ",", 
       RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}], ",", 
       RowBox[{"CompilationOptions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<InlineExternalDefinitions\>\"", "\[Rule]", "True"}], 
          ",", 
          RowBox[{"\"\<InlineCompiledFunctions\>\"", "\[Rule]", "True"}], ",", 
          RowBox[{"\"\<ExpressionOptimization\>\"", "\[Rule]", "True"}]}], 
         "}"}]}], ",", 
       RowBox[{"RuntimeOptions", "\[Rule]", "\"\<Speed\>\""}]}], "]"}], 
     "\[IndentingNewLine]", 
     RowBox[{"StringPosition", "[", 
      RowBox[{
       RowBox[{"CompilePrint", "[", "keyC", "]"}], ",", 
       "\"\<MainEvaluate\>\""}], "]"}], "\[IndentingNewLine]", 
     RowBox[{"CompilePrint", "[", "keyC", "]"}]}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.656067188756817*^9, 3.6560671998687468`*^9}, {
   3.656067286894121*^9, 3.656067367194388*^9}, 3.656067480060751*^9, {
   3.656146485591653*^9, 3.656146485934904*^9}, 3.65614657587567*^9, 
   3.656146620416572*^9, {3.656398468589849*^9, 3.656398475356843*^9}, 
   3.656410924256549*^9, 3.6572769325652742`*^9, {3.6640163228165483`*^9, 
   3.6640163274546003`*^9}, 3.669970633145455*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Random ",
 Cell[BoxData[
  ButtonBox["\<\"Evaluate\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
       EvaluationNotebook[], All, ButtonCell] SelectionMove[
       EvaluationNotebook[], All, CellGroup]) SelectionEvaluateCreateCell[
      EvaluationNotebook[]],
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False,
  CellChangeTimes->{3.6252904677946167`*^9, 3.626670633881194*^9, 
   3.6519101150134897`*^9}]
}], "Subsubsection",
 CellChangeTimes->{{3.651910339748372*^9, 3.651910345476472*^9}, {
  3.6519103897649527`*^9, 3.651910391384837*^9}, {3.651910534950873*^9, 
  3.6519105360789127`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"givepC", "[", "]"}], ":=", 
  RowBox[{"RandomReal", "[", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.63896606788055*^9, 3.638966068892194*^9}, 
   3.63896669661147*^9, {3.6389727818156633`*^9, 3.638972814582528*^9}, {
   3.638972851165065*^9, 3.63897285422934*^9}, {3.6494757083936987`*^9, 
   3.6494757383237257`*^9}, {3.656067423552513*^9, 3.656067450128907*^9}, {
   3.6560674876097097`*^9, 3.656067524524714*^9}, {3.656067609659709*^9, 
   3.656067610195875*^9}, {3.6560678790013313`*^9, 3.656067879664118*^9}, 
   3.656146465855139*^9, 3.65614656710636*^9, 3.657276933954605*^9, {
   3.664016302616671*^9, 3.6640163127404423`*^9}, {3.670317736742444*^9, 
   3.670317747439905*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"givemC", "[", "]"}], ":=", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "maxmjump"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.63896606788055*^9, 3.638966068892194*^9}, 
   3.63896669661147*^9, {3.6389727818156633`*^9, 3.638972814582528*^9}, {
   3.638972851165065*^9, 3.63897285422934*^9}, {3.6391184426081877`*^9, 
   3.6391184942546873`*^9}, {3.639119724139978*^9, 3.639119732657093*^9}, 
   3.639217497842959*^9, {3.6393086333042603`*^9, 3.639308638223948*^9}, {
   3.641193951364065*^9, 3.641193978131209*^9}, {3.641536213020465*^9, 
   3.641536214300179*^9}, {3.641538052570985*^9, 3.641538091828252*^9}, 
   3.641538429813446*^9, {3.656067896567143*^9, 3.656067916807248*^9}, {
   3.656146438351079*^9, 3.656146457078644*^9}, {3.656397539136578*^9, 
   3.656397549167964*^9}, {3.656410827805709*^9, 3.656410844612253*^9}, {
   3.656410879958449*^9, 3.6564108801729183`*^9}, 3.657276935619781*^9, {
   3.664016307148971*^9, 3.6640163076725197`*^9}, {3.6640163859133387`*^9, 
   3.6640163876901407`*^9}, {3.6703177551361427`*^9, 3.67031780255042*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"givetimesC", "[", 
   RowBox[{"r_", ",", "n_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"Log", "[", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1"}], "}"}]}], "]"}], "]"}]}], "/", 
   "r"}]}]], "Input",
 CellChangeTimes->{{3.656067960918676*^9, 3.6560680031214247`*^9}, {
   3.6561395634130793`*^9, 3.656139631140346*^9}, 3.656146378926269*^9, {
   3.656146416007904*^9, 3.6561464199841633`*^9}, 3.657039055411867*^9, 
   3.657138509937058*^9, 3.6572769367859*^9, {3.6640163931509857`*^9, 
   3.664016399063031*^9}, {3.670317814090095*^9, 3.670317829819065*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"givetimeC", "[", "r_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Log", "[", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}]}], "/", "r"}], " ", 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.638966074171874*^9, 3.638966075822542*^9}, 
   3.638966108785466*^9, 3.63897287111346*^9, {3.638972950738636*^9, 
   3.638972952841264*^9}, {3.638973172230113*^9, 3.638973224443368*^9}, {
   3.639118075018461*^9, 3.639118082270584*^9}, {3.639118505520513*^9, 
   3.639118521933117*^9}, 3.639118588067068*^9, {3.639208191748311*^9, 
   3.639208204403562*^9}, {3.639208289848707*^9, 3.639208322590158*^9}, {
   3.639217160495582*^9, 3.639217168772993*^9}, 3.639308668465001*^9, {
   3.64112287880651*^9, 3.641122918751729*^9}, 3.6415403463413773`*^9, {
   3.650014163551962*^9, 3.650014213183036*^9}, {3.650015090686942*^9, 
   3.6500150968206387`*^9}, {3.650093162065144*^9, 3.650093162244179*^9}, {
   3.65016863052179*^9, 3.650168630838173*^9}, {3.650171772993314*^9, 
   3.650171775257329*^9}, {3.656067948664462*^9, 3.65606795529638*^9}, {
   3.656139649459447*^9, 3.656139692373188*^9}, 3.65614635038223*^9, {
   3.657039938681842*^9, 3.657039943631712*^9}, 3.657138505422592*^9, {
   3.6571436799239483`*^9, 3.657143681063984*^9}, {3.6571437969600687`*^9, 
   3.6571438475862494`*^9}, {3.6571439802903233`*^9, 3.657143984055938*^9}, {
   3.657276940756579*^9, 3.6572769445475082`*^9}, 3.657277007747905*^9, {
   3.664016411355105*^9, 3.6640164205407467`*^9}, {3.670317836657551*^9, 
   3.670317863674611*^9}, 3.670415862060947*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"giveiormC", "[", 
   RowBox[{"i_", ",", "m_", ",", "k_", ",", "mv_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"nondriverspace", "=", "0"}], ",", 
      RowBox[{"space", "=", "0"}], ",", 
      RowBox[{"currentmut", "=", "0"}], ",", 
      RowBox[{"range", "=", 
       RowBox[{"{", "0", "}"}]}], ",", 
      RowBox[{"mut", "=", "0"}], ",", 
      RowBox[{"gm", "=", "0"}], ",", 
      RowBox[{"dmv", "=", "mv0"}]}], "}"}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"nondriverspace", "=", 
      RowBox[{"maxnondrivermut", "-", "m"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{
      "number", " ", "of", " ", "non", " ", "driver", " ", "mutations", " ", 
       "not", " ", "yet", " ", "occurred"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"space", "=", 
      RowBox[{"maxsemidrivermut", "+", "maxdrivermut", "-", 
       RowBox[{"Total", "[", "mv", "]"}], "+", "nondriverspace"}]}], ";", " ",
      "\[IndentingNewLine]", 
     RowBox[{"currentmut", "=", 
      RowBox[{
       RowBox[{"RandomInteger", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Min", "[", 
           RowBox[{"1", ",", "space"}], "]"}], ",", "space"}], "}"}], "]"}], 
       "-", "nondriverspace"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"currentmut", ">", "0"}], ",", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "if", " ", "it", " ", "is", " ", "a", " ", "semidriver", " ", "or", 
          " ", "dirver"}], "..."}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"range", "=", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Range", "[", "imax", "]"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"mv", "[", 
               RowBox[{"[", "#", "]"}], "]"}], "<", 
              RowBox[{"Cmut", "[", 
               RowBox[{"[", "#", "]"}], "]"}]}], ")"}], "&"}]}], 
          RowBox[{"(*", 
           RowBox[{",", "currentmut"}], "*)"}], "]"}]}], ";", " ", 
        RowBox[{"(*", 
         RowBox[{"WHAT", " ", "THE", " ", "FUCK"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"mut", "=", 
         RowBox[{"range", "[", 
          RowBox[{"[", 
           RowBox[{"Min", "[", 
            RowBox[{
             RowBox[{"Length", "[", "range", "]"}], ",", "currentmut"}], 
            "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"dmv", "[", 
          RowBox[{"[", "mut", "]"}], "]"}], "+=", "1"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"gm", "=", 
        RowBox[{"IntegerPart", "@", 
         RowBox[{"givemC", "[", "]"}]}]}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Total", "[", " ", 
          RowBox[{"Most", "[", "dmv", "]"}], "]"}], ",", 
         RowBox[{"Min", "[", 
          RowBox[{"gm", ",", "nondriverspace"}], "]"}], ",", "0"}], "}"}], 
       ",", "dmv"}], "]"}]}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Most", "[", "mv", "]"}], " ", "in", " ", "this", " ", "case", 
     " ", "is", " ", "equalt", " ", "to", " ", 
     RowBox[{"mv", "[", 
      RowBox[{"[", 
       RowBox[{";;", "maxdrivermut"}], "]"}], "]"}]}], "*)"}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6561397714454813`*^9, 3.656139856390993*^9}, {
   3.65613998967555*^9, 3.656140006836545*^9}, {3.656140056387507*^9, 
   3.6561400622942867`*^9}, {3.656140115445354*^9, 3.65614013386327*^9}, 
   3.65614017327164*^9, {3.656140359337084*^9, 3.65614038331363*^9}, {
   3.6561405517111*^9, 3.656140556649356*^9}, {3.656140608555838*^9, 
   3.6561406222378902`*^9}, {3.656140661232603*^9, 3.656140682341316*^9}, {
   3.656140858256687*^9, 3.6561408587023363`*^9}, {3.656140896048595*^9, 
   3.656140896432867*^9}, 3.656140930335751*^9, {3.6561411150228443`*^9, 
   3.65614112002783*^9}, {3.656141414715452*^9, 3.656141443298707*^9}, 
   3.6561414860032043`*^9, {3.656141545195559*^9, 3.656141547234131*^9}, {
   3.656141742472478*^9, 3.656141769456325*^9}, {3.6561418311397867`*^9, 
   3.656141896760539*^9}, {3.656141937362379*^9, 3.656141940097867*^9}, {
   3.656142016176797*^9, 3.656142030015867*^9}, {3.656142161165988*^9, 
   3.656142166796756*^9}, {3.656145827936905*^9, 3.6561458280644217`*^9}, {
   3.656146306153698*^9, 3.656146321513962*^9}, {3.6563973838690567`*^9, 
   3.656397422347966*^9}, {3.656397465174903*^9, 3.656397470655896*^9}, {
   3.656397572201466*^9, 3.656397580625629*^9}, {3.657084898932187*^9, 
   3.6570849066421633`*^9}, {3.657085288385339*^9, 3.657085290615321*^9}, {
   3.657085344989696*^9, 3.6570853716434507`*^9}, {3.657085410131558*^9, 
   3.657085412218913*^9}, {3.657085503494066*^9, 3.657085544477956*^9}, {
   3.657085583409091*^9, 3.657085589390787*^9}, 3.657085745037312*^9, 
   3.657085819593421*^9, 3.657085876054173*^9, {3.657085925968598*^9, 
   3.65708592721527*^9}, {3.657086676388762*^9, 3.657086747067556*^9}, {
   3.657139214150601*^9, 3.6571392240540953`*^9}, 3.657276958260694*^9, {
   3.663312007714649*^9, 3.66331201291187*^9}, {3.6633120999131813`*^9, 
   3.663312114298977*^9}, {3.663312146756941*^9, 3.663312156667808*^9}, 
   3.663314511749405*^9, {3.6640164354095488`*^9, 3.664016442500719*^9}, {
   3.664187584245022*^9, 3.664187613635406*^9}, {3.670052818061163*^9, 
   3.670052827727418*^9}, {3.67031829297034*^9, 3.670318335294812*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Capacity ",
 Cell[BoxData[
  ButtonBox["\<\"Evaluate\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
       EvaluationNotebook[], All, ButtonCell] SelectionMove[
       EvaluationNotebook[], All, CellGroup]) SelectionEvaluateCreateCell[
      EvaluationNotebook[]],
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False,
  CellChangeTimes->{3.6252904677946167`*^9, 3.626670633881194*^9, 
   3.6519101150134897`*^9}]
}], "Subsubsection",
 CellChangeTimes->{{3.651910339748372*^9, 3.651910345476472*^9}, {
  3.6519103897649527`*^9, 3.651910391384837*^9}, {3.65191050825445*^9, 
  3.651910509742806*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NewCapacityC", "[", 
   RowBox[{"NewNcellk_", ",", "ratiok_", ",", "Ccapacityk_"}], "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Ccapacityk", "-", 
      RowBox[{"Dot", "[", 
       RowBox[{"NewNcellk", ",", "ratiok"}], "]"}]}], ")"}], 
    "\[GreaterEqual]", " ", "0"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.656146809279677*^9, 3.656146917853569*^9}, 
   3.657276956107684*^9, {3.66289936634734*^9, 3.662899369547702*^9}, {
   3.664016462870975*^9, 3.664016468673423*^9}, {3.670318405227087*^9, 
   3.6703184549624577`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "State ",
 Cell[BoxData[
  ButtonBox["\<\"Evaluate\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
       EvaluationNotebook[], All, ButtonCell] SelectionMove[
       EvaluationNotebook[], All, CellGroup]) SelectionEvaluateCreateCell[
      EvaluationNotebook[]],
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False,
  CellChangeTimes->{3.6252904677946167`*^9, 3.626670633881194*^9, 
   3.6519101150134897`*^9}]
}], "Subsubsection",
 CellChangeTimes->{{3.651910339748372*^9, 3.651910345476472*^9}, {
  3.6519103897649527`*^9, 3.651910391384837*^9}, {3.651910572919314*^9, 
  3.651910573535254*^9}}],

Cell["\<\
The functions generating the state variable.
This can be a reason why the above functions do not compile well
Nella seguente funzione usare block e {md=maxdrivermut} e\[CloseCurlyQuote] \
obbligatorio\
\>", "Text",
 CellChangeTimes->{{3.657006406686451*^9, 3.657006418702591*^9}, {
  3.657006496143635*^9, 3.657006521848027*^9}, {3.6570849337901783`*^9, 
  3.6570849341211348`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"givesinglestate0C", "[", "n_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"1.0", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", "mv0"}], "]"}]}], ",", 
    
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "n"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.657009736425132*^9, 3.657009769430217*^9}, {
   3.657010018744595*^9, 3.6570101075936003`*^9}, {3.657010165284534*^9, 
   3.657010213933216*^9}, {3.657010265099805*^9, 3.6570102809713373`*^9}, {
   3.657010318686923*^9, 3.657010440498075*^9}, {3.657010495755781*^9, 
   3.6570104968011312`*^9}, {3.657010550746661*^9, 3.657010597305135*^9}, {
   3.657010821884804*^9, 3.657010826717539*^9}, {3.6570108738463907`*^9, 
   3.657010941675043*^9}, {3.657010973665534*^9, 3.65701099745438*^9}, {
   3.657011031416388*^9, 3.6570110396909943`*^9}, {3.657011136220668*^9, 
   3.657011172377184*^9}, 3.6570112087483597`*^9, {3.6570112568446093`*^9, 
   3.657011266890333*^9}, {3.657011724742399*^9, 3.657011749440016*^9}, {
   3.6570154318871193`*^9, 3.6570154564500103`*^9}, {3.657261884881809*^9, 
   3.657261885629085*^9}, 3.657276962612042*^9, {3.663312188530759*^9, 
   3.663312199547304*^9}, {3.6633122361724653`*^9, 3.6633122389724627`*^9}, {
   3.664016486612947*^9, 3.664016492918738*^9}, {3.6702226306069317`*^9, 
   3.670222655094652*^9}, {3.670318491773122*^9, 3.6703185263433933`*^9}, {
   3.670580980549803*^9, 3.67058098098916*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"givesinglestateC", "[", 
   RowBox[{"m_", ",", "k_", ",", "mv_", ",", "n_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"maxdrivermut", "=", "maxdrivermut"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"mv", "[", 
             RowBox[{"[", 
              RowBox[{";;", "maxdrivermut"}], "]"}], "]"}], "]"}], ",", "m", 
           ",", "k"}], "}"}], ",", "mv"}], "]"}], ",", "n"}], "]"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"1.0", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"mv", "[", 
             RowBox[{"[", 
              RowBox[{";;", "maxdrivermut"}], "]"}], "]"}], "]"}], ",", "m", 
           ",", "k"}], "}"}], ",", "mv"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"l", ",", "1", ",", "n"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6570863423185673`*^9, 3.657086342503365*^9}, {
   3.657086467546795*^9, 3.6570864683681993`*^9}, {3.657261757639122*^9, 
   3.657261759303588*^9}, {3.657261838766754*^9, 3.657261840148488*^9}, 
   3.6572769662361317`*^9, {3.663312212925666*^9, 3.6633122847086163`*^9}, {
   3.6640165007758093`*^9, 3.664016515823441*^9}, {3.670222686263687*^9, 
   3.670222686934898*^9}, {3.670318534877194*^9, 3.6703185616340933`*^9}, {
   3.6705809905448112`*^9, 3.6705809909276323`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"createstateC", "[", 
   RowBox[{"m_", ",", "k_", ",", "mv_", ",", "n_", ",", "time_"}], "]"}], ":=",
   "\[IndentingNewLine]", 
  RowBox[{"Block", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"s", "=", "0."}], ",", 
      RowBox[{"rnn", "=", 
       RowBox[{"{", "0.", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"s", "=", 
      RowBox[{"ssC", "[", 
       RowBox[{
        RowBox[{"keyC", "[", 
         RowBox[{"k", ",", "mv", ",", "compkeystep"}], "]"}], ",", "m"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"rnn", "=", 
      RowBox[{"Accumulate", "[", 
       RowBox[{"ratesC", "[", 
        RowBox[{"s", ",", "k", ",", 
         RowBox[{"keygenesC", "[", 
          RowBox[{
          "k", ",", "mv", ",", "compkeystep", ",", "genes", ",", 
           "signature"}], "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"1.", 
        RowBox[{"givesinglestateC", "[", 
         RowBox[{"m", ",", "k", ",", "mv", ",", "n"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"givetimesC", "[", 
         RowBox[{
          RowBox[{"rnn", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}], ",", "n"}], "]"}], "+", 
        "time"}], ",", "2"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.657014976323368*^9, 3.657015057038096*^9}, {
   3.657261807352353*^9, 3.657261808247884*^9}, 3.6572769722823887`*^9, {
   3.6633123574700823`*^9, 3.663312367350238*^9}, {3.663312397525943*^9, 
   3.66331239779932*^9}, {3.663312551853353*^9, 3.6633125943921967`*^9}, {
   3.663312662522605*^9, 3.663312754172373*^9}, {3.663312813191433*^9, 
   3.663312817671129*^9}, {3.663312857264696*^9, 3.663312862042083*^9}, {
   3.663313014479785*^9, 3.663313045742055*^9}, {3.663313184253449*^9, 
   3.663313190722471*^9}, {3.6633132214779167`*^9, 3.6633132315292997`*^9}, {
   3.663325396586714*^9, 3.663325397320265*^9}, {3.664016524435259*^9, 
   3.664016530808066*^9}, 3.670052902572451*^9, {3.6702200057905073`*^9, 
   3.670220010983967*^9}, {3.670220432163048*^9, 3.6702204502833347`*^9}, {
   3.670220844438773*^9, 3.67022085187811*^9}, {3.6703185909779654`*^9, 
   3.6703186209399757`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"createstate0C", "[", 
   RowBox[{"n_", ",", "time_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Block", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"m", "=", "0"}], ",", 
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"mv", "=", "mv0"}], ",", 
      RowBox[{"s", "=", "0."}], ",", 
      RowBox[{"rnn", "=", 
       RowBox[{"{", "0.", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"s", "=", 
      RowBox[{"ssC", "[", 
       RowBox[{
        RowBox[{"keyC", "[", 
         RowBox[{"k", ",", "mv", ",", "compkeystep"}], "]"}], ",", "m"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"rnn", "=", 
      RowBox[{"Accumulate", "[", 
       RowBox[{"ratesC", "[", 
        RowBox[{"s", ",", "k", ",", 
         RowBox[{"keygenesC", "[", 
          RowBox[{
          "k", ",", "mv", ",", "compkeystep", ",", "genes", ",", 
           "signature"}], "]"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"givesinglestate0C", "[", "n", "]"}], ",", 
       RowBox[{
        RowBox[{"givetimesC", "[", 
         RowBox[{
          RowBox[{"rnn", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}], ",", "n"}], "]"}], "+", 
        "time"}], ",", "2"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.657015162998357*^9, 3.6570152222552423`*^9}, {
   3.657015304318014*^9, 3.657015304998329*^9}, {3.657261922960827*^9, 
   3.657261925293461*^9}, 3.657276976667923*^9, {3.66331314085011*^9, 
   3.6633131678359737`*^9}, 3.663326035781213*^9, {3.664016540936777*^9, 
   3.664016555809001*^9}, 3.6700529148439817`*^9, {3.670152604808979*^9, 
   3.670152624777368*^9}, {3.6701531855120993`*^9, 3.67015319899151*^9}, {
   3.670220019229767*^9, 3.670220022387599*^9}, {3.670220457089541*^9, 
   3.6702204645384073`*^9}, {3.670220809360015*^9, 3.6702208197182426`*^9}, {
   3.670318625250969*^9, 3.670318643476115*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Partially Compilable Functions", "Subsection",
 CellChangeTimes->{{3.657005610044467*^9, 3.657005619844716*^9}, {
  3.657005706333528*^9, 3.657005713757792*^9}, {3.657006164643359*^9, 
  3.657006169595487*^9}, {3.663281329469133*^9, 3.6632813320778008`*^9}, {
  3.7565713364757977`*^9, 3.756571349833819*^9}, {3.756571394569553*^9, 
  3.756571397243937*^9}}],

Cell["\<\
Use With to substitute shitBisectionC and the others instead of Hold/Replace.\
\
\>", "Text",
 CellChangeTimes->{{3.657209669534625*^9, 3.657209792158136*^9}, {
  3.657260731279951*^9, 3.657260731815984*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Reactions ",
 Cell[BoxData[
  ButtonBox["\<\"Evaluate\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
       EvaluationNotebook[], All, ButtonCell] SelectionMove[
       EvaluationNotebook[], All, CellGroup]) SelectionEvaluateCreateCell[
      EvaluationNotebook[]],
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False,
  CellChangeTimes->{3.6252904677946167`*^9, 3.626670633881194*^9, 
   3.6519101150134897`*^9}]
}], "Subsubsection",
 CellChangeTimes->{{3.651910339748372*^9, 3.651910345476472*^9}, {
  3.6519103897649527`*^9, 3.651910391384837*^9}, {3.651910492398357*^9, 
  3.651910494134466*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"passC", "[", 
   RowBox[{"i_", ",", "m_", ",", "k_", ",", "mv_", ",", "r_"}], "]"}], ":=", 
  RowBox[{"(*", 
   RowBox[{"ReleaseHold", "[", 
    RowBox[{"Hold", "["}]}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"statetmp1", "=", 
       RowBox[{"{", "0.", "}"}]}], ",", 
      RowBox[{"statetmp2", "=", 
       RowBox[{"{", "0.", "}"}]}], ",", "chooseiorm", ",", "\[CapitalDelta]i",
       ",", "\[CapitalDelta]Nc", 
      RowBox[{"(*", 
       RowBox[{",", "\[CapitalDelta]Nc2"}], "*)"}], ",", "\[CapitalDelta]k", 
      ",", "NewNcell", ",", "CT"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"CT", "=", "False"}], ";", "\[IndentingNewLine]", 
     RowBox[{"statetmp1", "=", 
      RowBox[{"1.0", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", "m", ",", "k"}], "}"}], ",", "mv", ",", 
         RowBox[{"{", "t", "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"NewNcell", "=", "Ncell"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"k", "<", "kmax"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalDelta]i", "=", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"\[CapitalDelta]Nc2", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"-", "1"}], "}"}], ",", 
             RowBox[{"{", "1", "}"}]}], "}"}]}], ";"}], "*)"}], 
        RowBox[{"(*", "error", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"\[CapitalDelta]Nc", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[CapitalDelta]k", "=", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{"NewNcell", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"k", "+", "\[CapitalDelta]k"}], ",", 
              RowBox[{"i", "+", "1", "+", "\[CapitalDelta]i"}]}], "]"}], 
            "]"}], "=", 
           RowBox[{
            RowBox[{"NewNcell", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"k", "+", "\[CapitalDelta]k"}], ",", 
               RowBox[{"i", "+", "1", "+", "\[CapitalDelta]i"}]}], "]"}], 
             "]"}], "+", "\[CapitalDelta]Nc2"}]}], ";"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"MapThread", "[", " ", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"NewNcell", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"k", "+", "#1"}], ",", 
                  RowBox[{"i", "+", "1", "+", "#2"}]}], "]"}], "]"}], "=", 
               RowBox[{
                RowBox[{"NewNcell", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"k", "+", "#1"}], ",", 
                   RowBox[{"i", "+", "1", "+", "#2"}]}], "]"}], "]"}], "+", 
                "#3"}]}], ")"}], "&"}], "\[IndentingNewLine]", ",", " ", 
            RowBox[{"{", 
             RowBox[{
             "\[CapitalDelta]k", ",", "\[CapitalDelta]i", ",", 
              "\[CapitalDelta]Nc2"}], "}"}]}], "]"}], ";"}], "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"NewNcell", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"k", "+", 
             RowBox[{"\[CapitalDelta]k", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{"i", "+", "1", "+", 
             RowBox[{"\[CapitalDelta]i", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], "]"}], "=", 
         RowBox[{
          RowBox[{"NewNcell", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"k", "+", 
              RowBox[{"\[CapitalDelta]k", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"i", "+", "1", "+", 
              RowBox[{"\[CapitalDelta]i", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], "]"}], "+", 
          RowBox[{"\[CapitalDelta]Nc", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"NewNcell", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"k", "+", 
             RowBox[{"\[CapitalDelta]k", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ",", 
            RowBox[{"i", "+", "1", "+", 
             RowBox[{"\[CapitalDelta]i", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "]"}], "=", 
         RowBox[{
          RowBox[{"NewNcell", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"k", "+", 
              RowBox[{"\[CapitalDelta]k", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", 
             RowBox[{"i", "+", "1", "+", 
              RowBox[{"\[CapitalDelta]i", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "]"}], "+", 
          RowBox[{"\[CapitalDelta]Nc", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"CT", "=", 
         RowBox[{"NewCapacityC", "[", 
          RowBox[{
           RowBox[{"NewNcell", "[", 
            RowBox[{"[", 
             RowBox[{"k", "+", 
              RowBox[{"Last", "[", "\[CapitalDelta]k", "]"}]}], "]"}], "]"}], 
           ",", 
           RowBox[{"ratio", "[", 
            RowBox[{"[", 
             RowBox[{"k", "+", 
              RowBox[{"Last", "[", "\[CapitalDelta]k", "]"}]}], "]"}], "]"}], 
           ",", 
           RowBox[{"Ccell", "[", 
            RowBox[{"[", 
             RowBox[{"k", "+", 
              RowBox[{"Last", "[", "\[CapitalDelta]k", "]"}]}], "]"}], 
            "]"}]}], "]"}]}]}]}], 
      RowBox[{"(*", 
       RowBox[{"too", " ", "long", " ", "range", " ", 
        RowBox[{"interaction", ".", " ", "May"}], " ", "be", " ", "cells", 
        " ", "are", " ", "killed", " ", "ampassant", " ", "by", " ", "the", 
        " ", "immune", " ", "system", " ", "due", " ", "too", " ", 
        "overpopulation", " ", "triggered", " ", "response"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Comment", "[", 
         RowBox[{"\"\<initial cell amount=\>\"", ",", 
          RowBox[{"Ncell", "[", 
           RowBox[{"[", 
            RowBox[{"k", "+", 
             RowBox[{"Last", "[", "\[CapitalDelta]k", "]"}]}], "]"}], "]"}], 
          ",", "\"\<; cell capacity=\>\"", ",", 
          RowBox[{"Ccell", "[", 
           RowBox[{"[", 
            RowBox[{"k", "+", 
             RowBox[{"Last", "[", "\[CapitalDelta]k", "]"}]}], "]"}], "]"}], 
          ",", "\"\<; final cell amount=\>\"", ",", 
          RowBox[{"NewNcell", "[", 
           RowBox[{"[", 
            RowBox[{"k", "+", 
             RowBox[{"Last", "[", "\[CapitalDelta]k", "]"}]}], "]"}], "]"}], 
          ",", "\"\<; CT=\>\"", ",", "CT", ",", "\"\<;\>\""}], "]"}], ";"}], 
       "*)"}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"CT", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Ncell", "=", "NewNcell"}], ";", "\[IndentingNewLine]", 
        RowBox[{"statetmp1", "=", 
         RowBox[{"statetmp1", "+", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", "mv0", ",", 
            RowBox[{"givetimeC", "[", "r", "]"}]}], "]"}]}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"statetmp1", "=", 
        RowBox[{"statetmp1", "+", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "mv0", ",", 
           RowBox[{"givetimeC", "[", "r", "]"}]}], "]"}]}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"shiftbisectionC", "[", 
      RowBox[{"state", ",", "statetmp1", ",", "2", ",", "Ntot"}], "]"}], 
     ";"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"]", "/.", 
         RowBox[{"DownValues", "[", "shiftbisectionC", "]"}]}], "/.", 
        RowBox[{"DownValues", "[", "bisectionC", "]"}]}], "/.", 
       RowBox[{"DownValues", "[", "delsC", "]"}]}], "/.", 
      RowBox[{"DownValues", "[", "insertC", "]"}]}], "/.", 
     RowBox[{"DownValues", "[", "shiftinsertC", "]"}]}], 
    "\[IndentingNewLine]", "]"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.657268189384563*^9, 3.657268226417755*^9}, {
   3.657268275300644*^9, 3.6572683163610363`*^9}, 3.657268466223195*^9, {
   3.6572686913139267`*^9, 3.6572686962571373`*^9}, {3.65727238182867*^9, 
   3.657272383200706*^9}, 3.657272792394368*^9, {3.6572749504374943`*^9, 
   3.657274961029001*^9}, {3.657275233900886*^9, 3.6572753546083097`*^9}, {
   3.657275398324651*^9, 3.657275401066427*^9}, {3.662962016308413*^9, 
   3.6629620176972427`*^9}, {3.6629831132423677`*^9, 3.662983122279245*^9}, {
   3.662985264639235*^9, 3.662985354089315*^9}, {3.662985800633053*^9, 
   3.66298582731173*^9}, {3.6629889046871767`*^9, 3.662988950703868*^9}, {
   3.662990957895135*^9, 3.662990969379938*^9}, 3.6629911424950523`*^9, {
   3.6630477162440166`*^9, 3.663047722640339*^9}, {3.663047836749404*^9, 
   3.66304784052398*^9}, {3.663057619758822*^9, 3.663057645258527*^9}, 
   3.663066580763294*^9, {3.663067732299858*^9, 3.663067750477839*^9}, {
   3.663313359334504*^9, 3.663313398089425*^9}, {3.664017141938655*^9, 
   3.6640171509226427`*^9}, 3.669982072714809*^9, {3.670052962494191*^9, 
   3.670052966060507*^9}, {3.670058178888441*^9, 3.670058208504809*^9}, 
   3.670058291443131*^9, 3.670058347184012*^9, 3.670058381249174*^9, 
   3.67005852776438*^9, {3.6700590368950777`*^9, 3.670059041959496*^9}, {
   3.6700590741186953`*^9, 3.670059074526684*^9}, {3.670059317441491*^9, 
   3.670059317721983*^9}, 3.670059360543624*^9, 3.6700597606594687`*^9, {
   3.6700597949032507`*^9, 3.670059795651526*^9}, {3.670060171043589*^9, 
   3.6700601846268673`*^9}, {3.67006029862994*^9, 3.6700603257697983`*^9}, 
   3.6700603684901953`*^9, 3.670064910302313*^9, 3.670065016634995*^9, {
   3.670065159159087*^9, 3.670065171520302*^9}, {3.670065401058769*^9, 
   3.670065414970048*^9}, {3.670322156685865*^9, 3.670322159465723*^9}, {
   3.6703222150674334`*^9, 3.670322279511137*^9}, 3.6703267387724743`*^9, {
   3.6703279772401533`*^9, 3.670327988837607*^9}, {3.670581305474592*^9, 
   3.670581307561949*^9}, 3.67058154759055*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"apopC", "[", 
    RowBox[{"i_", ",", "m_", ",", "k_", ",", "mv_", ",", "r_"}], "]"}], ":=", 
   
   RowBox[{"(*", 
    RowBox[{"ReleaseHold", "[", 
     RowBox[{"Hold", "["}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalDelta]i", ",", "\[CapitalDelta]Nc"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[CapitalDelta]i", "=", 
       RowBox[{"{", "0", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[CapitalDelta]Nc", "=", 
       RowBox[{"{", 
        RowBox[{"-", "1"}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Comment", "[", 
         RowBox[{"\"\<initial cell amount=\>\"", ",", 
          RowBox[{"Ncell", "[", 
           RowBox[{"[", "k", "]"}], "]"}], ",", "\"\<; cell capacity=\>\"", 
          ",", 
          RowBox[{"Ccell", "[", 
           RowBox[{"[", "k", "]"}], "]"}], ",", 
          "\"\<; final cell amount=\>\"", ",", 
          RowBox[{
           RowBox[{"Ncell", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "+", 
           RowBox[{"ArrayPad", "[", 
            RowBox[{"\[CapitalDelta]Nc", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"imax", "-", "i", "-", "1"}]}], "}"}]}], "]"}]}], ",", 
          "\"\<; CT=\>\"", ",", "None", ",", "\"\<;\>\""}], "]"}], ";"}], 
       "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{"Ncell", "[", 
          RowBox[{"[", 
           RowBox[{"k", ",", 
            RowBox[{"i", "+", "1", "+", "\[CapitalDelta]i"}]}], "]"}], "]"}], 
         "=", 
         RowBox[{
          RowBox[{"Ncell", "[", 
           RowBox[{"[", 
            RowBox[{"k", ",", 
             RowBox[{"i", "+", "1", "+", "\[CapitalDelta]i"}]}], "]"}], "]"}],
           "+", "\[CapitalDelta]Nc"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"MapThread", "[", " ", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Ncell", "[", 
              RowBox[{"[", 
               RowBox[{"k", ",", 
                RowBox[{"i", "+", "1", "+", "#1"}]}], "]"}], "]"}], "=", 
             RowBox[{
              RowBox[{"Ncell", "[", 
               RowBox[{"[", 
                RowBox[{"k", ",", 
                 RowBox[{"i", "+", "1", "+", "#1"}]}], "]"}], "]"}], "+", 
              "#2"}]}], ")"}], "&"}], "\[IndentingNewLine]", ",", " ", 
          RowBox[{"{", 
           RowBox[{"\[CapitalDelta]i", ",", "\[CapitalDelta]Nc"}], "}"}]}], 
         "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Ncell", "[", 
        RowBox[{"[", 
         RowBox[{"k", ",", 
          RowBox[{"i", "+", "1", "+", 
           RowBox[{"\[CapitalDelta]i", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"Ncell", "[", 
         RowBox[{"[", 
          RowBox[{"k", ",", 
           RowBox[{"i", "+", "1", "+", 
            RowBox[{"\[CapitalDelta]i", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], "]"}], "+", 
        RowBox[{"\[CapitalDelta]Nc", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"delsC", "[", "state", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Ntot", "-=", "1"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"]", "/.", 
     RowBox[{"DownValues", "[", "delsC", "]"}]}], "\[IndentingNewLine]", 
    "]"}], "*)"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.656411041379272*^9, 3.656411179211075*^9}, {
   3.6564112168562927`*^9, 3.656411243793426*^9}, 3.6564152412957067`*^9, 
   3.656415300261879*^9, 3.656415379329795*^9, 3.6564155632419024`*^9, {
   3.656415848165945*^9, 3.6564158598084917`*^9}, {3.657025297748281*^9, 
   3.657025336497038*^9}, {3.657025544443775*^9, 3.657025571568509*^9}, {
   3.657032591860791*^9, 3.6570326108542213`*^9}, {3.65713572410325*^9, 
   3.65713578338052*^9}, 3.657272802863243*^9, {3.6572755859313*^9, 
   3.657275606986905*^9}, {3.662962007176957*^9, 3.662962008443068*^9}, 
   3.662983131877983*^9, {3.662985236192502*^9, 3.6629852475587587`*^9}, {
   3.662988879368478*^9, 3.662988896211913*^9}, 3.6629909521110067`*^9, 
   3.662991136238409*^9, {3.663047701289263*^9, 3.663047703453718*^9}, {
   3.663057583994143*^9, 3.663057613202042*^9}, {3.663314936352927*^9, 
   3.663314940288322*^9}, 3.664002217888439*^9, {3.664017162656752*^9, 
   3.664017169705852*^9}, {3.6700529767116747`*^9, 3.670052980686397*^9}, {
   3.670322334563366*^9, 3.670322342887988*^9}, {3.670323124377726*^9, 
   3.670323133881847*^9}, 3.670326749227482*^9, {3.67032796135788*^9, 
   3.670327972413082*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"symmetricC", "[", 
   RowBox[{"i_", ",", "m_", ",", "k_", ",", "mv_", ",", "r_"}], "]"}], ":=", 
  RowBox[{"(*", 
   RowBox[{"ReleaseHold", "[", 
    RowBox[{"Hold", "["}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"statetmp1", "=", 
       RowBox[{"{", "0.", "}"}]}], ",", 
      RowBox[{"statetmp2", "=", 
       RowBox[{"{", "0.", "}"}]}], ",", 
      RowBox[{"chooseiorm", "=", 
       RowBox[{"{", "0", "}"}]}], ",", "\[CapitalDelta]i", ",", 
      "\[CapitalDelta]Nc", ",", "NewNcell", ",", "CT"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"statetmp2", "=", 
      RowBox[{"1.0", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", "m", ",", "k"}], "}"}], ",", "mv", ",", 
         RowBox[{"{", "t", "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"chooseiorm", "=", 
      RowBox[{"giveiormC", "[", 
       RowBox[{"i", ",", "m", ",", "k", ",", "mv"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"NewNcell", "=", "Ncell"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]i", "=", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"First", "[", "chooseiorm", "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]Nc", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "2"}], "}"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"NewNcell", "[", 
         RowBox[{"[", 
          RowBox[{"k", ",", 
           RowBox[{"i", "+", "1", "+", "\[CapitalDelta]i"}]}], "]"}], "]"}], 
        "=", 
        RowBox[{
         RowBox[{"NewNcell", "[", 
          RowBox[{"[", 
           RowBox[{"k", ",", 
            RowBox[{"i", "+", "1", "+", "\[CapitalDelta]i"}]}], "]"}], "]"}], 
         "+", "\[CapitalDelta]Nc"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"MapThread", "[", " ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"NewNcell", "[", 
           RowBox[{"[", 
            RowBox[{"k", ",", 
             RowBox[{"i", "+", "1", "+", "#1"}]}], "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{"NewNcell", "[", 
            RowBox[{"[", 
             RowBox[{"k", ",", 
              RowBox[{"i", "+", "1", "+", "#1"}]}], "]"}], "]"}], "+", 
           "#2"}]}], ")"}], "&"}], "\[IndentingNewLine]", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[CapitalDelta]i", ",", "\[CapitalDelta]Nc"}], "}"}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"NewNcell", "[", 
         RowBox[{"[", 
          RowBox[{"k", ",", 
           RowBox[{"i", "+", "1", "+", 
            RowBox[{"\[CapitalDelta]i", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"NewNcell", "[", 
          RowBox[{"[", 
           RowBox[{"k", ",", 
            RowBox[{"i", "+", "1", "+", 
             RowBox[{"\[CapitalDelta]i", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], "]"}], "+", 
         RowBox[{"\[CapitalDelta]Nc", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NewNcell", "[", 
         RowBox[{"[", 
          RowBox[{"k", ",", 
           RowBox[{"i", "+", "1", "+", 
            RowBox[{"\[CapitalDelta]i", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"NewNcell", "[", 
          RowBox[{"[", 
           RowBox[{"k", ",", 
            RowBox[{"i", "+", "1", "+", 
             RowBox[{"\[CapitalDelta]i", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "]"}], "+", 
         RowBox[{"\[CapitalDelta]Nc", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
      "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"CT", "=", 
      RowBox[{"NewCapacityC", "[", 
       RowBox[{
        RowBox[{"NewNcell", "[", 
         RowBox[{"[", "k", "]"}], "]"}], ",", 
        RowBox[{"ratio", "[", 
         RowBox[{"[", "k", "]"}], "]"}], ",", 
        RowBox[{"Ccell", "[", 
         RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Comment", "[", 
        RowBox[{"\"\<initial cell amount=\>\"", ",", 
         RowBox[{"Ncell", "[", 
          RowBox[{"[", "k", "]"}], "]"}], ",", "\"\<; cell capacity=\>\"", 
         ",", 
         RowBox[{"Ccell", "[", 
          RowBox[{"[", "k", "]"}], "]"}], ",", "\"\<; final cell amount=\>\"",
          ",", 
         RowBox[{"NewNcell", "[", 
          RowBox[{"[", "k", "]"}], "]"}], ",", "\"\<; CT=\>\"", ",", "CT", 
         ",", "\"\<;\>\""}], "]"}], ";"}], "*)"}], " ", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"CT", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Ncell", "=", "NewNcell"}], ";", "\[IndentingNewLine]", 
        RowBox[{"statetmp1", "=", 
         RowBox[{"statetmp2", "+", 
          RowBox[{"Join", "[", 
           RowBox[{"chooseiorm", ",", 
            RowBox[{"givetimeC", "[", "r", "]"}]}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"statetmp2", "=", 
         RowBox[{"statetmp2", "+", 
          RowBox[{"Join", "[", 
           RowBox[{"chooseiorm", ",", 
            RowBox[{"givetimeC", "[", "r", "]"}]}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Comment", "[", "\[IndentingNewLine]", 
           RowBox[{
           "\"\<\!\(\*OverscriptBox[SubscriptBox[\(\[Delta]P\), \(1\)], \(\
\[RightVector]\)]\)={\!\(\*SubscriptBox[\(\[Delta]s\), \
\(1\)]\),\[Ellipsis],\!\(\*SubscriptBox[\(\[Delta]s\), \(3 + \
imax\)]\),\!\(\*SubscriptBox[\(t\), \(1\)]\)}=\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"chooseiorm", ",", 
              RowBox[{
               RowBox[{"Last", "[", "statetmp1", "]"}], "-", "t"}]}], "}"}], 
            ",", "\"\<;\\n\>\"", ",", "\[IndentingNewLine]", 
            "\"\<\!\(\*OverscriptBox[SubscriptBox[\(\[Delta]P\), \(2\)], \(\
\[RightVector]\)]\)={\!\(\*SubscriptBox[\(\[Delta]s\), \
\(1\)]\),\[Ellipsis],\!\(\*SubscriptBox[\(\[Delta]s\), \(3 + \
imax\)]\),\!\(\*SubscriptBox[\(t\), \(2\)]\)}=\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"chooseiorm", ",", 
              RowBox[{
               RowBox[{"Last", "[", "statetmp2", "]"}], "-", "t"}]}], "}"}], 
            ",", "\"\<;\>\""}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Comment", "[", 
           RowBox[{
           "\"\<\!\(\*OverscriptBox[SubscriptBox[\(P\), \(1\)], \(\
\[RightVector]\)]\)=\!\(\*OverscriptBox[\(P\), \
\(\[RightVector]\)]\)+\!\(\*OverscriptBox[SubscriptBox[\(\[Delta]P\), \(1\)], \
\(\[RightVector]\)]\)=\>\"", ",", "statetmp1", ",", 
            "\"\<; \!\(\*OverscriptBox[SubscriptBox[\(P\), \(2\)], \(\
\[RightVector]\)]\)=\!\(\*OverscriptBox[\(P\), \
\(\[RightVector]\)]\)+\!\(\*OverscriptBox[SubscriptBox[\(\[Delta]P\), \(2\)], \
\(\[RightVector]\)]\)=\>\"", ",", "statetmp2"}], "]"}], ";"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"dels", "[", "state", "]"}], ";"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"shiftbisectionC", "[", 
         RowBox[{"state", ",", "statetmp1", ",", "2", ",", "Ntot"}], "]"}], 
        ";", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"shiftbisection", "[", 
           RowBox[{"state", ",", "statetmp1", ",", "1", ",", 
            RowBox[{"Ntot", "-", "1"}]}], "]"}], ";"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"bisectionC", "[", 
         RowBox[{"state", ",", "statetmp2", ",", "1", ",", "Ntot"}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Ntot", "+=", "1"}], ";"}], "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"statetmp1", "=", 
         RowBox[{"statetmp2", "+", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "mv0", ",", 
            RowBox[{"givetimeC", "[", "r", "]"}]}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"shiftbisectionC", "[", 
         RowBox[{"state", ",", "statetmp1", ",", "2", ",", "Ntot"}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]",
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"]", "/.", 
        RowBox[{"DownValues", "[", "shiftbisectionC", "]"}]}], "/.", 
       RowBox[{"DownValues", "[", "bisectionC", "]"}]}], "/.", 
      RowBox[{"DownValues", "[", "insertC", "]"}]}], "/.", 
     RowBox[{"DownValues", "[", "shiftinsertC", "]"}]}], 
    "\[IndentingNewLine]", "]"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.656411330326447*^9, 3.656411397856955*^9}, {
   3.656411465510376*^9, 3.656411548661316*^9}, {3.656411627607893*^9, 
   3.656411653096416*^9}, {3.6564116867343197`*^9, 3.6564116986945667`*^9}, 
   3.656411786478698*^9, {3.656413171861795*^9, 3.6564131850552397`*^9}, 
   3.656413223951817*^9, 3.656413260300488*^9, {3.656413369753324*^9, 
   3.656413389244937*^9}, {3.6564134708658752`*^9, 3.6564136192485437`*^9}, 
   3.65641365776011*^9, {3.65702559723842*^9, 3.6570256673061867`*^9}, 
   3.6570326391358547`*^9, {3.657038031898035*^9, 3.657038071177825*^9}, {
   3.657040392545226*^9, 3.6570404112205353`*^9}, {3.6570408658644753`*^9, 
   3.657040887845724*^9}, {3.6570423160944757`*^9, 3.657042339460788*^9}, 
   3.6570424041597567`*^9, {3.6571359657002573`*^9, 3.6571360801258373`*^9}, {
   3.6571361240014353`*^9, 3.657136244530311*^9}, 3.657136287630176*^9, 
   3.657136331319434*^9, 3.657136501289351*^9, 3.657136544482869*^9, {
   3.657136642676032*^9, 3.657136695546163*^9}, {3.6571367265223427`*^9, 
   3.657136757985736*^9}, 3.657136796060679*^9, {3.657137059641095*^9, 
   3.657137144020007*^9}, {3.657137885675989*^9, 3.657137899431472*^9}, {
   3.6571379322688017`*^9, 3.657137944665798*^9}, {3.657138626074741*^9, 
   3.657138663582839*^9}, {3.657138728245297*^9, 3.6571387651146307`*^9}, {
   3.657138846676427*^9, 3.657138857059087*^9}, {3.657139048849058*^9, 
   3.6571391177473097`*^9}, {3.657139363687261*^9, 3.657139409706214*^9}, {
   3.657139529345089*^9, 3.657139564595106*^9}, {3.65713960044936*^9, 
   3.65713972693187*^9}, {3.657139769028158*^9, 3.657139770087726*^9}, {
   3.6572082982739563`*^9, 3.657208298802515*^9}, {3.6572083441134043`*^9, 
   3.6572084052526913`*^9}, {3.657208450500338*^9, 3.657208506572424*^9}, {
   3.657208552659075*^9, 3.657208553958434*^9}, {3.6572602596250563`*^9, 
   3.657260259969219*^9}, {3.657272440092842*^9, 3.65727246861728*^9}, 
   3.6572728337258863`*^9, {3.6572749186920547`*^9, 3.657274933814176*^9}, {
   3.657275620558098*^9, 3.6572757225462637`*^9}, {3.657276081041276*^9, 
   3.657276098764607*^9}, {3.662961973177127*^9, 3.662961974558093*^9}, 
   3.662983140878214*^9, {3.662985223987811*^9, 3.6629852277393017`*^9}, {
   3.66298886482478*^9, 3.662988872884152*^9}, {3.6629907362362347`*^9, 
   3.6629907455906277`*^9}, 3.662990945800809*^9, 3.662991127419073*^9, {
   3.663047690423667*^9, 3.663047693703619*^9}, {3.663057332316502*^9, 
   3.66305738858736*^9}, {3.6630577864250107`*^9, 3.6630577939493856`*^9}, {
   3.663313463756899*^9, 3.663313508718668*^9}, {3.663313608667384*^9, 
   3.663313609009098*^9}, {3.663314008782666*^9, 3.663314062995713*^9}, 
   3.663314256660927*^9, {3.663314295474115*^9, 3.6633143804903603`*^9}, 
   3.6633145565826607`*^9, {3.664017184731914*^9, 3.664017191314714*^9}, {
   3.664018744790415*^9, 3.664018746541522*^9}, {3.67005300885469*^9, 
   3.670053020888255*^9}, {3.670056324342698*^9, 3.670056373068174*^9}, {
   3.670322181234429*^9, 3.670322183114978*^9}, {3.67032234608147*^9, 
   3.670322359702258*^9}, {3.670323144078065*^9, 3.670323148774914*^9}, 
   3.670326755533308*^9, {3.670327937982518*^9, 3.670327957416616*^9}, {
   3.670581253097764*^9, 3.6705812644349546`*^9}, {3.6705815245332527`*^9, 
   3.670581525012896*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"asymmetricC", "[", 
   RowBox[{"i_", ",", "m_", ",", "k_", ",", "mv_", ",", "r_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"ReleaseHold", "[", 
    RowBox[{"Hold", "["}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"statetmp1", "=", 
       RowBox[{"{", "0.", "}"}]}], ",", 
      RowBox[{"statetmp2", "=", 
       RowBox[{"{", "0.", "}"}]}], ",", 
      RowBox[{"chooseiorm", "=", 
       RowBox[{"{", "0", "}"}]}], ",", "\[CapitalDelta]i", ",", 
      "\[CapitalDelta]Nc", ",", "NewNcell", ",", "CT"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"statetmp2", "=", 
      RowBox[{"1.0", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"i", ",", "m", ",", "k"}], "}"}], ",", "mv", ",", 
         RowBox[{"{", "t", "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"chooseiorm", "=", 
      RowBox[{"giveiormC", "[", 
       RowBox[{"i", ",", "m", ",", "k", ",", "mv"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"NewNcell", "=", "Ncell"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]i", "=", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"First", "[", "chooseiorm", "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]Nc", "=", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"NewNcell", "[", 
         RowBox[{"[", 
          RowBox[{"k", ",", 
           RowBox[{"i", "+", "1", "+", "\[CapitalDelta]i"}]}], "]"}], "]"}], 
        "=", 
        RowBox[{
         RowBox[{"NewNcell", "[", 
          RowBox[{"[", 
           RowBox[{"k", ",", 
            RowBox[{"i", "+", "1", "+", "\[CapitalDelta]i"}]}], "]"}], "]"}], 
         "+", "\[CapitalDelta]Nc"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"MapThread", "[", " ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"NewNcell", "[", 
           RowBox[{"[", 
            RowBox[{"k", ",", 
             RowBox[{"i", "+", "1", "+", "#1"}]}], "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{"NewNcell", "[", 
            RowBox[{"[", 
             RowBox[{"k", ",", 
              RowBox[{"i", "+", "1", "+", "#1"}]}], "]"}], "]"}], "+", 
           "#2"}]}], ")"}], "&"}], "\[IndentingNewLine]", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[CapitalDelta]i", ",", "\[CapitalDelta]Nc"}], "}"}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"MapThread", "[", " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"NewNcell", "[", 
             RowBox[{"[", 
              RowBox[{"k", ",", 
               RowBox[{"i", "+", "1", "+", "#1"}]}], "]"}], "]"}], "+", 
            "#2"}], ")"}], "&"}], "\[IndentingNewLine]", ",", " ", 
         RowBox[{"{", 
          RowBox[{"\[CapitalDelta]i", ",", "\[CapitalDelta]Nc"}], "}"}]}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"NewNcell", "=", 
        RowBox[{"Ncell", "*", "2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"MapThread", "[", " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"NewNcell", "[", 
             RowBox[{"[", 
              RowBox[{"k", ",", 
               RowBox[{"i", "+", "1", "+", "#1"}]}], "]"}], "]"}], "=", "0"}],
            ")"}], "&"}], "\[IndentingNewLine]", ",", " ", 
         RowBox[{"{", 
          RowBox[{"\[CapitalDelta]i", ",", "\[CapitalDelta]Nc"}], "}"}]}], 
        "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"NewNcell", "[", 
         RowBox[{"[", 
          RowBox[{"k", ",", 
           RowBox[{"i", "+", "1", "+", 
            RowBox[{"\[CapitalDelta]i", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"NewNcell", "[", 
          RowBox[{"[", 
           RowBox[{"k", ",", 
            RowBox[{"i", "+", "1", "+", 
             RowBox[{"\[CapitalDelta]i", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], "]"}], "+", 
         RowBox[{"\[CapitalDelta]Nc", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NewNcell", "[", 
         RowBox[{"[", 
          RowBox[{"k", ",", 
           RowBox[{"i", "+", "1", "+", 
            RowBox[{"\[CapitalDelta]i", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"NewNcell", "[", 
          RowBox[{"[", 
           RowBox[{"k", ",", 
            RowBox[{"i", "+", "1", "+", 
             RowBox[{"\[CapitalDelta]i", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "]"}], "+", 
         RowBox[{"\[CapitalDelta]Nc", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"CT", "=", 
      RowBox[{"NewCapacityC", "[", 
       RowBox[{
        RowBox[{"NewNcell", "[", 
         RowBox[{"[", "k", "]"}], "]"}], ",", 
        RowBox[{"ratio", "[", 
         RowBox[{"[", "k", "]"}], "]"}], ",", 
        RowBox[{"Ccell", "[", 
         RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Comment", "[", 
        RowBox[{"\"\<initial cell amount=\>\"", ",", 
         RowBox[{"Ncell", "[", 
          RowBox[{"[", "k", "]"}], "]"}], ",", "\"\<; cell capacity=\>\"", 
         ",", 
         RowBox[{"Ccell", "[", 
          RowBox[{"[", "k", "]"}], "]"}], ",", "\"\<; final cell amount=\>\"",
          ",", 
         RowBox[{"NewNcell", "[", 
          RowBox[{"[", "k", "]"}], "]"}], ",", "\"\<; CT=\>\"", ",", "CT", 
         ",", "\"\<;\>\""}], "]"}], ";"}], "*)"}], " ", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"CT", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Ncell", "=", "NewNcell"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"statetmp1", "=", 
         RowBox[{"statetmp2", "+", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "mv0", ",", 
            RowBox[{"givetimeC", "[", "r", "]"}]}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"statetmp2", "=", 
         RowBox[{"statetmp2", "+", 
          RowBox[{"Join", "[", 
           RowBox[{"chooseiorm", ",", 
            RowBox[{"givetimeC", "[", "r", "]"}]}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Comment", "[", "\[IndentingNewLine]", 
           RowBox[{
           "\"\<\!\(\*OverscriptBox[SubscriptBox[\(\[Delta]P\), \(1\)], \(\
\[RightVector]\)]\)={\!\(\*SubscriptBox[\(\[Delta]s\), \
\(1\)]\),\[Ellipsis],\!\(\*SubscriptBox[\(\[Delta]s\), \(3 + \
imax\)]\),\!\(\*SubscriptBox[\(t\), \(1\)]\)}=\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"chooseiorm", ",", 
              RowBox[{
               RowBox[{"Last", "[", "statetmp1", "]"}], "-", "t"}]}], "}"}], 
            ",", "\"\<;\\n\>\"", ",", "\[IndentingNewLine]", 
            "\"\<\!\(\*OverscriptBox[SubscriptBox[\(\[Delta]P\), \(2\)], \(\
\[RightVector]\)]\)={\!\(\*SubscriptBox[\(\[Delta]s\), \
\(1\)]\),\[Ellipsis],\!\(\*SubscriptBox[\(\[Delta]s\), \(3 + \
imax\)]\),\!\(\*SubscriptBox[\(t\), \(2\)]\)}=\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"chooseiorm", ",", 
              RowBox[{
               RowBox[{"Last", "[", "statetmp2", "]"}], "-", "t"}]}], "}"}], 
            ",", "\"\<;\>\""}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Comment", "[", 
           RowBox[{
           "\"\<\!\(\*OverscriptBox[SubscriptBox[\(P\), \(1\)], \(\
\[RightVector]\)]\)=\!\(\*OverscriptBox[\(P\), \
\(\[RightVector]\)]\)+\!\(\*OverscriptBox[SubscriptBox[\(\[Delta]P\), \(1\)], \
\(\[RightVector]\)]\)=\>\"", ",", "statetmp1", ",", 
            "\"\<; \!\(\*OverscriptBox[SubscriptBox[\(P\), \(2\)], \(\
\[RightVector]\)]\)=\!\(\*OverscriptBox[\(P\), \
\(\[RightVector]\)]\)+\!\(\*OverscriptBox[SubscriptBox[\(\[Delta]P\), \(2\)], \
\(\[RightVector]\)]\)=\>\"", ",", "statetmp2"}], "]"}], ";"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"dels", "[", "state", "]"}], ";"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"shiftbisectionC", "[", 
         RowBox[{"state", ",", "statetmp1", ",", "2", ",", "Ntot"}], "]"}], 
        ";", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"shiftbisection", "[", 
           RowBox[{"state", ",", "statetmp1", ",", "1", ",", 
            RowBox[{"Ntot", "-", "1"}]}], "]"}], ";", 
          RowBox[{"Look", " ", "well"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"bisectionC", "[", 
         RowBox[{"state", ",", "statetmp2", ",", "1", ",", "Ntot"}], "]"}], 
        ";", 
        RowBox[{"(*", 
         RowBox[{
         "Ntot", " ", "stands", " ", "for", " ", "a", " ", "position"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Ntot", "+=", "1"}], ";"}], "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"statetmp1", "=", 
         RowBox[{"statetmp2", "+", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "mv0", ",", 
            RowBox[{"givetimeC", "[", "r", "]"}]}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"shiftbisectionC", "[", 
         RowBox[{"state", ",", "statetmp1", ",", "2", ",", "Ntot"}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]",
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"]", "/.", 
        RowBox[{"DownValues", "[", "shiftbisectionC", "]"}]}], "/.", 
       RowBox[{"DownValues", "[", "bisectionC", "]"}]}], "/.", 
      RowBox[{"DownValues", "[", "insertC", "]"}]}], "/.", 
     RowBox[{"DownValues", "[", "shiftinsertC", "]"}]}], 
    "\[IndentingNewLine]", "]"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6564142274941607`*^9, 3.656414361909807*^9}, {
   3.6564146733993893`*^9, 3.6564146805068417`*^9}, {3.656414712372798*^9, 
   3.656414723594039*^9}, {3.657136429662242*^9, 3.657136434810192*^9}, {
   3.6572086884977827`*^9, 3.657208954462811*^9}, {3.6572090039457827`*^9, 
   3.6572090240036173`*^9}, {3.65721281948979*^9, 3.657212821966527*^9}, {
   3.657261548655965*^9, 3.6572615672472343`*^9}, 3.657262081815654*^9, {
   3.657262114467371*^9, 3.657262137750025*^9}, {3.6572623995741463`*^9, 
   3.6572624047649593`*^9}, 3.657262441654105*^9, 3.65726269572961*^9, {
   3.657262981808226*^9, 3.657262982651063*^9}, {3.657263052869423*^9, 
   3.657263112416346*^9}, {3.6572631642788067`*^9, 3.6572631855057573`*^9}, {
   3.65726323286722*^9, 3.657263288632093*^9}, {3.657263364938737*^9, 
   3.657263398627475*^9}, {3.6572636222480097`*^9, 3.6572637101290817`*^9}, {
   3.657263784808177*^9, 3.6572637981886187`*^9}, 3.657263848473434*^9, 
   3.6572641186389303`*^9, {3.657272479381315*^9, 3.657272500170246*^9}, 
   3.657272860806383*^9, {3.657274881007257*^9, 3.657274900242481*^9}, {
   3.6572758089331303`*^9, 3.657275921518531*^9}, {3.657275956787396*^9, 
   3.657275957362608*^9}, {3.6572761153314743`*^9, 3.657276121142704*^9}, {
   3.6572762316659403`*^9, 3.657276236426453*^9}, 3.662895552356135*^9, 
   3.662895602037253*^9, {3.662895670696641*^9, 3.662895710470186*^9}, {
   3.662896094456565*^9, 3.662896099827602*^9}, {3.662896238437604*^9, 
   3.6628962891902447`*^9}, {3.662898185531412*^9, 3.6628981993858223`*^9}, 
   3.662898300375589*^9, 3.662898335018086*^9, {3.6628991423346043`*^9, 
   3.6628991753757563`*^9}, 3.662899438805378*^9, {3.662899570026309*^9, 
   3.662899626194437*^9}, 3.6629831508154097`*^9, {3.6629851470657873`*^9, 
   3.6629852051923923`*^9}, 3.662988332817113*^9, 3.6629884077133007`*^9, {
   3.662988602581645*^9, 3.6629886658718348`*^9}, {3.662990485357361*^9, 
   3.662990489978097*^9}, {3.6629908440975933`*^9, 3.6629908661686153`*^9}, {
   3.662991105507139*^9, 3.662991115525834*^9}, {3.663047673456903*^9, 
   3.663047678927549*^9}, 3.663048265974448*^9, {3.663048707428172*^9, 
   3.663048717434031*^9}, {3.663049285551218*^9, 3.66304928731273*^9}, {
   3.663049431686386*^9, 3.663049432045165*^9}, {3.663049466392474*^9, 
   3.6630494774955387`*^9}, {3.663049648504467*^9, 3.66304965537658*^9}, {
   3.6630503423616447`*^9, 3.663050344930244*^9}, 3.6630505551660967`*^9, {
   3.663050749216772*^9, 3.6630507603914013`*^9}, {3.6630507984016523`*^9, 
   3.663050807208819*^9}, {3.663051245221849*^9, 3.663051268396337*^9}, {
   3.663051319911474*^9, 3.6630513231555157`*^9}, 3.663051437353311*^9, {
   3.6630514814105587`*^9, 3.6630515048581963`*^9}, {3.663055942079874*^9, 
   3.663055950348695*^9}, 3.663056006971747*^9, 3.663056043710527*^9, 
   3.663056176640193*^9, {3.663056739171461*^9, 3.663056763562517*^9}, {
   3.663057203004815*^9, 3.6630572598408833`*^9}, {3.663057290793435*^9, 
   3.6630572957351103`*^9}, {3.663057449006968*^9, 3.6630574683962927`*^9}, {
   3.663057843273365*^9, 3.663057849536014*^9}, 3.663314598909361*^9, {
   3.663314634232078*^9, 3.663314637355564*^9}, 3.6633147529036922`*^9, {
   3.664017204859529*^9, 3.6640172111015663`*^9}, {3.664018378951426*^9, 
   3.664018411979301*^9}, {3.66401858590062*^9, 3.664018599846356*^9}, {
   3.664018649704389*^9, 3.664018668747613*^9}, {3.664018719788487*^9, 
   3.6640187202428226`*^9}, 3.670053055135635*^9, 3.670055669047358*^9, {
   3.670055737434833*^9, 3.67005575460328*^9}, {3.6700557859371223`*^9, 
   3.6700557915008793`*^9}, {3.670055838139906*^9, 3.67005585388211*^9}, {
   3.670055946317561*^9, 3.670055991644289*^9}, 3.670056280394355*^9, 
   3.6700601298014936`*^9, {3.670322364262292*^9, 3.6703223786635637`*^9}, {
   3.67032240977404*^9, 3.670322416813929*^9}, {3.670323156161315*^9, 
   3.670323159640539*^9}, 3.6703267598054447`*^9, {3.6703279053547583`*^9, 
   3.670327933051629*^9}, {3.670581284744913*^9, 3.6705812874234858`*^9}, 
   3.670581534229875*^9, 3.671340327846554*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Fate ",
 Cell[BoxData[
  ButtonBox["\<\"Evaluate\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
       EvaluationNotebook[], All, ButtonCell] SelectionMove[
       EvaluationNotebook[], All, CellGroup]) SelectionEvaluateCreateCell[
      EvaluationNotebook[]],
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False,
  CellChangeTimes->{3.6252904677946167`*^9, 3.626670633881194*^9, 
   3.6519101150134897`*^9}]
}], "Subsubsection",
 CellChangeTimes->{{3.651910339748372*^9, 3.651910345476472*^9}, {
  3.6519103897649527`*^9, 3.651910391384837*^9}, {3.6519104721500397`*^9, 
  3.6519104727502823`*^9}, {3.66289555845254*^9, 3.662895560076517*^9}, {
  3.6628956730616283`*^9, 3.662895673981759*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"fateC", "[", 
    RowBox[{
    "i_", ",", "m_", ",", "k_", ",", "mv_", ",", "p_", ",", "r_", ",", 
     "prob_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"(*", 
       RowBox[{"s", ",", "rnn", ",", "rc"}], "*)"}], "probc", "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"s", "=", 
        RowBox[{"ssC", "[", 
         RowBox[{
          RowBox[{"keyC", "[", 
           RowBox[{"k", ",", "mv", ",", "compkeystep"}], "]"}], ",", "m"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"rnn", "=", 
        RowBox[{"Accumulate", "[", 
         RowBox[{"ratesC", "[", 
          RowBox[{"s", ",", "k", ",", 
           RowBox[{"keygenesC", "[", 
            RowBox[{
            "k", ",", "mv", ",", "compkeystep", ",", "genes", ",", 
             "signature"}], "]"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"rc", "=", 
        RowBox[{"rnn", "/", 
         RowBox[{"rnn", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}]}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Comment", "[", 
        RowBox[{"\"\<key=\>\"", ",", 
         RowBox[{"key", "[", 
          RowBox[{"k", ",", "mv"}], "]"}], ",", "\"\<; keygene=\>\"", ",", 
         RowBox[{"keygenes", "[", 
          RowBox[{"k", ",", "mv"}], "]"}], ",", "\"\<; s=\>\"", ",", "s", 
         ",", "\"\<; CDF=\>\"", ",", "rc", ",", " ", "\"\<, r=\>\"", ",", 
         RowBox[{"rnn", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], ",", "\"\<;\>\""}], "]"}], ";"}],
       "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"probc", "=", 
       RowBox[{"Accumulate", "[", "prob", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Which", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"p", "<", 
         RowBox[{"probc", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"asymmetricC", "[", 
         RowBox[{"i", ",", "m", ",", "k", ",", "mv", ",", 
          RowBox[{"(*", 
           RowBox[{"Last", "[", "rnn", "]"}], "*)"}], "r"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"p", "<", 
         RowBox[{"probc", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"symmetricC", "[", 
         RowBox[{"i", ",", "m", ",", "k", ",", "mv", ",", 
          RowBox[{"(*", 
           RowBox[{"Last", "[", "rnn", "]"}], "*)"}], "r"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"p", "<", 
         RowBox[{"probc", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"apopC", "[", 
         RowBox[{"i", ",", "m", ",", "k", ",", "mv", ",", 
          RowBox[{"(*", 
           RowBox[{"Last", "[", "rnn", "]"}], "*)"}], "r"}], "]"}], ",", 
        "\[IndentingNewLine]", "True", ",", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"at", " ", "the", " ", "end"}], ",", " ", 
          RowBox[{
          "there", " ", "should", " ", "be", " ", "an", " ", "action"}]}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"passC", "[", 
         RowBox[{"i", ",", "m", ",", "k", ",", "mv", ",", 
          RowBox[{"(*", 
           RowBox[{"Last", "[", "rnn", "]"}], "*)"}], "r"}], "]"}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.656397181054496*^9, 3.656397184199625*^9}, {
   3.656397214534687*^9, 3.656397256523513*^9}, {3.656398019827861*^9, 
   3.656398040562293*^9}, 3.656398086400178*^9, {3.656398190478744*^9, 
   3.656398315399461*^9}, {3.65639838592575*^9, 3.656398391957403*^9}, {
   3.656414393798648*^9, 3.65641439587995*^9}, 3.656414449849942*^9, {
   3.6564145183904657`*^9, 3.656414564250979*^9}, {3.6564145970811367`*^9, 
   3.656414625550508*^9}, 3.656414752737462*^9, {3.6572092178558083`*^9, 
   3.6572092185630627`*^9}, 3.657209253954479*^9, {3.657209303198427*^9, 
   3.657209430227697*^9}, {3.657212591227272*^9, 3.657212595598853*^9}, {
   3.657212641688287*^9, 3.657212645885531*^9}, {3.657212677976233*^9, 
   3.6572126814864187`*^9}, {3.657212717840128*^9, 3.6572127230224657`*^9}, 
   3.657212762017269*^9, 3.657261521152755*^9, {3.657263944306396*^9, 
   3.657263987970112*^9}, 3.657264295405777*^9, {3.657264900620553*^9, 
   3.657264907985574*^9}, {3.6572684058003883`*^9, 3.657268425761631*^9}, {
   3.657276673393312*^9, 3.6572766866853523`*^9}, {3.65727709562038*^9, 
   3.6572771143477583`*^9}, {3.663314684121313*^9, 3.663314692338388*^9}, {
   3.663314833940844*^9, 3.663314834577963*^9}, {3.663314866254313*^9, 
   3.66331486713552*^9}, {3.664017236986112*^9, 3.664017242706464*^9}, 
   3.670056434640889*^9, {3.670056467997386*^9, 3.670056507630743*^9}, 
   3.670057002368478*^9, {3.670057068263864*^9, 3.670057096794729*^9}, 
   3.670057170357244*^9, {3.670057316819982*^9, 3.670057337150076*^9}, 
   3.6700574005213823`*^9, 3.670057563537052*^9, {3.6700580028613873`*^9, 
   3.670058024634542*^9}, {3.6700583043572407`*^9, 3.67005830707981*^9}, {
   3.670059203069909*^9, 3.670059205554098*^9}, {3.6700593801411333`*^9, 
   3.670059386059392*^9}, {3.670064394608543*^9, 3.670064397729443*^9}, 
   3.670064488489188*^9, {3.670064587647615*^9, 3.670064589655958*^9}, {
   3.670064684154132*^9, 3.670064731771968*^9}, {3.6700647892272453`*^9, 
   3.6700648216469316`*^9}, 3.6700655090650043`*^9, {3.670065551870384*^9, 
   3.67006559805129*^9}, {3.670065723332234*^9, 3.670065738361122*^9}, 
   3.6700658136583853`*^9, {3.670066252479001*^9, 3.6700662566927032`*^9}, {
   3.67006647896811*^9, 3.670066518428309*^9}, {3.670066898648629*^9, 
   3.670066902623601*^9}, {3.670067004037436*^9, 3.670067025628891*^9}, {
   3.670067110792947*^9, 3.670067137279626*^9}, {3.670067194547847*^9, 
   3.670067201861335*^9}, {3.670129961563924*^9, 3.670129964754468*^9}, {
   3.6701304852399817`*^9, 3.670130487326949*^9}, {3.6701305656541443`*^9, 
   3.670130568758669*^9}, {3.670130690130714*^9, 3.670130696841054*^9}, 
   3.6701308447963667`*^9, 3.670130905511201*^9, {3.670131970327517*^9, 
   3.670131989685134*^9}, 3.670132085194438*^9, 3.670132132169997*^9, {
   3.6701326897627707`*^9, 3.670132731815918*^9}, {3.6701442008914547`*^9, 
   3.670144251614684*^9}, 3.6701443023199997`*^9, {3.670144395714476*^9, 
   3.670144463921803*^9}, {3.670144538651578*^9, 3.670144541275013*^9}, {
   3.6701445760133543`*^9, 3.670144580504944*^9}, {3.670144621501028*^9, 
   3.6701446240833597`*^9}, {3.67014477886849*^9, 3.670144782195286*^9}, {
   3.670144841802527*^9, 3.670144844855474*^9}, {3.670144919838829*^9, 
   3.6701449241447353`*^9}, 3.670144972365231*^9, {3.670145004307358*^9, 
   3.6701450469689198`*^9}, {3.6701450798208847`*^9, 
   3.6701450831944847`*^9}, {3.670145182499889*^9, 3.670145194488452*^9}, {
   3.6701452444626513`*^9, 3.6701452472452173`*^9}, 3.6701453884135113`*^9, 
   3.670145429081462*^9, {3.670145469041209*^9, 3.6701454760199213`*^9}, {
   3.670146269409437*^9, 3.670146272427144*^9}, {3.670147346029166*^9, 
   3.670147355960153*^9}, {3.6701502040258636`*^9, 3.670150227190928*^9}, {
   3.670150846381271*^9, 3.670150946951131*^9}, {3.670150977709497*^9, 
   3.670150991443417*^9}, {3.6701513355056543`*^9, 3.670151337842078*^9}, {
   3.670151597842309*^9, 3.67015162619666*^9}, {3.670220027952221*^9, 
   3.6702200306393013`*^9}, {3.670220473228746*^9, 3.6702204817158833`*^9}, {
   3.670222723865459*^9, 3.670222726874008*^9}, {3.670222840213482*^9, 
   3.6702228435914707`*^9}, 3.670223056714774*^9, {3.670223656738752*^9, 
   3.670223669366106*^9}, {3.6703266373068523`*^9, 3.670326684760253*^9}, {
   3.670426126403962*^9, 3.6704262508315268`*^9}, {3.670433791662628*^9, 
   3.670433810313169*^9}, {3.6704339394978867`*^9, 3.670433966632526*^9}, {
   3.670578537744225*^9, 3.670578550592969*^9}, {3.67057867575264*^9, 
   3.6705786819673862`*^9}, {3.670578756758876*^9, 3.670578758727325*^9}, 
   3.6705788465492*^9, 3.670578879593006*^9, {3.670578934902101*^9, 
   3.670578967050416*^9}, {3.6705790725997667`*^9, 3.670579081069071*^9}, {
   3.670579718776628*^9, 3.6705797632485323`*^9}, {3.6705834783156843`*^9, 
   3.670583498343457*^9}, 3.670583614692823*^9, {3.670584774099104*^9, 
   3.6705848272837563`*^9}, {3.6705848667349377`*^9, 
   3.6705848954425087`*^9}, {3.6705853048895397`*^9, 3.670585413852141*^9}, {
   3.670586952635355*^9, 3.670586970188673*^9}, {3.670587129661251*^9, 
   3.670587171576235*^9}, {3.670587376969651*^9, 3.670587401247896*^9}, {
   3.670587443411851*^9, 3.670587463643516*^9}, {3.671278567206622*^9, 
   3.67127860658908*^9}, {3.6713405196281013`*^9, 3.67134053863555*^9}, {
   3.6713406117746*^9, 3.6713406167910957`*^9}, 3.6726522848490257`*^9, 
   3.672652374944644*^9, {3.672653026538989*^9, 3.67265303708706*^9}, {
   3.672653913813452*^9, 3.672653923001841*^9}, {3.672653954585507*^9, 
   3.672653991564185*^9}, {3.672654553572908*^9, 3.672654554684506*^9}, {
   3.672654810305675*^9, 3.6726548206132393`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Extra", "Subsection",
 CellChangeTimes->{{3.657006576744567*^9, 3.6570065805686617`*^9}, 
   3.657007431809258*^9, 3.66289321186264*^9, {3.663281049205646*^9, 
   3.663281065819446*^9}, {3.664017817298422*^9, 3.66401784054171*^9}, {
   3.6640179514392433`*^9, 3.664017954441811*^9}, {3.670486371937742*^9, 
   3.670486373518359*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Striptease", "[", "symb_Symbol", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"DownValues", "[", "symb", "]"}], "=", 
    RowBox[{
     RowBox[{"DownValues", "[", "symb", "]"}], "//.", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ToExpression", "[", 
         RowBox[{"#", ",", "InputForm", ",", "DownValues"}], "]"}], "&"}], "/@", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{
         RowBox[{"Names", "[", "\"\<Global`*\>\"", "]"}], ",", 
         RowBox[{"SymbolName", "[", "symb", "]"}]}], "]"}]}], "]"}]}]}], 
   ")"}]}]], "Input",
 CellChangeTimes->{{3.6703263989749327`*^9, 3.670326484610915*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Striptease", "[", "ratesC", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.672642089339551*^9, 3.6726420915008593`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Striptease", "[", "keyC", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.6726419749365683`*^9, 3.672641993762033*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Striptease", "[", "keygenesC", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.672641986553905*^9, 3.672641988174583*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Striptease", "[", "createstate0C", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.670327055887178*^9, 3.670327063235815*^9}, 
   3.6704353615924597`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Striptease", "[", "fateC", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.670326877068342*^9, 3.670326879689054*^9}, 
   3.670435351931218*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"myfuckup", "[", "rm_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "nvar", ",", "dim", ",", "lenf", ",", "leni", ",", "lrange", ",", "ext", 
      ",", "vol", ",", "volf", ",", "voli", ",", "vrange", ",", "vec"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"nvar", "=", 
      RowBox[{"IntegerPart", "@", 
       RowBox[{"rm", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Number of arrays: \>\"", ",", 
       RowBox[{"ToString", "@", "nvar"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"dim", "=", 
      RowBox[{"IntegerPart", "/@", 
       RowBox[{"rm", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "-", "nvar"}], ";;", 
          RowBox[{"-", "2"}]}], "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Number of dimensions per array: \>\"", " ", ",", " ", 
       RowBox[{"ToString", "@", "dim"}]}], "]"}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"leni", "=", 
      RowBox[{
       RowBox[{"-", "1"}], "-", "nvar", "-", 
       RowBox[{"Accumulate", "@", 
        RowBox[{"Reverse", "@", "dim"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"leni", "=", 
      RowBox[{"Reverse", "@", "leni"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", "leni", "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"lenf", "=", 
      RowBox[{"leni", "+", "dim", "-", "1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", "lenf", "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"lrange", "=", 
      RowBox[{"Span", "@@@", 
       RowBox[{"Transpose", "@", 
        RowBox[{"{", 
         RowBox[{"leni", ",", "lenf"}], "}"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", "lrange", "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"ext", "=", 
      RowBox[{"IntegerPart", "/@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"rm", "[", 
           RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", "lrange"}], ")"}]}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"vol", "=", 
      RowBox[{"Times", "@@@", "ext"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Elemets per array: \>\"", ",", 
       RowBox[{"ToString", "@", "vol"}]}], "]"}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Dimensions per array: \>\"", " ", ",", " ", 
       RowBox[{"ToString", "@", "ext"}]}], "]"}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"volf", "=", 
      RowBox[{"Accumulate", "@", "vol"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"voli", "=", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", "0", "}"}], ",", 
         RowBox[{"volf", "[", 
          RowBox[{"[", 
           RowBox[{";;", 
            RowBox[{"-", "2"}]}], "]"}], "]"}]}], "]"}], "+", "1"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vrange", "=", 
      RowBox[{"(", 
       RowBox[{"Span", "@@@", 
        RowBox[{"Transpose", "@", 
         RowBox[{"{", 
          RowBox[{"voli", ",", "volf"}], "}"}]}]}], ")"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vec", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"rm", "[", 
         RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", "vrange"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"ArrayReshape", "[", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "/@", 
      RowBox[{"(", 
       RowBox[{"Transpose", "@", 
        RowBox[{"{", 
         RowBox[{"vec", ",", "ext"}], "}"}]}], ")"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.663280674865273*^9, 3.663280684243547*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Main: Partially Compiled  With Parameters", "Subsection",
 CellChangeTimes->{{3.657006576744567*^9, 3.6570065805686617`*^9}, 
   3.657007431809258*^9, 3.66289321186264*^9, {3.663281049205646*^9, 
   3.663281065819446*^9}, {3.664017817298422*^9, 3.66401784054171*^9}, {
   3.6640179514392433`*^9, 3.664017954441811*^9}, {3.6706538094236593`*^9, 
   3.670653823488147*^9}, {3.756571383882375*^9, 3.7565713857156897`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MainNC", "[", 
    RowBox[{
    "NtotE_", ",", "Nmax_", ",", "scegli_", ",", "kmax_", ",", "imax_", ",", 
     "maxsemidrivermut_", ",", "\[IndentingNewLine]", "maxnondrivermut_", ",",
      "signature_", ",", "compkeystep_", ",", "\[IndentingNewLine]", "expG_", 
     ",", "cntG_", ",", "ctmax_", ",", "tmax_", ",", "maxmjump_", ",", 
     "maxtjump_", ",", "\[IndentingNewLine]", "Aasym_", ",", "Asym_", ",", 
     "Aapop_", ",", "Apass_", ",", "cen_", ",", "wide_", ",", "slope_", ",", 
     "ratio_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Ntot", ",", 
       RowBox[{"Empty", "=", "0"}], ",", 
       RowBox[{"Ncell", "=", 
        RowBox[{"{", 
         RowBox[{"{", "0", "}"}], "}"}]}], ",", 
       RowBox[{"ord", "=", 
        RowBox[{"{", "1", "}"}]}], ",", 
       RowBox[{"times", "=", 
        RowBox[{"{", "0.", "}"}]}], ",", 
       RowBox[{"state", "=", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0."}], "}"}], "}"}]}], ",", 
       RowBox[{"Ccell", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"t", "=", "0.0"}], ",", 
       RowBox[{"ct", "=", "0"}], ",", "\[IndentingNewLine]", "maxdrivermut", 
       ",", "smv0", ",", "state0", ",", "sstate0", ",", "Cmut", ",", "genes", 
       ",", 
       RowBox[{"krates", "=", 
        RowBox[{"{", "1.0", "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"i", "=", "0"}], ",", 
       RowBox[{"m", "=", "0"}], ",", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ","}], "*)"}], 
       RowBox[{"mv", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
       
       RowBox[{"p", "=", "0.1"}], ",", " ", 
       RowBox[{"r", "=", "0.1"}], ",", " ", 
       RowBox[{"mv0", "=", 
        RowBox[{"{", "0", "}"}]}], ",", 
       RowBox[{"imkmv", "=", 
        RowBox[{"{", "0", "}"}]}], ",", 
       RowBox[{"in", "=", "0"}], ",", 
       RowBox[{"fn", "=", "0"}], ",", 
       RowBox[{"mid", "=", "0"}], ",", 
       RowBox[{"midr", "=", "0."}], ",", 
       RowBox[{"CT", "=", "False"}], ",", "statetmp1", ",", "statetmp2", ",", 
       "NewNcell", ",", 
       RowBox[{"\[CapitalDelta]i", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"\[CapitalDelta]Nc", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"\[CapitalDelta]Nc2", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"\[CapitalDelta]k", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"chooseiorm", "=", 
        RowBox[{"{", "10", "}"}]}], ",", "ratescum", ",", "ratesn", ",", 
       "stateslist", ",", "Ncslist", ",", "probslist", ",", "spprobslist", 
       ",", "Ntslist", ",", "tslist", ",", "key", ",", "ss", ",", "keyg", ",",
        "rates", ",", 
       RowBox[{"(*", 
        RowBox[{"rcs", ","}], "*)"}], 
       RowBox[{"(*", 
        RowBox[{"rnns", ","}], "*)"}], "rcum1", ",", "nondriverspace", ",", 
       "semidriverspace", ",", "driverspace", ",", "space", ",", 
       "spaceprob"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"derivated", " ", "variables"}], "*)"}], "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"maxdrivermut", "=", 
       RowBox[{"imax", "-", "1"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"number", " ", "of", " ", "driver", " ", "mutations"}], "*)"}],
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"mv0", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "imax"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"state0", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"imax", "+", "3"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Cmut", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{"1", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "maxdrivermut"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", "maxsemidrivermut", "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"genes", "=", 
         RowBox[{"Log", "[", 
          RowBox[{"expG", "/", "cntG"}], "]"}]}], ";"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"genes", "=", 
       RowBox[{"expG", "/", "cntG"}]}], ";", " ", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"krates", "=", 
       RowBox[{"Apass", " ", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{"1", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"kmax", "-", "1"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"{", "0", "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Ntot", "=", "NtotE"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Empty", "=", 
       RowBox[{"Nmax", "-", "Ntot", "-", "scegli"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Ncell", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"Ntot", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
          "}"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{"mv0", ",", 
           RowBox[{"{", 
            RowBox[{"l", ",", "1", ",", 
             RowBox[{"kmax", "-", "1"}]}], "}"}]}], "]"}]}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
       "this", " ", "should", " ", "be", " ", "less", " ", "than", " ", 
        "nm"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"state", "=", 
       RowBox[{"createstate0C", "[", 
        RowBox[{
         RowBox[{"Nmax", "+", "2"}], ",", "t"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Ccell", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Floor", "[", 
          RowBox[{"Ntot", "+", "Empty"}], "]"}], ",", 
         RowBox[{"Max", "[", 
          RowBox[{"0", ",", 
           RowBox[{"Floor", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Nmax", "-", "Ntot", "-", "Empty"}], ")"}], "/", "2"}], 
            "]"}]}], "]"}], ",", 
         RowBox[{"Max", "[", 
          RowBox[{"0", ",", 
           RowBox[{"Floor", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Nmax", "-", "Ntot", "-", "Empty"}], ")"}], "/", "2"}], 
            "]"}]}], "]"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"times", "=", 
       RowBox[{
        RowBox[{"Transpose", "[", "state", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ord", "=", 
       RowBox[{"Ordering", "[", "times", "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"state", "=", 
       RowBox[{"state", "[", 
        RowBox[{"[", "ord", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"do", " ", "something"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"imkmv", "=", 
       RowBox[{"IntegerPart", "[", 
        RowBox[{"state", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"1", ";;", 
            RowBox[{"4", "+", "imax", "-", "1"}]}]}], "]"}], "]"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"key", "=", 
       RowBox[{"keyC", "[", 
        RowBox[{
         RowBox[{"imkmv", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{"imkmv", "[", 
          RowBox[{"[", 
           RowBox[{"4", ";;", 
            RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "compkeystep"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"ss", "=", 
       RowBox[{"ssC", "[", 
        RowBox[{"key", ",", 
         RowBox[{"imkmv", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      RowBox[{"keyg", "=", 
       RowBox[{"keygenesC", "[", 
        RowBox[{
         RowBox[{"imkmv", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{"imkmv", "[", 
          RowBox[{"[", 
           RowBox[{"4", ";;", 
            RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "compkeystep", ",", 
         "genes", ",", "signature"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rates", "=", 
       RowBox[{"ratesC", "[", 
        RowBox[{"ss", ",", 
         RowBox[{"imkmv", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", "keyg"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ratescum", "=", 
       RowBox[{"Accumulate", "[", "rates", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"rcum1", "=", 
       RowBox[{"ratescum", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ratesn", "=", 
       RowBox[{"rates", "/", "rcum1"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"nondriverspace", "=", 
       RowBox[{"maxnondrivermut", "-", 
        RowBox[{"imkmv", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"semidriverspace", "=", 
       RowBox[{"maxsemidrivermut", "-", 
        RowBox[{"imkmv", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"driverspace", "=", 
       RowBox[{"maxdrivermut", "-", 
        RowBox[{"Total", "[", 
         RowBox[{"imkmv", "[", 
          RowBox[{"[", 
           RowBox[{"4", ";;", 
            RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"space", "=", 
       RowBox[{
       "nondriverspace", "+", "semidriverspace", "+", "driverspace"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"spaceprob", "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "driverspace", ",", "semidriverspace", ",", "nondriverspace"}], 
         "}"}], "/", "space"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"stateslist", "=", 
       RowBox[{"Internal`Bag", "[", 
        RowBox[{"Most", "[", 
         RowBox[{"{", "1.", "}"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Ncslist", "=", 
       RowBox[{"Internal`Bag", "[", 
        RowBox[{"Most", "[", 
         RowBox[{"{", "1.", "}"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"probslist", "=", 
       RowBox[{"Internal`Bag", "[", 
        RowBox[{"Most", "[", 
         RowBox[{"{", "1.", "}"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"spprobslist", "=", 
       RowBox[{"Internal`Bag", "[", 
        RowBox[{"Most", "[", 
         RowBox[{"{", "1.", "}"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Ntslist", "=", 
       RowBox[{"Internal`Bag", "[", 
        RowBox[{"Most", "[", 
         RowBox[{"{", "1.", "}"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tslist", "=", 
       RowBox[{"Internal`Bag", "[", 
        RowBox[{"Most", "[", 
         RowBox[{"{", "1.", "}"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", "state", ",", "2"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"Ncslist", ",", "Ncell", ",", "2"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"probslist", ",", "ratesn", ",", "2"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"spprobslist", ",", "spaceprob", ",", "2"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"Ntslist", ",", "Ntot"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"tslist", ",", "t"}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"And", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"state", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", 
              RowBox[{"-", "1"}]}], "]"}], "]"}], "<", "tmax"}], ",", " ", 
          RowBox[{"ct", "<", "ctmax"}], ",", 
          RowBox[{"Ntot", ">", "0"}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ct", "+=", "1"}], ";", "\[IndentingNewLine]", 
         RowBox[{"t", "=", 
          RowBox[{"state", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", 
             RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]",
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"asymmetricC", "[", 
            RowBox[{
             RowBox[{"imkmv", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"imkmv", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"imkmv", "[", 
              RowBox[{"[", "3", "]"}], "]"}], ",", 
             RowBox[{"imkmv", "[", 
              RowBox[{"[", 
               RowBox[{"4", ";;", 
                RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "r"}], "]"}], ";"}], 
          "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"fateC", "[", 
          RowBox[{
           RowBox[{"imkmv", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"imkmv", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{"imkmv", "[", 
            RowBox[{"[", "3", "]"}], "]"}], ",", 
           RowBox[{"imkmv", "[", 
            RowBox[{"[", 
             RowBox[{"4", ";;", 
              RowBox[{"4", "+", "imax", "-", "1"}]}], "]"}], "]"}], ",", 
           RowBox[{"givepC", "[", "]"}], ",", "r", ",", "ratesn"}], "]"}], 
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"imkmv", "=", 
          RowBox[{"IntegerPart", "[", 
           RowBox[{"state", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", 
              RowBox[{"1", ";;", 
               RowBox[{"4", "+", "imax", "-", "1"}]}]}], "]"}], "]"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"key", "=", 
          RowBox[{"keyC", "[", 
           RowBox[{
            RowBox[{"imkmv", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", 
            RowBox[{"imkmv", "[", 
             RowBox[{"[", 
              RowBox[{"4", ";;", 
               RowBox[{"4", "+", "imax", "-", "1"}]}], "]"}], "]"}], ",", 
            "compkeystep"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ss", "=", 
          RowBox[{"ssC", "[", 
           RowBox[{"key", ",", 
            RowBox[{"imkmv", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"keyg", "=", 
          RowBox[{"keygenesC", "[", 
           RowBox[{
            RowBox[{"imkmv", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", 
            RowBox[{"imkmv", "[", 
             RowBox[{"[", 
              RowBox[{"4", ";;", 
               RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "compkeystep", ",", 
            "genes", ",", "signature"}], "]"}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"rates", "=", 
          RowBox[{"ratesC", "[", 
           RowBox[{"ss", ",", 
            RowBox[{"imkmv", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", "keyg"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"ratescum", "=", 
          RowBox[{"Accumulate", "[", "rates", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"rcum1", "=", 
          RowBox[{"ratescum", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ratesn", "=", 
          RowBox[{"rates", "/", "rcum1"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"nondriverspace", "=", 
          RowBox[{"maxnondrivermut", "-", 
           RowBox[{"imkmv", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"semidriverspace", "=", 
          RowBox[{"maxsemidrivermut", "-", 
           RowBox[{"imkmv", "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"driverspace", "=", 
          RowBox[{"maxdrivermut", "-", 
           RowBox[{"Total", "[", 
            RowBox[{"imkmv", "[", 
             RowBox[{"[", 
              RowBox[{"4", ";;", 
               RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"space", "=", 
          RowBox[{
          "nondriverspace", "+", "semidriverspace", "+", "driverspace"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"spaceprob", "=", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "driverspace", ",", "semidriverspace", ",", "nondriverspace"}], 
            "}"}], "/", "space"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"Internal`StuffBag", "[", 
          RowBox[{"stateslist", ",", "state", ",", "2"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Internal`StuffBag", "[", 
          RowBox[{"Ncslist", ",", "Ncell", ",", "2"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Internal`StuffBag", "[", 
          RowBox[{"probslist", ",", "ratesn", ",", "2"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Internal`StuffBag", "[", 
          RowBox[{"spprobslist", ",", "spaceprob", ",", "2"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Internal`StuffBag", "[", 
          RowBox[{"Ntslist", ",", "Ntot"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Internal`StuffBag", "[", 
          RowBox[{"tslist", ",", "t"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"states", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"states", ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "Ncell", ",", "state"}], "}"}]}], "]"}]}], 
         ";"}], "*)"}], " ", 
       RowBox[{"(*", 
        RowBox[{
        "not", " ", "needed", " ", "in", " ", "this", " ", "testing", " ", 
         "part"}], "*)"}], "\[IndentingNewLine]", " ", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Internal`StuffBag", "[", 
         RowBox[{"stateslist", ",", 
          RowBox[{"Internal`BagPart", "[", 
           RowBox[{"stateslist", ",", "All"}], "]"}], ",", "1"}], "]"}], 
        ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"Internal`BagPart", "[", 
         RowBox[{"Ncslist", ",", "All"}], "]"}], ",", "1"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"Internal`BagPart", "[", 
         RowBox[{"probslist", ",", "All"}], "]"}], ",", "1"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"Internal`BagPart", "[", 
         RowBox[{"spprobslist", ",", "All"}], "]"}], ",", "1"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"Internal`BagPart", "[", 
         RowBox[{"Ntslist", ",", "All"}], "]"}], ",", "1"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"Internal`BagPart", "[", 
         RowBox[{"tslist", ",", "All"}], "]"}], ",", "1"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", "Nmax"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", "imax"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"ct", "+", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"Dimensions", "[", "state", "]"}], ",", "1"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"ct", "+", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"Dimensions", "[", "Ncell", "]"}], ",", "1"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"ct", "+", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"Dimensions", "[", "ratesn", "]"}], ",", "1"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"ct", "+", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"Dimensions", "[", "spaceprob", "]"}], ",", "1"}], "]"}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"ct", "+", "1"}]}], "]"}], ";", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"ct", "+", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"Length", "@", 
         RowBox[{"Dimensions", "[", 
          RowBox[{"{", "state", "}"}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"Length", "@", 
         RowBox[{"Dimensions", "[", 
          RowBox[{"{", "Ncell", "}"}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"Dimensions", "[", 
          RowBox[{"{", "ratesn", "}"}], "]"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"Dimensions", "[", 
          RowBox[{"{", "spaceprob", "}"}], "]"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"Length", "@", 
         RowBox[{"Dimensions", "[", 
          RowBox[{"{", "Ntot", "}"}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"Length", "@", 
         RowBox[{"Dimensions", "[", 
          RowBox[{"{", "t", "}"}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", "0"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", "0"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", "8"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Internal`BagPart", "[", 
       RowBox[{"stateslist", ",", "All"}], "]"}]}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.663065984474782*^9, 3.663065985434761*^9}, {
   3.663066022090193*^9, 3.6630660596279087`*^9}, {3.663066104753413*^9, 
   3.6630661301616898`*^9}, {3.663066173091741*^9, 3.663066193745377*^9}, {
   3.663066235837915*^9, 3.663066262836252*^9}, {3.663066315565566*^9, 
   3.663066330516568*^9}, {3.663066979486066*^9, 3.663066990599139*^9}, {
   3.663067021590357*^9, 3.663067027661983*^9}, {3.663067651808361*^9, 
   3.6630677076586523`*^9}, {3.66306781519312*^9, 3.6630678191421957`*^9}, {
   3.663068250573867*^9, 3.663068299418538*^9}, {3.663068962956272*^9, 
   3.663068964777721*^9}, {3.6630690554157133`*^9, 3.6630690583587303`*^9}, 
   3.66306918649376*^9, {3.6630692189126577`*^9, 3.663069271515167*^9}, 
   3.6630693031686583`*^9, {3.663069344503191*^9, 3.663069381854713*^9}, {
   3.6630695201821327`*^9, 3.663069543102285*^9}, {3.6630695907784452`*^9, 
   3.663069620253936*^9}, {3.6630697388433847`*^9, 3.663069783957868*^9}, {
   3.6630700795103493`*^9, 3.663070124760158*^9}, 3.6630702024635344`*^9, {
   3.663070386833015*^9, 3.6630704685852423`*^9}, {3.663070506695046*^9, 
   3.663070556305407*^9}, {3.66307111909544*^9, 3.663071153521842*^9}, 
   3.663071211045204*^9, 3.66307126757379*^9, {3.663071301070389*^9, 
   3.663071355565974*^9}, {3.663071407905973*^9, 3.663071524919181*^9}, {
   3.663071564897708*^9, 3.663071566427251*^9}, {3.663071642128031*^9, 
   3.663071653968628*^9}, {3.6630716940955772`*^9, 3.6630717072005787`*^9}, {
   3.663071746366124*^9, 3.663071915494692*^9}, 3.6630719585349913`*^9, {
   3.663072011026037*^9, 3.6630720213379*^9}, 3.663072058930451*^9, 
   3.663072119744956*^9, {3.663072224346943*^9, 3.663072243047616*^9}, {
   3.663072314424211*^9, 3.663072316564138*^9}, {3.6630723836379623`*^9, 
   3.663072394802822*^9}, {3.6630724768004913`*^9, 3.663072477270281*^9}, 
   3.663072526685871*^9, {3.663072584047974*^9, 3.663072634045545*^9}, {
   3.663072691683898*^9, 3.663072746393441*^9}, {3.6630727882437468`*^9, 
   3.6630730302293053`*^9}, 3.663073069885269*^9, {3.663073103048015*^9, 
   3.663073105913621*^9}, {3.6630731458749943`*^9, 3.6630731971844263`*^9}, {
   3.663073300011486*^9, 3.663073344197056*^9}, {3.6630733833254547`*^9, 
   3.663073398780321*^9}, {3.663094721645434*^9, 3.6630947290252028`*^9}, {
   3.663094801828889*^9, 3.663094863772458*^9}, {3.663094899427356*^9, 
   3.6630949044530983`*^9}, {3.663094957044277*^9, 3.663094977588344*^9}, 
   3.663095029914866*^9, {3.663095203771655*^9, 3.663095230254595*^9}, {
   3.663095323457555*^9, 3.66309533329567*^9}, {3.663095377650897*^9, 
   3.663095413623983*^9}, {3.663095461978677*^9, 3.663095492609427*^9}, {
   3.663095569914268*^9, 3.663095574381094*^9}, {3.663096382003302*^9, 
   3.663096384425642*^9}, {3.6630964499707003`*^9, 3.6630964699995613`*^9}, {
   3.663096519063695*^9, 3.6630965236259937`*^9}, 3.663096558928487*^9, 
   3.663096599418392*^9, {3.66309664012148*^9, 3.663096658999535*^9}, 
   3.663096715133231*^9, 3.663097606271288*^9, {3.663148710969715*^9, 
   3.663148745012903*^9}, {3.663148953919354*^9, 3.663148954600293*^9}, {
   3.663152091643221*^9, 3.663152108896803*^9}, 3.663222780912932*^9, {
   3.6632820912871532`*^9, 3.663282113997312*^9}, {3.6632823541370373`*^9, 
   3.663282376262917*^9}, 3.6632824110533447`*^9, {3.6632825598880033`*^9, 
   3.663282561847369*^9}, {3.663282614449017*^9, 3.6632826362341127`*^9}, {
   3.663315202690233*^9, 3.6633152420032377`*^9}, {3.663315273889944*^9, 
   3.663315287234872*^9}, {3.663315339041541*^9, 3.663315353843377*^9}, {
   3.6633154062285223`*^9, 3.663315467271014*^9}, {3.663315510448366*^9, 
   3.663315511222876*^9}, {3.6633155637289953`*^9, 3.663315565184523*^9}, {
   3.663315615473077*^9, 3.663315657474004*^9}, 3.6633160499584227`*^9, {
   3.663316166680739*^9, 3.663316278030846*^9}, {3.6633163346445637`*^9, 
   3.663316380351283*^9}, {3.663316438131714*^9, 3.6633165623570967`*^9}, {
   3.66331665525266*^9, 3.663316696470375*^9}, 3.663316728383131*^9, {
   3.6633169555110703`*^9, 3.663316962602624*^9}, {3.663318265930442*^9, 
   3.663318286415922*^9}, {3.663318323076302*^9, 3.663318339467849*^9}, {
   3.663318384925177*^9, 3.6633184135658283`*^9}, {3.663318451878227*^9, 
   3.663318510901792*^9}, {3.6633187007077723`*^9, 3.663318724442112*^9}, {
   3.663318763765823*^9, 3.663318789215232*^9}, 3.663324868384891*^9, {
   3.6633250029319*^9, 3.6633250075377693`*^9}, {3.663325109039316*^9, 
   3.663325157080628*^9}, {3.6633252201790133`*^9, 3.6633252238956127`*^9}, {
   3.6633252616504087`*^9, 3.663325263366506*^9}, {3.663325328930949*^9, 
   3.6633253303685207`*^9}, {3.663325524137698*^9, 3.6633255366128902`*^9}, {
   3.6633256741996193`*^9, 3.663325675108037*^9}, {3.663325713690666*^9, 
   3.663325715872011*^9}, {3.663325980381751*^9, 3.663326000907568*^9}, {
   3.663326970870544*^9, 3.663326978468421*^9}, 3.6633284478635683`*^9, {
   3.663328530393073*^9, 3.663328563297941*^9}, {3.663328605949326*^9, 
   3.6633286359070797`*^9}, 3.663328667437839*^9, {3.6633287549077377`*^9, 
   3.6633287656648827`*^9}, {3.663328886645598*^9, 3.663328935439196*^9}, {
   3.6633289734886*^9, 3.6633289846597013`*^9}, {3.66333007792992*^9, 
   3.6633300866217213`*^9}, {3.6633301601004467`*^9, 3.663330161042305*^9}, 
   3.663330264328886*^9, {3.66333041520677*^9, 3.663330417572813*^9}, {
   3.663330464307765*^9, 3.663330473365033*^9}, {3.663330569723639*^9, 
   3.663330578231504*^9}, 3.6633306365677547`*^9, {3.663330679734951*^9, 
   3.663330737411634*^9}, 3.66333078373816*^9, {3.663330830412961*^9, 
   3.663330856128551*^9}, {3.663332876763105*^9, 3.663332881523519*^9}, {
   3.663332964710881*^9, 3.663332965444642*^9}, {3.663333213028927*^9, 
   3.663333224140821*^9}, {3.6633335258648148`*^9, 3.6633335363366537`*^9}, {
   3.663333601353211*^9, 3.663333616071753*^9}, {3.663333651839913*^9, 
   3.6633336689424953`*^9}, {3.663333700674305*^9, 3.663333730435072*^9}, {
   3.663333971935047*^9, 3.663333974455553*^9}, {3.664001839975205*^9, 
   3.664001848730391*^9}, {3.664017732787558*^9, 3.664017733239545*^9}, {
   3.664018180979843*^9, 3.6640181852387447`*^9}, {3.664018454440075*^9, 
   3.664018455386375*^9}, {3.6640187855378103`*^9, 3.664018791653226*^9}, {
   3.6699753415653667`*^9, 3.6699753498128033`*^9}, {3.6699780434950647`*^9, 
   3.669978047410412*^9}, 3.669978490258506*^9, {3.669981416639886*^9, 
   3.669981420326282*^9}, {3.669981456070631*^9, 3.669981457140435*^9}, {
   3.669981671755438*^9, 3.669981672695311*^9}, {3.669982198085183*^9, 
   3.6699821991945047`*^9}, 3.669982244907041*^9, {3.669982344907098*^9, 
   3.669982345842507*^9}, 3.669982707489834*^9, {3.670147164517432*^9, 
   3.670147167655663*^9}, 3.6701488316362457`*^9, {3.6701497234013557`*^9, 
   3.670149794961445*^9}, {3.670149908661776*^9, 3.6701499143968973`*^9}, 
   3.670149988443161*^9, {3.670150050456015*^9, 3.670150064709457*^9}, {
   3.6701505251373577`*^9, 3.670150560315374*^9}, 3.670150643831335*^9, {
   3.670150757903544*^9, 3.670150763388444*^9}, 3.670151972996113*^9, 
   3.6702208862829227`*^9, {3.670221567469125*^9, 3.670221572306119*^9}, {
   3.670221644291823*^9, 3.670221644499305*^9}, 3.6702217600146437`*^9, {
   3.670223133151329*^9, 3.670223143359782*^9}, {3.67022418113584*^9, 
   3.670224201267817*^9}, {3.670224304256386*^9, 3.670224304720331*^9}, {
   3.6703276437529297`*^9, 3.670327687812883*^9}, {3.6703277454197283`*^9, 
   3.670327753027543*^9}, {3.670423806343001*^9, 3.670423811945075*^9}, {
   3.6704242013136597`*^9, 3.67042424034816*^9}, {3.670424455011647*^9, 
   3.670424493882679*^9}, {3.670424613849964*^9, 3.670424614493936*^9}, {
   3.670425920373101*^9, 3.670425929699339*^9}, {3.6705830755334272`*^9, 
   3.6705830995479517`*^9}, {3.670583444559546*^9, 3.670583449810687*^9}, {
   3.6705835133256702`*^9, 3.670583515734079*^9}, {3.6705836318742228`*^9, 
   3.670583633490415*^9}, {3.670583722061254*^9, 3.670583736335167*^9}, {
   3.670586752061344*^9, 3.6705867621978703`*^9}, {3.6705869364326057`*^9, 
   3.67058693923446*^9}, {3.670648405685566*^9, 3.670648413101391*^9}, {
   3.6706507622533493`*^9, 3.670650768250822*^9}, 3.6706537118116217`*^9, {
   3.670653830555933*^9, 3.670653983174309*^9}, 3.6706542197862*^9, 
   3.670654557977284*^9, 3.670654593784594*^9, {3.670654743986949*^9, 
   3.670654752543097*^9}, {3.671340896556788*^9, 3.6713408992547693`*^9}, {
   3.671342016954034*^9, 3.671342037382431*^9}, {3.672655043733305*^9, 
   3.6726550530116987`*^9}, {3.672655183848474*^9, 3.672655211278042*^9}, {
   3.672655255194632*^9, 3.6726552567705927`*^9}, {3.6726552900453577`*^9, 
   3.672655313976066*^9}, {3.672655367076*^9, 3.672655470583891*^9}, {
   3.672655545696538*^9, 3.672655571147266*^9}, {3.67265562849088*^9, 
   3.672655641205946*^9}, {3.67265567315633*^9, 3.672655691787017*^9}, {
   3.673028395252758*^9, 3.673028398818054*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Striptease", "[", "MainNC", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.673028408328114*^9, 3.6730284325454407`*^9}, 
   3.673028584412258*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Main: Fully Compiled With Parameters", "Subsection",
 CellChangeTimes->{{3.657006576744567*^9, 3.6570065805686617`*^9}, 
   3.657007431809258*^9, 3.66289321186264*^9, {3.663281049205646*^9, 
   3.663281065819446*^9}, {3.664017817298422*^9, 3.66401784054171*^9}, {
   3.6640179514392433`*^9, 3.664017954441811*^9}, 3.7565713800250874`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Main", "=", 
  RowBox[{"ReleaseHold", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Hold", "[", 
           RowBox[{"Compile", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"NtotE", ",", "_Integer"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"Nmax", ",", "_Integer"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"scegli", ",", "_Integer"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"kmax", ",", "_Integer"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"imax", ",", "_Integer"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"maxsemidrivermut", ",", "_Integer"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"maxnondrivermut", ",", "_Integer"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"signature", ",", "_Integer", ",", "1"}], "}"}], ",", 
               
               RowBox[{"{", 
                RowBox[{"compkeystep", ",", "_Integer", ",", "1"}], "}"}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"expG", ",", "_Real", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"cntG", ",", "_Real", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"ctmax", ",", "_Integer"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"tmax", ",", "_Integer"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"maxmjump", ",", "_Integer"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"maxtjump", ",", "_Integer"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Aasym", ",", "_Real", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"Asym", ",", "_Real", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"Aapop", ",", "_Real", ",", "1"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Apass", ",", "_Real"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"cen", ",", "_Real"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"wide", ",", "_Real"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"slope", ",", "_Real"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"ratio", ",", "_Real", ",", "2"}], "}"}]}], "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"Block", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Ntot", ",", 
                 RowBox[{"Empty", "=", "0"}], ",", 
                 RowBox[{"Ncell", "=", 
                  RowBox[{"{", 
                   RowBox[{"{", "0", "}"}], "}"}]}], ",", 
                 RowBox[{"ord", "=", 
                  RowBox[{"{", "1", "}"}]}], ",", 
                 RowBox[{"times", "=", 
                  RowBox[{"{", "0.", "}"}]}], ",", 
                 RowBox[{"state", "=", 
                  RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0."}], "}"}], "}"}]}], ",", 
                 RowBox[{"Ccell", "=", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"t", "=", "0.0"}], ",", 
                 RowBox[{"ct", "=", "0"}], ",", "\[IndentingNewLine]", 
                 "maxdrivermut", ",", "smv0", ",", "state0", ",", "sstate0", 
                 ",", "Cmut", ",", "genes", ",", 
                 RowBox[{"krates", "=", 
                  RowBox[{"{", "1.0", "}"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"i", "=", "0"}], ",", 
                 RowBox[{"m", "=", "0"}], ",", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"k", "=", "1"}], ","}], "*)"}], 
                 RowBox[{"mv", "=", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
                   "}"}]}], ",", 
                 RowBox[{"p", "=", "0.1"}], ",", " ", 
                 RowBox[{"r", "=", "0.1"}], ",", " ", 
                 RowBox[{"mv0", "=", 
                  RowBox[{"{", "0", "}"}]}], ",", 
                 RowBox[{"imkmv", "=", 
                  RowBox[{"{", "0", "}"}]}], ",", 
                 RowBox[{"in", "=", "0"}], ",", 
                 RowBox[{"fn", "=", "0"}], ",", 
                 RowBox[{"mid", "=", "0"}], ",", 
                 RowBox[{"midr", "=", "0."}], ",", 
                 RowBox[{"CT", "=", "False"}], ",", "statetmp1", ",", 
                 "statetmp2", ",", "NewNcell", ",", 
                 RowBox[{"\[CapitalDelta]i", "=", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}]}], ",", 
                 RowBox[{"\[CapitalDelta]Nc", "=", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}]}], ",", 
                 RowBox[{"\[CapitalDelta]Nc2", "=", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}]}], ",", 
                 RowBox[{"\[CapitalDelta]k", "=", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}]}], ",", 
                 RowBox[{"chooseiorm", "=", 
                  RowBox[{"{", "10", "}"}]}], ",", 
                 RowBox[{"(*", 
                  RowBox[{"s", ","}], "*)"}], "ratescum", ",", "ratesn", ",", 
                 "stateslist", ",", "Ncslist", ",", "probslist", ",", 
                 "spprobslist", ",", "Ntslist", ",", "tslist", ",", "key", 
                 ",", "ss", ",", "keyg", ",", "rates", ",", 
                 RowBox[{"(*", 
                  RowBox[{"rcs", ","}], "*)"}], 
                 RowBox[{"(*", 
                  RowBox[{"rnns", ","}], "*)"}], "rcum1", ",", 
                 "nondriverspace", ",", "semidriverspace", ",", "driverspace",
                  ",", "space", ",", "spaceprob"}], "}"}], ",", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"derivated", " ", "variables"}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"maxdrivermut", "=", 
                 RowBox[{"imax", "-", "1"}]}], ";", " ", 
                RowBox[{"(*", 
                 RowBox[{
                 "number", " ", "of", " ", "driver", " ", "mutations"}], 
                 "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"mv0", "=", 
                 RowBox[{"Table", "[", 
                  RowBox[{"0", ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", "imax"}], "}"}]}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"state0", "=", 
                 RowBox[{"Table", "[", 
                  RowBox[{"0", ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"imax", "+", "3"}]}], "}"}]}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Cmut", "=", 
                 RowBox[{"Join", "[", 
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{"1", ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "maxdrivermut"}], "}"}]}], "]"}], ",", 
                   RowBox[{"{", "maxsemidrivermut", "}"}]}], "]"}]}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"genes", "=", 
                   RowBox[{"Log", "[", 
                    RowBox[{"expG", "/", "cntG"}], "]"}]}], ";"}], " ", 
                 "*)"}], "\[IndentingNewLine]", 
                RowBox[{"genes", "=", 
                 RowBox[{"expG", "/", "cntG"}]}], ";", " ", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"krates", "=", 
                 RowBox[{"Apass", " ", 
                  RowBox[{"Join", "[", 
                   RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"1", ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"kmax", "-", "1"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"{", "0", "}"}]}], "]"}]}]}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"Ntot", "=", "NtotE"}], ";", "\[IndentingNewLine]", 
                RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"Empty", "=", 
                 RowBox[{"Nmax", "-", "Ntot", "-", "scegli"}]}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"Ncell", "=", 
                 RowBox[{"Join", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"Ntot", ",", "0", ",", "0", ",", "0", ",", "0"}], 
                    "}"}], "}"}], ",", 
                   RowBox[{"Table", "[", 
                    RowBox[{"mv0", ",", 
                    RowBox[{"{", 
                    RowBox[{"l", ",", "1", ",", 
                    RowBox[{"kmax", "-", "1"}]}], "}"}]}], "]"}]}], "]"}]}], 
                ";", 
                RowBox[{"(*", 
                 RowBox[{
                 "this", " ", "should", " ", "be", " ", "less", " ", "than", 
                  " ", "nm"}], "*)"}], "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"state", "=", 
                 RowBox[{"createstate0C", "[", 
                  RowBox[{
                   RowBox[{"Nmax", "+", "2"}], ",", "t"}], "]"}]}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"Ccell", "=", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Floor", "[", 
                    RowBox[{"Ntot", "+", "Empty"}], "]"}], ",", 
                   RowBox[{"Max", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"Floor", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Nmax", "-", "Ntot", "-", "Empty"}], ")"}], "/", 
                    "2"}], "]"}]}], "]"}], ",", 
                   RowBox[{"Max", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"Floor", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Nmax", "-", "Ntot", "-", "Empty"}], ")"}], "/", 
                    "2"}], "]"}]}], "]"}]}], "}"}]}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"times", "=", 
                 RowBox[{
                  RowBox[{"Transpose", "[", "state", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"ord", "=", 
                 RowBox[{"Ordering", "[", "times", "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"state", "=", 
                 RowBox[{"state", "[", 
                  RowBox[{"[", "ord", "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{"do", " ", "something"}], "*)"}], 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"imkmv", "=", 
                 RowBox[{"IntegerPart", "[", 
                  RowBox[{"state", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", 
                    RowBox[{"1", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}]}], "]"}], "]"}], 
                  "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"key", "=", 
                 RowBox[{"keyC", "[", 
                  RowBox[{
                   RowBox[{"imkmv", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", 
                   RowBox[{"imkmv", "[", 
                    RowBox[{"[", 
                    RowBox[{"4", ";;", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "compkeystep"}], 
                  "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"ss", "=", 
                 RowBox[{"ssC", "[", 
                  RowBox[{"key", ",", 
                   RowBox[{"imkmv", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
                RowBox[{"keyg", "=", 
                 RowBox[{"keygenesC", "[", 
                  RowBox[{
                   RowBox[{"imkmv", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", 
                   RowBox[{"imkmv", "[", 
                    RowBox[{"[", 
                    RowBox[{"4", ";;", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "compkeystep", 
                   ",", "genes", ",", "signature"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"rates", "=", 
                 RowBox[{"ratesC", "[", 
                  RowBox[{"ss", ",", 
                   RowBox[{"imkmv", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", "keyg"}], "]"}]}], 
                ";", "\[IndentingNewLine]", 
                RowBox[{"ratescum", "=", 
                 RowBox[{"Accumulate", "[", "rates", "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"rcum1", "=", 
                 RowBox[{"ratescum", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"ratesn", "=", 
                 RowBox[{"rates", "/", "rcum1"}]}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"nondriverspace", "=", 
                 RowBox[{"maxnondrivermut", "-", 
                  RowBox[{"imkmv", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"semidriverspace", "=", 
                 RowBox[{"maxsemidrivermut", "-", 
                  RowBox[{"imkmv", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"driverspace", "=", 
                 RowBox[{"maxdrivermut", "-", 
                  RowBox[{"Total", "[", 
                   RowBox[{"imkmv", "[", 
                    RowBox[{"[", 
                    RowBox[{"4", ";;", 
                    RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}]}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"space", "=", 
                 RowBox[{
                 "nondriverspace", "+", "semidriverspace", "+", 
                  "driverspace"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"spaceprob", "=", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "driverspace", ",", "semidriverspace", ",", 
                    "nondriverspace"}], "}"}], "/", "space"}]}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"stateslist", "=", 
                 RowBox[{"Internal`Bag", "[", 
                  RowBox[{"Most", "[", 
                   RowBox[{"{", "1.", "}"}], "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Ncslist", "=", 
                 RowBox[{"Internal`Bag", "[", 
                  RowBox[{"Most", "[", 
                   RowBox[{"{", "1.", "}"}], "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"probslist", "=", 
                 RowBox[{"Internal`Bag", "[", 
                  RowBox[{"Most", "[", 
                   RowBox[{"{", "1.", "}"}], "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"spprobslist", "=", 
                 RowBox[{"Internal`Bag", "[", 
                  RowBox[{"Most", "[", 
                   RowBox[{"{", "1.", "}"}], "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Ntslist", "=", 
                 RowBox[{"Internal`Bag", "[", 
                  RowBox[{"Most", "[", 
                   RowBox[{"{", "1.", "}"}], "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"tslist", "=", 
                 RowBox[{"Internal`Bag", "[", 
                  RowBox[{"Most", "[", 
                   RowBox[{"{", "1.", "}"}], "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", "state", ",", "2"}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"Ncslist", ",", "Ncell", ",", "2"}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"probslist", ",", "ratesn", ",", "2"}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"spprobslist", ",", "spaceprob", ",", "2"}], "]"}], 
                ";", "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"Ntslist", ",", "Ntot"}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"tslist", ",", "t"}], "]"}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"While", "[", 
                 RowBox[{
                  RowBox[{"And", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"state", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}], "<", "tmax"}], ",", 
                    " ", 
                    RowBox[{"ct", "<", "ctmax"}], ",", 
                    RowBox[{"Ntot", ">", "0"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"ct", "+=", "1"}], ";", "\[IndentingNewLine]", 
                   RowBox[{"t", "=", 
                    RowBox[{"state", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", 
                   "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"imkmv", "=", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{"state", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", 
                    RowBox[{"1", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}]}], "]"}], "]"}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"key", "=", 
                    RowBox[{"keyC", "[", 
                    RowBox[{
                    RowBox[{"imkmv", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", 
                    RowBox[{"imkmv", "[", 
                    RowBox[{"[", 
                    RowBox[{"4", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}], "]"}], "]"}], ",",
                     "compkeystep"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"ss", "=", 
                    RowBox[{"ssC", "[", 
                    RowBox[{"key", ",", "m"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"keyg", "=", 
                    RowBox[{"keygenesC", "[", 
                    RowBox[{
                    RowBox[{"imkmv", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", 
                    RowBox[{"imkmv", "[", 
                    RowBox[{"[", 
                    RowBox[{"4", ";;", 
                    RowBox[{
                    RowBox[{"+", "imax"}], "-", "1"}]}], "]"}], "]"}], ",", 
                    "compkeystep", ",", "genes", ",", "signature"}], "]"}]}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"rates", "=", 
                    RowBox[{"ratesC", "[", 
                    RowBox[{"ss", ",", 
                    RowBox[{"imkmv", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", "keyg"}], "]"}]}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"ratescum", "=", 
                    RowBox[{"Accumulate", "[", "rates", "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"rcum1", "=", 
                    RowBox[{"ratescum", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"ratesn", "=", 
                    RowBox[{"rates", "/", "rcum1"}]}], ";"}], "*)"}], 
                   "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   "\[IndentingNewLine]", 
                   RowBox[{"fateC", "[", 
                    RowBox[{
                    RowBox[{"imkmv", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"imkmv", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"imkmv", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", 
                    RowBox[{"imkmv", "[", 
                    RowBox[{"[", 
                    RowBox[{"4", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}], "]"}], "]"}], ",", 
                    RowBox[{"givepC", "[", "]"}], ",", "rcum1", ",", 
                    "ratesn"}], "]"}], ";", "\[IndentingNewLine]", 
                   "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   RowBox[{"imkmv", "=", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{"state", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", 
                    RowBox[{"1", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}]}], "]"}], "]"}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"key", "=", 
                    RowBox[{"keyC", "[", 
                    RowBox[{
                    RowBox[{"imkmv", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", 
                    RowBox[{"imkmv", "[", 
                    RowBox[{"[", 
                    RowBox[{"4", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}], "]"}], "]"}], ",",
                     "compkeystep"}], "]"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"ss", "=", 
                    RowBox[{"ssC", "[", 
                    RowBox[{"key", ",", 
                    RowBox[{"imkmv", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"keyg", "=", 
                    RowBox[{"keygenesC", "[", 
                    RowBox[{
                    RowBox[{"imkmv", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", 
                    RowBox[{"imkmv", "[", 
                    RowBox[{"[", 
                    RowBox[{"4", ";;", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "compkeystep", 
                    ",", "genes", ",", "signature"}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"rates", "=", 
                    RowBox[{"ratesC", "[", 
                    RowBox[{"ss", ",", 
                    RowBox[{"imkmv", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", "keyg"}], "]"}]}], 
                   ";", "\[IndentingNewLine]", 
                   RowBox[{"ratescum", "=", 
                    RowBox[{"Accumulate", "[", "rates", "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"rcum1", "=", 
                    RowBox[{"ratescum", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"ratesn", "=", 
                    RowBox[{"rates", "/", "rcum1"}]}], ";", 
                   "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   "\[IndentingNewLine]", 
                   RowBox[{"nondriverspace", "=", 
                    RowBox[{"maxnondrivermut", "-", 
                    RowBox[{"imkmv", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"semidriverspace", "=", 
                    RowBox[{"maxsemidrivermut", "-", 
                    RowBox[{"imkmv", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"driverspace", "=", 
                    RowBox[{"maxdrivermut", "-", 
                    RowBox[{"Total", "[", 
                    RowBox[{"imkmv", "[", 
                    RowBox[{"[", 
                    RowBox[{"4", ";;", 
                    RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}]}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"space", "=", 
                    RowBox[{
                    "nondriverspace", "+", "semidriverspace", "+", 
                    "driverspace"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"spaceprob", "=", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "driverspace", ",", "semidriverspace", ",", 
                    "nondriverspace"}], "}"}], "/", "space"}]}], ";", 
                   "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", "state", ",", "2"}], "]"}], 
                   ";", "\[IndentingNewLine]", 
                   RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"Ncslist", ",", "Ncell", ",", "2"}], "]"}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"probslist", ",", "ratesn", ",", "2"}], "]"}], 
                   ";", "\[IndentingNewLine]", 
                   RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"spprobslist", ",", "spaceprob", ",", "2"}], 
                    "]"}], ";", "\[IndentingNewLine]", 
                   RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"Ntslist", ",", "Ntot"}], "]"}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"tslist", ",", "t"}], "]"}], ";"}]}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"states", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"states", ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "Ncell", ",", "state"}], "}"}]}], 
                    "]"}]}], ";"}], "*)"}], " ", 
                 RowBox[{"(*", 
                  RowBox[{
                  "not", " ", "needed", " ", "in", " ", "this", " ", 
                   "testing", " ", "part"}], "*)"}], "\[IndentingNewLine]", 
                 " ", "]"}], ";", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"Internal`StuffBag", "[", 
                   RowBox[{"stateslist", ",", 
                    RowBox[{"Internal`BagPart", "[", 
                    RowBox[{"stateslist", ",", "All"}], "]"}], ",", "1"}], 
                   "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"Internal`BagPart", "[", 
                   RowBox[{"Ncslist", ",", "All"}], "]"}], ",", "1"}], "]"}], 
                ";", "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"Internal`BagPart", "[", 
                   RowBox[{"probslist", ",", "All"}], "]"}], ",", "1"}], 
                 "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"Internal`BagPart", "[", 
                   RowBox[{"spprobslist", ",", "All"}], "]"}], ",", "1"}], 
                 "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"Internal`BagPart", "[", 
                   RowBox[{"Ntslist", ",", "All"}], "]"}], ",", "1"}], "]"}], 
                ";", "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"Internal`BagPart", "[", 
                   RowBox[{"tslist", ",", "All"}], "]"}], ",", "1"}], "]"}], 
                ";", "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", "Nmax"}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", "imax"}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"ct", "+", "1"}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"Dimensions", "[", "state", "]"}], ",", "1"}], 
                 "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"ct", "+", "1"}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"Dimensions", "[", "Ncell", "]"}], ",", "1"}], 
                 "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"ct", "+", "1"}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"Dimensions", "[", "ratesn", "]"}], ",", "1"}], 
                 "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"ct", "+", "1"}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"Dimensions", "[", "spaceprob", "]"}], ",", "1"}], 
                 "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"ct", "+", "1"}]}], "]"}], ";", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"ct", "+", "1"}]}], "]"}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"Length", "@", 
                   RowBox[{"Dimensions", "[", 
                    RowBox[{"{", "state", "}"}], "]"}]}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"Length", "@", 
                   RowBox[{"Dimensions", "[", 
                    RowBox[{"{", "Ncell", "}"}], "]"}]}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"Length", "[", 
                   RowBox[{"Dimensions", "[", 
                    RowBox[{"{", "ratesn", "}"}], "]"}], "]"}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"Length", "[", 
                   RowBox[{"Dimensions", "[", 
                    RowBox[{"{", "spaceprob", "}"}], "]"}], "]"}]}], "]"}], 
                ";", "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"Length", "@", 
                   RowBox[{"Dimensions", "[", 
                    RowBox[{"{", "Ntot", "}"}], "]"}]}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"Length", "@", 
                   RowBox[{"Dimensions", "[", 
                    RowBox[{"{", "t", "}"}], "]"}]}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", "0"}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", "0"}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", "8"}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`BagPart", "[", 
                 RowBox[{"stateslist", ",", "All"}], "]"}]}]}], 
              "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
             RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}], ",", 
             RowBox[{"CompilationOptions", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                "\"\<InlineExternalDefinitions\>\"", "\[Rule]", "False"}], 
                ",", 
                RowBox[{
                "\"\<InlineCompiledFunctions\>\"", "\[Rule]", "False"}]}], 
               "}"}]}], ",", 
             RowBox[{"(*", 
              RowBox[{"RuntimeOptions", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"\"\<EvaluateSymbolically\>\"", "\[Rule]", "False"}], 
                "}"}]}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"RuntimeOptions", "\[Rule]", "\"\<Speed\>\""}]}], "]"}], 
           "]"}], "/.", 
          RowBox[{"DownValues", "[", "createstate0C", "]"}]}], "/.", 
         RowBox[{"DownValues", "[", "givepC", "]"}]}], "/.", 
        RowBox[{"DownValues", "[", "fateC", "]"}]}], "/.", 
       RowBox[{"DownValues", "[", "keyC", "]"}]}], "/.", 
      RowBox[{"DownValues", "[", "keygenesC", "]"}]}], "/.", 
     RowBox[{"DownValues", "[", "ssC", "]"}]}], "/.", 
    RowBox[{"DownValues", "[", "ratesC", "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"StringPosition", "[", 
  RowBox[{
   RowBox[{"CompilePrint", "[", "Main", "]"}], ",", "\"\<MainEvaluate\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.663065984474782*^9, 3.663065985434761*^9}, {
   3.663066022090193*^9, 3.6630660596279087`*^9}, {3.663066104753413*^9, 
   3.6630661301616898`*^9}, {3.663066173091741*^9, 3.663066193745377*^9}, {
   3.663066235837915*^9, 3.663066262836252*^9}, {3.663066315565566*^9, 
   3.663066330516568*^9}, {3.663066979486066*^9, 3.663066990599139*^9}, {
   3.663067021590357*^9, 3.663067027661983*^9}, {3.663067651808361*^9, 
   3.6630677076586523`*^9}, {3.66306781519312*^9, 3.6630678191421957`*^9}, {
   3.663068250573867*^9, 3.663068299418538*^9}, {3.663068962956272*^9, 
   3.663068964777721*^9}, {3.6630690554157133`*^9, 3.6630690583587303`*^9}, 
   3.66306918649376*^9, {3.6630692189126577`*^9, 3.663069271515167*^9}, 
   3.6630693031686583`*^9, {3.663069344503191*^9, 3.663069381854713*^9}, {
   3.6630695201821327`*^9, 3.663069543102285*^9}, {3.6630695907784452`*^9, 
   3.663069620253936*^9}, {3.6630697388433847`*^9, 3.663069783957868*^9}, {
   3.6630700795103493`*^9, 3.663070124760158*^9}, 3.6630702024635344`*^9, {
   3.663070386833015*^9, 3.6630704685852423`*^9}, {3.663070506695046*^9, 
   3.663070556305407*^9}, {3.66307111909544*^9, 3.663071153521842*^9}, 
   3.663071211045204*^9, 3.66307126757379*^9, {3.663071301070389*^9, 
   3.663071355565974*^9}, {3.663071407905973*^9, 3.663071524919181*^9}, {
   3.663071564897708*^9, 3.663071566427251*^9}, {3.663071642128031*^9, 
   3.663071653968628*^9}, {3.6630716940955772`*^9, 3.6630717072005787`*^9}, {
   3.663071746366124*^9, 3.663071915494692*^9}, 3.6630719585349913`*^9, {
   3.663072011026037*^9, 3.6630720213379*^9}, 3.663072058930451*^9, 
   3.663072119744956*^9, {3.663072224346943*^9, 3.663072243047616*^9}, {
   3.663072314424211*^9, 3.663072316564138*^9}, {3.6630723836379623`*^9, 
   3.663072394802822*^9}, {3.6630724768004913`*^9, 3.663072477270281*^9}, 
   3.663072526685871*^9, {3.663072584047974*^9, 3.663072634045545*^9}, {
   3.663072691683898*^9, 3.663072746393441*^9}, {3.6630727882437468`*^9, 
   3.6630730302293053`*^9}, 3.663073069885269*^9, {3.663073103048015*^9, 
   3.663073105913621*^9}, {3.6630731458749943`*^9, 3.6630731971844263`*^9}, {
   3.663073300011486*^9, 3.663073344197056*^9}, {3.6630733833254547`*^9, 
   3.663073398780321*^9}, {3.663094721645434*^9, 3.6630947290252028`*^9}, {
   3.663094801828889*^9, 3.663094863772458*^9}, {3.663094899427356*^9, 
   3.6630949044530983`*^9}, {3.663094957044277*^9, 3.663094977588344*^9}, 
   3.663095029914866*^9, {3.663095203771655*^9, 3.663095230254595*^9}, {
   3.663095323457555*^9, 3.66309533329567*^9}, {3.663095377650897*^9, 
   3.663095413623983*^9}, {3.663095461978677*^9, 3.663095492609427*^9}, {
   3.663095569914268*^9, 3.663095574381094*^9}, {3.663096382003302*^9, 
   3.663096384425642*^9}, {3.6630964499707003`*^9, 3.6630964699995613`*^9}, {
   3.663096519063695*^9, 3.6630965236259937`*^9}, 3.663096558928487*^9, 
   3.663096599418392*^9, {3.66309664012148*^9, 3.663096658999535*^9}, 
   3.663096715133231*^9, 3.663097606271288*^9, {3.663148710969715*^9, 
   3.663148745012903*^9}, {3.663148953919354*^9, 3.663148954600293*^9}, {
   3.663152091643221*^9, 3.663152108896803*^9}, 3.663222780912932*^9, {
   3.6632820912871532`*^9, 3.663282113997312*^9}, {3.6632823541370373`*^9, 
   3.663282376262917*^9}, 3.6632824110533447`*^9, {3.6632825598880033`*^9, 
   3.663282561847369*^9}, {3.663282614449017*^9, 3.6632826362341127`*^9}, {
   3.663315202690233*^9, 3.6633152420032377`*^9}, {3.663315273889944*^9, 
   3.663315287234872*^9}, {3.663315339041541*^9, 3.663315353843377*^9}, {
   3.6633154062285223`*^9, 3.663315467271014*^9}, {3.663315510448366*^9, 
   3.663315511222876*^9}, {3.6633155637289953`*^9, 3.663315565184523*^9}, {
   3.663315615473077*^9, 3.663315657474004*^9}, 3.6633160499584227`*^9, {
   3.663316166680739*^9, 3.663316278030846*^9}, {3.6633163346445637`*^9, 
   3.663316380351283*^9}, {3.663316438131714*^9, 3.6633165623570967`*^9}, {
   3.66331665525266*^9, 3.663316696470375*^9}, 3.663316728383131*^9, {
   3.6633169555110703`*^9, 3.663316962602624*^9}, {3.663318265930442*^9, 
   3.663318286415922*^9}, {3.663318323076302*^9, 3.663318339467849*^9}, {
   3.663318384925177*^9, 3.6633184135658283`*^9}, {3.663318451878227*^9, 
   3.663318510901792*^9}, {3.6633187007077723`*^9, 3.663318724442112*^9}, {
   3.663318763765823*^9, 3.663318789215232*^9}, 3.663324868384891*^9, {
   3.6633250029319*^9, 3.6633250075377693`*^9}, {3.663325109039316*^9, 
   3.663325157080628*^9}, {3.6633252201790133`*^9, 3.6633252238956127`*^9}, {
   3.6633252616504087`*^9, 3.663325263366506*^9}, {3.663325328930949*^9, 
   3.6633253303685207`*^9}, {3.663325524137698*^9, 3.6633255366128902`*^9}, {
   3.6633256741996193`*^9, 3.663325675108037*^9}, {3.663325713690666*^9, 
   3.663325715872011*^9}, {3.663325980381751*^9, 3.663326000907568*^9}, {
   3.663326970870544*^9, 3.663326978468421*^9}, 3.6633284478635683`*^9, {
   3.663328530393073*^9, 3.663328563297941*^9}, {3.663328605949326*^9, 
   3.6633286359070797`*^9}, 3.663328667437839*^9, {3.6633287549077377`*^9, 
   3.6633287656648827`*^9}, {3.663328886645598*^9, 3.663328935439196*^9}, {
   3.6633289734886*^9, 3.6633289846597013`*^9}, {3.66333007792992*^9, 
   3.6633300866217213`*^9}, {3.6633301601004467`*^9, 3.663330161042305*^9}, 
   3.663330264328886*^9, {3.66333041520677*^9, 3.663330417572813*^9}, {
   3.663330464307765*^9, 3.663330473365033*^9}, {3.663330569723639*^9, 
   3.663330578231504*^9}, 3.6633306365677547`*^9, {3.663330679734951*^9, 
   3.663330737411634*^9}, 3.66333078373816*^9, {3.663330830412961*^9, 
   3.663330856128551*^9}, {3.663332876763105*^9, 3.663332881523519*^9}, {
   3.663332964710881*^9, 3.663332965444642*^9}, {3.663333213028927*^9, 
   3.663333224140821*^9}, {3.6633335258648148`*^9, 3.6633335363366537`*^9}, {
   3.663333601353211*^9, 3.663333616071753*^9}, {3.663333651839913*^9, 
   3.6633336689424953`*^9}, {3.663333700674305*^9, 3.663333730435072*^9}, {
   3.663333971935047*^9, 3.663333974455553*^9}, {3.664001839975205*^9, 
   3.664001848730391*^9}, {3.664017732787558*^9, 3.664017733239545*^9}, {
   3.664018180979843*^9, 3.6640181852387447`*^9}, {3.664018454440075*^9, 
   3.664018455386375*^9}, {3.6640187855378103`*^9, 3.664018791653226*^9}, {
   3.6699753415653667`*^9, 3.6699753498128033`*^9}, {3.6699780434950647`*^9, 
   3.669978047410412*^9}, 3.669978490258506*^9, {3.669981416639886*^9, 
   3.669981420326282*^9}, {3.669981456070631*^9, 3.669981457140435*^9}, {
   3.669981671755438*^9, 3.669981672695311*^9}, {3.669982198085183*^9, 
   3.6699821991945047`*^9}, 3.669982244907041*^9, {3.669982344907098*^9, 
   3.669982345842507*^9}, 3.669982707489834*^9, {3.670147164517432*^9, 
   3.670147167655663*^9}, 3.6701488316362457`*^9, {3.6701497234013557`*^9, 
   3.670149794961445*^9}, {3.670149908661776*^9, 3.6701499143968973`*^9}, 
   3.670149988443161*^9, {3.670150050456015*^9, 3.670150064709457*^9}, {
   3.6701505251373577`*^9, 3.670150560315374*^9}, 3.670150643831335*^9, {
   3.670150757903544*^9, 3.670150763388444*^9}, 3.670151972996113*^9, 
   3.6702208862829227`*^9, {3.670221567469125*^9, 3.670221572306119*^9}, {
   3.670221644291823*^9, 3.670221644499305*^9}, 3.6702217600146437`*^9, {
   3.670223133151329*^9, 3.670223143359782*^9}, {3.67022418113584*^9, 
   3.670224201267817*^9}, {3.670224304256386*^9, 3.670224304720331*^9}, {
   3.6703276437529297`*^9, 3.670327687812883*^9}, {3.6703277454197283`*^9, 
   3.670327753027543*^9}, {3.670423806343001*^9, 3.670423811945075*^9}, {
   3.6704242013136597`*^9, 3.67042424034816*^9}, {3.670424455011647*^9, 
   3.670424493882679*^9}, {3.670424613849964*^9, 3.670424614493936*^9}, {
   3.670425920373101*^9, 3.670425929699339*^9}, {3.6705830755334272`*^9, 
   3.6705830995479517`*^9}, {3.670583444559546*^9, 3.670583449810687*^9}, {
   3.6705835133256702`*^9, 3.670583515734079*^9}, {3.6705836318742228`*^9, 
   3.670583633490415*^9}, {3.670583722061254*^9, 3.670583736335167*^9}, {
   3.670586752061344*^9, 3.6705867621978703`*^9}, {3.6705869364326057`*^9, 
   3.67058693923446*^9}, {3.670648405685566*^9, 3.670648413101391*^9}, {
   3.6706507622533493`*^9, 3.670650768250822*^9}, 3.6706537118116217`*^9, {
   3.671340873032489*^9, 3.671340875937221*^9}, 3.671969972649726*^9, {
   3.67197011901509*^9, 3.6719701966939087`*^9}, {3.671970759163103*^9, 
   3.671970792604383*^9}, {3.671971071739847*^9, 3.6719711306821413`*^9}, 
   3.671971170719329*^9, 3.671971202937572*^9, {3.6726394324363747`*^9, 
   3.672639464933963*^9}, {3.672639561514398*^9, 3.672639591334065*^9}, {
   3.6726397087937193`*^9, 3.672639727085371*^9}, {3.672641474500093*^9, 
   3.672641480186864*^9}, {3.67264159422831*^9, 3.672641628051834*^9}, {
   3.6726416636560917`*^9, 3.672641696734295*^9}, {3.672641780807776*^9, 
   3.672641785644998*^9}, {3.6726418382677937`*^9, 3.672641893615905*^9}, 
   3.6726420213730516`*^9, {3.672642110526319*^9, 3.672642154452632*^9}, {
   3.672652297843032*^9, 3.672652301272605*^9}, 3.6726523504956293`*^9, {
   3.6726526338664827`*^9, 3.672652672664823*^9}, {3.672652760682498*^9, 
   3.6726528210228653`*^9}, {3.672652934224889*^9, 3.672652977896079*^9}, {
   3.672653087968059*^9, 3.6726531236718397`*^9}, {3.67265316458603*^9, 
   3.672653196451195*^9}, {3.6726532441951513`*^9, 3.672653256898377*^9}, {
   3.6726533198023767`*^9, 3.672653332498852*^9}, {3.672653396362774*^9, 
   3.672653409771248*^9}, {3.672653553931471*^9, 3.672653826102255*^9}, {
   3.672654012537922*^9, 3.672654033403924*^9}, {3.672654100948619*^9, 
   3.6726541061412697`*^9}, {3.672654137285121*^9, 3.6726542774796543`*^9}, {
   3.672654325103179*^9, 3.672654336671425*^9}, {3.67265472679772*^9, 
   3.672654742802188*^9}, {3.672654835314752*^9, 3.672654884218547*^9}, {
   3.6726549166585417`*^9, 3.672654928298297*^9}, 3.6726554851911077`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.499999999999996`,
              2.5}, {25.499999999999996`, 1.3953100000000003`}, {
             24.604699999999998`, 0.49999999999999994`}, {23.5, 
             0.49999999999999994`}, {2.5, 0.49999999999999994`}, {
             1.3953100000000003`, 0.49999999999999994`}, {
             0.49999999999999994`, 1.3953100000000003`}, {
             0.49999999999999994`, 2.5}, {0.49999999999999994`, 23.5}, {
             0.49999999999999994`, 24.604699999999998`}, {1.3953100000000003`,
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
             25.499999999999996`}, {24.604699999999998`, 
             25.499999999999996`}, {25.499999999999996`, 
             24.604699999999998`}, {25.499999999999996`, 23.5}, {
             25.499999999999996`, 2.5}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
             19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
             20.021499999999996`}, {6.930469999999999, 20.021499999999996`}, {
             6.930469999999999, 18.212100000000003`}, {16.3832, 
             18.212100000000003`}, {16.3832, 16.357399999999995`}, {20.5426, 
             19.116799999999998`}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
             "]]}},
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], 
         GridBox[{
           {
            RowBox[{
             TagBox["\<\"Argument count: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["23",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Argument types: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              StyleBox[
               PaneBox[
                RowBox[{"{", 
                 RowBox[{
                 "_Integer", ",", "_Integer", ",", "_Integer", ",", 
                  "_Integer", ",", "_Integer", ",", "_Integer", ",", 
                  "_Integer", ",", 
                  RowBox[{"{", 
                   RowBox[{"_Integer", ",", "1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"_Integer", ",", "1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"_Real", ",", "1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"_Real", ",", "1"}], "}"}], ",", "_Integer", ",", 
                  "_Integer", ",", "_Integer", ",", "_Integer", ",", 
                  RowBox[{"{", 
                   RowBox[{"_Real", ",", "1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"_Real", ",", "1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"_Real", ",", "1"}], "}"}], ",", "_Real", ",", 
                  "_Real", ",", "_Real", ",", "_Real", ",", 
                  RowBox[{"{", 
                   RowBox[{"_Real", ",", "2"}], "}"}]}], "}"}],
                BaselinePosition->Baseline,
                ContentPadding->False,
                FrameMargins->0,
                ImageSize->{{1, 300}, Automatic},
                ScrollPosition->{0., 0.},
                StripOnInput->True],
               LineBreakWithin->False],
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.499999999999996`,
              2.5}, {25.499999999999996`, 1.3953100000000003`}, {
             24.604699999999998`, 0.49999999999999994`}, {23.5, 
             0.49999999999999994`}, {2.5, 0.49999999999999994`}, {
             1.3953100000000003`, 0.49999999999999994`}, {
             0.49999999999999994`, 1.3953100000000003`}, {
             0.49999999999999994`, 2.5}, {0.49999999999999994`, 23.5}, {
             0.49999999999999994`, 24.604699999999998`}, {1.3953100000000003`,
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
             25.499999999999996`}, {24.604699999999998`, 
             25.499999999999996`}, {25.499999999999996`, 
             24.604699999999998`}, {25.499999999999996`, 23.5}, {
             25.499999999999996`, 2.5}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
             19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
             20.021499999999996`}, {6.930469999999999, 20.021499999999996`}, {
             6.930469999999999, 18.212100000000003`}, {16.3832, 
             18.212100000000003`}, {16.3832, 16.357399999999995`}, {20.5426, 
             19.116799999999998`}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
             "]]}},
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], 
         GridBox[{
           {
            RowBox[{
             TagBox["\<\"Argument count: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["23",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Argument types: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               RowBox[{"{", 
                RowBox[{
                "_Integer", ",", "_Integer", ",", "_Integer", ",", "_Integer",
                  ",", "_Integer", ",", "_Integer", ",", "_Integer", ",", 
                 RowBox[{"{", 
                  RowBox[{"_Integer", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"_Integer", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"_Real", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"_Real", ",", "1"}], "}"}], ",", "_Integer", ",", 
                 "_Integer", ",", "_Integer", ",", "_Integer", ",", 
                 RowBox[{"{", 
                  RowBox[{"_Real", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"_Real", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"_Real", ",", "1"}], "}"}], ",", "_Real", ",", 
                 "_Real", ",", "_Real", ",", "_Real", ",", 
                 RowBox[{"{", 
                  RowBox[{"_Real", ",", "2"}], "}"}]}], "}"}],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Variables: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              RowBox[{"{", 
               RowBox[{
               "NtotE", ",", "Nmax", ",", "scegli", ",", "kmax", ",", "imax", 
                ",", "maxsemidrivermut", ",", "maxnondrivermut", ",", 
                "signature", ",", "compkeystep", ",", "expG", ",", "cntG", 
                ",", "ctmax", ",", "tmax", ",", "maxmjump", ",", "maxtjump", 
                ",", "Aasym", ",", "Asym", ",", "Aapop", ",", "Apass", ",", 
                "cen", ",", "wide", ",", "slope", ",", "ratio"}], "}"}],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Expression: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               RowBox[{"Block", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "Compile`$35", ",", "Compile`$36", ",", "Compile`$37", ",", 
                   "Compile`$38", ",", "Compile`$88", ",", "Compile`$89", ",",
                    "Compile`$90", ",", "Compile`$91", ",", "Compile`$92", 
                   ",", "Compile`$93", ",", "Compile`$94", ",", 
                   "Compile`$137", ",", "Compile`$135", ",", "Compile`$138", 
                   ",", "Compile`$139", ",", "Compile`$140", ",", 
                   "Compile`$252", ",", "Compile`$392", ",", "Compile`$522", 
                   ",", "Compile`$523", ",", "Compile`$524", ",", 
                   "Compile`$611", ",", "Compile`$609", ",", "Compile`$612", 
                   ",", "Compile`$613", ",", "Compile`$614"}], "}"}], ",", 
                 RowBox[{"Block", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Ntot", ",", 
                    RowBox[{"Empty", "=", "0"}], ",", 
                    RowBox[{"Ncell", "=", 
                    RowBox[{"{", 
                    RowBox[{"{", "0", "}"}], "}"}]}], ",", 
                    RowBox[{"ord", "=", 
                    RowBox[{"{", "1", "}"}]}], ",", 
                    RowBox[{"times", "=", 
                    RowBox[{"{", "0.`", "}"}]}], ",", 
                    RowBox[{"state", "=", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0.`"}], "}"}], "}"}]}], ",", 
                    RowBox[{"Ccell", "=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
                    RowBox[{"t", "=", "0.`"}], ",", 
                    RowBox[{"ct", "=", "0"}], ",", "maxdrivermut", ",", 
                    "smv0", ",", "state0", ",", "sstate0", ",", "Cmut", ",", 
                    "genes", ",", 
                    RowBox[{"krates", "=", 
                    RowBox[{"{", "1.`", "}"}]}], ",", 
                    RowBox[{"i", "=", "0"}], ",", 
                    RowBox[{"m", "=", "0"}], ",", 
                    RowBox[{"mv", "=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
                    "}"}]}], ",", 
                    RowBox[{"p", "=", "0.1`"}], ",", 
                    RowBox[{"r", "=", "0.1`"}], ",", 
                    RowBox[{"mv0", "=", 
                    RowBox[{"{", "0", "}"}]}], ",", 
                    RowBox[{"imkmv", "=", 
                    RowBox[{"{", "0", "}"}]}], ",", 
                    RowBox[{"in", "=", "0"}], ",", 
                    RowBox[{"fn", "=", "0"}], ",", 
                    RowBox[{"mid", "=", "0"}], ",", 
                    RowBox[{"midr", "=", "0.`"}], ",", 
                    RowBox[{"CT", "=", "False"}], ",", "statetmp1", ",", 
                    "statetmp2", ",", "NewNcell", ",", 
                    RowBox[{"\[CapitalDelta]i", "=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], ",", 
                    RowBox[{"\[CapitalDelta]Nc", "=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], ",", 
                    RowBox[{"\[CapitalDelta]Nc2", "=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], ",", 
                    RowBox[{"\[CapitalDelta]k", "=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], ",", 
                    RowBox[{"chooseiorm", "=", 
                    RowBox[{"{", "10", "}"}]}], ",", "ratescum", ",", 
                    "ratesn", ",", "stateslist", ",", "Ncslist", ",", 
                    "probslist", ",", "spprobslist", ",", "Ntslist", ",", 
                    "tslist", ",", "key", ",", "ss", ",", "keyg", ",", 
                    "rates", ",", "rcum1", ",", "nondriverspace", ",", 
                    "semidriverspace", ",", "driverspace", ",", "space", ",", 
                    "spaceprob"}], "}"}], ",", 
                   RowBox[{
                    RowBox[{"maxdrivermut", "=", 
                    RowBox[{"imax", "-", "1"}]}], ";", 
                    RowBox[{"mv0", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "imax"}], "}"}]}], "]"}]}], ";", 
                    RowBox[{"state0", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"imax", "+", "3"}]}], "}"}]}], "]"}]}], ";", 
                    RowBox[{"Cmut", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"1", ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "maxdrivermut"}], "}"}]}], "]"}], ",", 
                    RowBox[{"{", "maxsemidrivermut", "}"}]}], "]"}]}], ";", 
                    RowBox[{"genes", "=", 
                    FractionBox["expG", "cntG"]}], ";", 
                    RowBox[{"krates", "=", 
                    RowBox[{"Apass", " ", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"1", ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"kmax", "-", "1"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"{", "0", "}"}]}], "]"}]}]}], ";", 
                    RowBox[{"Ntot", "=", "NtotE"}], ";", 
                    RowBox[{"Empty", "=", 
                    RowBox[{"Nmax", "-", "Ntot", "-", "scegli"}]}], ";", 
                    RowBox[{"Ncell", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"Ntot", ",", "0", ",", "0", ",", "0", ",", "0"}], 
                    "}"}], "}"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{"mv0", ",", 
                    RowBox[{"{", 
                    RowBox[{"l", ",", "1", ",", 
                    RowBox[{"kmax", "-", "1"}]}], "}"}]}], "]"}]}], "]"}]}], 
                    ";", 
                    RowBox[{"state", "=", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"m", "=", "0"}], ",", 
                    RowBox[{"k", "=", "1"}], ",", 
                    RowBox[{"mv", "=", "mv0"}], ",", 
                    RowBox[{"s", "=", "0.`"}], ",", 
                    RowBox[{"rnn", "=", 
                    RowBox[{"{", "0.`", "}"}]}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"s", "=", 
                    FractionBox[
                    RowBox[{"2", " ", "\[ExponentialE]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"10.`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Plus", "@@", 
                    RowBox[{"mv", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{
                    "compkeystep", "\[LeftDoubleBracket]", "k", 
                    "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}]}], 
                    "+", "1"}], ")"}]}], 
                    RowBox[{"10", " ", 
                    RowBox[{"Exp", "[", 
                    FractionBox[
                    SuperscriptBox["m", "0.5`"], "2"], "]"}]}]]}], "]"}]}], 
                    "]"}], "-", 
                    FractionBox["1", "\[ExponentialE]"]}], ")"}]}], 
                    RowBox[{"\[ExponentialE]", "-", "1"}]]}], ";", 
                    RowBox[{"rnn", "=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Compile`$35", "=", 
                    RowBox[{"-", "wide"}]}], ";", 
                    RowBox[{"Compile`$36", "=", 
                    FractionBox["1", "2"]}], ";", 
                    RowBox[{"Compile`$37", "=", 
                    RowBox[{"Compile`$35", " ", "Compile`$36"}]}], ";", 
                    RowBox[{"Compile`$38", "=", 
                    SuperscriptBox["\[ExponentialE]", "Compile`$37"]}], ";", 
                    RowBox[{"Accumulate", "[", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "Aasym", "\[LeftDoubleBracket]", "k", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"slope", " ", "Compile`$38", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cosh", "[", 
                    RowBox[{"Compile`$35", " ", 
                    RowBox[{"(", 
                    RowBox[{"s", "-", "2.`"}], ")"}]}], "]"}], "-", "1"}], 
                    ")"}]}], ")"}]}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "Asym", "\[LeftDoubleBracket]", "k", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"slope", " ", "Compile`$38", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cosh", "[", 
                    RowBox[{"Compile`$35", " ", 
                    RowBox[{"(", 
                    RowBox[{"s", "-", "1.`"}], ")"}]}], "]"}], "-", "1"}], 
                    ")"}]}], ")"}]}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "Aapop", "\[LeftDoubleBracket]", "k", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"slope", " ", "Compile`$38", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cosh", "[", 
                    RowBox[{"Compile`$35", " ", 
                    RowBox[{"(", 
                    RowBox[{"s", "-", "0.5`"}], ")"}]}], "]"}], "-", "1"}], 
                    ")"}]}], ")"}]}], "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "krates", "\[LeftDoubleBracket]", "k", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"Times", "@@", 
                    RowBox[{
                    SuperscriptBox["genes", 
                    RowBox[{"mv", " ", "signature"}]], "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{
                    "compkeystep", "\[LeftDoubleBracket]", "k", 
                    "\[RightDoubleBracket]"}]}], 
                    "\[RightDoubleBracket]"}]}]}], "}"}]}], "]"}], "]"}]}], 
                    ")"}]}], ";", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"1.`", " ", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", "mv0"}], 
                    "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"k", ",", "1", ",", 
                    RowBox[{"Nmax", "+", "2"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Nmax", "+", "2"}], ",", "1"}], "}"}]}], "]"}], 
                    "]"}], 
                    RowBox[{"rnn", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]]}], "+", 
                    "t"}], ",", "2"}], "]"}]}]}], "]"}]}], ";", 
                    RowBox[{"Ccell", "=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Compile`$88", "=", 
                    RowBox[{"-", "Ntot"}]}], ";", 
                    RowBox[{"Compile`$89", "=", 
                    RowBox[{"-", "Empty"}]}], ";", 
                    RowBox[{"Compile`$90", "=", 
                    RowBox[{
                    "Nmax", "+", "Compile`$88", "+", "Compile`$89"}]}], ";", 
                    RowBox[{"Compile`$91", "=", 
                    FractionBox["1", "2"]}], ";", 
                    RowBox[{"Compile`$92", "=", 
                    RowBox[{"Compile`$90", " ", "Compile`$91"}]}], ";", 
                    RowBox[{"Compile`$93", "=", 
                    RowBox[{"Floor", "[", "Compile`$92", "]"}]}], ";", 
                    RowBox[{"Compile`$94", "=", 
                    RowBox[{"Max", "[", 
                    RowBox[{"0", ",", "Compile`$93"}], "]"}]}], ";", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Floor", "[", 
                    RowBox[{"Ntot", "+", "Empty"}], "]"}], ",", "Compile`$94",
                     ",", "Compile`$94"}], "}"}]}], ")"}]}], ";", 
                    RowBox[{"times", "=", 
                    RowBox[{
                    RowBox[{"Transpose", "[", "state", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"ord", "=", 
                    RowBox[{"Ordering", "[", "times", "]"}]}], ";", 
                    RowBox[{"state", "=", 
                    RowBox[{
                    "state", "\[LeftDoubleBracket]", "ord", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"imkmv", "=", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", 
                    RowBox[{"1", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}]}], 
                    "\[RightDoubleBracket]"}], "]"}]}], ";", 
                    RowBox[{"key", "=", 
                    RowBox[{"Plus", "@@", 
                    RowBox[{
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{"compkeystep", "\[LeftDoubleBracket]", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}], 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"ss", "=", 
                    FractionBox[
                    RowBox[{"2", " ", "\[ExponentialE]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"10.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"key", "+", "1"}], ")"}]}], 
                    RowBox[{"10", " ", 
                    RowBox[{"Exp", "[", 
                    FractionBox[
                    SuperscriptBox[
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "0.5`"], "2"], "]"}]}]]}], 
                    "]"}]}], "]"}], "-", 
                    FractionBox["1", "\[ExponentialE]"]}], ")"}]}], 
                    RowBox[{"\[ExponentialE]", "-", "1"}]]}], ";", 
                    RowBox[{"keyg", "=", 
                    RowBox[{"Times", "@@", 
                    RowBox[{
                    SuperscriptBox["genes", 
                    RowBox[{
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], " ", 
                    "signature"}]], "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{"compkeystep", "\[LeftDoubleBracket]", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}], 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"rates", "=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Compile`$137", "=", 
                    RowBox[{"-", "wide"}]}], ";", 
                    RowBox[{"Compile`$135", "=", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"Compile`$138", "=", 
                    FractionBox["1", "2"]}], ";", 
                    RowBox[{"Compile`$139", "=", 
                    RowBox[{"Compile`$137", " ", "Compile`$138"}]}], ";", 
                    RowBox[{"Compile`$140", "=", 
                    SuperscriptBox["\[ExponentialE]", "Compile`$139"]}], ";", 
                    
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "Aasym", "\[LeftDoubleBracket]", "Compile`$135", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"slope", " ", "Compile`$140", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cosh", "[", 
                    RowBox[{"Compile`$137", " ", 
                    RowBox[{"(", 
                    RowBox[{"ss", "-", "2.`"}], ")"}]}], "]"}], "-", "1"}], 
                    ")"}]}], ")"}]}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "Asym", "\[LeftDoubleBracket]", "Compile`$135", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"slope", " ", "Compile`$140", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cosh", "[", 
                    RowBox[{"Compile`$137", " ", 
                    RowBox[{"(", 
                    RowBox[{"ss", "-", "1.`"}], ")"}]}], "]"}], "-", "1"}], 
                    ")"}]}], ")"}]}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "Aapop", "\[LeftDoubleBracket]", "Compile`$135", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"slope", " ", "Compile`$140", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cosh", "[", 
                    RowBox[{"Compile`$137", " ", 
                    RowBox[{"(", 
                    RowBox[{"ss", "-", "0.5`"}], ")"}]}], "]"}], "-", "1"}], 
                    ")"}]}], ")"}]}], "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "krates", "\[LeftDoubleBracket]", "Compile`$135", 
                    "\[RightDoubleBracket]"}], " ", "keyg"}], "}"}]}], 
                    "]"}]}], ")"}]}], ";", 
                    RowBox[{"ratescum", "=", 
                    RowBox[{"Accumulate", "[", "rates", "]"}]}], ";", 
                    RowBox[{"rcum1", "=", 
                    RowBox[{"ratescum", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"ratesn", "=", 
                    FractionBox["rates", "rcum1"]}], ";", 
                    RowBox[{"nondriverspace", "=", 
                    RowBox[{"maxnondrivermut", "-", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"semidriverspace", "=", 
                    RowBox[{"maxsemidrivermut", "-", 
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"driverspace", "=", 
                    RowBox[{"maxdrivermut", "-", 
                    RowBox[{"Total", "[", 
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}], 
                    "]"}]}]}], ";", 
                    RowBox[{"space", "=", 
                    RowBox[{
                    "nondriverspace", "+", "semidriverspace", "+", 
                    "driverspace"}]}], ";", 
                    RowBox[{"spaceprob", "=", 
                    FractionBox[
                    RowBox[{"{", 
                    RowBox[{
                    "driverspace", ",", "semidriverspace", ",", 
                    "nondriverspace"}], "}"}], "space"]}], ";", 
                    RowBox[{"stateslist", "=", 
                    RowBox[{"Internal`Bag", "[", 
                    RowBox[{"Most", "[", 
                    RowBox[{"{", "1.`", "}"}], "]"}], "]"}]}], ";", 
                    RowBox[{"Ncslist", "=", 
                    RowBox[{"Internal`Bag", "[", 
                    RowBox[{"Most", "[", 
                    RowBox[{"{", "1.`", "}"}], "]"}], "]"}]}], ";", 
                    RowBox[{"probslist", "=", 
                    RowBox[{"Internal`Bag", "[", 
                    RowBox[{"Most", "[", 
                    RowBox[{"{", "1.`", "}"}], "]"}], "]"}]}], ";", 
                    RowBox[{"spprobslist", "=", 
                    RowBox[{"Internal`Bag", "[", 
                    RowBox[{"Most", "[", 
                    RowBox[{"{", "1.`", "}"}], "]"}], "]"}]}], ";", 
                    RowBox[{"Ntslist", "=", 
                    RowBox[{"Internal`Bag", "[", 
                    RowBox[{"Most", "[", 
                    RowBox[{"{", "1.`", "}"}], "]"}], "]"}]}], ";", 
                    RowBox[{"tslist", "=", 
                    RowBox[{"Internal`Bag", "[", 
                    RowBox[{"Most", "[", 
                    RowBox[{"{", "1.`", "}"}], "]"}], "]"}]}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", "state", ",", "2"}], "]"}], 
                    ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"Ncslist", ",", "Ncell", ",", "2"}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"probslist", ",", "ratesn", ",", "2"}], "]"}], 
                    ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"spprobslist", ",", "spaceprob", ",", "2"}], 
                    "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"Ntslist", ",", "Ntot"}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"tslist", ",", "t"}], "]"}], ";", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "<", 
                    "tmax"}], "&&", 
                    RowBox[{"ct", "<", "ctmax"}], "&&", 
                    RowBox[{"Ntot", ">", "0"}]}], ",", 
                    RowBox[{
                    RowBox[{"ct", "+=", "1"}], ";", 
                    RowBox[{"t", "=", 
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", "probc", "}"}], ",", 
                    RowBox[{
                    RowBox[{"probc", "=", 
                    RowBox[{"Accumulate", "[", "ratesn", "]"}]}], ";", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "<", 
                    RowBox[{
                    "probc", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"statetmp1", "=", 
                    RowBox[{"{", "0.`", "}"}]}], ",", 
                    RowBox[{"statetmp2", "=", 
                    RowBox[{"{", "0.`", "}"}]}], ",", 
                    RowBox[{"chooseiorm", "=", 
                    RowBox[{"{", "0", "}"}]}], ",", "\[CapitalDelta]i", ",", 
                    "\[CapitalDelta]Nc", ",", "NewNcell", ",", "CT"}], "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"statetmp2", "=", 
                    RowBox[{"1.`", " ", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "}"}], ",", 
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", "t", "}"}]}], "]"}]}]}], ";", 
                    RowBox[{"chooseiorm", "=", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"nondriverspace", "=", "0"}], ",", 
                    RowBox[{"space", "=", "0"}], ",", 
                    RowBox[{"currentmut", "=", "0"}], ",", 
                    RowBox[{"range", "=", 
                    RowBox[{"{", "0", "}"}]}], ",", 
                    RowBox[{"mut", "=", "0"}], ",", 
                    RowBox[{"gm", "=", "0"}], ",", 
                    RowBox[{"dmv", "=", "mv0"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"nondriverspace", "=", 
                    RowBox[{"maxnondrivermut", "-", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"space", "=", 
                    RowBox[{"maxsemidrivermut", "+", "maxdrivermut", "-", 
                    RowBox[{"Total", "[", 
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}], 
                    "\[RightDoubleBracket]"}], "]"}], "+", 
                    "nondriverspace"}]}], ";", 
                    RowBox[{"currentmut", "=", 
                    RowBox[{
                    RowBox[{"RandomInteger", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"1", ",", "space"}], "]"}], ",", "space"}], "}"}],
                     "]"}], "-", "nondriverspace"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"currentmut", ">", "0"}], ",", 
                    RowBox[{
                    RowBox[{"range", "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", "imax", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}], 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "#1", 
                    "\[RightDoubleBracket]"}], "<", 
                    RowBox[{
                    "Cmut", "\[LeftDoubleBracket]", "#1", 
                    "\[RightDoubleBracket]"}]}], "&"}]}], "]"}]}], ";", 
                    RowBox[{"mut", "=", 
                    RowBox[{"range", "\[LeftDoubleBracket]", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"Length", "[", "range", "]"}], ",", 
                    "currentmut"}], "]"}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{
                    RowBox[{
                    "dmv", "\[LeftDoubleBracket]", "mut", 
                    "\[RightDoubleBracket]"}], "+=", "1"}]}], ",", 
                    RowBox[{"gm", "=", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{"RandomInteger", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "maxmjump"}], "}"}], "]"}], "]"}]}]}], 
                    "]"}], ";", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Total", "[", 
                    RowBox[{"Most", "[", "dmv", "]"}], "]"}], ",", 
                    RowBox[{"Min", "[", 
                    RowBox[{"gm", ",", "nondriverspace"}], "]"}], ",", "0"}], 
                    "}"}], ",", "dmv"}], "]"}]}]}], "]"}]}], ";", 
                    RowBox[{"NewNcell", "=", "Ncell"}], ";", 
                    RowBox[{"\[CapitalDelta]i", "=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"First", "[", "chooseiorm", "]"}]}], "}"}]}], ";", 
                    RowBox[{"\[CapitalDelta]Nc", "=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], ";", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"NewNcell", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", "1", "+", "#1"}]}], 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{
                    RowBox[{"NewNcell", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", "1", "+", "#1"}]}], 
                    "\[RightDoubleBracket]"}], "+", "#2"}]}], ")"}], "&"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\[CapitalDelta]i", ",", "\[CapitalDelta]Nc"}], 
                    "}"}]}], "]"}], ";", 
                    RowBox[{"CT", "=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Compile`$252", "=", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "Ccell", "\[LeftDoubleBracket]", "Compile`$252", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    RowBox[{
                    "NewNcell", "\[LeftDoubleBracket]", "Compile`$252", 
                    "\[RightDoubleBracket]"}], ".", 
                    RowBox[{
                    "ratio", "\[LeftDoubleBracket]", "Compile`$252", 
                    "\[RightDoubleBracket]"}]}]}], "\[GreaterEqual]", "0"}]}],
                     ")"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"CT", ",", 
                    RowBox[{
                    RowBox[{"Ncell", "=", "NewNcell"}], ";", 
                    RowBox[{"statetmp1", "=", 
                    RowBox[{"statetmp2", "+", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "mv0", ",", 
                    RowBox[{"{", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}], "rcum1"]}], 
                    "}"}]}], "]"}]}]}], ";", 
                    RowBox[{"statetmp2", "=", 
                    RowBox[{"statetmp2", "+", 
                    RowBox[{"Join", "[", 
                    RowBox[{"chooseiorm", ",", 
                    RowBox[{"{", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}], "rcum1"]}], 
                    "}"}]}], "]"}]}]}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mid", "=", "1"}], ";", 
                    RowBox[{"midr", "=", "1.`"}], ";", 
                    RowBox[{"in", "=", "2"}], ";", 
                    RowBox[{"fn", "=", "Ntot"}], ";", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"midr", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"fn", "+", "1", "-", "in"}], ")"}], " ", 
                    "0.5`"}]}], ";", 
                    RowBox[{"midr", "\[GreaterEqual]", "1"}]}], ",", 
                    RowBox[{
                    RowBox[{"mid", "=", 
                    RowBox[{
                    RowBox[{"IntegerPart", "[", "midr", "]"}], "+", "in"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"mid", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ">", 
                    RowBox[{"statetmp1", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "=", 
                    RowBox[{"mid", "-", "1"}]}], ",", 
                    RowBox[{"in", "=", 
                    RowBox[{"mid", "+", "1"}]}]}], "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"midr", "\[LessEqual]", "0"}], ",", 
                    RowBox[{"fn", "+=", "1"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "<", 
                    RowBox[{"statetmp1", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "+=", "1"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"fn", ">", "2"}], ",", 
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{"fn", "-", "2"}]}], "\[RightDoubleBracket]"}], 
                    "=", 
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ";;", 
                    RowBox[{"fn", "-", "1"}]}], "\[RightDoubleBracket]"}]}]}],
                     "]"}], ";", 
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", "-", "1"}], "\[RightDoubleBracket]"}], "=", 
                    "statetmp1"}]}], ")"}]}], ")"}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mid", "=", "1"}], ";", 
                    RowBox[{"midr", "=", "1.`"}], ";", 
                    RowBox[{"in", "=", "1"}], ";", 
                    RowBox[{"fn", "=", "Ntot"}], ";", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"midr", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"fn", "+", "1", "-", "in"}], ")"}], " ", 
                    "0.5`"}]}], ";", 
                    RowBox[{"midr", "\[GreaterEqual]", "1"}]}], ",", 
                    RowBox[{
                    RowBox[{"mid", "=", 
                    RowBox[{
                    RowBox[{"IntegerPart", "[", "midr", "]"}], "+", "in"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"mid", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ">", 
                    RowBox[{"statetmp2", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "=", 
                    RowBox[{"mid", "-", "1"}]}], ",", 
                    RowBox[{"in", "=", 
                    RowBox[{"mid", "+", "1"}]}]}], "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"midr", "\[LessEqual]", "0"}], ",", 
                    RowBox[{"fn", "+=", "1"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "<", 
                    RowBox[{"statetmp2", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "+=", "1"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"fn", "+", "1"}], ";;", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", ";;", 
                    RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{
                    RowBox[{
                    "state", "\[LeftDoubleBracket]", "fn", 
                    "\[RightDoubleBracket]"}], "=", "statetmp2"}]}], ")"}]}], 
                    ")"}], ";", 
                    RowBox[{"Ntot", "+=", "1"}], ";"}], ",", 
                    RowBox[{
                    RowBox[{"statetmp1", "=", 
                    RowBox[{"statetmp2", "+", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "mv0", ",", 
                    RowBox[{"{", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}], "rcum1"]}], 
                    "}"}]}], "]"}]}]}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mid", "=", "1"}], ";", 
                    RowBox[{"midr", "=", "1.`"}], ";", 
                    RowBox[{"in", "=", "2"}], ";", 
                    RowBox[{"fn", "=", "Ntot"}], ";", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"midr", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"fn", "+", "1", "-", "in"}], ")"}], " ", 
                    "0.5`"}]}], ";", 
                    RowBox[{"midr", "\[GreaterEqual]", "1"}]}], ",", 
                    RowBox[{
                    RowBox[{"mid", "=", 
                    RowBox[{
                    RowBox[{"IntegerPart", "[", "midr", "]"}], "+", "in"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"mid", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ">", 
                    RowBox[{"statetmp1", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "=", 
                    RowBox[{"mid", "-", "1"}]}], ",", 
                    RowBox[{"in", "=", 
                    RowBox[{"mid", "+", "1"}]}]}], "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"midr", "\[LessEqual]", "0"}], ",", 
                    RowBox[{"fn", "+=", "1"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "<", 
                    RowBox[{"statetmp1", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "+=", "1"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"fn", ">", "2"}], ",", 
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{"fn", "-", "2"}]}], "\[RightDoubleBracket]"}], 
                    "=", 
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ";;", 
                    RowBox[{"fn", "-", "1"}]}], "\[RightDoubleBracket]"}]}]}],
                     "]"}], ";", 
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", "-", "1"}], "\[RightDoubleBracket]"}], "=", 
                    "statetmp1"}]}], ")"}]}], ")"}], ";"}]}], "]"}], ";"}]}], 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "<", 
                    RowBox[{
                    "probc", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"statetmp1", "=", 
                    RowBox[{"{", "0.`", "}"}]}], ",", 
                    RowBox[{"statetmp2", "=", 
                    RowBox[{"{", "0.`", "}"}]}], ",", 
                    RowBox[{"chooseiorm", "=", 
                    RowBox[{"{", "0", "}"}]}], ",", "\[CapitalDelta]i", ",", 
                    "\[CapitalDelta]Nc", ",", "NewNcell", ",", "CT"}], "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"statetmp2", "=", 
                    RowBox[{"1.`", " ", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "}"}], ",", 
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", "t", "}"}]}], "]"}]}]}], ";", 
                    RowBox[{"chooseiorm", "=", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"nondriverspace", "=", "0"}], ",", 
                    RowBox[{"space", "=", "0"}], ",", 
                    RowBox[{"currentmut", "=", "0"}], ",", 
                    RowBox[{"range", "=", 
                    RowBox[{"{", "0", "}"}]}], ",", 
                    RowBox[{"mut", "=", "0"}], ",", 
                    RowBox[{"gm", "=", "0"}], ",", 
                    RowBox[{"dmv", "=", "mv0"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"nondriverspace", "=", 
                    RowBox[{"maxnondrivermut", "-", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"space", "=", 
                    RowBox[{"maxsemidrivermut", "+", "maxdrivermut", "-", 
                    RowBox[{"Total", "[", 
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}], 
                    "\[RightDoubleBracket]"}], "]"}], "+", 
                    "nondriverspace"}]}], ";", 
                    RowBox[{"currentmut", "=", 
                    RowBox[{
                    RowBox[{"RandomInteger", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"1", ",", "space"}], "]"}], ",", "space"}], "}"}],
                     "]"}], "-", "nondriverspace"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"currentmut", ">", "0"}], ",", 
                    RowBox[{
                    RowBox[{"range", "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", "imax", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}], 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "#1", 
                    "\[RightDoubleBracket]"}], "<", 
                    RowBox[{
                    "Cmut", "\[LeftDoubleBracket]", "#1", 
                    "\[RightDoubleBracket]"}]}], "&"}]}], "]"}]}], ";", 
                    RowBox[{"mut", "=", 
                    RowBox[{"range", "\[LeftDoubleBracket]", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"Length", "[", "range", "]"}], ",", 
                    "currentmut"}], "]"}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{
                    RowBox[{
                    "dmv", "\[LeftDoubleBracket]", "mut", 
                    "\[RightDoubleBracket]"}], "+=", "1"}]}], ",", 
                    RowBox[{"gm", "=", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{"RandomInteger", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "maxmjump"}], "}"}], "]"}], "]"}]}]}], 
                    "]"}], ";", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Total", "[", 
                    RowBox[{"Most", "[", "dmv", "]"}], "]"}], ",", 
                    RowBox[{"Min", "[", 
                    RowBox[{"gm", ",", "nondriverspace"}], "]"}], ",", "0"}], 
                    "}"}], ",", "dmv"}], "]"}]}]}], "]"}]}], ";", 
                    RowBox[{"NewNcell", "=", "Ncell"}], ";", 
                    RowBox[{"\[CapitalDelta]i", "=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"First", "[", "chooseiorm", "]"}]}], "}"}]}], ";", 
                    RowBox[{"\[CapitalDelta]Nc", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "}"}]}], ";", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"NewNcell", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", "1", "+", "#1"}]}], 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{
                    RowBox[{"NewNcell", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", "1", "+", "#1"}]}], 
                    "\[RightDoubleBracket]"}], "+", "#2"}]}], ")"}], "&"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\[CapitalDelta]i", ",", "\[CapitalDelta]Nc"}], 
                    "}"}]}], "]"}], ";", 
                    RowBox[{"CT", "=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Compile`$392", "=", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "Ccell", "\[LeftDoubleBracket]", "Compile`$392", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    RowBox[{
                    "NewNcell", "\[LeftDoubleBracket]", "Compile`$392", 
                    "\[RightDoubleBracket]"}], ".", 
                    RowBox[{
                    "ratio", "\[LeftDoubleBracket]", "Compile`$392", 
                    "\[RightDoubleBracket]"}]}]}], "\[GreaterEqual]", "0"}]}],
                     ")"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"CT", ",", 
                    RowBox[{
                    RowBox[{"Ncell", "=", "NewNcell"}], ";", 
                    RowBox[{"statetmp1", "=", 
                    RowBox[{"statetmp2", "+", 
                    RowBox[{"Join", "[", 
                    RowBox[{"chooseiorm", ",", 
                    RowBox[{"{", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}], "rcum1"]}], 
                    "}"}]}], "]"}]}]}], ";", 
                    RowBox[{"statetmp2", "=", 
                    RowBox[{"statetmp2", "+", 
                    RowBox[{"Join", "[", 
                    RowBox[{"chooseiorm", ",", 
                    RowBox[{"{", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}], "rcum1"]}], 
                    "}"}]}], "]"}]}]}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mid", "=", "1"}], ";", 
                    RowBox[{"midr", "=", "1.`"}], ";", 
                    RowBox[{"in", "=", "2"}], ";", 
                    RowBox[{"fn", "=", "Ntot"}], ";", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"midr", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"fn", "+", "1", "-", "in"}], ")"}], " ", 
                    "0.5`"}]}], ";", 
                    RowBox[{"midr", "\[GreaterEqual]", "1"}]}], ",", 
                    RowBox[{
                    RowBox[{"mid", "=", 
                    RowBox[{
                    RowBox[{"IntegerPart", "[", "midr", "]"}], "+", "in"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"mid", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ">", 
                    RowBox[{"statetmp1", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "=", 
                    RowBox[{"mid", "-", "1"}]}], ",", 
                    RowBox[{"in", "=", 
                    RowBox[{"mid", "+", "1"}]}]}], "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"midr", "\[LessEqual]", "0"}], ",", 
                    RowBox[{"fn", "+=", "1"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "<", 
                    RowBox[{"statetmp1", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "+=", "1"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"fn", ">", "2"}], ",", 
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{"fn", "-", "2"}]}], "\[RightDoubleBracket]"}], 
                    "=", 
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ";;", 
                    RowBox[{"fn", "-", "1"}]}], "\[RightDoubleBracket]"}]}]}],
                     "]"}], ";", 
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", "-", "1"}], "\[RightDoubleBracket]"}], "=", 
                    "statetmp1"}]}], ")"}]}], ")"}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mid", "=", "1"}], ";", 
                    RowBox[{"midr", "=", "1.`"}], ";", 
                    RowBox[{"in", "=", "1"}], ";", 
                    RowBox[{"fn", "=", "Ntot"}], ";", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"midr", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"fn", "+", "1", "-", "in"}], ")"}], " ", 
                    "0.5`"}]}], ";", 
                    RowBox[{"midr", "\[GreaterEqual]", "1"}]}], ",", 
                    RowBox[{
                    RowBox[{"mid", "=", 
                    RowBox[{
                    RowBox[{"IntegerPart", "[", "midr", "]"}], "+", "in"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"mid", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ">", 
                    RowBox[{"statetmp2", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "=", 
                    RowBox[{"mid", "-", "1"}]}], ",", 
                    RowBox[{"in", "=", 
                    RowBox[{"mid", "+", "1"}]}]}], "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"midr", "\[LessEqual]", "0"}], ",", 
                    RowBox[{"fn", "+=", "1"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "<", 
                    RowBox[{"statetmp2", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "+=", "1"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"fn", "+", "1"}], ";;", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", ";;", 
                    RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{
                    RowBox[{
                    "state", "\[LeftDoubleBracket]", "fn", 
                    "\[RightDoubleBracket]"}], "=", "statetmp2"}]}], ")"}]}], 
                    ")"}], ";", 
                    RowBox[{"Ntot", "+=", "1"}], ";"}], ",", 
                    RowBox[{
                    RowBox[{"statetmp1", "=", 
                    RowBox[{"statetmp2", "+", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "mv0", ",", 
                    RowBox[{"{", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}], "rcum1"]}], 
                    "}"}]}], "]"}]}]}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mid", "=", "1"}], ";", 
                    RowBox[{"midr", "=", "1.`"}], ";", 
                    RowBox[{"in", "=", "2"}], ";", 
                    RowBox[{"fn", "=", "Ntot"}], ";", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"midr", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"fn", "+", "1", "-", "in"}], ")"}], " ", 
                    "0.5`"}]}], ";", 
                    RowBox[{"midr", "\[GreaterEqual]", "1"}]}], ",", 
                    RowBox[{
                    RowBox[{"mid", "=", 
                    RowBox[{
                    RowBox[{"IntegerPart", "[", "midr", "]"}], "+", "in"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"mid", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ">", 
                    RowBox[{"statetmp1", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "=", 
                    RowBox[{"mid", "-", "1"}]}], ",", 
                    RowBox[{"in", "=", 
                    RowBox[{"mid", "+", "1"}]}]}], "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"midr", "\[LessEqual]", "0"}], ",", 
                    RowBox[{"fn", "+=", "1"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "<", 
                    RowBox[{"statetmp1", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "+=", "1"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"fn", ">", "2"}], ",", 
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{"fn", "-", "2"}]}], "\[RightDoubleBracket]"}], 
                    "=", 
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ";;", 
                    RowBox[{"fn", "-", "1"}]}], "\[RightDoubleBracket]"}]}]}],
                     "]"}], ";", 
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", "-", "1"}], "\[RightDoubleBracket]"}], "=", 
                    "statetmp1"}]}], ")"}]}], ")"}], ";"}]}], "]"}], ";"}]}], 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "<", 
                    RowBox[{
                    "probc", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[CapitalDelta]i", ",", "\[CapitalDelta]Nc"}], 
                    "}"}], ",", 
                    RowBox[{
                    RowBox[{"\[CapitalDelta]i", "=", 
                    RowBox[{"{", "0", "}"}]}], ";", 
                    RowBox[{"\[CapitalDelta]Nc", "=", 
                    RowBox[{"{", 
                    RowBox[{"-", "1"}], "}"}]}], ";", 
                    RowBox[{
                    RowBox[{"Ncell", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", "1", "+", 
                    RowBox[{
                    "\[CapitalDelta]i", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}], "\[RightDoubleBracket]"}], 
                    "=", 
                    RowBox[{
                    RowBox[{"Ncell", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", "1", "+", 
                    RowBox[{
                    "\[CapitalDelta]i", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}], "\[RightDoubleBracket]"}], 
                    "+", 
                    RowBox[{
                    "\[CapitalDelta]Nc", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ";;", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}]}], ";"}], 
                    ")"}], ";", 
                    RowBox[{"Ntot", "-=", "1"}], ";"}]}], "]"}], ",", "True", 
                    ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"statetmp1", "=", 
                    RowBox[{"{", "0.`", "}"}]}], ",", 
                    RowBox[{"statetmp2", "=", 
                    RowBox[{"{", "0.`", "}"}]}], ",", "chooseiorm", ",", 
                    "\[CapitalDelta]i", ",", "\[CapitalDelta]Nc", ",", 
                    "\[CapitalDelta]k", ",", "NewNcell", ",", "CT"}], "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"CT", "=", "False"}], ";", 
                    RowBox[{"statetmp1", "=", 
                    RowBox[{"1.`", " ", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "}"}], ",", 
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", "t", "}"}]}], "]"}]}]}], ";", 
                    RowBox[{"NewNcell", "=", "Ncell"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "<", "kmax"}], ",", 
                    RowBox[{
                    RowBox[{"\[CapitalDelta]i", "=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], ";", 
                    RowBox[{"\[CapitalDelta]Nc", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ";", 
                    RowBox[{"\[CapitalDelta]k", "=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], ";", 
                    RowBox[{
                    RowBox[{"NewNcell", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "+", 
                    RowBox[{
                    "\[CapitalDelta]k", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", "1", "+", 
                    RowBox[{
                    "\[CapitalDelta]i", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}], "\[RightDoubleBracket]"}], 
                    "=", 
                    RowBox[{
                    RowBox[{"NewNcell", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "+", 
                    RowBox[{
                    "\[CapitalDelta]k", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", "1", "+", 
                    RowBox[{
                    "\[CapitalDelta]i", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}], "\[RightDoubleBracket]"}], 
                    "+", 
                    RowBox[{
                    "\[CapitalDelta]Nc", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{
                    RowBox[{"NewNcell", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "+", 
                    RowBox[{
                    "\[CapitalDelta]k", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", "1", "+", 
                    RowBox[{
                    "\[CapitalDelta]i", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "\[RightDoubleBracket]"}], 
                    "=", 
                    RowBox[{
                    RowBox[{"NewNcell", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "+", 
                    RowBox[{
                    "\[CapitalDelta]k", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", "1", "+", 
                    RowBox[{
                    "\[CapitalDelta]i", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "\[RightDoubleBracket]"}], 
                    "+", 
                    RowBox[{
                    "\[CapitalDelta]Nc", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"CT", "=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Compile`$522", "=", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"Compile`$523", "=", 
                    RowBox[{"Last", "[", "\[CapitalDelta]k", "]"}]}], ";", 
                    RowBox[{"Compile`$524", "=", 
                    RowBox[{"Compile`$522", "+", "Compile`$523"}]}], ";", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "Ccell", "\[LeftDoubleBracket]", "Compile`$524", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    RowBox[{
                    "NewNcell", "\[LeftDoubleBracket]", "Compile`$524", 
                    "\[RightDoubleBracket]"}], ".", 
                    RowBox[{
                    "ratio", "\[LeftDoubleBracket]", "Compile`$524", 
                    "\[RightDoubleBracket]"}]}]}], "\[GreaterEqual]", "0"}]}],
                     ")"}]}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"CT", ",", 
                    RowBox[{
                    RowBox[{"Ncell", "=", "NewNcell"}], ";", 
                    RowBox[{"statetmp1", "=", 
                    RowBox[{"statetmp1", "+", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", "mv0", ",", 
                    RowBox[{"{", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}], "rcum1"]}], 
                    "}"}]}], "]"}]}]}]}], ",", 
                    RowBox[{"statetmp1", "=", 
                    RowBox[{"statetmp1", "+", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "mv0", ",", 
                    RowBox[{"{", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}], "rcum1"]}], 
                    "}"}]}], "]"}]}]}]}], "]"}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mid", "=", "1"}], ";", 
                    RowBox[{"midr", "=", "1.`"}], ";", 
                    RowBox[{"in", "=", "2"}], ";", 
                    RowBox[{"fn", "=", "Ntot"}], ";", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"midr", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"fn", "+", "1", "-", "in"}], ")"}], " ", 
                    "0.5`"}]}], ";", 
                    RowBox[{"midr", "\[GreaterEqual]", "1"}]}], ",", 
                    RowBox[{
                    RowBox[{"mid", "=", 
                    RowBox[{
                    RowBox[{"IntegerPart", "[", "midr", "]"}], "+", "in"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"mid", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ">", 
                    RowBox[{"statetmp1", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "=", 
                    RowBox[{"mid", "-", "1"}]}], ",", 
                    RowBox[{"in", "=", 
                    RowBox[{"mid", "+", "1"}]}]}], "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"midr", "\[LessEqual]", "0"}], ",", 
                    RowBox[{"fn", "+=", "1"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "<", 
                    RowBox[{"statetmp1", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "+=", "1"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"fn", ">", "2"}], ",", 
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{"fn", "-", "2"}]}], "\[RightDoubleBracket]"}], 
                    "=", 
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ";;", 
                    RowBox[{"fn", "-", "1"}]}], "\[RightDoubleBracket]"}]}]}],
                     "]"}], ";", 
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", "-", "1"}], "\[RightDoubleBracket]"}], "=", 
                    "statetmp1"}]}], ")"}]}], ")"}], ";"}]}], "]"}]}], 
                    "]"}]}]}], "]"}], ";", 
                    RowBox[{"imkmv", "=", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", 
                    RowBox[{"1", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}]}], 
                    "\[RightDoubleBracket]"}], "]"}]}], ";", 
                    RowBox[{"key", "=", 
                    RowBox[{"Plus", "@@", 
                    RowBox[{
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}], 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{"compkeystep", "\[LeftDoubleBracket]", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}], 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"ss", "=", 
                    FractionBox[
                    RowBox[{"2", " ", "\[ExponentialE]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"10.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"key", "+", "1"}], ")"}]}], 
                    RowBox[{"10", " ", 
                    RowBox[{"Exp", "[", 
                    FractionBox[
                    SuperscriptBox[
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "0.5`"], "2"], "]"}]}]]}], 
                    "]"}]}], "]"}], "-", 
                    FractionBox["1", "\[ExponentialE]"]}], ")"}]}], 
                    RowBox[{"\[ExponentialE]", "-", "1"}]]}], ";", 
                    RowBox[{"keyg", "=", 
                    RowBox[{"Times", "@@", 
                    RowBox[{
                    SuperscriptBox["genes", 
                    RowBox[{
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], " ", 
                    "signature"}]], "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{"compkeystep", "\[LeftDoubleBracket]", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}], 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"rates", "=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Compile`$611", "=", 
                    RowBox[{"-", "wide"}]}], ";", 
                    RowBox[{"Compile`$609", "=", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"Compile`$612", "=", 
                    FractionBox["1", "2"]}], ";", 
                    RowBox[{"Compile`$613", "=", 
                    RowBox[{"Compile`$611", " ", "Compile`$612"}]}], ";", 
                    RowBox[{"Compile`$614", "=", 
                    SuperscriptBox["\[ExponentialE]", "Compile`$613"]}], ";", 
                    
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "Aasym", "\[LeftDoubleBracket]", "Compile`$609", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"slope", " ", "Compile`$614", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cosh", "[", 
                    RowBox[{"Compile`$611", " ", 
                    RowBox[{"(", 
                    RowBox[{"ss", "-", "2.`"}], ")"}]}], "]"}], "-", "1"}], 
                    ")"}]}], ")"}]}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "Asym", "\[LeftDoubleBracket]", "Compile`$609", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"slope", " ", "Compile`$614", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cosh", "[", 
                    RowBox[{"Compile`$611", " ", 
                    RowBox[{"(", 
                    RowBox[{"ss", "-", "1.`"}], ")"}]}], "]"}], "-", "1"}], 
                    ")"}]}], ")"}]}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "Aapop", "\[LeftDoubleBracket]", "Compile`$609", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"slope", " ", "Compile`$614", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cosh", "[", 
                    RowBox[{"Compile`$611", " ", 
                    RowBox[{"(", 
                    RowBox[{"ss", "-", "0.5`"}], ")"}]}], "]"}], "-", "1"}], 
                    ")"}]}], ")"}]}], "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "krates", "\[LeftDoubleBracket]", "Compile`$609", 
                    "\[RightDoubleBracket]"}], " ", "keyg"}], "}"}]}], 
                    "]"}]}], ")"}]}], ";", 
                    RowBox[{"ratescum", "=", 
                    RowBox[{"Accumulate", "[", "rates", "]"}]}], ";", 
                    RowBox[{"rcum1", "=", 
                    RowBox[{"ratescum", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"ratesn", "=", 
                    FractionBox["rates", "rcum1"]}], ";", 
                    RowBox[{"nondriverspace", "=", 
                    RowBox[{"maxnondrivermut", "-", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"semidriverspace", "=", 
                    RowBox[{"maxsemidrivermut", "-", 
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"driverspace", "=", 
                    RowBox[{"maxdrivermut", "-", 
                    RowBox[{"Total", "[", 
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}], 
                    "]"}]}]}], ";", 
                    RowBox[{"space", "=", 
                    RowBox[{
                    "nondriverspace", "+", "semidriverspace", "+", 
                    "driverspace"}]}], ";", 
                    RowBox[{"spaceprob", "=", 
                    FractionBox[
                    RowBox[{"{", 
                    RowBox[{
                    "driverspace", ",", "semidriverspace", ",", 
                    "nondriverspace"}], "}"}], "space"]}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", "state", ",", "2"}], "]"}], 
                    ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"Ncslist", ",", "Ncell", ",", "2"}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"probslist", ",", "ratesn", ",", "2"}], "]"}], 
                    ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"spprobslist", ",", "spaceprob", ",", "2"}], 
                    "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"Ntslist", ",", "Ntot"}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"tslist", ",", "t"}], "]"}], ";"}]}], "]"}], ";", 
                    
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Internal`BagPart", "[", 
                    RowBox[{"Ncslist", ",", "All"}], "]"}], ",", "1"}], "]"}],
                     ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Internal`BagPart", "[", 
                    RowBox[{"probslist", ",", "All"}], "]"}], ",", "1"}], 
                    "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Internal`BagPart", "[", 
                    RowBox[{"spprobslist", ",", "All"}], "]"}], ",", "1"}], 
                    "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Internal`BagPart", "[", 
                    RowBox[{"Ntslist", ",", "All"}], "]"}], ",", "1"}], "]"}],
                     ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Internal`BagPart", "[", 
                    RowBox[{"tslist", ",", "All"}], "]"}], ",", "1"}], "]"}], 
                    ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", "Nmax"}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", "imax"}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"ct", "+", "1"}]}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Dimensions", "[", "state", "]"}], ",", "1"}], 
                    "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"ct", "+", "1"}]}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Dimensions", "[", "Ncell", "]"}], ",", "1"}], 
                    "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"ct", "+", "1"}]}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Dimensions", "[", "ratesn", "]"}], ",", "1"}], 
                    "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"ct", "+", "1"}]}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Dimensions", "[", "spaceprob", "]"}], ",", "1"}],
                     "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"ct", "+", "1"}]}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"ct", "+", "1"}]}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Dimensions", "[", 
                    RowBox[{"{", "state", "}"}], "]"}], "]"}]}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Dimensions", "[", 
                    RowBox[{"{", "Ncell", "}"}], "]"}], "]"}]}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Dimensions", "[", 
                    RowBox[{"{", "ratesn", "}"}], "]"}], "]"}]}], "]"}], ";", 
                    
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Dimensions", "[", 
                    RowBox[{"{", "spaceprob", "}"}], "]"}], "]"}]}], "]"}], 
                    ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Dimensions", "[", 
                    RowBox[{"{", "Ntot", "}"}], "]"}], "]"}]}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Dimensions", "[", 
                    RowBox[{"{", "t", "}"}], "]"}], "]"}]}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", "0"}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", "0"}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", "8"}], "]"}], ";", 
                    RowBox[{"Internal`BagPart", "[", 
                    RowBox[{"stateslist", ",", "All"}], "]"}]}]}], "]"}]}], 
                "]"}],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  CompiledFunction[{10, 10.1, 5464}, {
    Blank[Integer], 
    Blank[Integer], 
    Blank[Integer], 
    Blank[Integer], 
    Blank[Integer], 
    Blank[Integer], 
    Blank[Integer], {
     Blank[Integer], 1}, {
     Blank[Integer], 1}, {
     Blank[Real], 1}, {
     Blank[Real], 1}, 
    Blank[Integer], 
    Blank[Integer], 
    Blank[Integer], 
    Blank[Integer], {
     Blank[Real], 1}, {
     Blank[Real], 1}, {
     Blank[Real], 1}, 
    Blank[Real], 
    Blank[Real], 
    Blank[Real], 
    Blank[Real], {
     Blank[Real], 2}}, {{2, 0, 0}, {2, 0, 1}, {2, 0, 2}, {2, 0, 3}, {2, 0, 
   4}, {2, 0, 5}, {2, 0, 6}, {2, 1, 0}, {2, 1, 1}, {3, 1, 2}, {3, 1, 3}, {2, 
   0, 7}, {2, 0, 8}, {2, 0, 9}, {2, 0, 10}, {3, 1, 4}, {3, 1, 5}, {3, 1, 6}, {
   3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 3}, {3, 2, 7}, {3, 1, 
   46}}, {{{0}, {2, 1, 15}}, {{1, -2, 1}, {2, 1, 
    43}}, {{-1, 1}, {2, 1, 45}}, {False, {1, 0, 0}}, {-10., {3, 0, 9}}, {{
    2, -1, 1}, {2, 1, 44}}, {0, {2, 0, 11}}, {{0.}, {3, 1, 10}}, {
    1., {3, 0, 21}}, {{4, -2, 1}, {2, 1, 30}}, {{1.}, {3, 1, 13}}, {{0, 0, 
    1}, {2, 1, 26}}, {{0, 0}, {2, 1, 16}}, {{0, 0, 0, 0, 0}, {2, 1, 14}}, {
    10, {2, 0, 25}}, {{{0., 0.}}, {3, 2, 11}}, {
    4, {2, 0, 27}}, {{-1}, {2, 1, 42}}, {{10}, {2, 1, 17}}, {
    8, {2, 0, 26}}, {-1., {3, 0, 17}}, {{1}, {2, 1, 9}}, {-0.5, {3, 0, 
     19}}, {{0, 0, 0}, {2, 1, 12}}, {-2, {2, 0, 49}}, {{{0}}, {2, 2, 8}}, {
    2, {2, 0, 21}}, {-1, {2, 0, 12}}, {-2., {3, 0, 14}}, {1, {2, 0, 15}}, {{
    4, -1, 1}, {2, 1, 29}}, {3, {2, 0, 18}}, {2.718281828459045, {3, 0, 6}}, {
    0.5, {3, 0, 10}}, {
    0., {3, 0, 4}}, {{-1, 2}, {2, 1, 41}}, {{0, 1}, {2, 1, 37}}, {
    0.1, {3, 0, 5}}}, {8, 61, 43, 0, 
   56}, {{6, 11, 40}, {42, "CopyTensor", 2, 2, 8, 2, 2, 32}, {
    42, "CopyTensor", 2, 1, 9, 2, 1, 24}, {
    42, "CopyTensor", 3, 1, 10, 3, 1, 21}, {
    42, "CopyTensor", 3, 2, 11, 3, 2, 34}, {
    42, "CopyTensor", 2, 1, 12, 2, 1, 35}, {7, 4, 7}, {6, 11, 24}, {
    42, "CopyTensor", 3, 1, 13, 3, 1, 33}, {
    42, "CopyTensor", 2, 1, 15, 2, 1, 23}, {
    42, "CopyTensor", 2, 1, 15, 2, 1, 22}, {6, 11, 16}, {6, 11, 44}, {6, 11, 
    14}, {7, 4, 20}, {12, 4, 12, 34}, {6, 4, 42}, {6, 11, 39}, {35, 42, 2, 
    31}, {6, 11, 47}, {3, 2}, {36, 39, 11, 2, 31}, {4, 47, 42, -1}, {
    42, "CopyTensor", 2, 1, 31, 2, 1, 23}, {12, 4, 18, 47}, {6, 11, 41}, {35, 
    47, 2, 31}, {6, 11, 52}, {3, 2}, {36, 41, 11, 2, 31}, {4, 52, 47, -1}, {6,
     34, 39}, {6, 11, 42}, {35, 39, 2, 27}, {6, 11, 41}, {3, 2}, {36, 42, 15, 
    2, 27}, {4, 41, 39, -1}, {34, 1, 1, 5, 2, 40}, {
    42, "Join", 2, 1, 27, 2, 1, 40, 2, 1, 20}, {40, 60, 3, 1, 3, 3, 1, 27}, {
    45, 2, 27, 40}, {12, 3, 12, 41}, {6, 11, 47}, {35, 41, 2, 27}, {6, 11, 
    52}, {3, 2}, {36, 47, 15, 2, 27}, {4, 52, 41, -1}, {
    42, "Join", 2, 1, 27, 2, 1, 15, 2, 1, 28}, {41, 259, 3, 0, 0, 2, 1, 28, 3,
     1, 27}, {42, "CopyTensor", 3, 1, 27, 3, 1, 33}, {6, 0, 42}, {18, 42, 
    39}, {18, 2, 47}, {12, 1, 39, 47, 41}, {6, 41, 40}, {34, 2, 1, 5, 42, 11, 
    11, 11, 11, 2, 27}, {12, 3, 12, 39}, {6, 12, 47}, {35, 39, 47, 2, 28}, {6,
     11, 52}, {3, 2}, {36, 47, 23, 0, 28}, {4, 52, 39, -1}, {
    42, "Join", 2, 2, 27, 2, 2, 28, 2, 2, 38}, {
    42, "CopyTensor", 2, 2, 38, 2, 2, 32}, {
    42, "CopyTensor", 2, 1, 23, 2, 1, 38}, {7, 4, 36}, {
    42, "CopyTensor", 3, 1, 10, 3, 1, 28}, {10, 12, 38}, {13, 6, 38, 27}, {40,
     60, 3, 0, 27, 3, 0, 38}, {16, 6, 38, 27}, {38, 1, 0, 15, 0, 31}, {34, 1, 
    3, 15, 31, 15, 2, 18}, {38, 38, 3, 18, 1, 49}, {6, 11, 31}, {33, 49, 
    47}, {6, 11, 32}, {3, 4}, {37, 49, 32, 2, 39}, {12, 31, 39, 36}, {6, 36, 
    31}, {4, 32, 47, -3}, {12, 31, 15, 31}, {41, 263, 2, 0, 11, 3, 0, 10, 3, 
    0, 38}, {10, 21, 22}, {40, 60, 3, 0, 22, 3, 0, 12}, {16, 38, 12, 38}, {40,
     34, 3, 0, 38, 3, 0, 12}, {10, 25, 38}, {16, 38, 12, 38}, {40, 60, 3, 0, 
    38, 3, 0, 12}, {10, 31, 38}, {16, 38, 12, 38}, {16, 9, 38, 12}, {40, 34, 
    3, 0, 12, 3, 0, 38}, {19, 38, 12}, {40, 34, 3, 0, 12, 3, 0, 38}, {10, 12, 
    12}, {40, 34, 3, 0, 12, 3, 0, 22}, {19, 22, 12}, {13, 38, 12, 38}, {10, 
    21, 12}, {16, 12, 27, 38, 12}, {7, 12, 36}, {19, 2, 12}, {7, 12, 32}, {10,
     21, 12}, {40, 60, 3, 0, 12, 3, 0, 27}, {7, 27, 33}, {16, 32, 33, 27}, {7,
     27, 34}, {40, 34, 3, 0, 34, 3, 0, 27}, {7, 27, 35}, {38, 4, 0, 15, 0, 
    27}, {13, 36, 14, 12}, {16, 32, 12, 38}, {40, 10, 3, 0, 38, 3, 0, 12}, {
    10, 12, 38}, {13, 12, 38, 12}, {16, 3, 35, 12, 38}, {19, 38, 12}, {40, 34,
     3, 0, 12, 3, 0, 38}, {16, 27, 38, 27}, {38, 5, 0, 15, 0, 38}, {13, 36, 
    17, 12}, {16, 32, 12, 22}, {40, 10, 3, 0, 22, 3, 0, 12}, {10, 12, 22}, {
    13, 12, 22, 12}, {16, 3, 35, 12, 22}, {19, 22, 12}, {40, 34, 3, 0, 12, 3, 
    0, 22}, {16, 38, 22, 38}, {38, 6, 0, 15, 0, 22}, {13, 36, 19, 12}, {16, 
    32, 12, 30}, {40, 10, 3, 0, 30, 3, 0, 12}, {10, 12, 30}, {13, 12, 30, 
    12}, {16, 3, 35, 12, 30}, {19, 30, 12}, {40, 34, 3, 0, 12, 3, 0, 30}, {16,
     22, 30, 22}, {34, 1, 3, 27, 38, 22, 3, 27}, {38, 33, 0, 15, 0, 27}, {45, 
    38, 0, 39}, {41, 263, 3, 1, 40, 2, 1, 39, 3, 1, 49}, {38, 1, 0, 15, 0, 
    52}, {34, 1, 3, 15, 52, 15, 2, 39}, {38, 49, 3, 39, 1, 18}, {7, 21, 22}, {
    33, 18, 32}, {6, 11, 41}, {3, 4}, {37, 18, 41, 3, 38}, {16, 22, 38, 30}, {
    7, 30, 22}, {4, 41, 32, -3}, {16, 27, 22, 27}, {34, 1, 1, 27, 3, 25}, {
    42, "Join", 3, 1, 27, 3, 1, 25, 3, 1, 18}, {
    42, "Accumulate", 3, 1, 18, 2, 0, 26, 3, 1, 27}, {
    42, "CopyTensor", 3, 1, 27, 3, 1, 28}, {12, 1, 21, 52}, {6, 12, 31}, {35, 
    52, 31, 3, 27}, {6, 11, 32}, {3, 4}, {
    42, "Join", 2, 1, 26, 2, 1, 23, 2, 1, 25}, {41, 259, 3, 0, 21, 2, 1, 25, 
    3, 1, 49}, {36, 31, 49, 0, 27}, {4, 32, 52, -3}, {12, 1, 21, 41}, {34, 1, 
    2, 41, 15, 2, 49}, {10, 11, 27}, {10, 15, 22}, {
    42, "RandomReals", 3, 0, 27, 3, 0, 22, 2, 1, 49, 3, 2, 25}, {40, 35, 3, 2,
     25, 3, 2, 18}, {40, 43, 3, 2, 18, 3, 2, 25}, {38, 28, 0, 12, 0, 27}, {40,
     60, 3, 0, 27, 3, 0, 22}, {41, 259, 3, 0, 22, 3, 2, 25, 3, 2, 18}, {41, 
    257, 3, 0, 7, 3, 2, 18, 3, 2, 25}, {
    42, "JoinAtLevel", 3, 2, 27, 3, 2, 25, 2, 0, 21, 3, 2, 18}, {
    42, "CopyTensor", 3, 2, 18, 3, 2, 34}, {18, 42, 41}, {6, 41, 37}, {18, 40,
     41}, {6, 41, 19}, {12, 1, 37, 19, 41}, {6, 41, 30}, {10, 21, 36}, {40, 
    60, 3, 0, 36, 3, 0, 22}, {7, 22, 23}, {10, 30, 22}, {16, 22, 23, 22}, {7, 
    22, 13}, {40, 50, 3, 0, 13, 2, 0, 41}, {6, 41, 23}, {
    42, "MaxI", 2, 0, 11, 2, 0, 23, 2, 0, 41}, {6, 41, 33}, {12, 42, 40, 
    41}, {34, 1, 3, 41, 33, 33, 2, 18}, {
    42, "CopyTensor", 2, 1, 18, 2, 1, 35}, {
    42, "Transpose", 3, 2, 34, 3, 2, 18}, {38, 18, 0, 12, 1, 46}, {
    42, "CopyTensor", 3, 1, 46, 3, 1, 21}, {
    42, "Ordering", 3, 1, 21, 2, 1, 46}, {
    42, "CopyTensor", 2, 1, 46, 2, 1, 24}, {38, 34, 1, 24, 2, 46}, {
    42, "CopyTensor", 3, 2, 46, 3, 2, 34}, {12, 27, 4, 12, 41}, {34, 1, 3, 15,
     41, 15, 2, 46}, {38, 34, 0, 15, 3, 46, 1, 18}, {40, 53, 3, 1, 18, 2, 1, 
    46}, {42, "CopyTensor", 2, 1, 46, 2, 1, 22}, {38, 22, 3, 29, 1, 38}, {38, 
    22, 0, 18, 0, 32}, {38, 1, 0, 32, 0, 41}, {34, 1, 3, 15, 41, 15, 2, 46}, {
    38, 38, 3, 46, 1, 18}, {6, 11, 41}, {33, 18, 52}, {6, 11, 36}, {3, 4}, {
    37, 18, 36, 2, 47}, {12, 41, 47, 39}, {6, 39, 41}, {4, 36, 52, -3}, {10, 
    12, 22}, {13, 6, 22, 36}, {40, 60, 3, 0, 36, 3, 0, 22}, {16, 6, 22, 36}, {
    12, 41, 15, 36}, {38, 22, 0, 21, 0, 32}, {41, 263, 2, 0, 32, 3, 0, 10, 3, 
    0, 22}, {10, 21, 27}, {40, 60, 3, 0, 27, 3, 0, 30}, {16, 22, 30, 22}, {40,
     34, 3, 0, 22, 3, 0, 30}, {10, 25, 22}, {16, 22, 30, 22}, {40, 60, 3, 0, 
    22, 3, 0, 30}, {10, 36, 22}, {16, 22, 30, 22}, {16, 9, 22, 30}, {40, 34, 
    3, 0, 30, 3, 0, 22}, {19, 22, 30}, {40, 34, 3, 0, 30, 3, 0, 22}, {10, 12, 
    30}, {40, 34, 3, 0, 30, 3, 0, 27}, {19, 27, 30}, {13, 22, 30, 22}, {10, 
    21, 30}, {16, 30, 36, 22, 30}, {38, 22, 3, 29, 1, 46}, {45, 46, 0, 46}, {
    41, 263, 3, 1, 40, 2, 1, 46, 3, 1, 28}, {38, 22, 0, 18, 0, 52}, {38, 1, 0,
     52, 0, 36}, {34, 1, 3, 15, 36, 15, 2, 46}, {38, 28, 3, 46, 1, 18}, {7, 
    21, 22}, {33, 18, 32}, {6, 11, 31}, {3, 4}, {37, 18, 31, 3, 36}, {16, 22, 
    36, 27}, {7, 27, 22}, {4, 31, 32, -3}, {19, 2, 27}, {7, 27, 24}, {38, 22, 
    0, 18, 0, 31}, {6, 31, 45}, {10, 21, 27}, {40, 60, 3, 0, 27, 3, 0, 36}, {
    7, 36, 11}, {16, 24, 11, 36}, {7, 36, 18}, {40, 34, 3, 0, 18, 3, 0, 36}, {
    7, 36, 8}, {38, 4, 0, 45, 0, 36}, {13, 30, 14, 27}, {16, 24, 27, 38}, {40,
     10, 3, 0, 38, 3, 0, 27}, {10, 12, 38}, {13, 27, 38, 27}, {16, 3, 8, 27, 
    38}, {19, 38, 27}, {40, 34, 3, 0, 27, 3, 0, 38}, {16, 36, 38, 36}, {38, 5,
     0, 45, 0, 38}, {13, 30, 17, 27}, {16, 24, 27, 12}, {40, 10, 3, 0, 12, 3, 
    0, 27}, {10, 12, 12}, {13, 27, 12, 27}, {16, 3, 8, 27, 12}, {19, 12, 
    27}, {40, 34, 3, 0, 27, 3, 0, 12}, {16, 38, 12, 38}, {38, 6, 0, 45, 0, 
    12}, {13, 30, 19, 27}, {16, 24, 27, 16}, {40, 10, 3, 0, 16, 3, 0, 27}, {
    10, 12, 16}, {13, 27, 16, 27}, {16, 3, 8, 27, 16}, {19, 16, 27}, {40, 34, 
    3, 0, 27, 3, 0, 16}, {16, 12, 16, 12}, {34, 1, 3, 36, 38, 12, 3, 38}, {38,
     33, 0, 45, 0, 36}, {16, 36, 22, 36}, {34, 1, 1, 36, 3, 18}, {
    42, "Join", 3, 1, 38, 3, 1, 18, 3, 1, 28}, {
    42, "Accumulate", 3, 1, 28, 2, 0, 26, 3, 1, 38}, {38, 38, 0, 12, 0, 36}, {
    40, 60, 3, 0, 36, 3, 0, 38}, {41, 259, 3, 0, 38, 3, 1, 28, 3, 1, 18}, {38,
     22, 0, 21, 0, 31}, {18, 31, 36}, {12, 6, 36, 31}, {38, 22, 0, 12, 0, 
    36}, {18, 36, 52}, {12, 5, 52, 36}, {38, 22, 3, 30, 1, 46}, {
    42, "TotalAll", 2, 1, 46, 2, 0, 26, 2, 0, 52}, {18, 52, 32}, {12, 34, 32, 
    52}, {12, 31, 36, 52, 32}, {34, 1, 3, 52, 36, 31, 2, 46}, {10, 32, 38}, {
    40, 60, 3, 0, 38, 3, 0, 12}, {41, 259, 3, 0, 12, 2, 1, 46, 3, 1, 27}, {
    42, "Drop", 3, 1, 13, 2, 0, 11, 2, 0, 12, 3, 1, 46}, {
    42, "Bag", 2, 0, 18, 3, 0, 12}, {
    42, "StuffBag", 3, 0, 12, 3, 1, 46, 6, 0, 17}, {
    42, "Drop", 3, 1, 13, 2, 0, 11, 2, 0, 12, 3, 1, 46}, {
    42, "Bag", 2, 0, 18, 3, 0, 38}, {
    42, "StuffBag", 3, 0, 38, 3, 1, 46, 6, 0, 17}, {
    42, "Drop", 3, 1, 13, 2, 0, 11, 2, 0, 12, 3, 1, 46}, {
    42, "Bag", 2, 0, 18, 3, 0, 16}, {
    42, "StuffBag", 3, 0, 16, 3, 1, 46, 6, 0, 17}, {
    42, "Drop", 3, 1, 13, 2, 0, 11, 2, 0, 12, 3, 1, 46}, {
    42, "Bag", 2, 0, 18, 3, 0, 27}, {
    42, "StuffBag", 3, 0, 27, 3, 1, 46, 6, 0, 17}, {
    42, "Drop", 3, 1, 13, 2, 0, 11, 2, 0, 12, 3, 1, 46}, {
    42, "Bag", 2, 0, 18, 3, 0, 41}, {
    42, "StuffBag", 3, 0, 41, 3, 1, 46, 6, 0, 17}, {
    42, "Drop", 3, 1, 13, 2, 0, 11, 2, 0, 12, 3, 1, 46}, {
    42, "Bag", 2, 0, 18, 3, 0, 15}, {
    42, "StuffBag", 3, 0, 15, 3, 1, 46, 6, 0, 17}, {
    42, "StuffBag", 3, 0, 12, 3, 2, 34, 6, 0, 17}, {
    42, "CoerceTensor", 2, 0, 18, 2, 2, 32, 3, 2, 46}, {
    42, "StuffBag", 3, 0, 38, 3, 2, 46, 6, 0, 17}, {
    42, "StuffBag", 3, 0, 16, 3, 1, 18, 6, 0, 17}, {
    42, "StuffBag", 3, 0, 27, 3, 1, 27, 6, 0, 17}, {10, 42, 37}, {
    42, "StuffBagScalar", 3, 0, 41, 3, 0, 37, 6, 0, 17}, {
    42, "StuffBagScalar", 3, 0, 15, 3, 0, 7, 6, 0, 17}, {38, 34, 0, 15, 0, 12,
     0, 37}, {10, 8, 40}, {27, 3, 4, 37, 40, 2}, {2, 2, 9}, {25, 24, 7, 1}, {
    2, 1, 4}, {25, 11, 42, 4}, {5, 4, 3}, {3, 2}, {5, 0, 3}, {5, 3, 1}, {3, 
    2}, {5, 0, 1}, {2, 1, 982}, {12, 24, 15, 39}, {6, 39, 24}, {38, 34, 0, 15,
     0, 12, 0, 37}, {7, 37, 7}, {
    42, "Accumulate", 3, 1, 18, 2, 0, 26, 3, 1, 46}, {10, 11, 37}, {10, 15, 
    40}, {42, "RandomReal", 3, 0, 37, 3, 0, 40, 3, 0, 25}, {38, 46, 0, 15, 0, 
    37}, {27, 3, 4, 25, 37, 2}, {2, 2, 325}, {
    42, "CopyTensor", 3, 1, 10, 3, 1, 51}, {
    42, "CopyTensor", 3, 1, 10, 3, 1, 50}, {
    42, "CopyTensor", 2, 1, 15, 2, 1, 47}, {38, 22, 0, 15, 0, 48}, {38, 22, 0,
     21, 0, 17}, {38, 22, 0, 18, 0, 47}, {34, 1, 3, 48, 17, 47, 2, 48}, {12, 
    27, 4, 12, 48}, {34, 1, 3, 27, 48, 15, 2, 25}, {38, 22, 3, 25, 1, 54}, {
    34, 1, 1, 7, 3, 25}, {42, "CoerceTensor", 2, 0, 18, 2, 1, 48, 3, 1, 39}, {
    42, "CoerceTensor", 2, 0, 18, 2, 1, 54, 3, 1, 49}, {
    42, "Join", 3, 1, 39, 3, 1, 49, 3, 1, 25, 3, 1, 52}, {41, 259, 3, 0, 21, 
    3, 1, 52, 3, 1, 48}, {42, "CopyTensor", 3, 1, 48, 3, 1, 50}, {6, 11, 
    43}, {6, 11, 28}, {6, 11, 51}, {42, "CopyTensor", 2, 1, 15, 2, 1, 48}, {6,
     11, 58}, {6, 11, 48}, {42, "CopyTensor", 2, 1, 23, 2, 1, 49}, {38, 22, 0,
     21, 0, 54}, {18, 54, 35}, {12, 6, 35, 54}, {6, 54, 43}, {12, 27, 4, 12, 
    54}, {34, 1, 3, 27, 54, 15, 2, 54}, {38, 22, 3, 54, 1, 52}, {
    42, "TotalAll", 2, 1, 52, 2, 0, 26, 2, 0, 54}, {18, 54, 35}, {12, 5, 34, 
    35, 43, 54}, {6, 54, 28}, {42, "MinI", 2, 0, 15, 2, 0, 28, 2, 0, 54}, {
    42, "RandomInteger", 2, 0, 54, 2, 0, 28, 2, 0, 35}, {18, 43, 54}, {12, 35,
     54, 35}, {6, 35, 51}, {25, 11, 51, 3}, {2, 3, 56}, {6, 11, 39}, {6, 11, 
    53}, {6, 4, 47}, {6, 11, 56}, {35, 47, 2, 52}, {6, 11, 35}, {3, 2}, {36, 
    56, 35, 2, 52}, {4, 35, 47, -1}, {33, 52, 35}, {6, 11, 57}, {35, 35, 2, 
    54}, {6, 11, 54}, {3, 16}, {37, 52, 54, 2, 13}, {6, 13, 38}, {12, 27, 4, 
    12, 59}, {34, 1, 3, 27, 59, 15, 2, 25}, {38, 22, 3, 25, 1, 55}, {38, 55, 
    0, 38, 0, 59}, {38, 20, 0, 38, 0, 60}, {25, 59, 60, 4}, {2, 4, 5}, {12, 
    39, 15, 38}, {6, 38, 39}, {6, 54, 38}, {3, 2}, {6, 12, 38}, {36, 57, 38, 
    2, 54}, {4, 54, 35, -15}, {6, 39, 56}, {6, 11, 57}, {35, 56, 2, 55}, {6, 
    11, 47}, {3, 11}, {12, 53, 15, 38}, {6, 38, 53}, {37, 54, 53, 2, 38}, {24,
     38, 12, 4}, {2, 4, 4}, {12, 53, 15, 38}, {6, 38, 53}, {3, -5}, {37, 52, 
    53, 2, 38}, {36, 57, 38, 2, 55}, {4, 47, 56, -10}, {
    42, "CopyTensor", 2, 1, 55, 2, 1, 48}, {33, 48, 53}, {
    42, "MinI", 2, 0, 53, 2, 0, 51, 2, 0, 39}, {38, 48, 0, 39, 0, 53}, {6, 53,
     58}, {38, 49, 0, 58, 0, 53}, {12, 53, 15, 53}, {39, 49, 0, 58, 0, 53}, {
    3, 3}, {42, "RandomInteger", 2, 0, 15, 2, 0, 9, 2, 0, 39}, {6, 39, 48}, {
    42, "Drop", 2, 1, 49, 2, 0, 11, 2, 0, 12, 2, 1, 55}, {
    42, "TotalAll", 2, 1, 55, 2, 0, 26, 2, 0, 53}, {
    42, "MinI", 2, 0, 48, 2, 0, 43, 2, 0, 39}, {34, 1, 3, 53, 39, 11, 2, 
    55}, {42, "Join", 2, 1, 55, 2, 1, 49, 2, 1, 53}, {
    42, "CopyTensor", 2, 1, 53, 2, 1, 47}, {
    42, "CopyTensor", 2, 2, 32, 2, 2, 53}, {38, 47, 0, 15, 0, 48}, {34, 1, 2, 
    11, 48, 2, 39}, {33, 37, 51}, {6, 11, 28}, {35, 51, 2, 49}, {6, 11, 43}, {
    3, 14}, {38, 22, 0, 18, 0, 53}, {38, 22, 0, 15, 0, 39}, {37, 39, 43, 2, 
    13}, {12, 39, 15, 13, 39}, {38, 22, 0, 18, 0, 13}, {38, 22, 0, 15, 0, 
    57}, {37, 39, 43, 2, 38}, {12, 57, 15, 38, 57}, {38, 53, 0, 13, 0, 57, 0, 
    38}, {37, 37, 43, 2, 13}, {12, 38, 13, 38}, {39, 53, 0, 53, 0, 39, 0, 
    38}, {36, 28, 38, 2, 49}, {4, 43, 51, -13}, {38, 22, 0, 18, 0, 48}, {6, 
    48, 20}, {38, 35, 0, 20, 0, 48}, {38, 53, 0, 20, 1, 48}, {38, 7, 0, 20, 1,
     55}, {42, "CoerceTensor", 2, 0, 18, 2, 1, 48, 3, 1, 52}, {
    42, "DotVV", 3, 1, 52, 3, 1, 55, 2, 0, 26, 3, 0, 25}, {19, 25, 37}, {10, 
    48, 25}, {13, 25, 37, 25}, {10, 11, 37}, {27, 6, 4, 25, 37, 3}, {2, 3, 
    123}, {42, "CopyTensor", 2, 2, 53, 2, 2, 32}, {10, 11, 25}, {10, 15, 
    37}, {42, "RandomReal", 3, 0, 25, 3, 0, 37, 3, 0, 40}, {40, 35, 3, 0, 40, 
    3, 0, 25}, {19, 25, 40}, {40, 60, 3, 0, 36, 3, 0, 25}, {16, 40, 25, 40}, {
    34, 1, 1, 40, 3, 48}, {
    42, "CoerceTensor", 2, 0, 18, 2, 1, 12, 3, 1, 55}, {
    42, "CoerceTensor", 2, 0, 18, 2, 1, 23, 3, 1, 52}, {
    42, "Join", 3, 1, 55, 3, 1, 52, 3, 1, 48, 3, 1, 54}, {44, 50, 54, 48}, {
    42, "CopyTensor", 3, 1, 48, 3, 1, 51}, {10, 11, 40}, {10, 15, 25}, {
    42, "RandomReal", 3, 0, 40, 3, 0, 25, 3, 0, 37}, {40, 35, 3, 0, 37, 3, 0, 
    40}, {19, 40, 37}, {40, 60, 3, 0, 36, 3, 0, 40}, {16, 37, 40, 37}, {34, 1,
     1, 37, 3, 48}, {42, "CoerceTensor", 2, 0, 18, 2, 1, 47, 3, 1, 54}, {
    42, "Join", 3, 1, 54, 3, 1, 48, 3, 1, 55}, {44, 50, 55, 48}, {
    42, "CopyTensor", 3, 1, 48, 3, 1, 50}, {6, 15, 14}, {7, 21, 20}, {6, 21, 
    16}, {6, 42, 44}, {18, 16, 48}, {12, 44, 15, 48, 58}, {10, 58, 37}, {16, 
    37, 10, 37}, {7, 37, 20}, {10, 15, 37}, {27, 6, 4, 20, 37, 4}, {2, 4, 
    14}, {40, 53, 3, 0, 20, 2, 0, 58}, {12, 58, 16, 58}, {6, 58, 14}, {38, 34,
     0, 14, 0, 12, 0, 37}, {38, 51, 0, 12, 0, 40}, {27, 7, 4, 37, 40, 5}, {2, 
    5, 4}, {12, 14, 12, 58}, {6, 58, 44}, {3, 3}, {12, 14, 15, 58}, {6, 58, 
    16}, {3, -20}, {10, 11, 37}, {27, 4, 4, 20, 37, 4}, {2, 4, 4}, {12, 44, 
    15, 58}, {6, 58, 44}, {3, 8}, {38, 34, 0, 44, 0, 12, 0, 37}, {38, 51, 0, 
    12, 0, 40}, {27, 3, 4, 37, 40, 5}, {2, 5, 4}, {12, 44, 15, 58}, {6, 58, 
    44}, {3, 1}, {25, 21, 44, 4}, {2, 4, 8}, {12, 44, 49, 58}, {34, 1, 3, 15, 
    58, 15, 2, 48}, {12, 44, 12, 58}, {34, 1, 3, 21, 58, 15, 2, 55}, {38, 34, 
    3, 55, 2, 54}, {39, 34, 3, 48, 2, 54}, {3, 1}, {12, 44, 12, 58}, {39, 34, 
    0, 58, 1, 51}, {6, 15, 14}, {7, 21, 20}, {6, 15, 16}, {6, 42, 44}, {18, 
    16, 58}, {12, 44, 15, 58, 48}, {10, 48, 37}, {16, 37, 10, 37}, {7, 37, 
    20}, {10, 15, 37}, {27, 6, 4, 20, 37, 4}, {2, 4, 14}, {40, 53, 3, 0, 20, 
    2, 0, 48}, {12, 48, 16, 48}, {6, 48, 14}, {38, 34, 0, 14, 0, 12, 0, 37}, {
    38, 50, 0, 12, 0, 40}, {27, 7, 4, 37, 40, 5}, {2, 5, 4}, {12, 14, 12, 
    48}, {6, 48, 44}, {3, 3}, {12, 14, 15, 48}, {6, 48, 16}, {3, -20}, {10, 
    11, 37}, {27, 4, 4, 20, 37, 4}, {2, 4, 4}, {12, 44, 15, 48}, {6, 48, 
    44}, {3, 8}, {38, 34, 0, 44, 0, 12, 0, 37}, {38, 50, 0, 12, 0, 40}, {27, 
    3, 4, 37, 40, 5}, {2, 5, 4}, {12, 44, 15, 48}, {6, 48, 44}, {3, 1}, {12, 
    44, 15, 48}, {34, 1, 3, 48, 12, 15, 2, 48}, {34, 1, 3, 44, 49, 15, 2, 
    54}, {38, 34, 3, 54, 2, 55}, {39, 34, 3, 48, 2, 55}, {39, 34, 0, 44, 1, 
    50}, {12, 42, 15, 48}, {6, 48, 42}, {3, 63}, {10, 11, 37}, {10, 15, 40}, {
    42, "RandomReal", 3, 0, 37, 3, 0, 40, 3, 0, 25}, {40, 35, 3, 0, 25, 3, 0, 
    37}, {19, 37, 25}, {40, 60, 3, 0, 36, 3, 0, 37}, {16, 25, 37, 25}, {34, 1,
     1, 25, 3, 55}, {42, "CoerceTensor", 2, 0, 18, 2, 1, 12, 3, 1, 48}, {
    42, "CoerceTensor", 2, 0, 18, 2, 1, 23, 3, 1, 54}, {
    42, "Join", 3, 1, 48, 3, 1, 54, 3, 1, 55, 3, 1, 52}, {44, 50, 52, 55}, {
    42, "CopyTensor", 3, 1, 55, 3, 1, 51}, {6, 15, 14}, {7, 21, 20}, {6, 21, 
    16}, {6, 42, 44}, {18, 16, 48}, {12, 44, 15, 48, 58}, {10, 58, 25}, {16, 
    25, 10, 25}, {7, 25, 20}, {10, 15, 25}, {27, 6, 4, 20, 25, 4}, {2, 4, 
    14}, {40, 53, 3, 0, 20, 2, 0, 58}, {12, 58, 16, 58}, {6, 58, 14}, {38, 34,
     0, 14, 0, 12, 0, 25}, {38, 51, 0, 12, 0, 37}, {27, 7, 4, 25, 37, 5}, {2, 
    5, 4}, {12, 14, 12, 58}, {6, 58, 44}, {3, 3}, {12, 14, 15, 58}, {6, 58, 
    16}, {3, -20}, {10, 11, 25}, {27, 4, 4, 20, 25, 4}, {2, 4, 4}, {12, 44, 
    15, 58}, {6, 58, 44}, {3, 8}, {38, 34, 0, 44, 0, 12, 0, 25}, {38, 51, 0, 
    12, 0, 37}, {27, 3, 4, 25, 37, 5}, {2, 5, 4}, {12, 44, 15, 58}, {6, 58, 
    44}, {3, 1}, {25, 21, 44, 4}, {2, 4, 8}, {12, 44, 49, 58}, {34, 1, 3, 15, 
    58, 15, 2, 55}, {12, 44, 12, 58}, {34, 1, 3, 21, 58, 15, 2, 52}, {38, 34, 
    3, 52, 2, 48}, {39, 34, 3, 55, 2, 48}, {3, 1}, {12, 44, 12, 58}, {39, 34, 
    0, 58, 1, 51}, {3, 500}, {10, 11, 25}, {10, 15, 37}, {
    42, "RandomReal", 3, 0, 25, 3, 0, 37, 3, 0, 40}, {38, 46, 0, 21, 0, 25}, {
    27, 3, 4, 40, 25, 3}, {2, 3, 324}, {
    42, "CopyTensor", 3, 1, 10, 3, 1, 55}, {
    42, "CopyTensor", 3, 1, 10, 3, 1, 50}, {
    42, "CopyTensor", 2, 1, 15, 2, 1, 51}, {38, 22, 0, 15, 0, 38}, {38, 22, 0,
     21, 0, 58}, {38, 22, 0, 18, 0, 17}, {34, 1, 3, 38, 58, 17, 2, 48}, {12, 
    27, 4, 12, 38}, {34, 1, 3, 27, 38, 15, 2, 53}, {38, 22, 3, 53, 1, 47}, {
    34, 1, 1, 7, 3, 53}, {42, "CoerceTensor", 2, 0, 18, 2, 1, 48, 3, 1, 49}, {
    42, "CoerceTensor", 2, 0, 18, 2, 1, 47, 3, 1, 39}, {
    42, "Join", 3, 1, 49, 3, 1, 39, 3, 1, 53, 3, 1, 52}, {41, 259, 3, 0, 21, 
    3, 1, 52, 3, 1, 48}, {42, "CopyTensor", 3, 1, 48, 3, 1, 50}, {6, 11, 
    39}, {6, 11, 51}, {6, 11, 47}, {42, "CopyTensor", 2, 1, 15, 2, 1, 48}, {6,
     11, 43}, {6, 11, 17}, {42, "CopyTensor", 2, 1, 23, 2, 1, 39}, {38, 22, 0,
     21, 0, 35}, {18, 35, 54}, {12, 6, 54, 35}, {6, 35, 39}, {12, 27, 4, 12, 
    35}, {34, 1, 3, 27, 35, 15, 2, 47}, {38, 22, 3, 47, 1, 52}, {
    42, "TotalAll", 2, 1, 52, 2, 0, 26, 2, 0, 35}, {18, 35, 54}, {12, 5, 34, 
    54, 39, 35}, {6, 35, 51}, {42, "MinI", 2, 0, 15, 2, 0, 51, 2, 0, 35}, {
    42, "RandomInteger", 2, 0, 35, 2, 0, 51, 2, 0, 54}, {18, 39, 35}, {12, 54,
     35, 54}, {6, 54, 47}, {25, 11, 47, 4}, {2, 4, 56}, {6, 11, 48}, {6, 11, 
    13}, {6, 4, 58}, {6, 11, 56}, {35, 58, 2, 52}, {6, 11, 54}, {3, 2}, {36, 
    56, 54, 2, 52}, {4, 54, 58, -1}, {33, 52, 54}, {6, 11, 35}, {35, 54, 2, 
    47}, {6, 11, 57}, {3, 16}, {37, 52, 57, 2, 28}, {6, 28, 53}, {12, 27, 4, 
    12, 59}, {34, 1, 3, 27, 59, 15, 2, 53}, {38, 22, 3, 53, 1, 25}, {38, 25, 
    0, 53, 0, 59}, {38, 20, 0, 53, 0, 60}, {25, 59, 60, 5}, {2, 5, 5}, {12, 
    48, 15, 53}, {6, 53, 48}, {6, 57, 53}, {3, 2}, {6, 12, 53}, {36, 35, 53, 
    2, 47}, {4, 57, 54, -15}, {6, 48, 56}, {6, 11, 35}, {35, 56, 2, 25}, {6, 
    11, 58}, {3, 11}, {12, 13, 15, 53}, {6, 53, 13}, {37, 47, 13, 2, 53}, {24,
     53, 12, 5}, {2, 5, 4}, {12, 13, 15, 53}, {6, 53, 13}, {3, -5}, {37, 52, 
    13, 2, 53}, {36, 35, 53, 2, 25}, {4, 58, 56, -10}, {
    42, "CopyTensor", 2, 1, 25, 2, 1, 48}, {33, 48, 13}, {
    42, "MinI", 2, 0, 13, 2, 0, 47, 2, 0, 48}, {38, 48, 0, 48, 0, 13}, {6, 13,
     43}, {38, 39, 0, 43, 0, 13}, {12, 13, 15, 13}, {39, 39, 0, 43, 0, 13}, {
    3, 3}, {42, "RandomInteger", 2, 0, 15, 2, 0, 9, 2, 0, 48}, {6, 48, 17}, {
    42, "Drop", 2, 1, 39, 2, 0, 11, 2, 0, 12, 2, 1, 25}, {
    42, "TotalAll", 2, 1, 25, 2, 0, 26, 2, 0, 13}, {
    42, "MinI", 2, 0, 17, 2, 0, 39, 2, 0, 48}, {34, 1, 3, 13, 48, 11, 2, 
    25}, {42, "Join", 2, 1, 25, 2, 1, 39, 2, 1, 54}, {
    42, "CopyTensor", 2, 1, 54, 2, 1, 51}, {
    42, "CopyTensor", 2, 2, 32, 2, 2, 54}, {38, 51, 0, 15, 0, 17}, {34, 1, 2, 
    11, 17, 2, 49}, {33, 41, 47}, {6, 11, 51}, {35, 47, 2, 39}, {6, 11, 39}, {
    3, 14}, {38, 22, 0, 18, 0, 13}, {38, 22, 0, 15, 0, 48}, {37, 49, 39, 2, 
    28}, {12, 48, 15, 28, 48}, {38, 22, 0, 18, 0, 28}, {38, 22, 0, 15, 0, 
    35}, {37, 49, 39, 2, 53}, {12, 35, 15, 53, 35}, {38, 54, 0, 28, 0, 35, 0, 
    53}, {37, 41, 39, 2, 28}, {12, 53, 28, 53}, {39, 54, 0, 13, 0, 48, 0, 
    53}, {36, 51, 53, 2, 39}, {4, 39, 47, -13}, {38, 22, 0, 18, 0, 17}, {6, 
    17, 22}, {38, 35, 0, 22, 0, 17}, {38, 54, 0, 22, 1, 48}, {38, 7, 0, 22, 1,
     25}, {42, "CoerceTensor", 2, 0, 18, 2, 1, 48, 3, 1, 52}, {
    42, "DotVV", 3, 1, 52, 3, 1, 25, 2, 0, 26, 3, 0, 40}, {19, 40, 25}, {10, 
    17, 40}, {13, 40, 25, 40}, {10, 11, 25}, {27, 6, 4, 40, 25, 4}, {2, 4, 
    122}, {42, "CopyTensor", 2, 2, 54, 2, 2, 32}, {10, 11, 40}, {10, 15, 
    25}, {42, "RandomReal", 3, 0, 40, 3, 0, 25, 3, 0, 37}, {40, 35, 3, 0, 37, 
    3, 0, 40}, {19, 40, 37}, {40, 60, 3, 0, 36, 3, 0, 40}, {16, 37, 40, 37}, {
    34, 1, 1, 37, 3, 48}, {
    42, "CoerceTensor", 2, 0, 18, 2, 1, 51, 3, 1, 25}, {
    42, "Join", 3, 1, 25, 3, 1, 48, 3, 1, 52}, {44, 50, 52, 48}, {
    42, "CopyTensor", 3, 1, 48, 3, 1, 55}, {10, 11, 37}, {10, 15, 40}, {
    42, "RandomReal", 3, 0, 37, 3, 0, 40, 3, 0, 25}, {40, 35, 3, 0, 25, 3, 0, 
    37}, {19, 37, 25}, {40, 60, 3, 0, 36, 3, 0, 37}, {16, 25, 37, 25}, {34, 1,
     1, 25, 3, 48}, {42, "CoerceTensor", 2, 0, 18, 2, 1, 51, 3, 1, 52}, {
    42, "Join", 3, 1, 52, 3, 1, 48, 3, 1, 25}, {44, 50, 25, 48}, {
    42, "CopyTensor", 3, 1, 48, 3, 1, 50}, {6, 15, 14}, {7, 21, 20}, {6, 21, 
    16}, {6, 42, 44}, {18, 16, 17}, {12, 44, 15, 17, 43}, {10, 43, 25}, {16, 
    25, 10, 25}, {7, 25, 20}, {10, 15, 25}, {27, 6, 4, 20, 25, 5}, {2, 5, 
    14}, {40, 53, 3, 0, 20, 2, 0, 43}, {12, 43, 16, 43}, {6, 43, 14}, {38, 34,
     0, 14, 0, 12, 0, 25}, {38, 55, 0, 12, 0, 37}, {27, 7, 4, 25, 37, 6}, {2, 
    6, 4}, {12, 14, 12, 43}, {6, 43, 44}, {3, 3}, {12, 14, 15, 43}, {6, 43, 
    16}, {3, -20}, {10, 11, 25}, {27, 4, 4, 20, 25, 5}, {2, 5, 4}, {12, 44, 
    15, 43}, {6, 43, 44}, {3, 8}, {38, 34, 0, 44, 0, 12, 0, 25}, {38, 55, 0, 
    12, 0, 37}, {27, 3, 4, 25, 37, 6}, {2, 6, 4}, {12, 44, 15, 43}, {6, 43, 
    44}, {3, 1}, {25, 21, 44, 5}, {2, 5, 8}, {12, 44, 49, 43}, {34, 1, 3, 15, 
    43, 15, 2, 48}, {12, 44, 12, 43}, {34, 1, 3, 21, 43, 15, 2, 25}, {38, 34, 
    3, 25, 2, 52}, {39, 34, 3, 48, 2, 52}, {3, 1}, {12, 44, 12, 43}, {39, 34, 
    0, 43, 1, 55}, {6, 15, 14}, {7, 21, 20}, {6, 15, 16}, {6, 42, 44}, {18, 
    16, 43}, {12, 44, 15, 43, 17}, {10, 17, 25}, {16, 25, 10, 25}, {7, 25, 
    20}, {10, 15, 25}, {27, 6, 4, 20, 25, 5}, {2, 5, 14}, {40, 53, 3, 0, 20, 
    2, 0, 17}, {12, 17, 16, 17}, {6, 17, 14}, {38, 34, 0, 14, 0, 12, 0, 25}, {
    38, 50, 0, 12, 0, 37}, {27, 7, 4, 25, 37, 6}, {2, 6, 4}, {12, 14, 12, 
    17}, {6, 17, 44}, {3, 3}, {12, 14, 15, 17}, {6, 17, 16}, {3, -20}, {10, 
    11, 25}, {27, 4, 4, 20, 25, 5}, {2, 5, 4}, {12, 44, 15, 17}, {6, 17, 
    44}, {3, 8}, {38, 34, 0, 44, 0, 12, 0, 25}, {38, 50, 0, 12, 0, 37}, {27, 
    3, 4, 25, 37, 6}, {2, 6, 4}, {12, 44, 15, 17}, {6, 17, 44}, {3, 1}, {12, 
    44, 15, 17}, {34, 1, 3, 17, 12, 15, 2, 48}, {34, 1, 3, 44, 49, 15, 2, 
    52}, {38, 34, 3, 52, 2, 25}, {39, 34, 3, 48, 2, 25}, {39, 34, 0, 44, 1, 
    50}, {12, 42, 15, 17}, {6, 17, 42}, {3, 63}, {10, 11, 25}, {10, 15, 37}, {
    42, "RandomReal", 3, 0, 25, 3, 0, 37, 3, 0, 40}, {40, 35, 3, 0, 40, 3, 0, 
    25}, {19, 25, 40}, {40, 60, 3, 0, 36, 3, 0, 25}, {16, 40, 25, 40}, {34, 1,
     1, 40, 3, 25}, {42, "CoerceTensor", 2, 0, 18, 2, 1, 12, 3, 1, 48}, {
    42, "CoerceTensor", 2, 0, 18, 2, 1, 23, 3, 1, 52}, {
    42, "Join", 3, 1, 48, 3, 1, 52, 3, 1, 25, 3, 1, 47}, {44, 50, 47, 25}, {
    42, "CopyTensor", 3, 1, 25, 3, 1, 55}, {6, 15, 14}, {7, 21, 20}, {6, 21, 
    16}, {6, 42, 44}, {18, 16, 17}, {12, 44, 15, 17, 43}, {10, 43, 40}, {16, 
    40, 10, 40}, {7, 40, 20}, {10, 15, 40}, {27, 6, 4, 20, 40, 5}, {2, 5, 
    14}, {40, 53, 3, 0, 20, 2, 0, 43}, {12, 43, 16, 43}, {6, 43, 14}, {38, 34,
     0, 14, 0, 12, 0, 40}, {38, 55, 0, 12, 0, 25}, {27, 7, 4, 40, 25, 6}, {2, 
    6, 4}, {12, 14, 12, 43}, {6, 43, 44}, {3, 3}, {12, 14, 15, 43}, {6, 43, 
    16}, {3, -20}, {10, 11, 40}, {27, 4, 4, 20, 40, 5}, {2, 5, 4}, {12, 44, 
    15, 43}, {6, 43, 44}, {3, 8}, {38, 34, 0, 44, 0, 12, 0, 40}, {38, 55, 0, 
    12, 0, 25}, {27, 3, 4, 40, 25, 6}, {2, 6, 4}, {12, 44, 15, 43}, {6, 43, 
    44}, {3, 1}, {25, 21, 44, 5}, {2, 5, 8}, {12, 44, 49, 43}, {34, 1, 3, 15, 
    43, 15, 2, 25}, {12, 44, 12, 43}, {34, 1, 3, 21, 43, 15, 2, 47}, {38, 34, 
    3, 47, 2, 48}, {39, 34, 3, 25, 2, 48}, {3, 1}, {12, 44, 12, 43}, {39, 34, 
    0, 43, 1, 55}, {3, 171}, {10, 11, 40}, {10, 15, 25}, {
    42, "RandomReal", 3, 0, 40, 3, 0, 25, 3, 0, 37}, {38, 46, 0, 18, 0, 40}, {
    27, 3, 4, 37, 40, 4}, {2, 4, 18}, {38, 22, 0, 18, 0, 43}, {38, 22, 0, 15, 
    0, 17}, {38, 15, 0, 15, 0, 38}, {12, 17, 15, 38, 17}, {38, 22, 0, 18, 0, 
    38}, {38, 22, 0, 15, 0, 51}, {38, 15, 0, 15, 0, 53}, {12, 51, 15, 53, 
    51}, {38, 32, 0, 38, 0, 51, 0, 53}, {38, 42, 0, 15, 0, 38}, {12, 53, 38, 
    53}, {39, 32, 0, 43, 0, 17, 0, 53}, {38, 34, 3, 44, 2, 54}, {39, 34, 3, 
    43, 2, 54}, {41, 258, 2, 0, 42, 2, 0, 15, 2, 0, 43}, {6, 43, 42}, {3, 
    148}, {42, "CopyTensor", 3, 1, 10, 3, 1, 54}, {5, 0, 5}, {38, 22, 0, 15, 
    0, 47}, {38, 22, 0, 21, 0, 51}, {38, 22, 0, 18, 0, 53}, {34, 1, 3, 47, 51,
     53, 2, 39}, {12, 27, 4, 12, 47}, {34, 1, 3, 27, 47, 15, 2, 49}, {38, 22, 
    3, 49, 1, 51}, {34, 1, 1, 7, 3, 49}, {
    42, "CoerceTensor", 2, 0, 18, 2, 1, 39, 3, 1, 50}, {
    42, "CoerceTensor", 2, 0, 18, 2, 1, 51, 3, 1, 55}, {
    42, "Join", 3, 1, 50, 3, 1, 55, 3, 1, 49, 3, 1, 25}, {41, 259, 3, 0, 21, 
    3, 1, 25, 3, 1, 39}, {42, "CopyTensor", 3, 1, 39, 3, 1, 54}, {
    42, "CopyTensor", 2, 2, 32, 2, 2, 39}, {38, 22, 0, 18, 0, 47}, {25, 47, 3,
     6}, {2, 6, 51}, {38, 22, 0, 18, 0, 47}, {38, 37, 0, 15, 0, 51}, {12, 47, 
    51, 47}, {38, 22, 0, 15, 0, 51}, {38, 16, 0, 15, 0, 53}, {12, 51, 15, 53, 
    51}, {38, 22, 0, 18, 0, 53}, {38, 37, 0, 15, 0, 43}, {12, 53, 43, 53}, {
    38, 22, 0, 15, 0, 43}, {38, 16, 0, 15, 0, 17}, {12, 43, 15, 17, 43}, {38, 
    39, 0, 53, 0, 43, 0, 17}, {38, 45, 0, 15, 0, 53}, {12, 17, 53, 17}, {39, 
    39, 0, 47, 0, 51, 0, 17}, {38, 22, 0, 18, 0, 47}, {38, 37, 0, 21, 0, 
    51}, {12, 47, 51, 47}, {38, 22, 0, 15, 0, 51}, {38, 16, 0, 21, 0, 53}, {
    12, 51, 15, 53, 51}, {38, 22, 0, 18, 0, 53}, {38, 37, 0, 21, 0, 43}, {12, 
    53, 43, 53}, {38, 22, 0, 15, 0, 43}, {38, 16, 0, 21, 0, 38}, {12, 43, 15, 
    38, 43}, {38, 39, 0, 53, 0, 43, 0, 38}, {38, 45, 0, 21, 0, 53}, {12, 38, 
    53, 38}, {39, 39, 0, 47, 0, 51, 0, 38}, {38, 22, 0, 18, 0, 47}, {6, 47, 
    46}, {38, 37, 0, 12, 0, 47}, {6, 47, 50}, {12, 46, 50, 47}, {6, 47, 29}, {
    38, 35, 0, 29, 0, 47}, {38, 39, 0, 29, 1, 25}, {38, 7, 0, 29, 1, 51}, {
    42, "CoerceTensor", 2, 0, 18, 2, 1, 25, 3, 1, 49}, {
    42, "DotVV", 3, 1, 49, 3, 1, 51, 2, 0, 26, 3, 0, 40}, {19, 40, 25}, {10, 
    47, 40}, {13, 40, 25, 40}, {10, 11, 25}, {27, 6, 4, 40, 25, 7}, {5, 7, 
    5}, {3, 1}, {2, 5, 16}, {42, "CopyTensor", 2, 2, 39, 2, 2, 32}, {10, 11, 
    40}, {10, 15, 25}, {42, "RandomReal", 3, 0, 40, 3, 0, 25, 3, 0, 37}, {40, 
    35, 3, 0, 37, 3, 0, 40}, {19, 40, 37}, {40, 60, 3, 0, 36, 3, 0, 40}, {16, 
    37, 40, 37}, {34, 1, 1, 37, 3, 25}, {
    42, "CoerceTensor", 2, 0, 18, 2, 1, 26, 3, 1, 51}, {
    42, "CoerceTensor", 2, 0, 18, 2, 1, 23, 3, 1, 49}, {
    42, "Join", 3, 1, 51, 3, 1, 49, 3, 1, 25, 3, 1, 50}, {44, 54, 50, 25}, {
    42, "CopyTensor", 3, 1, 25, 3, 1, 54}, {3, 14}, {10, 11, 37}, {10, 15, 
    40}, {42, "RandomReal", 3, 0, 37, 3, 0, 40, 3, 0, 25}, {40, 35, 3, 0, 25, 
    3, 0, 37}, {19, 37, 25}, {40, 60, 3, 0, 36, 3, 0, 37}, {16, 25, 37, 25}, {
    34, 1, 1, 25, 3, 25}, {
    42, "CoerceTensor", 2, 0, 18, 2, 1, 12, 3, 1, 50}, {
    42, "CoerceTensor", 2, 0, 18, 2, 1, 23, 3, 1, 51}, {
    42, "Join", 3, 1, 50, 3, 1, 51, 3, 1, 25, 3, 1, 49}, {44, 54, 49, 25}, {
    42, "CopyTensor", 3, 1, 25, 3, 1, 54}, {6, 15, 14}, {7, 21, 20}, {6, 21, 
    16}, {6, 42, 44}, {18, 16, 17}, {12, 44, 15, 17, 38}, {10, 38, 25}, {16, 
    25, 10, 25}, {7, 25, 20}, {10, 15, 25}, {27, 6, 4, 20, 25, 6}, {2, 6, 
    14}, {40, 53, 3, 0, 20, 2, 0, 38}, {12, 38, 16, 38}, {6, 38, 14}, {38, 34,
     0, 14, 0, 12, 0, 25}, {38, 54, 0, 12, 0, 37}, {27, 7, 4, 25, 37, 7}, {2, 
    7, 4}, {12, 14, 12, 38}, {6, 38, 44}, {3, 3}, {12, 14, 15, 38}, {6, 38, 
    16}, {3, -20}, {10, 11, 25}, {27, 4, 4, 20, 25, 6}, {2, 6, 4}, {12, 44, 
    15, 38}, {6, 38, 44}, {3, 8}, {38, 34, 0, 44, 0, 12, 0, 25}, {38, 54, 0, 
    12, 0, 37}, {27, 3, 4, 25, 37, 7}, {2, 7, 4}, {12, 44, 15, 38}, {6, 38, 
    44}, {3, 1}, {25, 21, 44, 6}, {2, 6, 8}, {12, 44, 49, 38}, {34, 1, 3, 15, 
    38, 15, 2, 49}, {12, 44, 12, 38}, {34, 1, 3, 21, 38, 15, 2, 50}, {38, 34, 
    3, 50, 2, 51}, {39, 34, 3, 49, 2, 51}, {3, 1}, {12, 44, 12, 38}, {39, 34, 
    0, 38, 1, 54}, {12, 27, 4, 12, 38}, {34, 1, 3, 15, 38, 15, 2, 46}, {38, 
    34, 0, 15, 3, 46, 1, 39}, {40, 53, 3, 1, 39, 2, 1, 46}, {
    42, "CopyTensor", 2, 1, 46, 2, 1, 22}, {12, 27, 4, 12, 51}, {34, 1, 3, 27,
     51, 15, 2, 25}, {38, 22, 3, 25, 1, 46}, {38, 22, 0, 18, 0, 51}, {38, 1, 
    0, 51, 0, 38}, {34, 1, 3, 15, 38, 15, 2, 25}, {38, 46, 3, 25, 1, 39}, {6, 
    11, 38}, {33, 39, 47}, {6, 11, 43}, {3, 4}, {37, 39, 43, 2, 53}, {12, 38, 
    53, 39}, {6, 39, 38}, {4, 43, 47, -3}, {6, 38, 41}, {10, 12, 25}, {13, 6, 
    25, 37}, {40, 60, 3, 0, 37, 3, 0, 25}, {16, 6, 25, 37}, {12, 41, 15, 
    38}, {38, 22, 0, 21, 0, 43}, {41, 263, 2, 0, 43, 3, 0, 10, 3, 0, 25}, {10,
     21, 40}, {40, 60, 3, 0, 40, 3, 0, 42}, {16, 25, 42, 25}, {40, 34, 3, 0, 
    25, 3, 0, 42}, {10, 25, 25}, {16, 25, 42, 25}, {40, 60, 3, 0, 25, 3, 0, 
    42}, {10, 38, 25}, {16, 25, 42, 25}, {16, 9, 25, 42}, {40, 34, 3, 0, 42, 
    3, 0, 25}, {19, 25, 42}, {40, 34, 3, 0, 42, 3, 0, 25}, {10, 12, 42}, {40, 
    34, 3, 0, 42, 3, 0, 40}, {19, 40, 42}, {13, 25, 42, 25}, {10, 21, 42}, {
    16, 42, 37, 25, 42}, {7, 42, 30}, {38, 22, 3, 29, 1, 25}, {45, 25, 0, 
    25}, {41, 263, 3, 1, 40, 2, 1, 25, 3, 1, 54}, {38, 22, 0, 18, 0, 17}, {38,
     1, 0, 17, 0, 38}, {34, 1, 3, 15, 38, 15, 2, 25}, {38, 54, 3, 25, 1, 
    39}, {7, 21, 37}, {33, 39, 43}, {6, 11, 51}, {3, 4}, {37, 39, 51, 3, 
    42}, {16, 37, 42, 25}, {7, 25, 37}, {4, 51, 43, -3}, {7, 37, 22}, {19, 2, 
    37}, {7, 37, 29}, {38, 22, 0, 18, 0, 51}, {6, 51, 55}, {10, 21, 37}, {40, 
    60, 3, 0, 37, 3, 0, 25}, {7, 25, 26}, {16, 29, 26, 25}, {7, 25, 31}, {40, 
    34, 3, 0, 31, 3, 0, 25}, {7, 25, 28}, {38, 4, 0, 55, 0, 25}, {13, 30, 14, 
    37}, {16, 29, 37, 42}, {40, 10, 3, 0, 42, 3, 0, 37}, {10, 12, 42}, {13, 
    37, 42, 37}, {16, 3, 28, 37, 42}, {19, 42, 37}, {40, 34, 3, 0, 37, 3, 0, 
    42}, {16, 25, 42, 25}, {38, 5, 0, 55, 0, 42}, {13, 30, 17, 37}, {16, 29, 
    37, 40}, {40, 10, 3, 0, 40, 3, 0, 37}, {10, 12, 40}, {13, 37, 40, 37}, {
    16, 3, 28, 37, 40}, {19, 40, 37}, {40, 34, 3, 0, 37, 3, 0, 40}, {16, 42, 
    40, 42}, {38, 6, 0, 55, 0, 40}, {13, 30, 19, 37}, {16, 29, 37, 39}, {40, 
    10, 3, 0, 39, 3, 0, 37}, {10, 12, 39}, {13, 37, 39, 37}, {16, 3, 28, 37, 
    39}, {19, 39, 37}, {40, 34, 3, 0, 37, 3, 0, 39}, {16, 40, 39, 40}, {34, 1,
     3, 25, 42, 40, 3, 46}, {38, 33, 0, 55, 0, 25}, {16, 25, 22, 25}, {34, 1, 
    1, 25, 3, 39}, {42, "Join", 3, 1, 46, 3, 1, 39, 3, 1, 54}, {
    42, "CopyTensor", 3, 1, 54, 3, 1, 28}, {
    42, "Accumulate", 3, 1, 28, 2, 0, 26, 3, 1, 54}, {
    42, "CopyTensor", 3, 1, 54, 3, 1, 38}, {38, 38, 0, 12, 0, 25}, {7, 25, 
    36}, {40, 60, 3, 0, 36, 3, 0, 25}, {41, 259, 3, 0, 25, 3, 1, 28, 3, 1, 
    54}, {42, "CopyTensor", 3, 1, 54, 3, 1, 18}, {38, 22, 0, 21, 0, 51}, {18, 
    51, 38}, {12, 6, 38, 51}, {6, 51, 31}, {38, 22, 0, 12, 0, 51}, {18, 51, 
    38}, {12, 5, 38, 51}, {6, 51, 36}, {38, 22, 3, 30, 1, 54}, {
    42, "TotalAll", 2, 1, 54, 2, 0, 26, 2, 0, 51}, {18, 51, 38}, {12, 34, 38, 
    51}, {6, 51, 52}, {12, 31, 36, 52, 51}, {6, 51, 32}, {34, 1, 3, 52, 36, 
    31, 2, 54}, {10, 32, 25}, {40, 60, 3, 0, 25, 3, 0, 42}, {41, 259, 3, 0, 
    42, 2, 1, 54, 3, 1, 46}, {42, "CopyTensor", 3, 1, 46, 3, 1, 27}, {
    42, "StuffBag", 3, 0, 12, 3, 2, 34, 6, 0, 17}, {
    42, "CoerceTensor", 2, 0, 18, 2, 2, 32, 3, 2, 46}, {
    42, "StuffBag", 3, 0, 38, 3, 2, 46, 6, 0, 17}, {
    42, "StuffBag", 3, 0, 16, 3, 1, 18, 6, 0, 17}, {
    42, "StuffBag", 3, 0, 27, 3, 1, 27, 6, 0, 17}, {10, 42, 42}, {
    42, "StuffBagScalar", 3, 0, 41, 3, 0, 42, 6, 0, 17}, {
    42, "StuffBagScalar", 3, 0, 15, 3, 0, 7, 6, 0, 17}, {3, -994}, {
    42, "BagPart", 3, 0, 38, 2, 0, 21, 3, 1, 46}, {
    42, "StuffBag", 3, 0, 12, 3, 1, 46, 6, 0, 17}, {
    42, "BagPart", 3, 0, 16, 2, 0, 21, 3, 1, 46}, {
    42, "StuffBag", 3, 0, 12, 3, 1, 46, 6, 0, 17}, {
    42, "BagPart", 3, 0, 27, 2, 0, 21, 3, 1, 46}, {
    42, "StuffBag", 3, 0, 12, 3, 1, 46, 6, 0, 17}, {
    42, "BagPart", 3, 0, 41, 2, 0, 21, 3, 1, 46}, {
    42, "StuffBag", 3, 0, 12, 3, 1, 46, 6, 0, 17}, {
    42, "BagPart", 3, 0, 15, 2, 0, 21, 3, 1, 46}, {
    42, "StuffBag", 3, 0, 12, 3, 1, 46, 6, 0, 17}, {10, 1, 42}, {
    42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {10, 4, 42}, {
    42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {12, 24, 15, 51}, {
    10, 51, 42}, {42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {
    42, "Dimensions", 3, 2, 34, 2, 1, 46}, {
    42, "CoerceTensor", 2, 0, 18, 2, 1, 46, 3, 1, 54}, {
    42, "StuffBag", 3, 0, 12, 3, 1, 54, 6, 0, 17}, {12, 24, 15, 51}, {10, 51, 
    42}, {42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {
    42, "Dimensions", 2, 2, 32, 2, 1, 46}, {
    42, "CoerceTensor", 2, 0, 18, 2, 1, 46, 3, 1, 54}, {
    42, "StuffBag", 3, 0, 12, 3, 1, 54, 6, 0, 17}, {12, 24, 15, 51}, {10, 51, 
    42}, {42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {
    42, "Dimensions", 3, 1, 18, 2, 1, 46}, {
    42, "CoerceTensor", 2, 0, 18, 2, 1, 46, 3, 1, 54}, {
    42, "StuffBag", 3, 0, 12, 3, 1, 54, 6, 0, 17}, {12, 24, 15, 51}, {10, 51, 
    42}, {42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {
    42, "Dimensions", 3, 1, 27, 2, 1, 46}, {
    42, "CoerceTensor", 2, 0, 18, 2, 1, 46, 3, 1, 54}, {
    42, "StuffBag", 3, 0, 12, 3, 1, 54, 6, 0, 17}, {12, 24, 15, 51}, {10, 51, 
    42}, {42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {12, 24, 15, 
    51}, {10, 51, 42}, {42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {
    34, 1, 1, 34, 0, 46}, {42, "Dimensions", 3, 3, 46, 2, 1, 54}, {33, 54, 
    51}, {10, 51, 42}, {42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {
    34, 1, 1, 32, 0, 54}, {42, "Dimensions", 2, 3, 54, 2, 1, 46}, {33, 46, 
    51}, {10, 51, 42}, {42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {
    34, 1, 1, 18, 0, 46}, {42, "Dimensions", 3, 2, 46, 2, 1, 54}, {33, 54, 
    51}, {10, 51, 42}, {42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {
    34, 1, 1, 27, 0, 54}, {42, "Dimensions", 3, 2, 54, 2, 1, 46}, {33, 46, 
    51}, {10, 51, 42}, {42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {
    34, 1, 1, 42, 2, 46}, {42, "Dimensions", 2, 1, 46, 2, 1, 54}, {33, 54, 
    51}, {10, 51, 42}, {42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {
    34, 1, 1, 7, 3, 54}, {42, "Dimensions", 3, 1, 54, 2, 1, 46}, {33, 46, 
    51}, {10, 51, 42}, {42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {
    10, 11, 42}, {42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {10, 
    11, 42}, {42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {10, 26, 
    42}, {42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {
    42, "BagPart", 3, 0, 12, 2, 0, 21, 3, 1, 46}, {1}}, 
   Function[{$CellContext`NtotE, $CellContext`Nmax, $CellContext`scegli, \
$CellContext`kmax, $CellContext`imax, $CellContext`maxsemidrivermut, \
$CellContext`maxnondrivermut, $CellContext`signature, \
$CellContext`compkeystep, $CellContext`expG, $CellContext`cntG, \
$CellContext`ctmax, $CellContext`tmax, $CellContext`maxmjump, \
$CellContext`maxtjump, $CellContext`Aasym, $CellContext`Asym, \
$CellContext`Aapop, $CellContext`Apass, $CellContext`cen, $CellContext`wide, \
$CellContext`slope, $CellContext`ratio}, 
    Block[{
     Compile`$35, Compile`$36, Compile`$37, Compile`$38, Compile`$88, 
      Compile`$89, Compile`$90, Compile`$91, Compile`$92, Compile`$93, 
      Compile`$94, Compile`$137, Compile`$135, Compile`$138, Compile`$139, 
      Compile`$140, Compile`$252, Compile`$392, Compile`$522, Compile`$523, 
      Compile`$524, Compile`$611, Compile`$609, Compile`$612, Compile`$613, 
      Compile`$614}, 
     Block[{$CellContext`Ntot, Empty = 
       0, $CellContext`Ncell = {{0}}, $CellContext`ord = {
        1}, $CellContext`times = {
        0.}, $CellContext`state = {{0, 0.}}, $CellContext`Ccell = {0, 0, 
        0}, $CellContext`t = 0., $CellContext`ct = 
       0, $CellContext`maxdrivermut, $CellContext`smv0, $CellContext`state0, \
$CellContext`sstate0, $CellContext`Cmut, $CellContext`genes, \
$CellContext`krates = {1.}, $CellContext`i = 0, $CellContext`m = 
       0, $CellContext`mv = {0, 0, 0, 0, 0}, $CellContext`p = 
       0.1, $CellContext`r = 
       0.1, $CellContext`mv0 = {0}, $CellContext`imkmv = {0}, $CellContext`in = 
       0, $CellContext`fn = 0, $CellContext`mid = 0, $CellContext`midr = 
       0., $CellContext`CT = 
       False, $CellContext`statetmp1, $CellContext`statetmp2, \
$CellContext`NewNcell, $CellContext`\[CapitalDelta]i = {0, 
        0}, $CellContext`\[CapitalDelta]Nc = {0, 
        0}, $CellContext`\[CapitalDelta]Nc2 = {0, 
        0}, $CellContext`\[CapitalDelta]k = {0, 
        0}, $CellContext`chooseiorm = {
        10}, $CellContext`ratescum, $CellContext`ratesn, \
$CellContext`stateslist, $CellContext`Ncslist, $CellContext`probslist, \
$CellContext`spprobslist, $CellContext`Ntslist, $CellContext`tslist, \
$CellContext`key, $CellContext`ss, $CellContext`keyg, $CellContext`rates, \
$CellContext`rcum1, $CellContext`nondriverspace, \
$CellContext`semidriverspace, $CellContext`driverspace, $CellContext`space, \
$CellContext`spaceprob}, $CellContext`maxdrivermut = $CellContext`imax - 
        1; $CellContext`mv0 = 
       Table[0, {$CellContext`i, $CellContext`imax}]; $CellContext`state0 = 
       Table[0, {$CellContext`i, $CellContext`imax + 3}]; $CellContext`Cmut = 
       Join[
         Table[
         1, {$CellContext`i, $CellContext`maxdrivermut}], \
{$CellContext`maxsemidrivermut}]; $CellContext`genes = \
$CellContext`expG/$CellContext`cntG; $CellContext`krates = $CellContext`Apass 
        Join[
          Table[1, {$CellContext`i, $CellContext`kmax - 1}], {
          0}]; $CellContext`Ntot = $CellContext`NtotE; 
      Empty = $CellContext`Nmax - $CellContext`Ntot - $CellContext`scegli; \
$CellContext`Ncell = Join[{{$CellContext`Ntot, 0, 0, 0, 0}}, 
         Table[$CellContext`mv0, {$CellContext`l, 1, $CellContext`kmax - 
           1}]]; $CellContext`state = 
       Block[{$CellContext`m = 0, $CellContext`k = 
          1, $CellContext`mv = $CellContext`mv0, $CellContext`s = 
          0., $CellContext`rnn = {0.}}, $CellContext`s = 
          2 (E/(E - 1)) (Exp[-Exp[(-10.) ((Apply[Plus, 
                    Part[$CellContext`mv, 
                    Span[1, 
                    Part[$CellContext`compkeystep, $CellContext`k]]]] + 1)/(
                 10 Exp[$CellContext`m^0.5/2]))]] - 1/E); $CellContext`rnn = (
           Compile`$35 = -$CellContext`wide; Compile`$36 = 2^(-1); 
           Compile`$37 = Compile`$35 Compile`$36; Compile`$38 = E^Compile`$37; 
           Accumulate[
             Join[{
              Part[$CellContext`Aasym, $CellContext`k] 
               Exp[-($CellContext`slope 
                  Compile`$38 (Cosh[Compile`$35 ($CellContext`s - 2.)] - 1))],
                Part[$CellContext`Asym, $CellContext`k] 
               Exp[-($CellContext`slope 
                  Compile`$38 (Cosh[Compile`$35 ($CellContext`s - 1.)] - 1))],
                Part[$CellContext`Aapop, $CellContext`k] 
               Exp[-($CellContext`slope 
                  Compile`$38 (Cosh[Compile`$35 ($CellContext`s - 0.5)] - 
                   1))]}, {
              Part[$CellContext`krates, $CellContext`k] Apply[Times, 
                 
                 Part[$CellContext`genes^($CellContext`mv \
$CellContext`signature), 
                  Span[1, 
                   Part[$CellContext`compkeystep, $CellContext`k]]]]}]]); Join[
           Table[
           1. Join[{0, 0, 1}, $CellContext`mv0], {$CellContext`k, 
             1, $CellContext`Nmax + 2}], (-Log[
               RandomReal[{0, 1}, {$CellContext`Nmax + 2, 1}]])/
            Part[$CellContext`rnn, -1] + $CellContext`t, 
           2]]; $CellContext`Ccell = (Compile`$88 = -$CellContext`Ntot; 
        Compile`$89 = -Empty; 
        Compile`$90 = $CellContext`Nmax + Compile`$88 + Compile`$89; 
        Compile`$91 = 2^(-1); Compile`$92 = Compile`$90 Compile`$91; 
        Compile`$93 = Floor[Compile`$92]; 
        Compile`$94 = Max[0, Compile`$93]; {
          Floor[$CellContext`Ntot + Empty], Compile`$94, 
          Compile`$94}); $CellContext`times = Part[
         Transpose[$CellContext`state], -1]; $CellContext`ord = 
       Ordering[$CellContext`times]; $CellContext`state = 
       Part[$CellContext`state, $CellContext`ord]; $CellContext`imkmv = 
       IntegerPart[
         Part[$CellContext`state, 1, 
          Span[1, 4 + $CellContext`imax - 1]]]; $CellContext`key = Apply[Plus, 
         Part[
          Part[$CellContext`imkmv, 
           Span[4, -1]], 
          Span[1, 
           Part[$CellContext`compkeystep, 
            Part[$CellContext`imkmv, 3]]]]]; $CellContext`ss = 
       2 (E/(E - 1)) (
         Exp[-Exp[(-10.) (($CellContext`key + 1)/(10 
              Exp[Part[$CellContext`imkmv, 2]^0.5/2]))]] - 1/
         E); $CellContext`keyg = Apply[Times, 
         Part[$CellContext`genes^(Part[$CellContext`imkmv, 
             Span[4, -1]] $CellContext`signature), 
          Span[1, 
           Part[$CellContext`compkeystep, 
            Part[$CellContext`imkmv, 3]]]]]; $CellContext`rates = (
        Compile`$137 = -$CellContext`wide; 
        Compile`$135 = Part[$CellContext`imkmv, 3]; Compile`$138 = 2^(-1); 
        Compile`$139 = Compile`$137 Compile`$138; 
        Compile`$140 = E^Compile`$139; 
        Join[{Part[$CellContext`Aasym, Compile`$135] 
           Exp[-($CellContext`slope 
              Compile`$140 (Cosh[Compile`$137 ($CellContext`ss - 2.)] - 1))], 
           Part[$CellContext`Asym, Compile`$135] 
           Exp[-($CellContext`slope 
              Compile`$140 (Cosh[Compile`$137 ($CellContext`ss - 1.)] - 1))], 
           Part[$CellContext`Aapop, Compile`$135] 
           Exp[-($CellContext`slope 
              Compile`$140 (Cosh[Compile`$137 ($CellContext`ss - 0.5)] - 
               1))]}, {
          Part[$CellContext`krates, 
             Compile`$135] $CellContext`keyg}]); $CellContext`ratescum = 
       Accumulate[$CellContext`rates]; $CellContext`rcum1 = 
       Part[$CellContext`ratescum, -1]; $CellContext`ratesn = \
$CellContext`rates/$CellContext`rcum1; $CellContext`nondriverspace = \
$CellContext`maxnondrivermut - 
        Part[$CellContext`imkmv, 
         2]; $CellContext`semidriverspace = $CellContext`maxsemidrivermut - 
        Part[$CellContext`imkmv, -1]; $CellContext`driverspace = \
$CellContext`maxdrivermut - Total[
         Part[$CellContext`imkmv, 
          Span[
          4, -2]]]; $CellContext`space = $CellContext`nondriverspace + \
$CellContext`semidriverspace + $CellContext`driverspace; \
$CellContext`spaceprob = {$CellContext`driverspace, \
$CellContext`semidriverspace, $CellContext`nondriverspace}/$CellContext`space; \
$CellContext`stateslist = Internal`Bag[
         Most[{1.}]]; $CellContext`Ncslist = Internal`Bag[
         Most[{1.}]]; $CellContext`probslist = Internal`Bag[
         Most[{1.}]]; $CellContext`spprobslist = Internal`Bag[
         Most[{1.}]]; $CellContext`Ntslist = Internal`Bag[
         Most[{1.}]]; $CellContext`tslist = Internal`Bag[
         Most[{1.}]]; 
      Internal`StuffBag[$CellContext`stateslist, $CellContext`state, 2]; 
      Internal`StuffBag[$CellContext`Ncslist, $CellContext`Ncell, 2]; 
      Internal`StuffBag[$CellContext`probslist, $CellContext`ratesn, 2]; 
      Internal`StuffBag[$CellContext`spprobslist, $CellContext`spaceprob, 2]; 
      Internal`StuffBag[$CellContext`Ntslist, $CellContext`Ntot]; 
      Internal`StuffBag[$CellContext`tslist, $CellContext`t]; While[
        And[
        Part[$CellContext`state, 
           1, -1] < $CellContext`tmax, $CellContext`ct < $CellContext`ctmax, \
$CellContext`Ntot > 0], 
        AddTo[$CellContext`ct, 1]; $CellContext`t = 
         Part[$CellContext`state, 1, -1]; 
        Block[{$CellContext`probc}, $CellContext`probc = 
           Accumulate[$CellContext`ratesn]; 
          Which[RandomReal[{0, 1}] < Part[$CellContext`probc, 1], 
            
            Block[{$CellContext`statetmp1 = {0.}, $CellContext`statetmp2 = {
               0.}, $CellContext`chooseiorm = {
               0}, $CellContext`\[CapitalDelta]i, \
$CellContext`\[CapitalDelta]Nc, $CellContext`NewNcell, $CellContext`CT}, \
$CellContext`statetmp2 = 1. Join[{
                  Part[$CellContext`imkmv, 1], 
                  Part[$CellContext`imkmv, 2], 
                  Part[$CellContext`imkmv, 3]}, 
                 Part[$CellContext`imkmv, 
                  Span[
                  4, 4 + $CellContext`imax - 
                   1]], {$CellContext`t}]; $CellContext`chooseiorm = 
              Block[{$CellContext`nondriverspace = 0, $CellContext`space = 
                 0, $CellContext`currentmut = 
                 0, $CellContext`range = {0}, $CellContext`mut = 
                 0, $CellContext`gm = 
                 0, $CellContext`dmv = $CellContext`mv0}, \
$CellContext`nondriverspace = $CellContext`maxnondrivermut - 
                  Part[$CellContext`imkmv, 
                   2]; $CellContext`space = $CellContext`maxsemidrivermut + \
$CellContext`maxdrivermut - Total[
                   Part[$CellContext`imkmv, 
                    Span[
                    4, 4 + $CellContext`imax - 
                    
                    1]]] + $CellContext`nondriverspace; \
$CellContext`currentmut = RandomInteger[{
                    Min[
                    1, $CellContext`space], $CellContext`space}] - \
$CellContext`nondriverspace; 
                If[$CellContext`currentmut > 0, $CellContext`range = Select[
                    Range[$CellContext`imax], Part[
                    Part[$CellContext`imkmv, 
                    Span[4, 4 + $CellContext`imax - 1]], #] < 
                    Part[$CellContext`Cmut, #]& ]; $CellContext`mut = 
                   Part[$CellContext`range, 
                    Min[
                    Length[$CellContext`range], $CellContext`currentmut]]; 
                  AddTo[
                    Part[$CellContext`dmv, $CellContext`mut], 
                    1], $CellContext`gm = IntegerPart[
                    RandomInteger[{1, $CellContext`maxmjump}]]]; Join[{
                   Total[
                    Most[$CellContext`dmv]], 
                   Min[$CellContext`gm, $CellContext`nondriverspace], 
                   0}, $CellContext`dmv]]; $CellContext`NewNcell = \
$CellContext`Ncell; $CellContext`\[CapitalDelta]i = {0, 
                
                First[$CellContext`chooseiorm]}; \
$CellContext`\[CapitalDelta]Nc = {0, 1}; 
             MapThread[(Part[$CellContext`NewNcell, 
                 Part[$CellContext`imkmv, 3], Part[$CellContext`imkmv, 1] + 
                 1 + #] = Part[$CellContext`NewNcell, 
                  Part[$CellContext`imkmv, 3], Part[$CellContext`imkmv, 1] + 
                  1 + #] + #2)& , {$CellContext`\[CapitalDelta]i, \
$CellContext`\[CapitalDelta]Nc}]; $CellContext`CT = (
               Compile`$252 = Part[$CellContext`imkmv, 3]; 
               Part[$CellContext`Ccell, Compile`$252] - Dot[
                  Part[$CellContext`NewNcell, Compile`$252], 
                  Part[$CellContext`ratio, Compile`$252]] >= 0); 
             If[$CellContext`CT, $CellContext`Ncell = $CellContext`NewNcell; \
$CellContext`statetmp1 = $CellContext`statetmp2 + 
                 Join[{0, 0, 0}, $CellContext`mv0, {(-Log[
                    
                    RandomReal[{0, 
                    1}]])/$CellContext`rcum1}]; $CellContext`statetmp2 = \
$CellContext`statetmp2 + Join[$CellContext`chooseiorm, {(-Log[
                    
                    RandomReal[{0, 
                    1}]])/$CellContext`rcum1}]; ($CellContext`mid = 
                 1; $CellContext`midr = 1.; $CellContext`in = 
                 2; $CellContext`fn = $CellContext`Ntot; 
                While[$CellContext`midr = ($CellContext`fn + 
                    1 - $CellContext`in) 0.5; $CellContext`midr >= 
                   1, $CellContext`mid = 
                   IntegerPart[$CellContext`midr] + $CellContext`in; 
                  If[Part[$CellContext`state, $CellContext`mid, -1] > 
                    Part[$CellContext`statetmp1, -1], $CellContext`fn = \
$CellContext`mid - 1, $CellContext`in = $CellContext`mid + 1]]; 
                If[$CellContext`midr <= 0, 
                  AddTo[$CellContext`fn, 1], 
                  If[
                  Part[$CellContext`state, $CellContext`fn, -1] < 
                   Part[$CellContext`statetmp1, -1], 
                   AddTo[$CellContext`fn, 1]]]; (
                 If[$CellContext`fn > 2, Part[$CellContext`state, 
                    Span[1, $CellContext`fn - 2]] = Part[$CellContext`state, 
                    Span[2, $CellContext`fn - 1]]]; 
                 Part[$CellContext`state, $CellContext`fn - 
                    1] = $CellContext`statetmp1)); ($CellContext`mid = 
                 1; $CellContext`midr = 1.; $CellContext`in = 
                 1; $CellContext`fn = $CellContext`Ntot; 
                While[$CellContext`midr = ($CellContext`fn + 
                    1 - $CellContext`in) 0.5; $CellContext`midr >= 
                   1, $CellContext`mid = 
                   IntegerPart[$CellContext`midr] + $CellContext`in; 
                  If[Part[$CellContext`state, $CellContext`mid, -1] > 
                    Part[$CellContext`statetmp2, -1], $CellContext`fn = \
$CellContext`mid - 1, $CellContext`in = $CellContext`mid + 1]]; 
                If[$CellContext`midr <= 0, 
                  AddTo[$CellContext`fn, 1], 
                  If[
                  Part[$CellContext`state, $CellContext`fn, -1] < 
                   Part[$CellContext`statetmp2, -1], 
                   AddTo[$CellContext`fn, 1]]]; (Part[$CellContext`state, 
                    Span[$CellContext`fn + 1, -1]] = 
                  Part[$CellContext`state, 
                    Span[$CellContext`fn, -2]]; 
                 Part[$CellContext`state, $CellContext`fn] = \
$CellContext`statetmp2)); AddTo[$CellContext`Ntot, 1]; 
               Null, $CellContext`statetmp1 = $CellContext`statetmp2 + 
                 Join[{0, 0, 0}, $CellContext`mv0, {(-Log[
                    
                    RandomReal[{0, 
                    1}]])/$CellContext`rcum1}]; ($CellContext`mid = 
                 1; $CellContext`midr = 1.; $CellContext`in = 
                 2; $CellContext`fn = $CellContext`Ntot; 
                While[$CellContext`midr = ($CellContext`fn + 
                    1 - $CellContext`in) 0.5; $CellContext`midr >= 
                   1, $CellContext`mid = 
                   IntegerPart[$CellContext`midr] + $CellContext`in; 
                  If[Part[$CellContext`state, $CellContext`mid, -1] > 
                    Part[$CellContext`statetmp1, -1], $CellContext`fn = \
$CellContext`mid - 1, $CellContext`in = $CellContext`mid + 1]]; 
                If[$CellContext`midr <= 0, 
                  AddTo[$CellContext`fn, 1], 
                  If[
                  Part[$CellContext`state, $CellContext`fn, -1] < 
                   Part[$CellContext`statetmp1, -1], 
                   AddTo[$CellContext`fn, 1]]]; (
                 If[$CellContext`fn > 2, Part[$CellContext`state, 
                    Span[1, $CellContext`fn - 2]] = Part[$CellContext`state, 
                    Span[2, $CellContext`fn - 1]]]; 
                 Part[$CellContext`state, $CellContext`fn - 
                    1] = $CellContext`statetmp1)); Null]; Null], 
            RandomReal[{0, 1}] < Part[$CellContext`probc, 2], 
            
            Block[{$CellContext`statetmp1 = {0.}, $CellContext`statetmp2 = {
               0.}, $CellContext`chooseiorm = {
               0}, $CellContext`\[CapitalDelta]i, \
$CellContext`\[CapitalDelta]Nc, $CellContext`NewNcell, $CellContext`CT}, \
$CellContext`statetmp2 = 1. Join[{
                  Part[$CellContext`imkmv, 1], 
                  Part[$CellContext`imkmv, 2], 
                  Part[$CellContext`imkmv, 3]}, 
                 Part[$CellContext`imkmv, 
                  Span[
                  4, 4 + $CellContext`imax - 
                   1]], {$CellContext`t}]; $CellContext`chooseiorm = 
              Block[{$CellContext`nondriverspace = 0, $CellContext`space = 
                 0, $CellContext`currentmut = 
                 0, $CellContext`range = {0}, $CellContext`mut = 
                 0, $CellContext`gm = 
                 0, $CellContext`dmv = $CellContext`mv0}, \
$CellContext`nondriverspace = $CellContext`maxnondrivermut - 
                  Part[$CellContext`imkmv, 
                   2]; $CellContext`space = $CellContext`maxsemidrivermut + \
$CellContext`maxdrivermut - Total[
                   Part[$CellContext`imkmv, 
                    Span[
                    4, 4 + $CellContext`imax - 
                    1]]] + $CellContext`nondriverspace; \
$CellContext`currentmut = RandomInteger[{
                    Min[
                    1, $CellContext`space], $CellContext`space}] - \
$CellContext`nondriverspace; 
                If[$CellContext`currentmut > 0, $CellContext`range = Select[
                    Range[$CellContext`imax], Part[
                    Part[$CellContext`imkmv, 
                    Span[4, 4 + $CellContext`imax - 1]], #] < 
                    Part[$CellContext`Cmut, #]& ]; $CellContext`mut = 
                   Part[$CellContext`range, 
                    Min[
                    Length[$CellContext`range], $CellContext`currentmut]]; 
                  AddTo[
                    Part[$CellContext`dmv, $CellContext`mut], 
                    1], $CellContext`gm = IntegerPart[
                    RandomInteger[{1, $CellContext`maxmjump}]]]; Join[{
                   Total[
                    Most[$CellContext`dmv]], 
                   Min[$CellContext`gm, $CellContext`nondriverspace], 
                   0}, $CellContext`dmv]]; $CellContext`NewNcell = \
$CellContext`Ncell; $CellContext`\[CapitalDelta]i = {0, 
                
                First[$CellContext`chooseiorm]}; \
$CellContext`\[CapitalDelta]Nc = {-1, 2}; 
             MapThread[(Part[$CellContext`NewNcell, 
                 Part[$CellContext`imkmv, 3], Part[$CellContext`imkmv, 1] + 
                 1 + #] = Part[$CellContext`NewNcell, 
                  Part[$CellContext`imkmv, 3], Part[$CellContext`imkmv, 1] + 
                  1 + #] + #2)& , {$CellContext`\[CapitalDelta]i, \
$CellContext`\[CapitalDelta]Nc}]; $CellContext`CT = (
               Compile`$392 = Part[$CellContext`imkmv, 3]; 
               Part[$CellContext`Ccell, Compile`$392] - Dot[
                  Part[$CellContext`NewNcell, Compile`$392], 
                  Part[$CellContext`ratio, Compile`$392]] >= 0); 
             If[$CellContext`CT, $CellContext`Ncell = $CellContext`NewNcell; \
$CellContext`statetmp1 = $CellContext`statetmp2 + 
                 Join[$CellContext`chooseiorm, {(-Log[
                    
                    RandomReal[{0, 
                    1}]])/$CellContext`rcum1}]; $CellContext`statetmp2 = \
$CellContext`statetmp2 + Join[$CellContext`chooseiorm, {(-Log[
                    
                    RandomReal[{0, 
                    1}]])/$CellContext`rcum1}]; ($CellContext`mid = 
                 1; $CellContext`midr = 1.; $CellContext`in = 
                 2; $CellContext`fn = $CellContext`Ntot; 
                While[$CellContext`midr = ($CellContext`fn + 
                    1 - $CellContext`in) 0.5; $CellContext`midr >= 
                   1, $CellContext`mid = 
                   IntegerPart[$CellContext`midr] + $CellContext`in; 
                  If[Part[$CellContext`state, $CellContext`mid, -1] > 
                    Part[$CellContext`statetmp1, -1], $CellContext`fn = \
$CellContext`mid - 1, $CellContext`in = $CellContext`mid + 1]]; 
                If[$CellContext`midr <= 0, 
                  AddTo[$CellContext`fn, 1], 
                  If[
                  Part[$CellContext`state, $CellContext`fn, -1] < 
                   Part[$CellContext`statetmp1, -1], 
                   AddTo[$CellContext`fn, 1]]]; (
                 If[$CellContext`fn > 2, Part[$CellContext`state, 
                    Span[1, $CellContext`fn - 2]] = Part[$CellContext`state, 
                    Span[2, $CellContext`fn - 1]]]; 
                 Part[$CellContext`state, $CellContext`fn - 
                    1] = $CellContext`statetmp1)); ($CellContext`mid = 
                 1; $CellContext`midr = 1.; $CellContext`in = 
                 1; $CellContext`fn = $CellContext`Ntot; 
                While[$CellContext`midr = ($CellContext`fn + 
                    1 - $CellContext`in) 0.5; $CellContext`midr >= 
                   1, $CellContext`mid = 
                   IntegerPart[$CellContext`midr] + $CellContext`in; 
                  If[Part[$CellContext`state, $CellContext`mid, -1] > 
                    Part[$CellContext`statetmp2, -1], $CellContext`fn = \
$CellContext`mid - 1, $CellContext`in = $CellContext`mid + 1]]; 
                If[$CellContext`midr <= 0, 
                  AddTo[$CellContext`fn, 1], 
                  If[
                  Part[$CellContext`state, $CellContext`fn, -1] < 
                   Part[$CellContext`statetmp2, -1], 
                   AddTo[$CellContext`fn, 1]]]; (Part[$CellContext`state, 
                    Span[$CellContext`fn + 1, -1]] = 
                  Part[$CellContext`state, 
                    Span[$CellContext`fn, -2]]; 
                 Part[$CellContext`state, $CellContext`fn] = \
$CellContext`statetmp2)); AddTo[$CellContext`Ntot, 1]; 
               Null, $CellContext`statetmp1 = $CellContext`statetmp2 + 
                 Join[{0, 0, 0}, $CellContext`mv0, {(-Log[
                    
                    RandomReal[{0, 
                    1}]])/$CellContext`rcum1}]; ($CellContext`mid = 
                 1; $CellContext`midr = 1.; $CellContext`in = 
                 2; $CellContext`fn = $CellContext`Ntot; 
                While[$CellContext`midr = ($CellContext`fn + 
                    1 - $CellContext`in) 0.5; $CellContext`midr >= 
                   1, $CellContext`mid = 
                   IntegerPart[$CellContext`midr] + $CellContext`in; 
                  If[Part[$CellContext`state, $CellContext`mid, -1] > 
                    Part[$CellContext`statetmp1, -1], $CellContext`fn = \
$CellContext`mid - 1, $CellContext`in = $CellContext`mid + 1]]; 
                If[$CellContext`midr <= 0, 
                  AddTo[$CellContext`fn, 1], 
                  If[
                  Part[$CellContext`state, $CellContext`fn, -1] < 
                   Part[$CellContext`statetmp1, -1], 
                   AddTo[$CellContext`fn, 1]]]; (
                 If[$CellContext`fn > 2, Part[$CellContext`state, 
                    Span[1, $CellContext`fn - 2]] = Part[$CellContext`state, 
                    Span[2, $CellContext`fn - 1]]]; 
                 Part[$CellContext`state, $CellContext`fn - 
                    1] = $CellContext`statetmp1)); Null]; Null], 
            RandomReal[{0, 1}] < Part[$CellContext`probc, 3], 
            
            Block[{$CellContext`\[CapitalDelta]i, \
$CellContext`\[CapitalDelta]Nc}, $CellContext`\[CapitalDelta]i = {
               0}; $CellContext`\[CapitalDelta]Nc = {-1}; 
             Part[$CellContext`Ncell, 
                Part[$CellContext`imkmv, 3], Part[$CellContext`imkmv, 1] + 1 + 
                Part[$CellContext`\[CapitalDelta]i, 1]] = 
              Part[$CellContext`Ncell, 
                 Part[$CellContext`imkmv, 3], Part[$CellContext`imkmv, 1] + 1 + 
                 Part[$CellContext`\[CapitalDelta]i, 1]] + 
               Part[$CellContext`\[CapitalDelta]Nc, 1]; (
              Part[$CellContext`state, 
                 Span[1, -2]] = Part[$CellContext`state, 
                 Span[2, -1]]; Null); SubtractFrom[$CellContext`Ntot, 1]; 
             Null], True, 
            
            Block[{$CellContext`statetmp1 = {0.}, $CellContext`statetmp2 = {
               0.}, $CellContext`chooseiorm, $CellContext`\[CapitalDelta]i, \
$CellContext`\[CapitalDelta]Nc, $CellContext`\[CapitalDelta]k, \
$CellContext`NewNcell, $CellContext`CT}, $CellContext`CT = 
              False; $CellContext`statetmp1 = 1. Join[{
                  Part[$CellContext`imkmv, 1], 
                  Part[$CellContext`imkmv, 2], 
                  Part[$CellContext`imkmv, 3]}, 
                 Part[$CellContext`imkmv, 
                  Span[
                  4, 4 + $CellContext`imax - 
                   1]], {$CellContext`t}]; $CellContext`NewNcell = \
$CellContext`Ncell; 
             If[Part[$CellContext`imkmv, 
                 3] < $CellContext`kmax, $CellContext`\[CapitalDelta]i = {0, 
                 0}; $CellContext`\[CapitalDelta]Nc = {-1, 
                 1}; $CellContext`\[CapitalDelta]k = {0, 1}; 
               Part[$CellContext`NewNcell, Part[$CellContext`imkmv, 3] + 
                  Part[$CellContext`\[CapitalDelta]k, 1], 
                  Part[$CellContext`imkmv, 1] + 1 + 
                  Part[$CellContext`\[CapitalDelta]i, 1]] = 
                Part[$CellContext`NewNcell, Part[$CellContext`imkmv, 3] + 
                   Part[$CellContext`\[CapitalDelta]k, 1], 
                   Part[$CellContext`imkmv, 1] + 1 + 
                   Part[$CellContext`\[CapitalDelta]i, 1]] + 
                 Part[$CellContext`\[CapitalDelta]Nc, 1]; 
               Part[$CellContext`NewNcell, Part[$CellContext`imkmv, 3] + 
                  Part[$CellContext`\[CapitalDelta]k, 2], 
                  Part[$CellContext`imkmv, 1] + 1 + 
                  Part[$CellContext`\[CapitalDelta]i, 2]] = 
                Part[$CellContext`NewNcell, Part[$CellContext`imkmv, 3] + 
                   Part[$CellContext`\[CapitalDelta]k, 2], 
                   Part[$CellContext`imkmv, 1] + 1 + 
                   Part[$CellContext`\[CapitalDelta]i, 2]] + 
                 Part[$CellContext`\[CapitalDelta]Nc, 2]; $CellContext`CT = (
                 Compile`$522 = Part[$CellContext`imkmv, 3]; 
                 Compile`$523 = Last[$CellContext`\[CapitalDelta]k]; 
                 Compile`$524 = Compile`$522 + Compile`$523; 
                 Part[$CellContext`Ccell, Compile`$524] - Dot[
                    Part[$CellContext`NewNcell, Compile`$524], 
                    Part[$CellContext`ratio, Compile`$524]] >= 0)]; 
             If[$CellContext`CT, $CellContext`Ncell = $CellContext`NewNcell; \
$CellContext`statetmp1 = $CellContext`statetmp1 + 
                 Join[{0, 0, 1}, $CellContext`mv0, {(-Log[
                    
                    RandomReal[{0, 
                    1}]])/$CellContext`rcum1}], $CellContext`statetmp1 = \
$CellContext`statetmp1 + Join[{0, 0, 0}, $CellContext`mv0, {(-Log[
                    
                    RandomReal[{0, 
                    1}]])/$CellContext`rcum1}]]; ($CellContext`mid = 
               1; $CellContext`midr = 1.; $CellContext`in = 
               2; $CellContext`fn = $CellContext`Ntot; 
              While[$CellContext`midr = ($CellContext`fn + 
                   1 - $CellContext`in) 0.5; $CellContext`midr >= 
                 1, $CellContext`mid = 
                 IntegerPart[$CellContext`midr] + $CellContext`in; 
                If[Part[$CellContext`state, $CellContext`mid, -1] > 
                  Part[$CellContext`statetmp1, -1], $CellContext`fn = \
$CellContext`mid - 1, $CellContext`in = $CellContext`mid + 1]]; 
              If[$CellContext`midr <= 0, 
                AddTo[$CellContext`fn, 1], 
                If[
                Part[$CellContext`state, $CellContext`fn, -1] < 
                 Part[$CellContext`statetmp1, -1], 
                 AddTo[$CellContext`fn, 1]]]; (
               If[$CellContext`fn > 2, Part[$CellContext`state, 
                   Span[1, $CellContext`fn - 2]] = Part[$CellContext`state, 
                   Span[2, $CellContext`fn - 1]]]; 
               Part[$CellContext`state, $CellContext`fn - 
                  1] = $CellContext`statetmp1)); Null]]]; $CellContext`imkmv = 
         IntegerPart[
           Part[$CellContext`state, 1, 
            Span[1, 4 + $CellContext`imax - 1]]]; $CellContext`key = 
         Apply[Plus, 
           Part[
            Part[$CellContext`imkmv, 
             Span[4, 4 + $CellContext`imax - 1]], 
            Span[1, 
             Part[$CellContext`compkeystep, 
              Part[$CellContext`imkmv, 3]]]]]; $CellContext`ss = 
         2 (E/(E - 1)) (
           Exp[-Exp[(-10.) (($CellContext`key + 1)/(10 
                Exp[Part[$CellContext`imkmv, 2]^0.5/2]))]] - 1/
           E); $CellContext`keyg = Apply[Times, 
           Part[$CellContext`genes^(Part[$CellContext`imkmv, 
               Span[4, -1]] $CellContext`signature), 
            Span[1, 
             Part[$CellContext`compkeystep, 
              Part[$CellContext`imkmv, 3]]]]]; $CellContext`rates = (
          Compile`$611 = -$CellContext`wide; 
          Compile`$609 = Part[$CellContext`imkmv, 3]; Compile`$612 = 2^(-1); 
          Compile`$613 = Compile`$611 Compile`$612; 
          Compile`$614 = E^Compile`$613; 
          Join[{Part[$CellContext`Aasym, Compile`$609] 
             Exp[-($CellContext`slope 
                Compile`$614 (Cosh[Compile`$611 ($CellContext`ss - 2.)] - 
                 1))], Part[$CellContext`Asym, Compile`$609] 
             Exp[-($CellContext`slope 
                Compile`$614 (Cosh[Compile`$611 ($CellContext`ss - 1.)] - 
                 1))], Part[$CellContext`Aapop, Compile`$609] 
             Exp[-($CellContext`slope 
                Compile`$614 (Cosh[Compile`$611 ($CellContext`ss - 0.5)] - 
                 1))]}, {
            Part[$CellContext`krates, 
               Compile`$609] $CellContext`keyg}]); $CellContext`ratescum = 
         Accumulate[$CellContext`rates]; $CellContext`rcum1 = 
         Part[$CellContext`ratescum, -1]; $CellContext`ratesn = \
$CellContext`rates/$CellContext`rcum1; $CellContext`nondriverspace = \
$CellContext`maxnondrivermut - 
          Part[$CellContext`imkmv, 
           2]; $CellContext`semidriverspace = $CellContext`maxsemidrivermut - 
          Part[$CellContext`imkmv, -1]; $CellContext`driverspace = \
$CellContext`maxdrivermut - Total[
           Part[$CellContext`imkmv, 
            Span[
            4, -2]]]; $CellContext`space = $CellContext`nondriverspace + \
$CellContext`semidriverspace + $CellContext`driverspace; \
$CellContext`spaceprob = {$CellContext`driverspace, \
$CellContext`semidriverspace, $CellContext`nondriverspace}/$CellContext`space; 
        Internal`StuffBag[$CellContext`stateslist, $CellContext`state, 2]; 
        Internal`StuffBag[$CellContext`Ncslist, $CellContext`Ncell, 2]; 
        Internal`StuffBag[$CellContext`probslist, $CellContext`ratesn, 2]; 
        Internal`StuffBag[$CellContext`spprobslist, $CellContext`spaceprob, 
          2]; Internal`StuffBag[$CellContext`Ntslist, $CellContext`Ntot]; 
        Internal`StuffBag[$CellContext`tslist, $CellContext`t]; Null]; 
      Internal`StuffBag[$CellContext`stateslist, 
        Internal`BagPart[$CellContext`Ncslist, All], 1]; 
      Internal`StuffBag[$CellContext`stateslist, 
        Internal`BagPart[$CellContext`probslist, All], 1]; 
      Internal`StuffBag[$CellContext`stateslist, 
        Internal`BagPart[$CellContext`spprobslist, All], 1]; 
      Internal`StuffBag[$CellContext`stateslist, 
        Internal`BagPart[$CellContext`Ntslist, All], 1]; 
      Internal`StuffBag[$CellContext`stateslist, 
        Internal`BagPart[$CellContext`tslist, All], 1]; 
      Internal`StuffBag[$CellContext`stateslist, $CellContext`Nmax]; 
      Internal`StuffBag[$CellContext`stateslist, $CellContext`imax]; 
      Internal`StuffBag[$CellContext`stateslist, $CellContext`ct + 1]; 
      Internal`StuffBag[$CellContext`stateslist, 
        Dimensions[$CellContext`state], 1]; 
      Internal`StuffBag[$CellContext`stateslist, $CellContext`ct + 1]; 
      Internal`StuffBag[$CellContext`stateslist, 
        Dimensions[$CellContext`Ncell], 1]; 
      Internal`StuffBag[$CellContext`stateslist, $CellContext`ct + 1]; 
      Internal`StuffBag[$CellContext`stateslist, 
        Dimensions[$CellContext`ratesn], 1]; 
      Internal`StuffBag[$CellContext`stateslist, $CellContext`ct + 1]; 
      Internal`StuffBag[$CellContext`stateslist, 
        Dimensions[$CellContext`spaceprob], 1]; 
      Internal`StuffBag[$CellContext`stateslist, $CellContext`ct + 1]; 
      Internal`StuffBag[$CellContext`stateslist, $CellContext`ct + 1]; 
      Internal`StuffBag[$CellContext`stateslist, 
        Length[
         Dimensions[{$CellContext`state}]]]; 
      Internal`StuffBag[$CellContext`stateslist, 
        Length[
         Dimensions[{$CellContext`Ncell}]]]; 
      Internal`StuffBag[$CellContext`stateslist, 
        Length[
         Dimensions[{$CellContext`ratesn}]]]; 
      Internal`StuffBag[$CellContext`stateslist, 
        Length[
         Dimensions[{$CellContext`spaceprob}]]]; 
      Internal`StuffBag[$CellContext`stateslist, 
        Length[
         Dimensions[{$CellContext`Ntot}]]]; 
      Internal`StuffBag[$CellContext`stateslist, 
        Length[
         Dimensions[{$CellContext`t}]]]; 
      Internal`StuffBag[$CellContext`stateslist, 0]; 
      Internal`StuffBag[$CellContext`stateslist, 0]; 
      Internal`StuffBag[$CellContext`stateslist, 8]; 
      Internal`BagPart[$CellContext`stateslist, All]]]], Evaluate, 
   LibraryFunction[
   "/home/math/.Mathematica/ApplicationData/CCompilerDriver/BuildFolder/gasc-\
PORTEGE-5154/compiledFunction0.so", 
    "compiledFunction0", {{Integer, 0, "Constant"}, {
     Integer, 0, "Constant"}, {Integer, 0, "Constant"}, {
     Integer, 0, "Constant"}, {Integer, 0, "Constant"}, {
     Integer, 0, "Constant"}, {Integer, 0, "Constant"}, {
     Integer, 1, "Constant"}, {Integer, 1, "Constant"}, {
     Real, 1, "Constant"}, {Real, 1, "Constant"}, {Integer, 0, "Constant"}, {
     Integer, 0, "Constant"}, {Integer, 0, "Constant"}, {
     Integer, 0, "Constant"}, {Real, 1, "Constant"}, {Real, 1, "Constant"}, {
     Real, 1, "Constant"}, {Real, 0, "Constant"}, {Real, 0, "Constant"}, {
     Real, 0, "Constant"}, {Real, 0, "Constant"}, {Real, 2, "Constant"}}, {
    Real, 1}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.6640181155093307`*^9, 3.664018189081586*^9, {3.664018444210619*^9, 
   3.664018460196019*^9}, 3.6640188033373938`*^9, 3.6640880998412647`*^9, 
   3.664094718180035*^9, 3.6699676950635633`*^9, 3.669968418222286*^9, 
   3.669968491581407*^9, 3.6699706908983192`*^9, 3.6699715742364187`*^9, 
   3.669971991220497*^9, 3.6699722255643997`*^9, 3.6699754186017447`*^9, 
   3.6699756291547728`*^9, 3.669975994979362*^9, 3.66997605431007*^9, 
   3.6699765449557543`*^9, 3.6699766373576803`*^9, 3.669976692501404*^9, 
   3.6699771718334513`*^9, 3.669977351218872*^9, 3.6699774245853558`*^9, 
   3.669977499579049*^9, 3.669977566081949*^9, 3.6699776755825243`*^9, 
   3.669978184970989*^9, 3.669978378726881*^9, 3.669978497571783*^9, 
   3.669981426612282*^9, 3.6699814631857862`*^9, 3.669981679036313*^9, 
   3.669981906596302*^9, 3.669982106122714*^9, 3.669982209754464*^9, 
   3.6699823522860622`*^9, 3.669982717554985*^9, 3.670056537604946*^9, 
   3.6700568051685343`*^9, 3.670057008766395*^9, 3.670057579291255*^9, 
   3.6700577076524477`*^9, 3.670058048712963*^9, 3.670058322270002*^9, 
   3.670058434353176*^9, 3.670059112532032*^9, 3.670059219880517*^9, 
   3.67005940135124*^9, 3.670060216602096*^9, 3.670060432976081*^9, 
   3.670062758715705*^9, 3.670062850839931*^9, 3.670063208334785*^9, 
   3.6700633855711107`*^9, 3.670063989346428*^9, 3.670064425297653*^9, {
   3.6700645013280983`*^9, 3.670064519290601*^9}, 3.670064656195736*^9, 
   3.670064749793758*^9, {3.6700648106654673`*^9, 3.670064841622046*^9}, 
   3.6700649315762653`*^9, 3.6700652037548237`*^9, 3.6700656154835033`*^9, 
   3.670065853120056*^9, 3.6700659720909567`*^9, 3.6700662811543083`*^9, 
   3.670066529769712*^9, 3.670066912535555*^9, 3.6700670540016317`*^9, 
   3.6700671467422533`*^9, 3.670067214277178*^9, 3.670130303457408*^9, 
   3.670130505776822*^9, 3.6701305919320517`*^9, 3.670130732008753*^9, 
   3.6701308707354517`*^9, 3.6701309304697866`*^9, 3.6701320107371607`*^9, 
   3.670132096951704*^9, 3.67013214000135*^9, 3.6701327517582273`*^9, {
   3.6701443044165277`*^9, 3.6701443235913267`*^9}, 3.670144438393201*^9, 
   3.670144496076055*^9, 3.670144558165277*^9, 3.6701445931108923`*^9, {
   3.670144629126129*^9, 3.670144674830678*^9}, 3.670144792284513*^9, 
   3.670144854331517*^9, 3.670144934420072*^9, 3.670144982118718*^9, 
   3.670145018571767*^9, 3.670145055154375*^9, 3.670145092459331*^9, 
   3.6701452129407797`*^9, {3.6701452899536047`*^9, 3.670145307174653*^9}, 
   3.670145400542819*^9, 3.6701454437351418`*^9, 3.67014549115723*^9, 
   3.670146315177278*^9, 3.6701487479731913`*^9, 3.670148838173698*^9, 
   3.670149854391037*^9, {3.670149924700811*^9, 3.670149946409416*^9}, 
   3.670149999119948*^9, 3.670150616544239*^9, 3.6701506555203543`*^9, 
   3.670150772711566*^9, 3.67015102216116*^9, 3.670151365261366*^9, 
   3.6701519646335506`*^9, 3.670151997264225*^9, 3.6701522996413107`*^9, 
   3.670219327300762*^9, 3.670219707115041*^9, 3.6702201777189713`*^9, 
   3.670220728549267*^9, 3.670221194929261*^9, 3.670221819201837*^9, 
   3.670222761445896*^9, 3.670222860624797*^9, {3.6702238228532867`*^9, 
   3.6702238354713907`*^9}, 3.6702242099652042`*^9, 3.670224311226985*^9, 
   3.670326925542701*^9, 3.670327074512903*^9, {3.6703276110720654`*^9, 
   3.670327615547452*^9}, 3.6703277019751472`*^9, {3.670327736522317*^9, 
   3.670327760719808*^9}, {3.670328029189398*^9, 3.670328038246364*^9}, 
   3.6704160681636457`*^9, 3.670422185791072*^9, 3.6704222367219563`*^9, 
   3.6704223061713057`*^9, 3.6704235925559196`*^9, 3.6704238257731657`*^9, {
   3.670424209158888*^9, 3.6704242494803333`*^9}, 3.67042450377594*^9, 
   3.670424622425344*^9, 3.670433859255189*^9, 3.6704340021145*^9, 
   3.670487280569542*^9, 3.670577904965333*^9, 3.670578302874729*^9, 
   3.670578571815647*^9, 3.670578705984535*^9, 3.670578772444538*^9, 
   3.67057881932285*^9, 3.670578865685047*^9, 3.670578895954515*^9, 
   3.670579784972622*^9, 3.6705813524212646`*^9, 3.670581566922277*^9, 
   3.670583458986826*^9, {3.67058354200576*^9, 3.670583554751342*^9}, {
   3.6705836249339848`*^9, 3.6705836401904783`*^9}, 3.670583742787154*^9, 
   3.670583784630916*^9, {3.6705849364691887`*^9, 3.670584956407209*^9}, 
   3.670585027389889*^9, 3.670585424037038*^9, 3.6705867705194073`*^9, 
   3.670586980311491*^9, 3.6705871867333527`*^9, 3.670587412872888*^9, 
   3.6705874730333433`*^9, 3.670648441567862*^9, {3.670650773861538*^9, 
   3.670650786306658*^9}, 3.670653666329154*^9, 3.670653719811614*^9, 
   3.671341861266762*^9, 3.671342098660111*^9, 3.671359252782011*^9, {
   3.671359472968066*^9, 3.671359492268285*^9}, 3.6726414088027267`*^9, 
   3.672641455890646*^9, {3.672641486766947*^9, 3.67264149466776*^9}, {
   3.672641611947465*^9, 3.672641703831547*^9}, {3.67264179240405*^9, 
   3.6726418060562572`*^9}, {3.6726418477275953`*^9, 3.6726419106597033`*^9}, 
   3.672642008608289*^9, {3.672642116919244*^9, 3.6726421486252613`*^9}, 
   3.672654503511805*^9, 3.6726545648739643`*^9, 3.672654991493643*^9, 
   3.672655732369685*^9, 3.6729817602693*^9, 3.672983623142447*^9, 
   3.672983653864812*^9, 3.672998178136204*^9, 3.672999232019256*^9, 
   3.6729992769865303`*^9, 3.672999541712023*^9, 3.673014108077014*^9, 
   3.673027217496099*^9, 3.6730284601800337`*^9, 3.6730287349419727`*^9}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{
  3.6640181155093307`*^9, 3.664018189081586*^9, {3.664018444210619*^9, 
   3.664018460196019*^9}, 3.6640188033373938`*^9, 3.6640880998412647`*^9, 
   3.664094718180035*^9, 3.6699676950635633`*^9, 3.669968418222286*^9, 
   3.669968491581407*^9, 3.6699706908983192`*^9, 3.6699715742364187`*^9, 
   3.669971991220497*^9, 3.6699722255643997`*^9, 3.6699754186017447`*^9, 
   3.6699756291547728`*^9, 3.669975994979362*^9, 3.66997605431007*^9, 
   3.6699765449557543`*^9, 3.6699766373576803`*^9, 3.669976692501404*^9, 
   3.6699771718334513`*^9, 3.669977351218872*^9, 3.6699774245853558`*^9, 
   3.669977499579049*^9, 3.669977566081949*^9, 3.6699776755825243`*^9, 
   3.669978184970989*^9, 3.669978378726881*^9, 3.669978497571783*^9, 
   3.669981426612282*^9, 3.6699814631857862`*^9, 3.669981679036313*^9, 
   3.669981906596302*^9, 3.669982106122714*^9, 3.669982209754464*^9, 
   3.6699823522860622`*^9, 3.669982717554985*^9, 3.670056537604946*^9, 
   3.6700568051685343`*^9, 3.670057008766395*^9, 3.670057579291255*^9, 
   3.6700577076524477`*^9, 3.670058048712963*^9, 3.670058322270002*^9, 
   3.670058434353176*^9, 3.670059112532032*^9, 3.670059219880517*^9, 
   3.67005940135124*^9, 3.670060216602096*^9, 3.670060432976081*^9, 
   3.670062758715705*^9, 3.670062850839931*^9, 3.670063208334785*^9, 
   3.6700633855711107`*^9, 3.670063989346428*^9, 3.670064425297653*^9, {
   3.6700645013280983`*^9, 3.670064519290601*^9}, 3.670064656195736*^9, 
   3.670064749793758*^9, {3.6700648106654673`*^9, 3.670064841622046*^9}, 
   3.6700649315762653`*^9, 3.6700652037548237`*^9, 3.6700656154835033`*^9, 
   3.670065853120056*^9, 3.6700659720909567`*^9, 3.6700662811543083`*^9, 
   3.670066529769712*^9, 3.670066912535555*^9, 3.6700670540016317`*^9, 
   3.6700671467422533`*^9, 3.670067214277178*^9, 3.670130303457408*^9, 
   3.670130505776822*^9, 3.6701305919320517`*^9, 3.670130732008753*^9, 
   3.6701308707354517`*^9, 3.6701309304697866`*^9, 3.6701320107371607`*^9, 
   3.670132096951704*^9, 3.67013214000135*^9, 3.6701327517582273`*^9, {
   3.6701443044165277`*^9, 3.6701443235913267`*^9}, 3.670144438393201*^9, 
   3.670144496076055*^9, 3.670144558165277*^9, 3.6701445931108923`*^9, {
   3.670144629126129*^9, 3.670144674830678*^9}, 3.670144792284513*^9, 
   3.670144854331517*^9, 3.670144934420072*^9, 3.670144982118718*^9, 
   3.670145018571767*^9, 3.670145055154375*^9, 3.670145092459331*^9, 
   3.6701452129407797`*^9, {3.6701452899536047`*^9, 3.670145307174653*^9}, 
   3.670145400542819*^9, 3.6701454437351418`*^9, 3.67014549115723*^9, 
   3.670146315177278*^9, 3.6701487479731913`*^9, 3.670148838173698*^9, 
   3.670149854391037*^9, {3.670149924700811*^9, 3.670149946409416*^9}, 
   3.670149999119948*^9, 3.670150616544239*^9, 3.6701506555203543`*^9, 
   3.670150772711566*^9, 3.67015102216116*^9, 3.670151365261366*^9, 
   3.6701519646335506`*^9, 3.670151997264225*^9, 3.6701522996413107`*^9, 
   3.670219327300762*^9, 3.670219707115041*^9, 3.6702201777189713`*^9, 
   3.670220728549267*^9, 3.670221194929261*^9, 3.670221819201837*^9, 
   3.670222761445896*^9, 3.670222860624797*^9, {3.6702238228532867`*^9, 
   3.6702238354713907`*^9}, 3.6702242099652042`*^9, 3.670224311226985*^9, 
   3.670326925542701*^9, 3.670327074512903*^9, {3.6703276110720654`*^9, 
   3.670327615547452*^9}, 3.6703277019751472`*^9, {3.670327736522317*^9, 
   3.670327760719808*^9}, {3.670328029189398*^9, 3.670328038246364*^9}, 
   3.6704160681636457`*^9, 3.670422185791072*^9, 3.6704222367219563`*^9, 
   3.6704223061713057`*^9, 3.6704235925559196`*^9, 3.6704238257731657`*^9, {
   3.670424209158888*^9, 3.6704242494803333`*^9}, 3.67042450377594*^9, 
   3.670424622425344*^9, 3.670433859255189*^9, 3.6704340021145*^9, 
   3.670487280569542*^9, 3.670577904965333*^9, 3.670578302874729*^9, 
   3.670578571815647*^9, 3.670578705984535*^9, 3.670578772444538*^9, 
   3.67057881932285*^9, 3.670578865685047*^9, 3.670578895954515*^9, 
   3.670579784972622*^9, 3.6705813524212646`*^9, 3.670581566922277*^9, 
   3.670583458986826*^9, {3.67058354200576*^9, 3.670583554751342*^9}, {
   3.6705836249339848`*^9, 3.6705836401904783`*^9}, 3.670583742787154*^9, 
   3.670583784630916*^9, {3.6705849364691887`*^9, 3.670584956407209*^9}, 
   3.670585027389889*^9, 3.670585424037038*^9, 3.6705867705194073`*^9, 
   3.670586980311491*^9, 3.6705871867333527`*^9, 3.670587412872888*^9, 
   3.6705874730333433`*^9, 3.670648441567862*^9, {3.670650773861538*^9, 
   3.670650786306658*^9}, 3.670653666329154*^9, 3.670653719811614*^9, 
   3.671341861266762*^9, 3.671342098660111*^9, 3.671359252782011*^9, {
   3.671359472968066*^9, 3.671359492268285*^9}, 3.6726414088027267`*^9, 
   3.672641455890646*^9, {3.672641486766947*^9, 3.67264149466776*^9}, {
   3.672641611947465*^9, 3.672641703831547*^9}, {3.67264179240405*^9, 
   3.6726418060562572`*^9}, {3.6726418477275953`*^9, 3.6726419106597033`*^9}, 
   3.672642008608289*^9, {3.672642116919244*^9, 3.6726421486252613`*^9}, 
   3.672654503511805*^9, 3.6726545648739643`*^9, 3.672654991493643*^9, 
   3.672655732369685*^9, 3.6729817602693*^9, 3.672983623142447*^9, 
   3.672983653864812*^9, 3.672998178136204*^9, 3.672999232019256*^9, 
   3.6729992769865303`*^9, 3.672999541712023*^9, 3.673014108077014*^9, 
   3.673027217496099*^9, 3.6730284601800337`*^9, 3.6730287355700274`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Run", "Subsection",
 CellChangeTimes->{{3.657006576744567*^9, 3.6570065805686617`*^9}, 
   3.657007431809258*^9, 3.66289321186264*^9, {3.663222793000924*^9, 
   3.663222803202347*^9}, {3.6640178852552357`*^9, 3.6640178859541597`*^9}, {
   3.670654001186345*^9, 3.670654002338118*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Simulation ",
 Cell[BoxData[
  ButtonBox["\<\"Evaluate\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
       EvaluationNotebook[], All, ButtonCell] SelectionMove[
       EvaluationNotebook[], All, CellGroup]) SelectionEvaluateCreateCell[
      EvaluationNotebook[]],
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False,
  CellChangeTimes->{3.6252904677946167`*^9, 3.626670633881194*^9, 
   3.6519101150134897`*^9}]
}], "Subsubsection",
 CellChangeTimes->{{3.651910339748372*^9, 3.651910345476472*^9}, {
  3.6519103897649527`*^9, 3.651910391384837*^9}, {3.651910480974146*^9, 
  3.651910484694303*^9}, {3.6642583962201366`*^9, 3.66425839871624*^9}, {
  3.6642584307245283`*^9, 3.66425844154867*^9}}],

Cell[BoxData[
 RowBox[{"RunMain", ":=", 
  RowBox[{"Block", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
     "cen2", ",", "wide2", ",", "slope2", ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "Aasym2", ",", " ", 
      RowBox[{"(*", 
       RowBox[{
       "kmax", " ", "asymmetric", " ", "proliferation", " ", "rate", " ", 
        "amplitudes"}], " ", "*)"}], "\[IndentingNewLine]", "Asym2", ",", " ", 
      RowBox[{"(*", 
       RowBox[{
       "kmax", " ", "symmetric", " ", "proliferation", " ", "rate", " ", 
        "amplitudes"}], " ", "*)"}], "\[IndentingNewLine]", "Aapop2", ",", 
      " ", 
      RowBox[{"(*", 
       RowBox[{"kmax", " ", "apoptotic", " ", "rate", " ", "amplitudes"}], 
       " ", "*)"}], "\[IndentingNewLine]", "Apass2", ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "imax2", ",", " ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"number", " ", "of", " ", "driver", " ", "mutations"}], "+", 
        RowBox[{"1", " ", 
         RowBox[{"(", 
          RowBox[{
          "for", " ", "the", " ", "non", " ", "mutated", " ", "case"}], 
          ")"}]}]}], "*)"}], "\[IndentingNewLine]", "kmax2", ",", " ", 
      RowBox[{"(*", 
       RowBox[{"number", " ", "of", " ", "compartments"}], "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "Ccell2", ",", 
      RowBox[{"(*", 
       RowBox[{
       "capacities", " ", "may", " ", "be", " ", "different", " ", "in", " ", 
        "each", " ", "compartment"}], " ", "*)"}], "\[IndentingNewLine]", 
      "ratio2", ",", 
      RowBox[{"(*", 
       RowBox[{
       "imax", "*", "kmax", " ", "matrix", " ", "of", " ", "identical", " ", 
        "columns"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"EPCAMexp", "=", "1"}], ",", 
      RowBox[{"CD47exp", "=", "1"}], ",", 
      RowBox[{"CD44exp", "=", "1"}], ",", 
      RowBox[{"METexp", "=", "1"}], ",", 
      RowBox[{"EPCAMcnt", "=", "1"}], ",", 
      RowBox[{"CD47cnt", "=", "1"}], ",", 
      RowBox[{"CD44cnt", "=", "1"}], ",", 
      RowBox[{"METcnt", "=", "1"}], ",", "\[IndentingNewLine]", "expG2", ",", 
      "cntG2", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "compkeystep2", ",", "\[IndentingNewLine]", "signature2", ",", " ", 
      RowBox[{"(*", 
       RowBox[{
       "the", " ", "0", " ", "is", " ", "for", " ", "the", " ", "semidriver", 
        " ", "mutations"}], "*)"}], "\[IndentingNewLine]", 
      "maxsemidrivermut2", ",", " ", 
      RowBox[{"(*", 
       RowBox[{
       "maximum", " ", "number", " ", "of", " ", "semidriver", " ", 
        "mutations"}], "*)"}], "\[IndentingNewLine]", "maxnondrivermut2", ",",
       " ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"this", " ", "is", " ", "mmax"}], ",", " ", 
        RowBox[{
        "the", " ", "maximum", " ", "number", " ", "of", " ", "non", " ", 
         "driver", " ", "mutations"}]}], "*)"}], "\[IndentingNewLine]", 
      "maxmjump2", ",", "maxtjump2", ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "Ntot2", ",", "Nmax2", ",", 
      RowBox[{"(*", 
       RowBox[{">", "Ntot"}], "*)"}], "\[IndentingNewLine]", "scegli2", ",", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"intero", " ", "tra", " ", "0", " ", "e", " ", "Ntot"}], "-", 
        "Nmax"}], "*)"}], "\[IndentingNewLine]", "ctmax2", ",", "tmax2"}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"cen2", "=", "0.5"}], ";", 
     RowBox[{"wide2", "=", "20"}], ";", 
     RowBox[{"slope2", "=", "0.01"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Aasym2", "=", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{
      "kmax", " ", "asymmetric", " ", "proliferation", " ", "rate", " ", 
       "amplitudes"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Asym2", "=", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{
      "kmax", " ", "symmetric", " ", "proliferation", " ", "rate", " ", 
       "amplitudes"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Aapop2", "=", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{"kmax", " ", "apoptotic", " ", "rate", " ", "amplitudes"}], " ",
       "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Apass2", "=", "0.1"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"imax2", "=", "5"}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"number", " ", "of", " ", "driver", " ", "mutations"}], "+", 
       RowBox[{"1", " ", 
        RowBox[{"(", 
         RowBox[{"for", " ", "the", " ", "non", " ", "mutated", " ", "case"}],
          ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"kmax2", "=", "3"}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{"number", " ", "of", " ", "compartments"}], "*)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Ccell2", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"100", ",", "kmax2"}], "]"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{
      "capacities", " ", "may", " ", "be", " ", "different", " ", "in", " ", 
       "each", " ", "compartment"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"ratio2", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1.2"}], "}"}], ",", 
        "kmax2"}], "]"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{
      "imax", "*", "kmax", " ", "matrix", " ", "of", " ", "identical", " ", 
       "columns"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"EPCAMexp", "=", "1"}], ";", 
     RowBox[{"CD47exp", "=", "1"}], ";", 
     RowBox[{"CD44exp", "=", "1"}], ";", 
     RowBox[{"METexp", "=", "1"}], ";", 
     RowBox[{"EPCAMcnt", "=", "1"}], ";", 
     RowBox[{"CD47cnt", "=", "1"}], ";", 
     RowBox[{"CD44cnt", "=", "1"}], ";", 
     RowBox[{"METcnt", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"expG2", "=", 
      RowBox[{"{", 
       RowBox[{
       "EPCAMexp", ",", "CD47exp", ",", "CD44exp", ",", "METexp", ",", "1"}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cntG2", "=", 
      RowBox[{"{", 
       RowBox[{
       "EPCAMcnt", ",", "CD47cnt", ",", "CD44cnt", ",", "METcnt", ",", "1"}], 
       "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"compkeystep2", "=", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "4"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"signature2", "=", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "0"}], "}"}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{
      "the", " ", "0", " ", "is", " ", "for", " ", "the", " ", "semidriver", 
       " ", "mutations"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"maxsemidrivermut2", "=", "10"}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{
      "maximum", " ", "number", " ", "of", " ", "semidriver", " ", 
       "mutations"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"maxnondrivermut2", "=", "10"}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"this", " ", "is", " ", "mmax"}], ",", " ", 
       RowBox[{
       "the", " ", "maximum", " ", "number", " ", "of", " ", "non", " ", 
        "driver", " ", "mutations"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"maxmjump2", "=", "5"}], ";", 
     RowBox[{"maxtjump2", "=", "10"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Ntot2", "=", "10"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Nmax2", "=", "15"}], ";", 
     RowBox[{"(*", 
      RowBox[{">", "Ntot"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"scegli2", "=", "0"}], ";", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"intero", " ", "tra", " ", "0", " ", "e", " ", "Ntot"}], "-", 
       "Nmax"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"ctmax2", "=", "40"}], ";", 
     RowBox[{"tmax2", "=", "30"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"rawresults", "=", 
      RowBox[{"Main", "[", "\[IndentingNewLine]", 
       RowBox[{
       "Ntot2", ",", "Nmax2", ",", "scegli2", ",", "kmax2", ",", "imax2", ",",
         "maxsemidrivermut2", ",", "\[IndentingNewLine]", "maxnondrivermut2", 
        ",", "signature2", ",", "compkeystep2", ",", "expG2", ",", "cntG2", 
        ",", "ctmax2", ",", "\[IndentingNewLine]", "tmax2", ",", "maxmjump2", 
        ",", "maxtjump2", ",", "Aasym2", ",", "Asym2", ",", "Aapop2", ",", 
        "\[IndentingNewLine]", "Apass2", ",", "cen2", ",", "wide2", ",", 
        "slope2", ",", "ratio2"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"rawresults", "=", 
      RowBox[{"MainNC", "[", "\[IndentingNewLine]", 
       RowBox[{
       "Ntot2", ",", "Nmax2", ",", "scegli2", ",", "kmax2", ",", "imax2", ",",
         "maxsemidrivermut2", ",", "\[IndentingNewLine]", "maxnondrivermut2", 
        ",", "signature2", ",", "compkeystep2", ",", "expG2", ",", "cntG2", 
        ",", "ctmax2", ",", "\[IndentingNewLine]", "tmax2", ",", "maxmjump2", 
        ",", "maxtjump2", ",", "Aasym2", ",", "Asym2", ",", "Aapop2", ",", 
        "\[IndentingNewLine]", "Apass2", ",", "cen2", ",", "wide2", ",", 
        "slope2", ",", "ratio2"}], "]"}]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{
  3.6640176844621468`*^9, 3.669975564013158*^9, {3.669981376797731*^9, 
   3.669981377665331*^9}, {3.669981429687957*^9, 3.6699814306968937`*^9}, {
   3.669981807262089*^9, 3.669981815047385*^9}, {3.670064007587734*^9, 
   3.670064018978121*^9}, 3.670064111138898*^9, {3.670152050717429*^9, 
   3.6701520516918077`*^9}, 3.6705804898767242`*^9, 3.670580775974081*^9, 
   3.6705824695440617`*^9, 3.6705846826869593`*^9, 3.670585099017655*^9, 
   3.670654327751195*^9, {3.671342064432239*^9, 3.671342072040392*^9}}]
}, Closed]]
}, Closed]],

Cell[TextData[{
 "go  ",
 Cell[BoxData[
  ButtonBox["\<\"RUN\"\>",
   Appearance->Automatic,
   ButtonFunction:>SetSelectedNotebook[
      MessagesNotebook[]] For[$CellContext`ict = 0, $CellContext`ict < 10, 
      Increment[$CellContext`ict], 
      Print[$CellContext`ict, " ", Global`RunMain]],
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False,
  CellChangeTimes->{3.6252904677946167`*^9, 3.626670633881194*^9, 
   3.6519101150134897`*^9}]
}], "Subsection",
 CellChangeTimes->{{3.657006576744567*^9, 3.6570065805686617`*^9}, 
   3.657007431809258*^9, 3.66289321186264*^9, {3.663222793000924*^9, 
   3.663222803202347*^9}, {3.6640178852552357`*^9, 3.6640178859541597`*^9}, {
   3.6701327876604033`*^9, 3.670132807222745*^9}}],

Cell[CellGroupData[{

Cell["Results", "Subsection",
 CellChangeTimes->{{3.657006576744567*^9, 3.6570065805686617`*^9}, 
   3.657007431809258*^9, 3.66289321186264*^9, {3.663222823984118*^9, 
   3.663222825527197*^9}, {3.670149564636858*^9, 3.670149566812821*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Format Results ",
 Cell[BoxData[
  ButtonBox["\<\"Evaluate\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
       EvaluationNotebook[], All, ButtonCell] SelectionMove[
       EvaluationNotebook[], All, CellGroup]) SelectionEvaluateCreateCell[
      EvaluationNotebook[]],
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False,
  CellChangeTimes->{3.6252904677946167`*^9, 3.626670633881194*^9, 
   3.6519101150134897`*^9}]
}], "Subsubsection",
 CellChangeTimes->{{3.651910339748372*^9, 3.651910345476472*^9}, {
  3.6519103897649527`*^9, 3.651910391384837*^9}, {3.651910480974146*^9, 
  3.651910484694303*^9}, {3.6642583962201366`*^9, 3.66425839871624*^9}, {
  3.6642584530768423`*^9, 3.664258457491781*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"formattedresults", "=", 
   RowBox[{"myfuckup", "[", "rawresults", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "states", ",", "populations", ",", "probabilities", ",", 
     "geneprobabilities", ",", "totalcells", ",", "eventtimes", ",", "NmaxE", 
     ",", "imaxE"}], "}"}], "=", "formattedresults"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"totalcells", "=", 
  RowBox[{"IntegerPart", "@", "totalcells"}]}], "\[IndentingNewLine]", 
 RowBox[{"NmaxE", "=", 
  RowBox[{"IntegerPart", "@", "NmaxE"}]}], "\[IndentingNewLine]", 
 RowBox[{"imaxE", "=", 
  RowBox[{"IntegerPart", "@", "imaxE"}]}]}], "Input",
 CellChangeTimes->{{3.664094145911415*^9, 3.664094149584659*^9}, {
  3.664094448318722*^9, 3.664094460581895*^9}, {3.66409939831627*^9, 
  3.664099401882806*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10", ",", "9", ",", "10", ",", "9", ",", "10", ",", "9", ",", "10", ",", 
   "9", ",", "10", ",", "9", ",", "8", ",", "7", ",", "8", ",", "9", ",", 
   "10", ",", "11", ",", "10", ",", "11", ",", "12", ",", "11", ",", "12", 
   ",", "11", ",", "12", ",", "13", ",", "12", ",", "13", ",", "12", ",", 
   "11", ",", "12", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15", 
   ",", "14", ",", "13", ",", "14", ",", "15", ",", "15", ",", "15", ",", 
   "15"}], "}"}]], "Output",
 CellChangeTimes->{{3.664094431676642*^9, 3.6640944613472433`*^9}, {
   3.664095064022481*^9, 3.664095085791854*^9}, 3.664097452443685*^9, 
   3.6640997062131157`*^9, 3.6641761759337473`*^9, 3.664176275561586*^9, 
   3.664176393149013*^9, 3.664176590659693*^9, 3.664176711989214*^9, 
   3.664176874518199*^9, 3.664177178445511*^9, 3.664177286022644*^9, {
   3.664177375955913*^9, 3.6641774051375427`*^9}, 3.664177475259384*^9, {
   3.664177510759157*^9, 3.664177541872295*^9}, {3.664177605969967*^9, 
   3.664177612020418*^9}, {3.6641776940423107`*^9, 3.664177706261491*^9}, 
   3.6641777734604607`*^9, 3.6641879703484898`*^9, 3.6642589159412203`*^9, 
   3.6700636434085617`*^9, 3.672644018950122*^9, 3.6726557566392813`*^9, 
   3.672981828349823*^9, {3.6729835603815193`*^9, 3.672983578462817*^9}, 
   3.672999234011415*^9, {3.672999278827272*^9, 3.6729993035797367`*^9}}],

Cell[BoxData["15"], "Output",
 CellChangeTimes->{{3.664094431676642*^9, 3.6640944613472433`*^9}, {
   3.664095064022481*^9, 3.664095085791854*^9}, 3.664097452443685*^9, 
   3.6640997062131157`*^9, 3.6641761759337473`*^9, 3.664176275561586*^9, 
   3.664176393149013*^9, 3.664176590659693*^9, 3.664176711989214*^9, 
   3.664176874518199*^9, 3.664177178445511*^9, 3.664177286022644*^9, {
   3.664177375955913*^9, 3.6641774051375427`*^9}, 3.664177475259384*^9, {
   3.664177510759157*^9, 3.664177541872295*^9}, {3.664177605969967*^9, 
   3.664177612020418*^9}, {3.6641776940423107`*^9, 3.664177706261491*^9}, 
   3.6641777734604607`*^9, 3.6641879703484898`*^9, 3.6642589159412203`*^9, 
   3.6700636434085617`*^9, 3.672644018950122*^9, 3.6726557566392813`*^9, 
   3.672981828349823*^9, {3.6729835603815193`*^9, 3.672983578462817*^9}, 
   3.672999234011415*^9, {3.672999278827272*^9, 3.672999303581047*^9}}],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{{3.664094431676642*^9, 3.6640944613472433`*^9}, {
   3.664095064022481*^9, 3.664095085791854*^9}, 3.664097452443685*^9, 
   3.6640997062131157`*^9, 3.6641761759337473`*^9, 3.664176275561586*^9, 
   3.664176393149013*^9, 3.664176590659693*^9, 3.664176711989214*^9, 
   3.664176874518199*^9, 3.664177178445511*^9, 3.664177286022644*^9, {
   3.664177375955913*^9, 3.6641774051375427`*^9}, 3.664177475259384*^9, {
   3.664177510759157*^9, 3.664177541872295*^9}, {3.664177605969967*^9, 
   3.664177612020418*^9}, {3.6641776940423107`*^9, 3.664177706261491*^9}, 
   3.6641777734604607`*^9, 3.6641879703484898`*^9, 3.6642589159412203`*^9, 
   3.6700636434085617`*^9, 3.672644018950122*^9, 3.6726557566392813`*^9, 
   3.672981828349823*^9, {3.6729835603815193`*^9, 3.672983578462817*^9}, 
   3.672999234011415*^9, {3.672999278827272*^9, 3.672999303581725*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Print ",
 Cell[BoxData[
  ButtonBox["\<\"Evaluate\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
       EvaluationNotebook[], All, ButtonCell] SelectionMove[
       EvaluationNotebook[], All, CellGroup]) SelectionEvaluateCreateCell[
      EvaluationNotebook[]],
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False,
  CellChangeTimes->{3.6252904677946167`*^9, 3.626670633881194*^9, 
   3.6519101150134897`*^9}]
}], "Subsubsection",
 CellChangeTimes->{{3.651910339748372*^9, 3.651910345476472*^9}, {
  3.6519103897649527`*^9, 3.651910391384837*^9}, {3.651910480974146*^9, 
  3.651910484694303*^9}, {3.6642583962201366`*^9, 3.66425839871624*^9}, {
  3.664258471805106*^9, 3.664258472617021*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"populations", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.664177484892502*^9, 3.664177488356841*^9}, {
  3.6641883294848948`*^9, 3.664188331637144*^9}}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{{3.664177488846148*^9, 3.6641775143567743`*^9}, 
   3.664177619936401*^9, 3.664177708240841*^9, 3.664187970434429*^9, 
   3.6641883319739933`*^9, 3.664258929066193*^9, 3.670063651525571*^9, 
   3.672644022186977*^9, 3.672655756822773*^9, 3.672981828509811*^9, {
   3.67298356046283*^9, 3.6729835786367483`*^9}, 3.6729992342822247`*^9, {
   3.67299927911954*^9, 3.672999303773716*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Print", "[", "\"\<Results:\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "/@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Row", "[", 
       RowBox[{"#", ",", "\"\<      \>\""}], "]"}], "&"}], "/@", 
     RowBox[{"(", 
      RowBox[{"Transpose", "@", 
       RowBox[{"(", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"Length", "@", "populations"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"TableForm", "[", 
             RowBox[{
              RowBox[{"#1", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"TableHeadings", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"ToString", "/@", 
                  RowBox[{"Range", "[", 
                   RowBox[{"NmaxE", "+", "2"}], "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<drv\>\"", ",", 
                   "\"\<\!\(\*OverscriptBox[\(drv\), \(_\)]\)\>\"", ",", 
                   "\"\<k\>\"", ",", 
                   RowBox[{"Sequence", "@@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"\"\<mv\>\"", "<>", 
                    RowBox[{"ToString", "[", "#", "]"}]}], "&"}], "/@", 
                    RowBox[{"Range", "@", 
                    RowBox[{"(", 
                    RowBox[{"imaxE", "-", "1"}], ")"}]}]}], ")"}]}], ",", 
                   "\"\<\!\(\*OverscriptBox[\(mv5\), \(\[EmptySet]\)]\)\>\"", 
                   ",", 
                   RowBox[{"\"\<t=\>\"", "<>", 
                    RowBox[{"ToString", "@", 
                    RowBox[{"#1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}]}], "}"}]}], "}"}]}]}], 
             "]"}], "&"}], "/@", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"Transpose", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"states", "[", 
                  RowBox[{"[", "##", "]"}], "]"}], "&"}], "@@@", 
                RowBox[{"Transpose", "@", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Range", "[", 
                    RowBox[{"totalcells", "//", "Length"}], "]"}], ",", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"1", ";;", "#"}], "&"}], "/@", "totalcells"}], 
                    ")"}]}], "}"}]}]}], "}"}]}], ",", 
             RowBox[{"Transpose", "@", 
              RowBox[{"{", "eventtimes", "}"}]}], ",", "2"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Grid", "[", 
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", "Null", "}"}], ",", "##"}], "}"}], "&"}], "@@", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    SubscriptBox["\"\<k\>\"", "i"], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"Length", "@", "#"}]}], "}"}]}], "]"}]}], ",", 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"Table", "[", 
                    RowBox[{
                    SubscriptBox["\"\<i\>\"", "i"], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "0", ",", 
                    RowBox[{"imaxE", "-", "1"}]}], "}"}]}], "]"}], "}"}], ",",
                   "#"}], "]"}], ",", "2"}], "]"}], ",", 
              RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "&"}], "/@", 
           "populations"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Grid", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "\"\<\!\(\*SubscriptBox[\(P\), \(asyn\)]\)\>\"", ",", 
                  "\"\<\!\(\*SubscriptBox[\(P\), \(sync\)]\)\>\"", ",", 
                  "\"\<\!\(\*SubscriptBox[\(P\), \(apop\)]\)\>\"", ",", 
                  "\"\<\!\(\*SubscriptBox[\(P\), \(pass\)]\)\>\""}], "}"}], 
                ",", "#"}], "}"}], ",", 
              RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "&"}], "/@", 
           "probabilities"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Grid", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "\"\<\!\(\*SubscriptBox[\(P\), \(drv\)]\)\>\"", ",", 
                  "\"\<\!\(\*SubscriptBox[\(P\), \(\[EmptySet]\)]\)\>\"", 
                  ",", "\"\<\!\(\*SubscriptBox[\(P\), OverscriptBox[\(drv\), \
\(_\)]]\)\>\""}], "}"}], ",", "#"}], "}"}], ",", 
              RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "&"}], "/@", 
           "geneprobabilities"}]}], "}"}], ")"}]}], ")"}]}], ")"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6640952770306463`*^9, 3.664095288614086*^9}, {
   3.664096042304512*^9, 3.664096078838326*^9}, {3.664096270773423*^9, 
   3.664096368982634*^9}, {3.6640964289220467`*^9, 3.664096432000443*^9}, {
   3.664096501161704*^9, 3.664096504102231*^9}, {3.664097362224999*^9, 
   3.664097366415773*^9}, {3.6640994380852757`*^9, 3.66409944832577*^9}, {
   3.664099621592453*^9, 3.664099643439043*^9}, {3.664099775060514*^9, 
   3.664099783219932*^9}, {3.66409997364467*^9, 3.6641000059788427`*^9}, {
   3.664100101439137*^9, 3.664100114337222*^9}, {3.66410015127802*^9, 
   3.664100191401896*^9}, {3.664100270221766*^9, 3.664100309121181*^9}, {
   3.6641003616083803`*^9, 3.664100364161049*^9}, 3.664101774014216*^9, 
   3.664188151571557*^9, {3.6641884366529903`*^9, 3.664188439802429*^9}, 
   3.664258715783045*^9, 3.6646274496695557`*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Manipulate Rate Overview", "Subsection",
 CellChangeTimes->{{3.657006576744567*^9, 3.6570065805686617`*^9}, 
   3.657007431809258*^9, 3.66289321186264*^9, {3.663222823984118*^9, 
   3.663222825527197*^9}, {3.6640254112538013`*^9, 3.664025413833351*^9}, {
   3.664712361853528*^9, 3.6647123759258432`*^9}}],

Cell["\<\
voglio vedere la distribuzione ss e i sui valori per ogni i e m
voglio calcolare le probabilit\[AGrave] per ogni cellula
voglio le probabilita\[CloseCurlyQuote] di avere drv, semidrv o nondrv
voglio cambiare i parametri\
\>", "Text",
 CellChangeTimes->{{3.664025422481341*^9, 3.664025431900538*^9}, {
  3.664025475234806*^9, 3.664025521166671*^9}, {3.6640854631510143`*^9, 
  3.664085486334656*^9}, {3.6640974739578733`*^9, 3.6640975105506573`*^9}}],

Cell["\<\
Posso studiare le probabilita\[CloseCurlyQuote] per ogni valore di m, k e \
ogni ordine delle mutazioni.\
\>", "Text",
 CellChangeTimes->{{3.664627666002143*^9, 3.6646276841780233`*^9}, {
  3.664627718289276*^9, 3.664627785370932*^9}, {3.6646278428920794`*^9, 
  3.664627893428446*^9}, {3.6647121928994713`*^9, 3.664712193459537*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.66408677124509*^9, 3.6640867722405767`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"maxsemidrivermut", "=", "10"}], ",", " ", 
      RowBox[{"kmax", "=", "3"}], ",", 
      RowBox[{"imaxE", "=", "5"}], ",", 
      RowBox[{"maxnondrivermut", "=", "30"}]}], 
     RowBox[{"(*", 
      RowBox[{",", "\[IndentingNewLine]", 
       RowBox[{"EPCAMexp", "=", "10."}], ",", 
       RowBox[{"CD47exp", "=", "10."}], ",", 
       RowBox[{"CD44exp", "=", "10."}], ",", 
       RowBox[{"METexp", "=", "10."}], ",", 
       RowBox[{"EPCAMcnt", "=", "1"}], ",", 
       RowBox[{"CD47cnt", "=", "2"}], ",", 
       RowBox[{"CD44cnt", "=", "1"}], ",", 
       RowBox[{"METcnt", "=", "1"}]}], "*)"}], "\[IndentingNewLine]", "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"or", "=", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"ext", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"imaxE", "-", "1"}], ",", "maxnondrivermut"}], "}"}]}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"rangei", "=", 
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "imaxE", ",", "1"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"rangem", "=", 
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "maxnondrivermut", ",", "1"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"mv0", "=", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", "imaxE"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"tab00", "=", 
         RowBox[{"Outer", "[", 
          RowBox[{"ssC", ",", 
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", 
             RowBox[{"imaxE", "-", "1"}]}], "]"}], ",", 
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", "maxnondrivermut"}], "]"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"pold", "\[NotEqual]", "p"}], "&&", 
             RowBox[{"mutctrlold", "==", "mutctrl"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"mutctrl", "=", 
              RowBox[{
               RowBox[{"Join", "[", 
                RowBox[{"mutctrl", ",", " ", 
                 RowBox[{"Complement", "[", 
                  RowBox[{
                   RowBox[{"Range", "[", 
                    RowBox[{"imaxE", "-", "1"}], "]"}], ",", "mutctrl"}], 
                  "]"}]}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{";;", 
                 RowBox[{"p", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}]}], ";", 
             RowBox[{"mutctrlold", "=", "mutctrl"}], ";", 
             RowBox[{"pold", "=", "p"}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"pold", "==", "p"}], "&&", 
             RowBox[{"mutctrlold", "\[NotEqual]", " ", "mutctrl"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"p", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "=", 
              RowBox[{"Length", "@", "mutctrl"}]}], ";", 
             RowBox[{"mutctrlold", "=", "mutctrl"}], ";", 
             RowBox[{"pold", "=", "p"}]}]}], "]"}], ";"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "@", "mutctrl"}], ">", 
             RowBox[{"p", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{"mutctrl", "=", 
             RowBox[{"mutctrl", "[", 
              RowBox[{"[", 
               RowBox[{";;", 
                RowBox[{"p", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}]}]}], "]"}], 
          "*)"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "@", "mutctrl"}], "\[NotEqual]", "  ", 
              RowBox[{"p", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"mutctrl", "=", 
              RowBox[{"Union", "[", 
               RowBox[{"mutctrl", ",", 
                RowBox[{"Range", "[", 
                 RowBox[{"p", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}]}]}], "]"}], 
           ";"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "@", "mutctrl"}], "\[NotEqual]", "  ", 
              RowBox[{"p", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"p", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "=", 
              RowBox[{"Length", "@", "mutctrl"}]}]}], "]"}], ";"}], "*)"}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"mvctrl", "=", 
          RowBox[{"ReplacePart", "[", 
           RowBox[{"mv0", ",", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "\[Rule]", "1"}], "&"}], "/@", 
              RowBox[{"Sort", "@", "mutctrl"}]}], ")"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"mvctrl2", "=", 
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", "mvctrl", "}"}], ",", 
            RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Block", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"wide", "=", "widectrl"}], ",", "\[IndentingNewLine]", 
             RowBox[{"slope", "=", "slopectrl"}], ",", "\[IndentingNewLine]", 
             "expG", ",", "\[IndentingNewLine]", "cntG", ",", 
             "\[IndentingNewLine]", 
             RowBox[{"compkeystep", "=", 
              RowBox[{"{", 
               RowBox[{"1", ",", "2", ",", "4"}], "}"}]}], ",", 
             "\[IndentingNewLine]", "genes", ",", "\[IndentingNewLine]", 
             RowBox[{"signature", "=", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "0"}], "}"}]}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"cen", "=", "0.5"}], ",", 
               RowBox[{"wide", "=", "20"}], ",", 
               RowBox[{"slope", "=", "0.01"}], ","}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"Aasym", "=", 
              RowBox[{"{", 
               RowBox[{"Aasymctrl", ",", "Aasymctrl", ",", "Aasymctrl"}], 
               "}"}]}], ",", " ", 
             RowBox[{"(*", 
              RowBox[{
              "kmax", " ", "asymmetric", " ", "proliferation", " ", "rate", 
               " ", "amplitudes"}], " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"Asym", "=", 
              RowBox[{"{", 
               RowBox[{"Asymctrl", ",", "Asymctrl", ",", "Asymctrl"}], 
               "}"}]}], ",", " ", 
             RowBox[{"(*", 
              RowBox[{
              "kmax", " ", "symmetric", " ", "proliferation", " ", "rate", 
               " ", "amplitudes"}], " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"Aapop", "=", 
              RowBox[{"{", 
               RowBox[{"Aapopctrl", ",", "Aapopctrl", ",", "Aapopctrl"}], 
               "}"}]}], ",", " ", 
             RowBox[{"(*", 
              RowBox[{
              "kmax", " ", "apoptotic", " ", "rate", " ", "amplitudes"}], " ",
               "*)"}], "\[IndentingNewLine]", 
             RowBox[{"Apass", "=", "Apassctrl"}], ",", "\[IndentingNewLine]", 
             "krates"}], "\[IndentingNewLine]", "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"expG", "=", 
             RowBox[{"{", 
              RowBox[{
              "EPCAMexpctrl", ",", "CD47expctrl", ",", "CD44expctrl", ",", 
               "METexpctrl", ",", 
               RowBox[{"(*", "1.", "*)"}], " ", "1."}], "}"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"cntG", "=", 
             RowBox[{"{", 
              RowBox[{
              "EPCAMcntctrl", ",", "CD47cntctrl", ",", "CD44cntctrl", ",", 
               "METcntctrl", ",", 
               RowBox[{"(*", "\[ExponentialE]", "*)"}], " ", "1."}], "}"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"genes", "=", 
             RowBox[{"expG", "/", "cntG"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"krates", "=", 
             RowBox[{"Apass", " ", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{"1", ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", 
                    RowBox[{"kmax", "-", "1"}]}], "}"}]}], "]"}], ",", 
                RowBox[{"{", "0", "}"}]}], "]"}]}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"genesctrl", "=", "genes"}], ";", "\[IndentingNewLine]", 
            RowBox[{"keyctrl", "=", 
             RowBox[{"keyC", "[", 
              RowBox[{"kctrl", ",", "mvctrl", ",", "compkeystep"}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"keygctrl", "=", 
             RowBox[{"keygenesC", "[", 
              RowBox[{
              "kctrl", ",", "mvctrl", ",", "compkeystep", ",", "genes", ",", 
               "signature"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"ratesctrl", "=", 
             RowBox[{"ratesC", "[", 
              RowBox[{
               RowBox[{"ssC", "[", 
                RowBox[{"keyctrl", ",", 
                 RowBox[{"p", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "kctrl", ",", 
               "keygctrl"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"rnnsctrl", "=", 
             RowBox[{"Accumulate", "[", "ratesctrl", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"rcsctrl", "=", 
             RowBox[{"Grid", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"ratesctrl", "/", 
                 RowBox[{"rnnsctrl", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"tab", "=", 
               RowBox[{"Transpose", "@", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"ratesC", "[", 
                    RowBox[{
                    RowBox[{"ssC", "[", 
                    RowBox[{"keyctrl", ",", "m"}], "]"}], ",", "kctrl", ",", 
                    "keygctrl"}], "]"}], "/", 
                   RowBox[{"Total", "[", 
                    RowBox[{"ratesC", "[", 
                    RowBox[{
                    RowBox[{"ssC", "[", 
                    RowBox[{"keyctrl", ",", "m"}], "]"}], ",", "kctrl", ",", 
                    "keygctrl"}], "]"}], "]"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"m", ",", "0", ",", "maxnondrivermut"}], "}"}]}], 
                 "]"}]}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"tab", "=", 
             RowBox[{
              RowBox[{
               RowBox[{"ratesC", "[", 
                RowBox[{"#", ",", "keyctrl", ",", "keygctrl"}], "]"}], "&"}], 
              "/@", 
              RowBox[{"tab00", "[", 
               RowBox[{"[", 
                RowBox[{"keyctrl", ",", ";;"}], "]"}], "]"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"tab", "=", 
             RowBox[{"Transpose", "@", 
              RowBox[{"(", 
               RowBox[{"tab", "/", 
                RowBox[{"Total", "[", 
                 RowBox[{"tab", ",", 
                  RowBox[{"{", "2", "}"}]}], "]"}]}], ")"}]}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"tab00", "=", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"ssC", "[", 
                  RowBox[{"KK", ",", "JJ"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"KK", ",", "0", ",", 
                   RowBox[{"imaxE", "-", "1"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"JJ", ",", "0", ",", "maxnondrivermut"}], "}"}]}], 
                "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"tab2", "=", 
             RowBox[{
              RowBox[{
               RowBox[{"ratesC", "[", 
                RowBox[{"#", ",", "keyctrl", ",", "keygctrl"}], "]"}], "&"}], 
              "/@", 
              RowBox[{"tab00", "[", 
               RowBox[{"[", 
                RowBox[{";;", ",", 
                 RowBox[{"p", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"tab2", "=", 
             RowBox[{"Transpose", "@", 
              RowBox[{"(", 
               RowBox[{"tab2", "/", 
                RowBox[{"Total", "[", 
                 RowBox[{"tab2", ",", 
                  RowBox[{"{", "2", "}"}]}], "]"}]}], ")"}]}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"tab2", "=", 
               RowBox[{"Transpose", "@", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"ratesC", "[", 
                    RowBox[{
                    RowBox[{"ssC", "[", 
                    RowBox[{"KK", ",", 
                    RowBox[{"p", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "kctrl", 
                    ",", "keygctrl"}], "]"}], "/", 
                   RowBox[{"Total", "[", 
                    RowBox[{"ratesC", "[", 
                    RowBox[{
                    RowBox[{"ssC", "[", 
                    RowBox[{"KK", ",", 
                    RowBox[{"p", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "kctrl", 
                    ",", "keygctrl"}], "]"}], "]"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"KK", ",", "0", ",", 
                    RowBox[{"imaxE", "-", "1"}]}], "}"}]}], "]"}]}]}], ";"}], 
             "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"tab30", "=", "\[IndentingNewLine]", 
               RowBox[{"Transpose", "@", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"supC", "[", 
                    RowBox[{
                    "#", ",", "cenAsymctrl", ",", "widectrl", ",", 
                    "slopectrl"}], "]"}], ",", 
                    RowBox[{"supC", "[", 
                    RowBox[{
                    "#", ",", "cenSymctrl", ",", "widectrl", ",", 
                    "slopectrl"}], "]"}], ",", 
                    RowBox[{"supC", "[", 
                    RowBox[{
                    "#", ",", "cenApopctrl", ",", "widectrl", ",", 
                    "slopectrl"}], "]"}]}], "}"}], "&"}], "/@", 
                  RowBox[{"ssC", "[", 
                   RowBox[{"keyctrl", ",", ";;"}], "]"}]}], ")"}]}]}], ";"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{"tab3", "=", 
             RowBox[{"Outer", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"supC", "[", 
                 RowBox[{"#1", ",", "#2", ",", "widectrl", ",", "slopectrl"}],
                  "]"}], "&"}], ",", 
               RowBox[{"tab00", "[", 
                RowBox[{"[", 
                 RowBox[{"keyctrl", ",", ";;"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                "cenAsymctrl", ",", "cenSymctrl", ",", "cenApopctrl"}], 
                "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"tab3", "=", 
               RowBox[{"Transpose", "@", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"supC", "[", 
                    RowBox[{
                    RowBox[{"ssC", "[", 
                    RowBox[{"keyctrl", ",", "m"}], "]"}], ",", "cenAsymctrl", 
                    ",", "widectrl", ",", "slopectrl"}], "]"}], ",", 
                    RowBox[{"supC", "[", 
                    RowBox[{
                    RowBox[{"ssC", "[", 
                    RowBox[{"keyctrl", ",", "m"}], "]"}], ",", "cenSymctrl", 
                    ",", "widectrl", ",", "slopectrl"}], "]"}], ",", 
                    RowBox[{"supC", "[", 
                    RowBox[{
                    RowBox[{"ssC", "[", 
                    RowBox[{"keyctrl", ",", "m"}], "]"}], ",", "cenApopctrl", 
                    ",", "widectrl", ",", "slopectrl"}], "]"}]}], "}"}], ",", 
                  
                  RowBox[{"{", 
                   RowBox[{"m", ",", "0", ",", "maxnondrivermut"}], "}"}]}], 
                 "]"}]}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"tab4", "=", 
               RowBox[{"Transpose", "@", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"supC", "[", 
                    RowBox[{
                    RowBox[{"ssC", "[", 
                    RowBox[{"KK", ",", 
                    RowBox[{"p", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
                    "cenAsymctrl", ",", "widectrl", ",", "slopectrl"}], "]"}],
                     ",", 
                    RowBox[{"supC", "[", 
                    RowBox[{
                    RowBox[{"ssC", "[", 
                    RowBox[{"KK", ",", 
                    RowBox[{"p", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
                    "cenSymctrl", ",", "widectrl", ",", "slopectrl"}], "]"}], 
                    ",", 
                    RowBox[{"supC", "[", 
                    RowBox[{
                    RowBox[{"ssC", "[", 
                    RowBox[{"KK", ",", 
                    RowBox[{"p", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
                    "cenApopctrl", ",", "widectrl", ",", "slopectrl"}], 
                    "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"KK", ",", "0", ",", 
                    RowBox[{"imaxE", "-", "1"}]}], "}"}]}], "]"}]}]}], ";"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{"tab4", "=", 
             RowBox[{"Outer", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"supC", "[", 
                 RowBox[{"#1", ",", "#2", ",", "widectrl", ",", "slopectrl"}],
                  "]"}], "&"}], ",", 
               RowBox[{"tab00", "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", 
                  RowBox[{"p", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                "cenAsymctrl", ",", "cenSymctrl", ",", "cenApopctrl"}], 
                "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"pl", "=", 
             RowBox[{"ListLinePlot", "[", 
              RowBox[{"tab", ",", 
               RowBox[{"PlotLegends", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<\!\(\*SubscriptBox[\(P\), \(asyn\)]\)\>\"", ",", 
                  "\"\<\!\(\*SubscriptBox[\(P\), \(sync\)]\)\>\"", ",", 
                  "\"\<\!\(\*SubscriptBox[\(P\), \(apop\)]\)\>\"", ",", 
                  "\"\<\!\(\*SubscriptBox[\(P\), \(pass\)]\)\>\""}], "}"}]}], 
               ",", 
               RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
               RowBox[{"DataRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "maxsemidrivermut"}], "}"}]}], ",", 
               RowBox[{"AxesLabel", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"\"\<m\>\"", ",", "\"\<P\>\""}], "}"}]}], ",", 
               RowBox[{"PlotLabel", "\[Rule]", 
                RowBox[{"\"\<K=\>\"", "<>", 
                 RowBox[{"ToString", "@", "keyctrl"}]}]}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"pl2", "=", 
             RowBox[{"ListLinePlot", "[", 
              RowBox[{"tab2", ",", 
               RowBox[{"PlotLegends", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<\!\(\*SubscriptBox[\(P\), \(asyn\)]\)\>\"", ",", 
                  "\"\<\!\(\*SubscriptBox[\(P\), \(sync\)]\)\>\"", ",", 
                  "\"\<\!\(\*SubscriptBox[\(P\), \(apop\)]\)\>\"", ",", 
                  "\"\<\!\(\*SubscriptBox[\(P\), \(pass\)]\)\>\""}], "}"}]}], 
               ",", 
               RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
               RowBox[{"DataRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{"imaxE", "-", "1"}]}], "}"}]}], ",", 
               RowBox[{"AxesLabel", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"\"\<K\>\"", ",", "\"\<P\>\""}], "}"}]}], ",", 
               RowBox[{"PlotLabel", "\[Rule]", 
                RowBox[{"\"\<m=\>\"", "<>", 
                 RowBox[{"ToString", "@", 
                  RowBox[{"p", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}]}]}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"pl3", "=", 
             RowBox[{"ListLinePlot", "[", 
              RowBox[{"tab3", ",", 
               RowBox[{"PlotLegends", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<\!\(\*SubscriptBox[\(\[Chi]\), \(asyn\)]\)\>\"", ",", 
                  "\"\<\!\(\*SubscriptBox[\(\[Chi]\), \(sync\)]\)\>\"", ",", 
                  "\"\<\!\(\*SubscriptBox[\(\[Chi]\), \(apop\)]\)\>\"", ",", 
                  "\"\<\!\(\*SubscriptBox[\(\[Chi]\), \(pass\)]\)\>\""}], 
                 "}"}]}], ",", 
               RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
               RowBox[{"DataRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "maxsemidrivermut"}], "}"}]}], ",", 
               RowBox[{"AxesLabel", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"\"\<m\>\"", ",", "\"\<\[Chi]\>\""}], "}"}]}], ",", 
               RowBox[{"PlotLabel", "\[Rule]", 
                RowBox[{"\"\<K=\>\"", "<>", 
                 RowBox[{"ToString", "@", "keyctrl"}]}]}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"pl4", "=", 
             RowBox[{"ListLinePlot", "[", 
              RowBox[{"tab4", ",", 
               RowBox[{"PlotLegends", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<\!\(\*SubscriptBox[\(\[Chi]\), \(asyn\)]\)\>\"", ",", 
                  "\"\<\!\(\*SubscriptBox[\(\[Chi]\), \(sync\)]\)\>\"", ",", 
                  "\"\<\!\(\*SubscriptBox[\(\[Chi]\), \(apop\)]\)\>\"", ",", 
                  "\"\<\!\(\*SubscriptBox[\(\[Chi]\), \(pass\)]\)\>\""}], 
                 "}"}]}], ",", 
               RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
               RowBox[{"DataRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{"imaxE", "-", "1"}]}], "}"}]}], ",", 
               RowBox[{"AxesLabel", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"\"\<K\>\"", ",", "\"\<\[Chi]\>\""}], "}"}]}], ",", 
               RowBox[{"PlotLabel", "\[Rule]", 
                RowBox[{"\"\<m=\>\"", "<>", 
                 RowBox[{"ToString", "@", 
                  RowBox[{"p", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}]}]}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"pl5", "=", 
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"supC", "[", 
                  RowBox[{
                  "s", ",", "cenAsymctrl", ",", "widectrl", ",", 
                   "slopectrl"}], "]"}], ",", 
                 RowBox[{"supC", "[", 
                  RowBox[{
                  "s", ",", "cenSymctrl", ",", "widectrl", ",", "slopectrl"}],
                   "]"}], ",", 
                 RowBox[{"supC", "[", 
                  RowBox[{
                  "s", ",", "cenApopctrl", ",", "widectrl", ",", 
                   "slopectrl"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"s", ",", "0", ",", "3"}], "}"}], ",", 
               RowBox[{"PlotLegends", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<\!\(\*SubscriptBox[\(\[Chi]\), \(asyn\)]\)\>\"", ",", 
                  "\"\<\!\(\*SubscriptBox[\(\[Chi]\), \(sync\)]\)\>\"", ",", 
                  "\"\<\!\(\*SubscriptBox[\(\[Chi]\), \(apop\)]\)\>\"", ",", 
                  "\"\<\!\(\*SubscriptBox[\(\[Chi]\), \(pass\)]\)\>\""}], 
                 "}"}]}], ",", 
               RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
               RowBox[{"AxesLabel", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"\"\<s\>\"", ",", "\"\<\[Chi]\>\""}], "}"}]}], ",", 
               RowBox[{"PlotLabel", "\[Rule]", 
                RowBox[{"\"\<K=\>\"", "<>", 
                 RowBox[{"ToString", "[", "keyctrl", "]"}], "<>", 
                 "\"\<, m=\>\"", "<>", 
                 RowBox[{"ToString", "@", 
                  RowBox[{"p", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}]}]}]}], "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"Column", "[", " ", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"\"\<K=key[k,mv]]\>\"", "<>", "\"\<=\>\"", "<>", 
             RowBox[{"ToString", "[", "keyctrl", "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"\"\<s[K,m]\>\"", "<>", "\"\<=\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"ssC", "@@", "p"}], 
              RowBox[{"(*", 
               RowBox[{"keyctrl", ",", 
                RowBox[{"p", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "*)"}], "]"}]}], ",", 
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{"or", ",", "p"}], "}"}], "]"}], ",", 
              RowBox[{"GridLines", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"rangei", ",", " ", "rangem"}], "}"}]}], ",", 
              RowBox[{"Axes", "\[Rule]", "True"}], ",", 
              RowBox[{"Ticks", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"rangei", ",", " ", "rangem"}], "}"}]}], ",", 
              RowBox[{"AxesOrigin", "\[Rule]", "or"}], ",", 
              RowBox[{"AxesLabel", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(i\), \(ord\)]\)\>\"", ",", 
                 "\"\<m\>\""}], "}"}]}], ",", " ", 
              RowBox[{"PlotRange", "\[Rule]", 
               RowBox[{"Transpose", "@", 
                RowBox[{"{", 
                 RowBox[{"or", ",", "ext"}], "}"}]}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Row", "[", 
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"BarChart", "[", 
                 RowBox[{
                  RowBox[{"ratesctrl", "/", 
                   RowBox[{"rnnsctrl", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], ",", 
                  RowBox[{"ChartLabels", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(P\), \(asyn\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(P\), \(sync\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(P\), \(apop\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(P\), \(pass\)]\)\>\""}], 
                    "}"}]}], ",", 
                  RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", " ", 
                  RowBox[{"PlotLabel", "\[Rule]", 
                   RowBox[{"\"\<K=\>\"", "<>", 
                    RowBox[{"ToString", "[", "keyctrl", "]"}], "<>", 
                    "\"\<, m=\>\"", "<>", 
                    RowBox[{"ToString", "@", 
                    RowBox[{"p", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}]}]}], "]"}], ",", 
                RowBox[{"BarChart", "[", 
                 RowBox[{"ratesctrl", ",", 
                  RowBox[{"ChartLabels", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(R\), \(asyn\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(R\), \(sync\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(R\), \(apop\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(R\), \(pass\)]\)\>\""}], 
                    "}"}]}], ",", 
                  RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
                  RowBox[{"PlotLabel", "\[Rule]", 
                   RowBox[{"\"\<K=\>\"", "<>", 
                    RowBox[{"ToString", "[", "keyctrl", "]"}], "<>", 
                    "\"\<, m=\>\"", "<>", 
                    RowBox[{"ToString", "@", 
                    RowBox[{"p", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}]}]}], "]"}]}], 
               "\[IndentingNewLine]", "}"}], ",", 
              "                                      ", 
              "\"\<                     \>\""}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Row", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"pl", ",", "pl2"}], "}"}], ",", "              ", 
              "\"\<                     \>\""}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Row", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"pl3", ",", "pl4", ",", "pl5"}], "}"}], ",", 
              "\"\<                     \>\""}], "]"}]}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], "]"}]}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"ppold", ",", "0"}], "}"}], ",", "None"}], "}"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "Delimiter", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"cenAsymctrl", ",", "2.", ",", "\"\<cen\>\""}], "}"}], ",",
           "0.", ",", "3.", ",", "Slider"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"cenSymctrl", ",", "1.", ",", "\"\<cen\>\""}], "}"}], ",", 
          "0.", ",", "3.", ",", "Slider"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"cenApopctrl", ",", "0.5", ",", "\"\<cen\>\""}], "}"}], 
          ",", "0.", ",", "3.", ",", "Slider"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"cenApassctrl", ",", "1", ",", "\"\<cen\>\""}], "}"}], 
            ",", "0.", ",", "3.", ",", "Slider"}], "}"}], ","}], "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "Delimiter", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"widectrl", ",", "20", ",", "\"\<wide\>\""}], "}"}], ",", 
          "1", ",", "40"}], 
         RowBox[{"(*", 
          RowBox[{",", "Slider"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"slopectrl", ",", "0.01", ",", "\"\<slope\>\""}], "}"}], 
          ",", "0.001", ",", "0.02"}], 
         RowBox[{"(*", 
          RowBox[{",", "Slider"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "Delimiter", ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Aasymctrl", ",", "1", ",", "\"\<Aasym\>\""}], "}"}], ",", 
          "0", ",", "2"}], 
         RowBox[{"(*", 
          RowBox[{",", "Slider"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Asymctrl", ",", "1", ",", "\"\<Asym\>\""}], "}"}], ",", 
          "0", ",", "2"}], 
         RowBox[{"(*", 
          RowBox[{",", "Slider"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Aapopctrl", ",", "1", ",", "\"\<Aapop\>\""}], "}"}], ",", 
          "0", ",", "2"}], 
         RowBox[{"(*", 
          RowBox[{",", "Slider"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Apassctrl", ",", "1", ",", "\"\<Apass\>\""}], "}"}], ",", 
          "0", ",", "2"}], 
         RowBox[{"(*", 
          RowBox[{",", "Slider"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "Delimiter", ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"EPCAMexpctrl", ",", "1", ",", "\"\<EPICAM\>\""}], "}"}], 
          ",", "1", ",", "10"}], 
         RowBox[{"(*", 
          RowBox[{",", "Slider"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"CD47expctrl", ",", "1", ",", "\"\<CD47\>\""}], "}"}], ",",
           "1", ",", "10"}], 
         RowBox[{"(*", 
          RowBox[{",", "Slider"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"CD44expctrl", ",", "1", ",", "\"\<CD44\>\""}], "}"}], ",",
           "1", ",", "10"}], 
         RowBox[{"(*", 
          RowBox[{",", "Slider"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"METexpctrl", ",", "1", ",", "\"\<MET\>\""}], "}"}], ",", 
          "1", ",", "10"}], 
         RowBox[{"(*", 
          RowBox[{",", "Slider"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "Delimiter", ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "EPCAMcntctrl", ",", "1", ",", 
            "\"\<\!\(\*SubscriptBox[\(EPICAM\), \(0\)]\)\>\""}], "}"}], ",", 
          "1", ",", "10"}], 
         RowBox[{"(*", 
          RowBox[{",", "Slider"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "CD47cntctrl", ",", "1", ",", 
            "\"\<\!\(\*SubscriptBox[\(CD47\), \(0\)]\)\>\""}], "}"}], ",", 
          "1", ",", "10"}], 
         RowBox[{"(*", 
          RowBox[{",", "Slider"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "CD44cntctrl", ",", "1", ",", 
            "\"\<\!\(\*SubscriptBox[\(CD44\), \(0\)]\)\>\""}], "}"}], ",", 
          "1", ",", "10"}], 
         RowBox[{"(*", 
          RowBox[{",", "Slider"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "METcntctrl", ",", "1", ",", 
            "\"\<\!\(\*SubscriptBox[\(MET\), \(0\)]\)\>\""}], "}"}], ",", "1",
           ",", "10"}], 
         RowBox[{"(*", 
          RowBox[{",", "Slider"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "Delimiter", ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"kctrl", ",", "1", ",", "\"\<k\>\""}], "}"}], ",", 
          RowBox[{"Range", "[", "kmax", "]"}], ",", "PopupMenu"}], "}"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"mutctrl", ",", 
            RowBox[{"{", "}"}], ",", "\"\<mutations\>\""}], "}"}], ",", 
          RowBox[{"Range", "[", 
           RowBox[{"imaxE", "-", "1"}], "]"}], ",", "TogglerBar"}], "}"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"mutctrlold", ",", "mutctrl", ",", "\"\<mutations\>\""}], 
           "}"}], ",", 
          RowBox[{"Range", "[", 
           RowBox[{"imaxE", "-", "1"}], "]"}], ",", "None"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"mvctrl", ",", "mutctrl", ",", "\"\<mv\>\""}], "}"}], ",", 
          "None", ",", 
          RowBox[{"Enabled", "\[Rule]", "False"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"mvctrl2", ",", 
            RowBox[{"Grid", "[", 
             RowBox[{
              RowBox[{"{", "mvctrl", "}"}], ",", 
              RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}], ",", 
            "\"\<mv\>\""}], "}"}], ",", "InputField", ",", 
          RowBox[{"Enabled", "\[Rule]", "False"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"genesctrl", ",", "0", ",", "\"\<gene expr\>\""}], "}"}], 
          ",", "InputField", ",", 
          RowBox[{"Enabled", "\[Rule]", "False"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"keyctrl", ",", "0", ",", "\"\<key\>\""}], "}"}], ",", 
          "InputField", ",", 
          RowBox[{"Enabled", "\[Rule]", "False"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"keygctrl", ",", "1", ",", "\"\<key genes\>\""}], "}"}], 
          ",", "InputField", ",", 
          RowBox[{"Enabled", "\[Rule]", "False"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"p", ",", "ext"}], "}"}], ",", "or", ",", "ext", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], ",", "Locator"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"pold", ",", "p"}], "}"}], ",", "or", ",", "ext", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"ratesctrl", ",", "0", ",", "\"\<rates\>\""}], "}"}], ",", 
          "InputField", ",", 
          RowBox[{"Enabled", "\[Rule]", "False"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"rnnsctrl", ",", "0", ",", "\"\<rnn\>\""}], "}"}], ",", 
          "InputField", ",", 
          RowBox[{"Enabled", "\[Rule]", "False"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"rcsctrl", ",", "0", ",", "\"\<rcs\>\""}], "}"}], ",", 
          "InputField", ",", 
          RowBox[{"Enabled", "\[Rule]", "True"}]}], "}"}]}], "]"}]}], "]"}]}],
    "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6640416153637133`*^9, 3.664041621006124*^9}, {
   3.664041667711421*^9, 3.664041843033536*^9}, {3.664041928590228*^9, 
   3.6640420419772987`*^9}, {3.664042340417177*^9, 3.6640425411832457`*^9}, {
   3.664042594674556*^9, 3.664042642479278*^9}, {3.664042721968539*^9, 
   3.664042733929763*^9}, {3.664043805856217*^9, 3.664043840433161*^9}, {
   3.664085503345086*^9, 3.664085596586576*^9}, {3.664085698681984*^9, 
   3.664085798447184*^9}, {3.664085859422718*^9, 3.664085860296763*^9}, {
   3.664085951967497*^9, 3.664086054131487*^9}, {3.664086095027872*^9, 
   3.664086179785865*^9}, {3.664086212019576*^9, 3.664086461853259*^9}, {
   3.664086497912508*^9, 3.664086520501193*^9}, {3.664086632160124*^9, 
   3.664086648416436*^9}, {3.664086740042104*^9, 3.664086820753674*^9}, {
   3.664086874428473*^9, 3.664086992219987*^9}, {3.664087072159957*^9, 
   3.6640871152945766`*^9}, {3.664087238999858*^9, 3.664087247007757*^9}, {
   3.6640873384713783`*^9, 3.664087400104529*^9}, {3.664087534725906*^9, 
   3.664087720696793*^9}, {3.6640878771630077`*^9, 3.6640878907145023`*^9}, {
   3.664087948097967*^9, 3.664087953410241*^9}, {3.6640880220113077`*^9, 
   3.66408804171082*^9}, {3.664090093355674*^9, 3.664090097087912*^9}, {
   3.664090155098928*^9, 3.6640902134129257`*^9}, {3.6640902913306704`*^9, 
   3.6640903247988567`*^9}, {3.664090384750211*^9, 3.664090402087821*^9}, {
   3.6640904369297867`*^9, 3.6640904393040743`*^9}, {3.66409049944205*^9, 
   3.6640905595348*^9}, {3.664090876060512*^9, 3.6640909240535097`*^9}, {
   3.664262779035802*^9, 3.664262790588982*^9}, {3.664262873603359*^9, 
   3.664262974646137*^9}, {3.66426300565175*^9, 3.664263112492464*^9}, {
   3.664263260261237*^9, 3.6642633454224377`*^9}, {3.664263907439035*^9, 
   3.664263964773704*^9}, {3.6642639973933563`*^9, 3.664264065336441*^9}, {
   3.664265450463024*^9, 3.664265527650231*^9}, {3.664265592283834*^9, 
   3.66426559245994*^9}, {3.664265634083808*^9, 3.664265676974873*^9}, {
   3.664265720525816*^9, 3.664265844896153*^9}, {3.6642659293234787`*^9, 
   3.664265991569604*^9}, {3.6642660376847353`*^9, 3.664266055819024*^9}, {
   3.664266183639073*^9, 3.664266217918749*^9}, {3.664266257996406*^9, 
   3.6642662682283773`*^9}, {3.6642665788337803`*^9, 3.664266581425366*^9}, {
   3.66426677880326*^9, 3.664266813435849*^9}, {3.6642668551639013`*^9, 
   3.664266855883895*^9}, {3.6642668890044127`*^9, 3.664266992224901*^9}, {
   3.664267023175159*^9, 3.6642670235735207`*^9}, {3.664267056832428*^9, 
   3.6642671547658873`*^9}, 3.664267217361849*^9, 3.664267282421958*^9, {
   3.6642673684355507`*^9, 3.664267385289954*^9}, {3.664267430446723*^9, 
   3.664267453438002*^9}, {3.6642675899207*^9, 3.664267636158751*^9}, {
   3.66426766995233*^9, 3.6642676815851994`*^9}, {3.664267720512669*^9, 
   3.6642677902401323`*^9}, {3.664267822515553*^9, 3.664267827464237*^9}, {
   3.664267869331133*^9, 3.664267872618738*^9}, {3.6642679717255163`*^9, 
   3.664268054966402*^9}, {3.664268088461953*^9, 3.664268186503134*^9}, {
   3.66426822145685*^9, 3.664268238846587*^9}, 3.664268301334627*^9, 
   3.66426834115189*^9, {3.664268403728751*^9, 3.664268431227886*^9}, {
   3.664268506555046*^9, 3.664268545333868*^9}, 3.6642685926477013`*^9, {
   3.6642686302172213`*^9, 3.664268680631414*^9}, {3.664268761675205*^9, 
   3.66426876201527*^9}, 3.6642688125464687`*^9, 3.664268842604026*^9, {
   3.664268876424307*^9, 3.664268957499569*^9}, {3.664268995412993*^9, 
   3.664269076352109*^9}, {3.6642691209440727`*^9, 3.6642691213898783`*^9}, 
   3.664269153167117*^9, {3.664269209448703*^9, 3.664269267153211*^9}, {
   3.664269299563459*^9, 3.664269341395915*^9}, {3.664269378404904*^9, 
   3.664269453732554*^9}, {3.664272485923086*^9, 3.6642724885514708`*^9}, {
   3.664273107415803*^9, 3.664273194371915*^9}, {3.6642732979237957`*^9, 
   3.664273330521181*^9}, {3.664273360630754*^9, 3.6642733830311947`*^9}, {
   3.664273415478459*^9, 3.664273447169693*^9}, {3.664273550610622*^9, 
   3.664273586566324*^9}, {3.664273744008182*^9, 3.664273770678961*^9}, {
   3.664273803646986*^9, 3.664273832051485*^9}, 3.6642738910733013`*^9, {
   3.664273929110344*^9, 3.664273959545669*^9}, {3.664274002084188*^9, 
   3.664274032112914*^9}, {3.664274261222542*^9, 3.664274294768364*^9}, {
   3.6642744391905813`*^9, 3.664274444515332*^9}, {3.664274634941477*^9, 
   3.664274644577142*^9}, {3.664274686394691*^9, 3.664274700117728*^9}, {
   3.664274785106029*^9, 3.66427478594495*^9}, 3.664274905688096*^9, {
   3.6642753377555313`*^9, 3.66427536103694*^9}, {3.6642754208321257`*^9, 
   3.6642754696703157`*^9}, {3.6642755101310253`*^9, 3.664275518027295*^9}, {
   3.664275596067337*^9, 3.664275597833233*^9}, {3.664275635675702*^9, 
   3.6642756535076227`*^9}, {3.664275693407773*^9, 3.664275705502183*^9}, {
   3.664275775003437*^9, 3.664275807859474*^9}, 3.6642758477067423`*^9, 
   3.664275897723106*^9, {3.6642761013999777`*^9, 3.664276155994629*^9}, 
   3.6642761865190487`*^9, {3.6642762449497747`*^9, 3.664276312524426*^9}, {
   3.664276379153*^9, 3.664276386721664*^9}, {3.664276421244171*^9, 
   3.6642764414609737`*^9}, {3.664276488499325*^9, 3.66427648927499*^9}, 
   3.664276649473645*^9, {3.664276688008112*^9, 3.664276706834103*^9}, {
   3.66427743290062*^9, 3.664277571613823*^9}, {3.664277635421726*^9, 
   3.664277636048813*^9}, {3.664277732705717*^9, 3.6642777520294228`*^9}, {
   3.6642778146820393`*^9, 3.664277834141889*^9}, {3.664277909312558*^9, 
   3.664277934582847*^9}, {3.66427798136905*^9, 3.664277997984124*^9}, {
   3.6642781239379463`*^9, 3.664278127000968*^9}, {3.6642784746531143`*^9, 
   3.66427847715549*^9}, {3.664278539733622*^9, 3.66427861785413*^9}, {
   3.664278702880959*^9, 3.6642787206629066`*^9}, {3.664278880777286*^9, 
   3.66427888725683*^9}, {3.664281627305574*^9, 3.6642816484653263`*^9}, {
   3.6642817921735573`*^9, 3.664281831849827*^9}, {3.664281874545576*^9, 
   3.66428188063702*^9}, {3.664281990225834*^9, 3.664281991690559*^9}, {
   3.6642821401540737`*^9, 3.6642821453949738`*^9}, 3.664282206209704*^9, {
   3.664282329018579*^9, 3.664282337433036*^9}, {3.664282374390377*^9, 
   3.664282374683463*^9}, {3.664282630280446*^9, 3.664282712786037*^9}, {
   3.6642827475630207`*^9, 3.664282777100171*^9}, {3.664282809186323*^9, 
   3.6642828098069983`*^9}, {3.6642828948140182`*^9, 3.664282928067833*^9}, {
   3.6646041657603617`*^9, 3.664604167167938*^9}, {3.664604214361886*^9, 
   3.664604220841964*^9}, {3.664604275083756*^9, 3.664604285603266*^9}, {
   3.6646043195297422`*^9, 3.664604344070903*^9}, 3.664604374484139*^9, {
   3.66460468183075*^9, 3.664604723949971*^9}, {3.664604766810628*^9, 
   3.664604796504813*^9}, {3.664604953981135*^9, 3.664605017706909*^9}, {
   3.664605209386517*^9, 3.664605216964697*^9}, 3.6646052606741457`*^9, {
   3.664605313290914*^9, 3.664605382372637*^9}, {3.664605429374082*^9, 
   3.664605500973771*^9}, {3.664605596247561*^9, 3.664605607847146*^9}, {
   3.6646056520120993`*^9, 3.664605662005496*^9}, 3.664605727682241*^9, {
   3.664605834704187*^9, 3.664605876880905*^9}, 3.664605926058313*^9, {
   3.664606041048853*^9, 3.6646060519590797`*^9}, {3.66460620398881*^9, 
   3.66460620444372*^9}, {3.664606235788855*^9, 3.6646062374356947`*^9}, {
   3.6646064800198936`*^9, 3.664606482722865*^9}, {3.664606519025996*^9, 
   3.664606523092742*^9}, 3.664606563001573*^9, {3.664606790541649*^9, 
   3.6646068159423037`*^9}, {3.664606860684914*^9, 3.664606874810214*^9}, {
   3.664606937481141*^9, 3.664606975995096*^9}, {3.664607051465178*^9, 
   3.664607132151819*^9}, {3.664607168755103*^9, 3.664607175443736*^9}, {
   3.664607298145177*^9, 3.6646073042951307`*^9}, {3.6646073460712442`*^9, 
   3.664607475403599*^9}, {3.664607525336713*^9, 3.6646075723804607`*^9}, {
   3.664607622959086*^9, 3.664607647246801*^9}, {3.664607811433419*^9, 
   3.664607866842348*^9}, {3.664607934179675*^9, 3.6646079740556707`*^9}, {
   3.664608011520381*^9, 3.664608124144369*^9}, {3.664608769160121*^9, 
   3.6646088128105793`*^9}, 3.664610475845594*^9, {3.664610771720559*^9, 
   3.6646108406622047`*^9}, {3.6646113283335876`*^9, 3.664611329612789*^9}, {
   3.664611366653922*^9, 3.664611541216864*^9}, {3.664611758326376*^9, 
   3.6646117654661417`*^9}, {3.664611885073538*^9, 3.664611887060597*^9}, {
   3.664612468432366*^9, 3.664612541635786*^9}, {3.6646129443453007`*^9, 
   3.664613002837331*^9}, {3.66461313595501*^9, 3.664613318720098*^9}, 
   3.6646133943226748`*^9, {3.664613499551711*^9, 3.664613500337126*^9}, {
   3.664613771686569*^9, 3.664613827272468*^9}, {3.664614086335044*^9, 
   3.6646140884342003`*^9}, {3.6646141439556627`*^9, 3.664614179111926*^9}, {
   3.664614234095242*^9, 3.6646142554316587`*^9}, {3.664614419566646*^9, 
   3.664614437848722*^9}, {3.6646147388840523`*^9, 3.6646147676270647`*^9}, {
   3.664614895616897*^9, 3.664614898437171*^9}, {3.664614944800877*^9, 
   3.664614945903287*^9}, {3.664615065981365*^9, 3.664615069595991*^9}, 
   3.6646151555236073`*^9, {3.6646152002590303`*^9, 3.6646152044962997`*^9}, {
   3.66461577520254*^9, 3.664615777481853*^9}, {3.664615840530692*^9, 
   3.6646158725693617`*^9}, 3.6646195560479727`*^9, {3.664627949222855*^9, 
   3.6646279650107737`*^9}, 3.664628057516149*^9, {3.66469517658392*^9, 
   3.664695181727557*^9}, {3.6646952721459017`*^9, 3.664695272530702*^9}, {
   3.6646953804995403`*^9, 3.664695530150269*^9}, {3.664696290645873*^9, 
   3.664696333221156*^9}, 3.664696365055127*^9, {3.66469645773593*^9, 
   3.664696503092133*^9}, 3.6646965564884*^9, {3.664701150251753*^9, 
   3.664701201413314*^9}, {3.664701358900729*^9, 3.664701416884766*^9}, {
   3.6647014652530203`*^9, 3.664701561030019*^9}, {3.664701640836006*^9, 
   3.6647019084743137`*^9}, {3.6647040411944323`*^9, 3.66470414249297*^9}, {
   3.6647041868162737`*^9, 3.66470424804204*^9}, {3.6647044092125874`*^9, 
   3.664704431788488*^9}, {3.664704566215398*^9, 3.664704593162368*^9}, {
   3.664704656862615*^9, 3.664704658726968*^9}, {3.664704741614944*^9, 
   3.664704749119566*^9}, {3.664705757991118*^9, 3.6647057590386877`*^9}, {
   3.664705813452982*^9, 3.6647058224192877`*^9}, {3.664705853676464*^9, 
   3.6647059535863028`*^9}, 3.664705985040072*^9, {3.664706428681343*^9, 
   3.6647064622704144`*^9}, {3.664706508099525*^9, 3.66470650856924*^9}, {
   3.664706557520203*^9, 3.664706561201672*^9}, {3.664708126393805*^9, 
   3.664708127045553*^9}, 3.664708193099313*^9, {3.664708267008801*^9, 
   3.664708337598102*^9}, {3.664708405457094*^9, 3.664708409838283*^9}, {
   3.664708440229597*^9, 3.6647084666542597`*^9}, {3.664708566032522*^9, 
   3.6647085703154593`*^9}, {3.6647086312217007`*^9, 3.664708640648726*^9}, {
   3.664708751392605*^9, 3.664708755685687*^9}, {3.664708788752678*^9, 
   3.664708911432076*^9}, {3.664708947532084*^9, 3.6647089729034224`*^9}, {
   3.664709010993299*^9, 3.664709012935392*^9}, {3.6647091223512983`*^9, 
   3.664709191359933*^9}, {3.664709237318735*^9, 3.664709240553643*^9}, {
   3.6647097381755*^9, 3.664709751652935*^9}, {3.6647098250826178`*^9, 
   3.664709851220655*^9}, {3.664709992276765*^9, 3.6647100131173363`*^9}, {
   3.6647100617381372`*^9, 3.664710076794784*^9}, {3.66471011009867*^9, 
   3.664710133957801*^9}, {3.664710181133833*^9, 3.664710235946147*^9}, {
   3.664710621415413*^9, 3.664710736276004*^9}, {3.664710879631439*^9, 
   3.664710882784547*^9}, {3.664710967680335*^9, 3.664710973786364*^9}, {
   3.6647110421933327`*^9, 3.664711043376535*^9}, {3.6647111626715107`*^9, 
   3.664711194482188*^9}, 3.6647112340890493`*^9, {3.664711313375367*^9, 
   3.664711373916086*^9}, {3.664711522050527*^9, 3.664711532080207*^9}, {
   3.664711591826007*^9, 3.66471160442492*^9}, {3.664712030613329*^9, 
   3.664712045972714*^9}, {3.664712108632924*^9, 3.66471210965926*^9}, {
   3.665470329395694*^9, 3.665470336494961*^9}, {3.670220053788969*^9, 
   3.670220054538756*^9}, {3.670220490368392*^9, 3.6702205107494087`*^9}, {
   3.671360771261219*^9, 3.671360795974678*^9}, {3.671360879698262*^9, 
   3.671360884889613*^9}, {3.6713609448718653`*^9, 3.671361029119382*^9}, {
   3.671361068722539*^9, 3.671361093102859*^9}, {3.671362731728162*^9, 
   3.671362741081324*^9}, {3.671362783945511*^9, 3.671362790530904*^9}, {
   3.6713628632209797`*^9, 3.671362912674218*^9}, {3.671362958508309*^9, 
   3.6713630806051493`*^9}, 3.671363138133923*^9, {3.671363199097167*^9, 
   3.6713632903922997`*^9}, {3.6713642355092382`*^9, 
   3.6713642361813593`*^9}, {3.6713642726517963`*^9, 3.671364330901586*^9}, {
   3.671364363588725*^9, 3.6713644158736277`*^9}, {3.671364565490828*^9, 
   3.671364573229142*^9}, {3.671364629953025*^9, 3.671364764035269*^9}, {
   3.671364803201963*^9, 3.6713648269020977`*^9}, 3.671364866907359*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Aapopctrl$$ = 1, $CellContext`Aasymctrl$$ = 
    1, $CellContext`Apassctrl$$ = 1, $CellContext`Asymctrl$$ = 
    1, $CellContext`CD44cntctrl$$ = 1, $CellContext`CD44expctrl$$ = 
    1, $CellContext`CD47cntctrl$$ = 1, $CellContext`CD47expctrl$$ = 
    1, $CellContext`cenApopctrl$$ = 0.5, $CellContext`cenAsymctrl$$ = 
    2., $CellContext`cenSymctrl$$ = 1., $CellContext`EPCAMcntctrl$$ = 
    1, $CellContext`EPCAMexpctrl$$ = 1, $CellContext`genesctrl$$ = {
    1, 1, 1, 1, 1.}, $CellContext`kctrl$$ = 1, $CellContext`keyctrl$$ = 
    0, $CellContext`keygctrl$$ = 1, $CellContext`METcntctrl$$ = 
    1, $CellContext`METexpctrl$$ = 
    1, $CellContext`mutctrl$$ = {}, $CellContext`mutctrlold$$ = \
$CellContext`mutctrl$$, $CellContext`mvctrl$$ = {0, 0, 0, 0, 
    0}, $CellContext`mvctrl2$$ = 
    Grid[{{0, 0, 0, 0, 0}}, Frame -> All], $CellContext`p$$ = {4, 
    30}, $CellContext`pold$$ = $CellContext`p$$, $CellContext`ppold$$ = 
    0, $CellContext`ratesctrl$$ = {
    1.1911033828582396547050308`5.862963561636357*^-5156157933, 
     2.3570380630216506`*^-11, 0.9988900872869952, 
     1}, $CellContext`rcsctrl$$ = 
    Grid[{{5.95882380136681857831222228888325717848730572`15.954589770191005*^\
-5156157934, 1.179173421282488*^-11, 0.4997223677420732, 0.5002776322461351}},
      Frame -> All], $CellContext`rnnsctrl$$ = {
    1.1911033828582396547050308`5.862963561636357*^-5156157933, 
     2.3570380630216506`*^-11, 0.9988900873105656, 
     1.9988900873105657`}, $CellContext`slopectrl$$ = 
    0.01, $CellContext`widectrl$$ = 20, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`ppold$$], 0}, 0}, {{
       Hold[$CellContext`cenAsymctrl$$], 2., "cen"}, 0., 3.}, {{
       Hold[$CellContext`cenSymctrl$$], 1., "cen"}, 0., 3.}, {{
       Hold[$CellContext`cenApopctrl$$], 0.5, "cen"}, 0., 3.}, {{
       Hold[$CellContext`widectrl$$], 20, "wide"}, 1, 40}, {{
       Hold[$CellContext`slopectrl$$], 0.01, "slope"}, 0.001, 0.02}, {{
       Hold[$CellContext`Aasymctrl$$], 1, "Aasym"}, 0, 2}, {{
       Hold[$CellContext`Asymctrl$$], 1, "Asym"}, 0, 2}, {{
       Hold[$CellContext`Aapopctrl$$], 1, "Aapop"}, 0, 2}, {{
       Hold[$CellContext`Apassctrl$$], 1, "Apass"}, 0, 2}, {{
       Hold[$CellContext`EPCAMexpctrl$$], 1, "EPICAM"}, 1, 10}, {{
       Hold[$CellContext`CD47expctrl$$], 1, "CD47"}, 1, 10}, {{
       Hold[$CellContext`CD44expctrl$$], 1, "CD44"}, 1, 10}, {{
       Hold[$CellContext`METexpctrl$$], 1, "MET"}, 1, 10}, {{
       Hold[$CellContext`EPCAMcntctrl$$], 1, 
       "\!\(\*SubscriptBox[\(EPICAM\), \(0\)]\)"}, 1, 10}, {{
       Hold[$CellContext`CD47cntctrl$$], 1, 
       "\!\(\*SubscriptBox[\(CD47\), \(0\)]\)"}, 1, 10}, {{
       Hold[$CellContext`CD44cntctrl$$], 1, 
       "\!\(\*SubscriptBox[\(CD44\), \(0\)]\)"}, 1, 10}, {{
       Hold[$CellContext`METcntctrl$$], 1, 
       "\!\(\*SubscriptBox[\(MET\), \(0\)]\)"}, 1, 10}, {{
       Hold[$CellContext`kctrl$$], 1, "k"}, {1, 2, 3}}, {{
       Hold[$CellContext`mutctrl$$], {}, "mutations"}, {1, 2, 3, 4}}, {{
       Hold[$CellContext`mutctrlold$$], $CellContext`mutctrl$$, 
       "mutations"}, {1, 2, 3, 4}}, {{
       Hold[$CellContext`mvctrl$$], $CellContext`mutctrl$$, "mv"}, 0}, {{
       Hold[$CellContext`mvctrl2$$], 
       Grid[{$CellContext`mvctrl$$}, Frame -> All], "mv"}}, {{
       Hold[$CellContext`genesctrl$$], 0, "gene expr"}}, {{
       Hold[$CellContext`keyctrl$$], 0, "key"}}, {{
       Hold[$CellContext`keygctrl$$], 1, "key genes"}}, {{
       Hold[$CellContext`p$$], {4, 30}}, {0, 0}, {4, 30}, {1, 1}}, {{
       Hold[$CellContext`pold$$], $CellContext`p$$}, {0, 0}, {4, 30}, {1, 
      1}}, {{
       Hold[$CellContext`ratesctrl$$], 0, "rates"}}, {{
       Hold[$CellContext`rnnsctrl$$], 0, "rnn"}}, {{
       Hold[$CellContext`rcsctrl$$], 0, "rcs"}}}, Typeset`size$$ = {
    443., {1050.5, 1057.5}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`cenAsymctrl$50845$$ = 
    0, $CellContext`cenSymctrl$50846$$ = 0, $CellContext`cenApopctrl$50847$$ =
     0, $CellContext`widectrl$50848$$ = 0, $CellContext`slopectrl$50849$$ = 
    0, $CellContext`Aasymctrl$50850$$ = 0, $CellContext`p$50851$$ = {0, 
    0}, $CellContext`pold$50852$$ = {0, 0}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`Aapopctrl$$ = 1, $CellContext`Aasymctrl$$ = 
        1, $CellContext`Apassctrl$$ = 1, $CellContext`Asymctrl$$ = 
        1, $CellContext`CD44cntctrl$$ = 1, $CellContext`CD44expctrl$$ = 
        1, $CellContext`CD47cntctrl$$ = 1, $CellContext`CD47expctrl$$ = 
        1, $CellContext`cenApopctrl$$ = 0.5, $CellContext`cenAsymctrl$$ = 
        2., $CellContext`cenSymctrl$$ = 1., $CellContext`EPCAMcntctrl$$ = 
        1, $CellContext`EPCAMexpctrl$$ = 1, $CellContext`genesctrl$$ = 
        0, $CellContext`kctrl$$ = 1, $CellContext`keyctrl$$ = 
        0, $CellContext`keygctrl$$ = 1, $CellContext`METcntctrl$$ = 
        1, $CellContext`METexpctrl$$ = 
        1, $CellContext`mutctrl$$ = {}, $CellContext`mutctrlold$$ = \
$CellContext`mutctrl$$, $CellContext`mvctrl$$ = $CellContext`mutctrl$$, \
$CellContext`mvctrl2$$ = 
        Grid[{$CellContext`mvctrl$$}, Frame -> All], $CellContext`p$$ = {4, 
         30}, $CellContext`pold$$ = $CellContext`p$$, $CellContext`ppold$$ = 
        0, $CellContext`ratesctrl$$ = 0, $CellContext`rcsctrl$$ = 
        0, $CellContext`rnnsctrl$$ = 0, $CellContext`slopectrl$$ = 
        0.01, $CellContext`widectrl$$ = 20}, "ControllerVariables" :> {
        Hold[$CellContext`cenAsymctrl$$, $CellContext`cenAsymctrl$50845$$, 0], 
        Hold[$CellContext`cenSymctrl$$, $CellContext`cenSymctrl$50846$$, 0], 
        Hold[$CellContext`cenApopctrl$$, $CellContext`cenApopctrl$50847$$, 0], 
        Hold[$CellContext`widectrl$$, $CellContext`widectrl$50848$$, 0], 
        Hold[$CellContext`slopectrl$$, $CellContext`slopectrl$50849$$, 0], 
        Hold[$CellContext`Aasymctrl$$, $CellContext`Aasymctrl$50850$$, 0], 
        Hold[$CellContext`p$$, $CellContext`p$50851$$, {0, 0}], 
        Hold[$CellContext`pold$$, $CellContext`pold$50852$$, {0, 0}]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ((If[
          
          And[$CellContext`pold$$ != $CellContext`p$$, \
$CellContext`mutctrlold$$ == $CellContext`mutctrl$$], $CellContext`mutctrl$$ = 
           Part[
             Join[$CellContext`mutctrl$$, 
              Complement[
               Range[5 - 1], $CellContext`mutctrl$$]], 
             Span[1, 
              
              Part[$CellContext`p$$, 
               1]]]; $CellContext`mutctrlold$$ = $CellContext`mutctrl$$; \
$CellContext`pold$$ = $CellContext`p$$]; If[
          
          And[$CellContext`pold$$ == $CellContext`p$$, \
$CellContext`mutctrlold$$ != $CellContext`mutctrl$$], 
          Part[$CellContext`p$$, 1] = 
           Length[$CellContext`mutctrl$$]; $CellContext`mutctrlold$$ = \
$CellContext`mutctrl$$; $CellContext`pold$$ = $CellContext`p$$]; 
        Null); $CellContext`mvctrl$$ = ReplacePart[{0, 0, 0, 0, 0}, 
          Map[# -> 1& , 
           Sort[$CellContext`mutctrl$$]]]; $CellContext`mvctrl2$$ = 
        Grid[{$CellContext`mvctrl$$}, Frame -> All]; 
       Block[{$CellContext`wide = $CellContext`widectrl$$, $CellContext`slope = \
$CellContext`slopectrl$$, $CellContext`expG, $CellContext`cntG, \
$CellContext`compkeystep = {1, 2, 
           4}, $CellContext`genes, $CellContext`signature = {1, -1, 1, 1, 
           0}, $CellContext`Aasym = {$CellContext`Aasymctrl$$, \
$CellContext`Aasymctrl$$, $CellContext`Aasymctrl$$}, $CellContext`Asym = \
{$CellContext`Asymctrl$$, $CellContext`Asymctrl$$, $CellContext`Asymctrl$$}, \
$CellContext`Aapop = {$CellContext`Aapopctrl$$, $CellContext`Aapopctrl$$, \
$CellContext`Aapopctrl$$}, $CellContext`Apass = $CellContext`Apassctrl$$, \
$CellContext`krates}, $CellContext`expG = {$CellContext`EPCAMexpctrl$$, \
$CellContext`CD47expctrl$$, $CellContext`CD44expctrl$$, \
$CellContext`METexpctrl$$, 
            1.}; $CellContext`cntG = {$CellContext`EPCAMcntctrl$$, \
$CellContext`CD47cntctrl$$, $CellContext`CD44cntctrl$$, \
$CellContext`METcntctrl$$, 
            1.}; $CellContext`genes = $CellContext`expG/$CellContext`cntG; \
$CellContext`krates = $CellContext`Apass Join[
             Table[1, {$CellContext`i, 3 - 1}], {
             0}]; $CellContext`genesctrl$$ = $CellContext`genes; \
$CellContext`keyctrl$$ = $CellContext`keyC[$CellContext`kctrl$$, \
$CellContext`mvctrl$$, $CellContext`compkeystep]; $CellContext`keygctrl$$ = \
$CellContext`keygenesC[$CellContext`kctrl$$, $CellContext`mvctrl$$, \
$CellContext`compkeystep, $CellContext`genes, $CellContext`signature]; \
$CellContext`ratesctrl$$ = $CellContext`ratesC[
            $CellContext`ssC[$CellContext`keyctrl$$, 
             
             Part[$CellContext`p$$, 
              2]], $CellContext`kctrl$$, $CellContext`keygctrl$$]; \
$CellContext`rnnsctrl$$ = 
          Accumulate[$CellContext`ratesctrl$$]; $CellContext`rcsctrl$$ = 
          Grid[{$CellContext`ratesctrl$$/Part[$CellContext`rnnsctrl$$, -1]}, 
            Frame -> All]; $CellContext`tab = 
          Map[$CellContext`ratesC[#, $CellContext`keyctrl$$, \
$CellContext`keygctrl$$]& , 
            Part[CompressedData["
1:eJwNwws0EwoABmDPohopUyqTbiV5XWqkWn/ipIueetDtOiWvrrchok6XymlH
uqeTiI3cSiNFWcrjJHltIWNe28IY82hjW+RV3L5zPhOfsBN+aioqKpq/Gv+q
ZaJRoxMkh+ReSa5L5BDiUli0pLJ+rJj4JyXnRi+sLfT9w/kCKJ8wqQFTXRjr
b9B2e9gB+hJpyGwOD7kyigdD0QrxTr0K5VUuWgoFFmWRnxEqkXjR7JpQn+cq
d9/9CcJSd+MeKht6bl7ndgjrEW0wMMG/VAfzLNLvKetqsUHN00wx8hF3nmoL
AlurkWMfdUrC/QB3fs76PE4ViF8K4hXE9zCo9bkoSqxEBvF9gCmhAk0R6ZdH
XpXhB+k0NTf0Hc4mK5eTHN+CQqDvCDYtRfyp6w/ajN8gkkZ7zd7GQphO3175
/hI0aRWHZqfPQrrbl2k3r8T2jfnj6yly5OtQzEpuS7Fz35mDc1GjCLT12Fqo
kKCyTmuzXtcgCmJtGA3LxVh9ptK6+Fo/AvakZWT9JkLG6OM/COIeUKa9maY1
Qoyt8mxu/cKHZdt5d5ppNyLyyl9Q6Z2IjC32kZM7YMc3mDw7wcN475FDrbVt
YByytSSUtIIXdvPYwbdczMfRje2yWxBTMJ//Q94MuRU99sTFJvhTHpKNlZ8Q
aMO4/CKTA+8NpKKss2w4qu7htFg3wFZ3ciZ4bT0sSji7GlfVgR5Fsw43qsV2
x3yytn0Nap0j/r1P+4nDHxre1AXPoH6Fn1pl0RQMnSM/Jdz4BhenDvfhNwqM
2VS42prLwfZeKX1eIINrsiKdePIrFhzMujOdRiE4sGwlJ2QYtG2hCc84QyBU
7w/UOjaIhHH958T5AfSVXXqsUt+PBN0NdexCEdzsM0M2efZhNLucpZrYg5ey
9kSPNiF4tcI1UmcBAqp96Dad3fC7q9TUSOpCm/87Zv6hTph98w+q2twBMjO3
w5zYjqDmsgv6a3loJHYw2s3b0LfI+vj9SCtuO47EWV7nQuX+0l2MhBaw1pRG
M1Z+BiVplHmlvAkkHY5rk/4ibk1fy29+Ow8106qY/4JnccHQKOavS9NICn26
NYsxBbY9a2ad6iSSoyTPG+8o8aJ3Byl/nwIk1cWsAF05qPHfU7NnZKgsfdfi
qiHFXGcFl7x3DO1xy2zjs0ZAdbsp6jQaBoFFXkitGoIT93Hj+auD2HOkcHf4
STGOZ6Z2ORwYQM7nl2W3nPsRE6+x08dLhDRqivamhV7MVtPSVwf2wGB0lWWP
TIjX4uhinTsC+CWd8rjixIc+gv0tdLvhdVN22He8E17Gfwal9nUg2Sise19/
O4oSgtstlDxM0pUcKz0epm9FaM4yF+Hv4nn0ePZPqIfsyrMVzYPLOFBVZDUH
GV/6Snh3BqTZux6lS6fRY7Lkb62MKTSckI+YOE6Cb5KoHqL2DTUZmsu4AgU8
1l8hS9lyaFk9iaU9mMCw7PSjkg8y8PCM5UuQojyN2dcWNwbzvLRr59VHwRnU
Fj96Noz9ExoST18JHvxUT71qPwSbuqMPbYwHoRFdTv1oKAaj13H8yZYBzHly
xyMc+yH0JjqIg0RwyFXUP3Lpg533Fg1Pbg+8F0LWqIV/wT2Tr0rRZiHkhHMU
bxkf7gLDkKXsbhBryAdpJV34H/irdt8=
             "], $CellContext`keyctrl$$, 
             Span[1, All]]]; $CellContext`tab = 
          Transpose[$CellContext`tab/
            Total[$CellContext`tab, {2}]]; $CellContext`tab2 = 
          Map[$CellContext`ratesC[#, $CellContext`keyctrl$$, \
$CellContext`keygctrl$$]& , 
            Part[CompressedData["
1:eJwNwws0EwoABmDPohopUyqTbiV5XWqkWn/ipIueetDtOiWvrrchok6XymlH
uqeTiI3cSiNFWcrjJHltIWNe28IY82hjW+RV3L5zPhOfsBN+aioqKpq/Gv+q
ZaJRoxMkh+ReSa5L5BDiUli0pLJ+rJj4JyXnRi+sLfT9w/kCKJ8wqQFTXRjr
b9B2e9gB+hJpyGwOD7kyigdD0QrxTr0K5VUuWgoFFmWRnxEqkXjR7JpQn+cq
d9/9CcJSd+MeKht6bl7ndgjrEW0wMMG/VAfzLNLvKetqsUHN00wx8hF3nmoL
AlurkWMfdUrC/QB3fs76PE4ViF8K4hXE9zCo9bkoSqxEBvF9gCmhAk0R6ZdH
XpXhB+k0NTf0Hc4mK5eTHN+CQqDvCDYtRfyp6w/ajN8gkkZ7zd7GQphO3175
/hI0aRWHZqfPQrrbl2k3r8T2jfnj6yly5OtQzEpuS7Fz35mDc1GjCLT12Fqo
kKCyTmuzXtcgCmJtGA3LxVh9ptK6+Fo/AvakZWT9JkLG6OM/COIeUKa9maY1
Qoyt8mxu/cKHZdt5d5ppNyLyyl9Q6Z2IjC32kZM7YMc3mDw7wcN475FDrbVt
YByytSSUtIIXdvPYwbdczMfRje2yWxBTMJ//Q94MuRU99sTFJvhTHpKNlZ8Q
aMO4/CKTA+8NpKKss2w4qu7htFg3wFZ3ciZ4bT0sSji7GlfVgR5Fsw43qsV2
x3yytn0Nap0j/r1P+4nDHxre1AXPoH6Fn1pl0RQMnSM/Jdz4BhenDvfhNwqM
2VS42prLwfZeKX1eIINrsiKdePIrFhzMujOdRiE4sGwlJ2QYtG2hCc84QyBU
7w/UOjaIhHH958T5AfSVXXqsUt+PBN0NdexCEdzsM0M2efZhNLucpZrYg5ey
9kSPNiF4tcI1UmcBAqp96Dad3fC7q9TUSOpCm/87Zv6hTph98w+q2twBMjO3
w5zYjqDmsgv6a3loJHYw2s3b0LfI+vj9SCtuO47EWV7nQuX+0l2MhBaw1pRG
M1Z+BiVplHmlvAkkHY5rk/4ibk1fy29+Ow8106qY/4JnccHQKOavS9NICn26
NYsxBbY9a2ad6iSSoyTPG+8o8aJ3Byl/nwIk1cWsAF05qPHfU7NnZKgsfdfi
qiHFXGcFl7x3DO1xy2zjs0ZAdbsp6jQaBoFFXkitGoIT93Hj+auD2HOkcHf4
STGOZ6Z2ORwYQM7nl2W3nPsRE6+x08dLhDRqivamhV7MVtPSVwf2wGB0lWWP
TIjX4uhinTsC+CWd8rjixIc+gv0tdLvhdVN22He8E17Gfwal9nUg2Sise19/
O4oSgtstlDxM0pUcKz0epm9FaM4yF+Hv4nn0ePZPqIfsyrMVzYPLOFBVZDUH
GV/6Snh3BqTZux6lS6fRY7Lkb62MKTSckI+YOE6Cb5KoHqL2DTUZmsu4AgU8
1l8hS9lyaFk9iaU9mMCw7PSjkg8y8PCM5UuQojyN2dcWNwbzvLRr59VHwRnU
Fj96Noz9ExoST18JHvxUT71qPwSbuqMPbYwHoRFdTv1oKAaj13H8yZYBzHly
xyMc+yH0JjqIg0RwyFXUP3Lpg533Fg1Pbg+8F0LWqIV/wT2Tr0rRZiHkhHMU
bxkf7gLDkKXsbhBryAdpJV34H/irdt8=
             "], 
             Span[1, All], 
             Part[$CellContext`p$$, 2]]]; $CellContext`tab2 = 
          Transpose[$CellContext`tab2/
            Total[$CellContext`tab2, {2}]]; $CellContext`tab3 = 
          Outer[$CellContext`supC[#, #2, $CellContext`widectrl$$, \
$CellContext`slopectrl$$]& , 
            Part[CompressedData["
1:eJwNwws0EwoABmDPohopUyqTbiV5XWqkWn/ipIueetDtOiWvrrchok6XymlH
uqeTiI3cSiNFWcrjJHltIWNe28IY82hjW+RV3L5zPhOfsBN+aioqKpq/Gv+q
ZaJRoxMkh+ReSa5L5BDiUli0pLJ+rJj4JyXnRi+sLfT9w/kCKJ8wqQFTXRjr
b9B2e9gB+hJpyGwOD7kyigdD0QrxTr0K5VUuWgoFFmWRnxEqkXjR7JpQn+cq
d9/9CcJSd+MeKht6bl7ndgjrEW0wMMG/VAfzLNLvKetqsUHN00wx8hF3nmoL
AlurkWMfdUrC/QB3fs76PE4ViF8K4hXE9zCo9bkoSqxEBvF9gCmhAk0R6ZdH
XpXhB+k0NTf0Hc4mK5eTHN+CQqDvCDYtRfyp6w/ajN8gkkZ7zd7GQphO3175
/hI0aRWHZqfPQrrbl2k3r8T2jfnj6yly5OtQzEpuS7Fz35mDc1GjCLT12Fqo
kKCyTmuzXtcgCmJtGA3LxVh9ptK6+Fo/AvakZWT9JkLG6OM/COIeUKa9maY1
Qoyt8mxu/cKHZdt5d5ppNyLyyl9Q6Z2IjC32kZM7YMc3mDw7wcN475FDrbVt
YByytSSUtIIXdvPYwbdczMfRje2yWxBTMJ//Q94MuRU99sTFJvhTHpKNlZ8Q
aMO4/CKTA+8NpKKss2w4qu7htFg3wFZ3ciZ4bT0sSji7GlfVgR5Fsw43qsV2
x3yytn0Nap0j/r1P+4nDHxre1AXPoH6Fn1pl0RQMnSM/Jdz4BhenDvfhNwqM
2VS42prLwfZeKX1eIINrsiKdePIrFhzMujOdRiE4sGwlJ2QYtG2hCc84QyBU
7w/UOjaIhHH958T5AfSVXXqsUt+PBN0NdexCEdzsM0M2efZhNLucpZrYg5ey
9kSPNiF4tcI1UmcBAqp96Dad3fC7q9TUSOpCm/87Zv6hTph98w+q2twBMjO3
w5zYjqDmsgv6a3loJHYw2s3b0LfI+vj9SCtuO47EWV7nQuX+0l2MhBaw1pRG
M1Z+BiVplHmlvAkkHY5rk/4ibk1fy29+Ow8106qY/4JnccHQKOavS9NICn26
NYsxBbY9a2ad6iSSoyTPG+8o8aJ3Byl/nwIk1cWsAF05qPHfU7NnZKgsfdfi
qiHFXGcFl7x3DO1xy2zjs0ZAdbsp6jQaBoFFXkitGoIT93Hj+auD2HOkcHf4
STGOZ6Z2ORwYQM7nl2W3nPsRE6+x08dLhDRqivamhV7MVtPSVwf2wGB0lWWP
TIjX4uhinTsC+CWd8rjixIc+gv0tdLvhdVN22He8E17Gfwal9nUg2Sise19/
O4oSgtstlDxM0pUcKz0epm9FaM4yF+Hv4nn0ePZPqIfsyrMVzYPLOFBVZDUH
GV/6Snh3BqTZux6lS6fRY7Lkb62MKTSckI+YOE6Cb5KoHqL2DTUZmsu4AgU8
1l8hS9lyaFk9iaU9mMCw7PSjkg8y8PCM5UuQojyN2dcWNwbzvLRr59VHwRnU
Fj96Noz9ExoST18JHvxUT71qPwSbuqMPbYwHoRFdTv1oKAaj13H8yZYBzHly
xyMc+yH0JjqIg0RwyFXUP3Lpg533Fg1Pbg+8F0LWqIV/wT2Tr0rRZiHkhHMU
bxkf7gLDkKXsbhBryAdpJV34H/irdt8=
             "], $CellContext`keyctrl$$, 
             Span[
             1, All]], {$CellContext`cenAsymctrl$$, \
$CellContext`cenSymctrl$$, $CellContext`cenApopctrl$$}]; $CellContext`tab4 = 
          Outer[$CellContext`supC[#, #2, $CellContext`widectrl$$, \
$CellContext`slopectrl$$]& , 
            Part[CompressedData["
1:eJwNwws0EwoABmDPohopUyqTbiV5XWqkWn/ipIueetDtOiWvrrchok6XymlH
uqeTiI3cSiNFWcrjJHltIWNe28IY82hjW+RV3L5zPhOfsBN+aioqKpq/Gv+q
ZaJRoxMkh+ReSa5L5BDiUli0pLJ+rJj4JyXnRi+sLfT9w/kCKJ8wqQFTXRjr
b9B2e9gB+hJpyGwOD7kyigdD0QrxTr0K5VUuWgoFFmWRnxEqkXjR7JpQn+cq
d9/9CcJSd+MeKht6bl7ndgjrEW0wMMG/VAfzLNLvKetqsUHN00wx8hF3nmoL
AlurkWMfdUrC/QB3fs76PE4ViF8K4hXE9zCo9bkoSqxEBvF9gCmhAk0R6ZdH
XpXhB+k0NTf0Hc4mK5eTHN+CQqDvCDYtRfyp6w/ajN8gkkZ7zd7GQphO3175
/hI0aRWHZqfPQrrbl2k3r8T2jfnj6yly5OtQzEpuS7Fz35mDc1GjCLT12Fqo
kKCyTmuzXtcgCmJtGA3LxVh9ptK6+Fo/AvakZWT9JkLG6OM/COIeUKa9maY1
Qoyt8mxu/cKHZdt5d5ppNyLyyl9Q6Z2IjC32kZM7YMc3mDw7wcN475FDrbVt
YByytSSUtIIXdvPYwbdczMfRje2yWxBTMJ//Q94MuRU99sTFJvhTHpKNlZ8Q
aMO4/CKTA+8NpKKss2w4qu7htFg3wFZ3ciZ4bT0sSji7GlfVgR5Fsw43qsV2
x3yytn0Nap0j/r1P+4nDHxre1AXPoH6Fn1pl0RQMnSM/Jdz4BhenDvfhNwqM
2VS42prLwfZeKX1eIINrsiKdePIrFhzMujOdRiE4sGwlJ2QYtG2hCc84QyBU
7w/UOjaIhHH958T5AfSVXXqsUt+PBN0NdexCEdzsM0M2efZhNLucpZrYg5ey
9kSPNiF4tcI1UmcBAqp96Dad3fC7q9TUSOpCm/87Zv6hTph98w+q2twBMjO3
w5zYjqDmsgv6a3loJHYw2s3b0LfI+vj9SCtuO47EWV7nQuX+0l2MhBaw1pRG
M1Z+BiVplHmlvAkkHY5rk/4ibk1fy29+Ow8106qY/4JnccHQKOavS9NICn26
NYsxBbY9a2ad6iSSoyTPG+8o8aJ3Byl/nwIk1cWsAF05qPHfU7NnZKgsfdfi
qiHFXGcFl7x3DO1xy2zjs0ZAdbsp6jQaBoFFXkitGoIT93Hj+auD2HOkcHf4
STGOZ6Z2ORwYQM7nl2W3nPsRE6+x08dLhDRqivamhV7MVtPSVwf2wGB0lWWP
TIjX4uhinTsC+CWd8rjixIc+gv0tdLvhdVN22He8E17Gfwal9nUg2Sise19/
O4oSgtstlDxM0pUcKz0epm9FaM4yF+Hv4nn0ePZPqIfsyrMVzYPLOFBVZDUH
GV/6Snh3BqTZux6lS6fRY7Lkb62MKTSckI+YOE6Cb5KoHqL2DTUZmsu4AgU8
1l8hS9lyaFk9iaU9mMCw7PSjkg8y8PCM5UuQojyN2dcWNwbzvLRr59VHwRnU
Fj96Noz9ExoST18JHvxUT71qPwSbuqMPbYwHoRFdTv1oKAaj13H8yZYBzHly
xyMc+yH0JjqIg0RwyFXUP3Lpg533Fg1Pbg+8F0LWqIV/wT2Tr0rRZiHkhHMU
bxkf7gLDkKXsbhBryAdpJV34H/irdt8=
             "], 
             Span[1, All], 
             
             Part[$CellContext`p$$, 
              2]], {$CellContext`cenAsymctrl$$, $CellContext`cenSymctrl$$, \
$CellContext`cenApopctrl$$}]; $CellContext`pl = 
          ListLinePlot[$CellContext`tab, 
            PlotLegends -> {
             "\!\(\*SubscriptBox[\(P\), \(asyn\)]\)", 
              "\!\(\*SubscriptBox[\(P\), \(sync\)]\)", 
              "\!\(\*SubscriptBox[\(P\), \(apop\)]\)", 
              "\!\(\*SubscriptBox[\(P\), \(pass\)]\)"}, ImageSize -> Small, 
            DataRange -> {0, 10}, AxesLabel -> {"m", "P"}, PlotLabel -> 
            StringJoin["K=", 
              ToString[$CellContext`keyctrl$$]]]; $CellContext`pl2 = 
          ListLinePlot[$CellContext`tab2, 
            PlotLegends -> {
             "\!\(\*SubscriptBox[\(P\), \(asyn\)]\)", 
              "\!\(\*SubscriptBox[\(P\), \(sync\)]\)", 
              "\!\(\*SubscriptBox[\(P\), \(apop\)]\)", 
              "\!\(\*SubscriptBox[\(P\), \(pass\)]\)"}, ImageSize -> Small, 
            DataRange -> {0, 5 - 1}, AxesLabel -> {"K", "P"}, PlotLabel -> 
            StringJoin["m=", 
              ToString[
               Part[$CellContext`p$$, 2]]]]; $CellContext`pl3 = 
          ListLinePlot[$CellContext`tab3, 
            PlotLegends -> {
             "\!\(\*SubscriptBox[\(\[Chi]\), \(asyn\)]\)", 
              "\!\(\*SubscriptBox[\(\[Chi]\), \(sync\)]\)", 
              "\!\(\*SubscriptBox[\(\[Chi]\), \(apop\)]\)", 
              "\!\(\*SubscriptBox[\(\[Chi]\), \(pass\)]\)"}, ImageSize -> 
            Small, DataRange -> {0, 10}, AxesLabel -> {"m", "\[Chi]"}, 
            PlotLabel -> StringJoin["K=", 
              ToString[$CellContext`keyctrl$$]]]; $CellContext`pl4 = 
          ListLinePlot[$CellContext`tab4, 
            PlotLegends -> {
             "\!\(\*SubscriptBox[\(\[Chi]\), \(asyn\)]\)", 
              "\!\(\*SubscriptBox[\(\[Chi]\), \(sync\)]\)", 
              "\!\(\*SubscriptBox[\(\[Chi]\), \(apop\)]\)", 
              "\!\(\*SubscriptBox[\(\[Chi]\), \(pass\)]\)"}, ImageSize -> 
            Small, DataRange -> {0, 5 - 1}, AxesLabel -> {"K", "\[Chi]"}, 
            PlotLabel -> StringJoin["m=", 
              ToString[
               Part[$CellContext`p$$, 2]]]]; $CellContext`pl5 = Plot[{
             $CellContext`supC[$CellContext`s, $CellContext`cenAsymctrl$$, \
$CellContext`widectrl$$, $CellContext`slopectrl$$], 
             $CellContext`supC[$CellContext`s, $CellContext`cenSymctrl$$, \
$CellContext`widectrl$$, $CellContext`slopectrl$$], 
             $CellContext`supC[$CellContext`s, $CellContext`cenApopctrl$$, \
$CellContext`widectrl$$, $CellContext`slopectrl$$]}, {$CellContext`s, 0, 3}, 
            PlotLegends -> {
             "\!\(\*SubscriptBox[\(\[Chi]\), \(asyn\)]\)", 
              "\!\(\*SubscriptBox[\(\[Chi]\), \(sync\)]\)", 
              "\!\(\*SubscriptBox[\(\[Chi]\), \(apop\)]\)", 
              "\!\(\*SubscriptBox[\(\[Chi]\), \(pass\)]\)"}, ImageSize -> 
            Small, AxesLabel -> {"s", "\[Chi]"}, PlotLabel -> StringJoin["K=", 
              ToString[$CellContext`keyctrl$$], ", m=", 
              ToString[
               Part[$CellContext`p$$, 2]]]]; Null]; Column[{
          StringJoin["K=key[k,mv]]", "=", 
           ToString[$CellContext`keyctrl$$]], 
          StringJoin["s[K,m]", "=", 
           ToString[
            Apply[$CellContext`ssC, $CellContext`p$$]]], 
          Graphics[
           Line[{{0, 0}, $CellContext`p$$}], 
           GridLines -> {{0, 1, 2, 3, 4, 5}, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 
             10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 
             26, 27, 28, 29, 30}}, Axes -> True, 
           Ticks -> {{0, 1, 2, 3, 4, 5}, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
             11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 
             27, 28, 29, 30}}, AxesOrigin -> {0, 0}, 
           AxesLabel -> {"\!\(\*SubscriptBox[\(i\), \(ord\)]\)", "m"}, 
           PlotRange -> Transpose[{{0, 0}, {4, 30}}]], 
          Row[{
            
            BarChart[$CellContext`ratesctrl$$/
             Part[$CellContext`rnnsctrl$$, -1], 
             ChartLabels -> {
              "\!\(\*SubscriptBox[\(P\), \(asyn\)]\)", 
               "\!\(\*SubscriptBox[\(P\), \(sync\)]\)", 
               "\!\(\*SubscriptBox[\(P\), \(apop\)]\)", 
               "\!\(\*SubscriptBox[\(P\), \(pass\)]\)"}, ImageSize -> Small, 
             PlotLabel -> StringJoin["K=", 
               ToString[$CellContext`keyctrl$$], ", m=", 
               ToString[
                Part[$CellContext`p$$, 2]]]], 
            
            BarChart[$CellContext`ratesctrl$$, 
             ChartLabels -> {
              "\!\(\*SubscriptBox[\(R\), \(asyn\)]\)", 
               "\!\(\*SubscriptBox[\(R\), \(sync\)]\)", 
               "\!\(\*SubscriptBox[\(R\), \(apop\)]\)", 
               "\!\(\*SubscriptBox[\(R\), \(pass\)]\)"}, ImageSize -> Small, 
             PlotLabel -> StringJoin["K=", 
               ToString[$CellContext`keyctrl$$], ", m=", 
               ToString[
                Part[$CellContext`p$$, 2]]]]}, "                     "], 
          
          Row[{$CellContext`pl, $CellContext`pl2}, 
           "                     "], {}, 
          
          Row[{$CellContext`pl3, $CellContext`pl4, $CellContext`pl5}, 
           "                     "]}]), 
      "Specifications" :> {{{$CellContext`ppold$$, 0}, 0, ControlType -> 
         None}, Delimiter, {{$CellContext`cenAsymctrl$$, 2., "cen"}, 0., 3., 
         ControlType -> Slider}, {{$CellContext`cenSymctrl$$, 1., "cen"}, 0., 
         3., ControlType -> 
         Slider}, {{$CellContext`cenApopctrl$$, 0.5, "cen"}, 0., 3., 
         ControlType -> Slider}, 
        Delimiter, {{$CellContext`widectrl$$, 20, "wide"}, 1, 
         40}, {{$CellContext`slopectrl$$, 0.01, "slope"}, 0.001, 0.02}, 
        Delimiter, {{$CellContext`Aasymctrl$$, 1, "Aasym"}, 0, 
         2}, {{$CellContext`Asymctrl$$, 1, "Asym"}, 0, 
         2}, {{$CellContext`Aapopctrl$$, 1, "Aapop"}, 0, 
         2}, {{$CellContext`Apassctrl$$, 1, "Apass"}, 0, 2}, 
        Delimiter, {{$CellContext`EPCAMexpctrl$$, 1, "EPICAM"}, 1, 
         10}, {{$CellContext`CD47expctrl$$, 1, "CD47"}, 1, 
         10}, {{$CellContext`CD44expctrl$$, 1, "CD44"}, 1, 
         10}, {{$CellContext`METexpctrl$$, 1, "MET"}, 1, 10}, 
        Delimiter, {{$CellContext`EPCAMcntctrl$$, 1, 
          "\!\(\*SubscriptBox[\(EPICAM\), \(0\)]\)"}, 1, 
         10}, {{$CellContext`CD47cntctrl$$, 1, 
          "\!\(\*SubscriptBox[\(CD47\), \(0\)]\)"}, 1, 
         10}, {{$CellContext`CD44cntctrl$$, 1, 
          "\!\(\*SubscriptBox[\(CD44\), \(0\)]\)"}, 1, 
         10}, {{$CellContext`METcntctrl$$, 1, 
          "\!\(\*SubscriptBox[\(MET\), \(0\)]\)"}, 1, 10}, 
        Delimiter, {{$CellContext`kctrl$$, 1, "k"}, {1, 2, 3}, ControlType -> 
         PopupMenu}, {{$CellContext`mutctrl$$, {}, "mutations"}, {1, 2, 3, 4},
          ControlType -> 
         TogglerBar}, {{$CellContext`mutctrlold$$, $CellContext`mutctrl$$, 
          "mutations"}, {1, 2, 3, 4}, ControlType -> 
         None}, {{$CellContext`mvctrl$$, $CellContext`mutctrl$$, "mv"}, 0, 
         ControlType -> None, Enabled -> False}, {{$CellContext`mvctrl2$$, 
          Grid[{$CellContext`mvctrl$$}, Frame -> All], "mv"}, ControlType -> 
         InputField, Enabled -> 
         False}, {{$CellContext`genesctrl$$, 0, "gene expr"}, ControlType -> 
         InputField, Enabled -> False}, {{$CellContext`keyctrl$$, 0, "key"}, 
         ControlType -> InputField, Enabled -> 
         False}, {{$CellContext`keygctrl$$, 1, "key genes"}, ControlType -> 
         InputField, Enabled -> False}, {{$CellContext`p$$, {4, 30}}, {0, 
         0}, {4, 30}, {1, 1}, ControlType -> 
         Locator}, {{$CellContext`pold$$, $CellContext`p$$}, {0, 0}, {4, 
         30}, {1, 1}, ControlType -> 
         None}, {{$CellContext`ratesctrl$$, 0, "rates"}, ControlType -> 
         InputField, Enabled -> False}, {{$CellContext`rnnsctrl$$, 0, "rnn"}, 
         ControlType -> InputField, Enabled -> 
         False}, {{$CellContext`rcsctrl$$, 0, "rcs"}, ControlType -> 
         InputField, Enabled -> True}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{787., {1085., 1092.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.664275898536489*^9, 3.6642761571541023`*^9, {3.664276246679077*^9, 
   3.664276289423008*^9}, 3.6642763873423862`*^9, {3.664276423148611*^9, 
   3.6642764420985126`*^9}, 3.664276489960578*^9, 3.6642766503070793`*^9, {
   3.664276688905182*^9, 3.664276707200734*^9}, {3.6642774417921753`*^9, 
   3.6642774607700872`*^9}, {3.664277624841217*^9, 3.664277636620206*^9}, 
   3.66427775367834*^9, 3.66427783709274*^9, 3.664277936127276*^9, 
   3.664277999126217*^9, 3.664278127664556*^9, 3.664281833307025*^9, 
   3.664281882187817*^9, {3.6642819921657457`*^9, 3.664282001144483*^9}, 
   3.664282146158359*^9, 3.6642822076046553`*^9, 3.664282338125202*^9, 
   3.664282387100603*^9, {3.664282657314995*^9, 3.664282713843943*^9}, {
   3.6642827535203753`*^9, 3.664282777521678*^9}, 3.664282810409399*^9, {
   3.664282908686429*^9, 3.664282928526453*^9}, 3.664605077724819*^9, {
   3.6646052100033703`*^9, 3.664605223528281*^9}, 3.6646052616488457`*^9, 
   3.664605324609509*^9, 3.664605383484393*^9, {3.664605477178707*^9, 
   3.6646055022469273`*^9}, {3.664605599321085*^9, 3.6646056092115707`*^9}, {
   3.664605652871611*^9, 3.664605662523802*^9}, 3.664605728580234*^9, {
   3.664605839659214*^9, 3.664605848181888*^9}, 3.664605936176919*^9, 
   3.6646060529269648`*^9, 3.6646065100181513`*^9, {3.664606552435628*^9, 
   3.664606563738041*^9}, {3.664606938465888*^9, 3.664606972311183*^9}, {
   3.6646070560400677`*^9, 3.664607067628861*^9}, 3.664607176193584*^9, 
   3.6646073046883497`*^9, 3.6646073489759197`*^9, 3.664607418087508*^9, 
   3.6646074761976643`*^9, 3.6646075420225973`*^9, 3.664607573323658*^9, 
   3.664607648078767*^9, 3.6646078672481327`*^9, 3.664608036040392*^9, 
   3.664608124809608*^9, {3.6646087990319033`*^9, 3.66460881401088*^9}, 
   3.664610477502705*^9, {3.6646107733695993`*^9, 3.664610789649312*^9}, 
   3.6646108413061113`*^9, {3.6646114478545027`*^9, 3.664611542536148*^9}, 
   3.6646117678681498`*^9, 3.664611901445979*^9, {3.664612506550413*^9, 
   3.6646125432334843`*^9}, {3.6646129760789957`*^9, 3.664613004093356*^9}, 
   3.664613251422947*^9, 3.664613286173164*^9, 3.664613319941057*^9, 
   3.6646133973803673`*^9, {3.664613800027482*^9, 3.664613828567449*^9}, 
   3.66461409093519*^9, {3.6646141452248573`*^9, 3.6646141802069387`*^9}, {
   3.664614238047962*^9, 3.6646142560241203`*^9}, {3.664614420769916*^9, 
   3.6646144389781237`*^9}, {3.66461474110086*^9, 3.66461476999963*^9}, 
   3.6646149013646727`*^9, 3.664614947233275*^9, 3.664615071263413*^9, 
   3.6646151569527082`*^9, 3.664615205639502*^9, 3.664615784735445*^9, {
   3.664615844252166*^9, 3.66461587347941*^9}, {3.664619533484486*^9, 
   3.6646195593130827`*^9}, 3.6646203098502283`*^9, {3.664627960145678*^9, 
   3.6646279658148403`*^9}, 3.664628058221554*^9, 3.664704515866025*^9, {
   3.664704579669655*^9, 3.6647045949034*^9}, 3.6647046601267767`*^9, 
   3.6647046984526978`*^9, 3.664705760125166*^9, 3.664705823685667*^9, 
   3.664705888429185*^9, {3.664705928876255*^9, 3.664705940925336*^9}, 
   3.664705986814372*^9, {3.66470643020298*^9, 3.6647064440481043`*^9}, 
   3.664706509786208*^9, 3.6647081285961313`*^9, 3.664708194496698*^9, {
   3.6647082703375*^9, 3.664708348233274*^9}, 3.664708411784037*^9, {
   3.664708442591155*^9, 3.664708468607967*^9}, 3.664708572095551*^9, 
   3.6647086713325367`*^9, 3.664708757313958*^9, 3.664708915906743*^9, {
   3.664709226029978*^9, 3.664709243405517*^9}, 3.6647097543489017`*^9, 
   3.6647098542095947`*^9, 3.664710078945063*^9, 3.6647101363384857`*^9, {
   3.664710184389761*^9, 3.664710237824656*^9}, {3.664710648528842*^9, 
   3.6647107383975163`*^9}, 3.6647108857866173`*^9, 3.664710976822069*^9, 
   3.6647112349458513`*^9, {3.664711321177518*^9, 3.6647113771882477`*^9}, 
   3.6647121105461903`*^9, 3.670063459231719*^9, 3.67135950847756*^9, 
   3.6713648746102657`*^9, 3.6729992346546783`*^9, {3.672999279439238*^9, 
   3.6729993047514143`*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Main2: Non Compiled  With Parameters", "Subsection",
 CellChangeTimes->{{3.657006576744567*^9, 3.6570065805686617`*^9}, 
   3.657007431809258*^9, 3.66289321186264*^9, {3.663281049205646*^9, 
   3.663281065819446*^9}, {3.664017817298422*^9, 3.66401784054171*^9}, {
   3.6640179514392433`*^9, 3.664017954441811*^9}, {3.6706538094236593`*^9, 
   3.670653823488147*^9}, 3.67301184475597*^9}],

Cell[CellGroupData[{

Cell[TextData[{
 "Main2NC ",
 Cell[BoxData[
  ButtonBox["\<\"Evaluate\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
       EvaluationNotebook[], All, ButtonCell] SelectionMove[
       EvaluationNotebook[], All, CellGroup]) SelectionEvaluateCreateCell[
      EvaluationNotebook[]],
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False,
  CellChangeTimes->{3.6252904677946167`*^9, 3.626670633881194*^9, 
   3.6519101150134897`*^9}]
}], "Subsubsection",
 CellChangeTimes->{{3.651910339748372*^9, 3.651910345476472*^9}, {
  3.6519103897649527`*^9, 3.651910391384837*^9}, {3.651910480974146*^9, 
  3.651910484694303*^9}, {3.6642583962201366`*^9, 3.66425839871624*^9}, {
  3.673013319459194*^9, 3.673013319839342*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Main2NC", "[", 
    RowBox[{
    "NtotE_", ",", "Nmax_", ",", "scegli_", ",", "kmax_", ",", "imax_", ",", 
     "maxsemidrivermut_", ",", "\[IndentingNewLine]", "maxnondrivermut_", ",",
      "signature_", ",", "compkeystep_", ",", "\[IndentingNewLine]", "expG_", 
     ",", "cntG_", ",", "ctmax_", ",", "tmax_", ",", "maxmjump_", ",", 
     "maxtjump_", ",", "\[IndentingNewLine]", "Aasym_", ",", "Asym_", ",", 
     "Aapop_", ",", "Apass_", ",", "cen_", ",", "wide_", ",", "slope_", ",", 
     "ratio_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Ntot", ",", 
       RowBox[{"Empty", "=", "0"}], ",", 
       RowBox[{"Ncell", "=", 
        RowBox[{"{", 
         RowBox[{"{", "0", "}"}], "}"}]}], ",", 
       RowBox[{"ord", "=", 
        RowBox[{"{", "1", "}"}]}], ",", 
       RowBox[{"times", "=", 
        RowBox[{"{", "0.", "}"}]}], ",", 
       RowBox[{"state", "=", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0."}], "}"}], "}"}]}], ",", 
       RowBox[{"Ccell", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"t", "=", "0.0"}], ",", 
       RowBox[{"ct", "=", "0"}], ",", "\[IndentingNewLine]", "maxdrivermut", 
       ",", "smv0", ",", "state0", ",", "sstate0", ",", "Cmut", ",", "genes", 
       ",", 
       RowBox[{"krates", "=", 
        RowBox[{"{", "1.0", "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"i", "=", "0"}], ",", 
       RowBox[{"m", "=", "0"}], ",", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ","}], "*)"}], 
       RowBox[{"mv", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
       
       RowBox[{"p", "=", "0.1"}], ",", " ", 
       RowBox[{"r", "=", "0.1"}], ",", " ", 
       RowBox[{"mv0", "=", 
        RowBox[{"{", "0", "}"}]}], ",", 
       RowBox[{"imkmv", "=", 
        RowBox[{"{", "0", "}"}]}], ",", 
       RowBox[{"in", "=", "0"}], ",", 
       RowBox[{"fn", "=", "0"}], ",", 
       RowBox[{"mid", "=", "0"}], ",", 
       RowBox[{"midr", "=", "0."}], ",", 
       RowBox[{"CT", "=", "False"}], ",", "statetmp1", ",", "statetmp2", ",", 
       "NewNcell", ",", 
       RowBox[{"\[CapitalDelta]i", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"\[CapitalDelta]Nc", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"\[CapitalDelta]Nc2", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"\[CapitalDelta]k", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"chooseiorm", "=", 
        RowBox[{"{", "10", "}"}]}], ",", 
       RowBox[{"(*", 
        RowBox[{"s", ","}], "*)"}], "ratescum", ",", "ratesn", ",", 
       "stateslist", ",", "Ncslist", ",", "probslist", ",", "spprobslist", 
       ",", "Ntslist", ",", "tslist", ",", "key", ",", "ss", ",", "keyg", ",",
        "rates", ",", 
       RowBox[{"(*", 
        RowBox[{"rcs", ","}], "*)"}], 
       RowBox[{"(*", 
        RowBox[{"rnns", ","}], "*)"}], "rcum1", ",", "nondriverspace", ",", 
       "semidriverspace", ",", "driverspace", ",", "space", ",", 
       "spaceprob"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"derivated", " ", "variables"}], "*)"}], "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"maxdrivermut", "=", 
       RowBox[{"imax", "-", "1"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"number", " ", "of", " ", "driver", " ", "mutations"}], "*)"}],
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"mv0", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "imax"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"state0", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"imax", "+", "3"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Cmut", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{"1", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "maxdrivermut"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", "maxsemidrivermut", "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"genes", "=", 
         RowBox[{"Log", "[", 
          RowBox[{"expG", "/", "cntG"}], "]"}]}], ";"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"genes", "=", 
       RowBox[{"expG", "/", "cntG"}]}], ";", " ", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"krates", "=", 
       RowBox[{"Apass", " ", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{"1", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"kmax", "-", "1"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"{", "0", "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Ntot", "=", "NtotE"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Empty", "=", 
       RowBox[{"Nmax", "-", "Ntot", "-", "scegli"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Ncell", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"Ntot", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
          "}"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{"mv0", ",", 
           RowBox[{"{", 
            RowBox[{"l", ",", "1", ",", 
             RowBox[{"kmax", "-", "1"}]}], "}"}]}], "]"}]}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
       "this", " ", "should", " ", "be", " ", "less", " ", "than", " ", 
        "nm"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"state", "=", 
       RowBox[{"createstate0C", "[", 
        RowBox[{
         RowBox[{"Nmax", "+", "2"}], ",", "t"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Ccell", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Floor", "[", 
          RowBox[{"Ntot", "+", "Empty"}], "]"}], ",", 
         RowBox[{"Max", "[", 
          RowBox[{"0", ",", 
           RowBox[{"Floor", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Nmax", "-", "Ntot", "-", "Empty"}], ")"}], "/", "2"}], 
            "]"}]}], "]"}], ",", 
         RowBox[{"Max", "[", 
          RowBox[{"0", ",", 
           RowBox[{"Floor", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Nmax", "-", "Ntot", "-", "Empty"}], ")"}], "/", "2"}], 
            "]"}]}], "]"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"times", "=", 
       RowBox[{
        RowBox[{"Transpose", "[", "state", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ord", "=", 
       RowBox[{"Ordering", "[", "times", "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"state", "=", 
       RowBox[{"state", "[", 
        RowBox[{"[", "ord", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"do", " ", "something"}], "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"imkmv", "=", 
       RowBox[{"IntegerPart", "[", 
        RowBox[{"state", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"1", ";;", 
            RowBox[{"4", "+", "imax", "-", "1"}]}]}], "]"}], "]"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"key", "=", 
       RowBox[{"keyC", "[", 
        RowBox[{
         RowBox[{"imkmv", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{"imkmv", "[", 
          RowBox[{"[", 
           RowBox[{"4", ";;", 
            RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "compkeystep"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"ss", "=", 
       RowBox[{"ssC", "[", 
        RowBox[{"key", ",", 
         RowBox[{"imkmv", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
      RowBox[{"keyg", "=", 
       RowBox[{"keygenesC", "[", 
        RowBox[{
         RowBox[{"imkmv", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{"imkmv", "[", 
          RowBox[{"[", 
           RowBox[{"4", ";;", 
            RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "compkeystep", ",", 
         "genes", ",", "signature"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rates", "=", 
       RowBox[{"ratesC", "[", 
        RowBox[{"ss", ",", 
         RowBox[{"imkmv", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", "keyg"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ratescum", "=", 
       RowBox[{"Accumulate", "[", "rates", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"rcum1", "=", 
       RowBox[{"ratescum", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ratesn", "=", 
       RowBox[{"rates", "/", "rcum1"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"nondriverspace", "=", 
       RowBox[{"maxnondrivermut", "-", 
        RowBox[{"imkmv", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"semidriverspace", "=", 
       RowBox[{"maxsemidrivermut", "-", 
        RowBox[{"imkmv", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"driverspace", "=", 
       RowBox[{"maxdrivermut", "-", 
        RowBox[{"Total", "[", 
         RowBox[{"imkmv", "[", 
          RowBox[{"[", 
           RowBox[{"4", ";;", 
            RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"space", "=", 
       RowBox[{
       "nondriverspace", "+", "semidriverspace", "+", "driverspace"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"spaceprob", "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "driverspace", ",", "semidriverspace", ",", "nondriverspace"}], 
         "}"}], "/", "space"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"stateslist", "=", 
       RowBox[{"Internal`Bag", "[", 
        RowBox[{"Most", "[", 
         RowBox[{"{", "1.", "}"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Ncslist", "=", 
       RowBox[{"Internal`Bag", "[", 
        RowBox[{"Most", "[", 
         RowBox[{"{", "1.", "}"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"probslist", "=", 
       RowBox[{"Internal`Bag", "[", 
        RowBox[{"Most", "[", 
         RowBox[{"{", "1.", "}"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"spprobslist", "=", 
       RowBox[{"Internal`Bag", "[", 
        RowBox[{"Most", "[", 
         RowBox[{"{", "1.", "}"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Ntslist", "=", 
       RowBox[{"Internal`Bag", "[", 
        RowBox[{"Most", "[", 
         RowBox[{"{", "1.", "}"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tslist", "=", 
       RowBox[{"Internal`Bag", "[", 
        RowBox[{"Most", "[", 
         RowBox[{"{", "1.", "}"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", "state", ",", "2"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"Ncslist", ",", "Ncell", ",", "2"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"probslist", ",", "ratesn", ",", "2"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"spprobslist", ",", "spaceprob", ",", "2"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"Ntslist", ",", "Ntot"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"tslist", ",", "t"}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"And", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"state", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", 
              RowBox[{"-", "1"}]}], "]"}], "]"}], "<", "tmax"}], ",", " ", 
          RowBox[{"ct", "<", "ctmax"}], ",", 
          RowBox[{"Ntot", ">", "0"}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ct", "+=", "1"}], ";", "\[IndentingNewLine]", 
         RowBox[{"t", "=", 
          RowBox[{"state", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", 
             RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]",
          "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"imkmv", "=", 
            RowBox[{"IntegerPart", "[", 
             RowBox[{"state", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", 
                RowBox[{"1", ";;", 
                 RowBox[{"4", "+", "imax", "-", "1"}]}]}], "]"}], "]"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"key", "=", 
            RowBox[{"keyC", "[", 
             RowBox[{
              RowBox[{"imkmv", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"imkmv", "[", 
               RowBox[{"[", 
                RowBox[{"4", ";;", 
                 RowBox[{"4", "+", "imax", "-", "1"}]}], "]"}], "]"}], ",", 
              "compkeystep"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"ss", "=", 
            RowBox[{"ssC", "[", 
             RowBox[{"key", ",", "m"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"keyg", "=", 
            RowBox[{"keygenesC", "[", 
             RowBox[{
              RowBox[{"imkmv", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"imkmv", "[", 
               RowBox[{"[", 
                RowBox[{"4", ";;", 
                 RowBox[{
                  RowBox[{"+", "imax"}], "-", "1"}]}], "]"}], "]"}], ",", 
              "compkeystep", ",", "genes", ",", "signature"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"rates", "=", 
            RowBox[{"ratesC", "[", 
             RowBox[{"ss", ",", 
              RowBox[{"imkmv", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", "keyg"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"ratescum", "=", 
            RowBox[{"Accumulate", "[", "rates", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"rcum1", "=", 
            RowBox[{"ratescum", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           
           RowBox[{"ratesn", "=", 
            RowBox[{"rates", "/", "rcum1"}]}], ";"}], "*)"}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         
         RowBox[{"fateC", "[", 
          RowBox[{
           RowBox[{"imkmv", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"imkmv", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{"imkmv", "[", 
            RowBox[{"[", "3", "]"}], "]"}], ",", 
           RowBox[{"imkmv", "[", 
            RowBox[{"[", 
             RowBox[{"4", ";;", 
              RowBox[{"4", "+", "imax", "-", "1"}]}], "]"}], "]"}], ",", 
           RowBox[{"givepC", "[", "]"}], ",", "rcum1", ",", "ratesn"}], "]"}],
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"imkmv", "=", 
          RowBox[{"IntegerPart", "[", 
           RowBox[{"state", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", 
              RowBox[{"1", ";;", 
               RowBox[{"4", "+", "imax", "-", "1"}]}]}], "]"}], "]"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"key", "=", 
          RowBox[{"keyC", "[", 
           RowBox[{
            RowBox[{"imkmv", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", 
            RowBox[{"imkmv", "[", 
             RowBox[{"[", 
              RowBox[{"4", ";;", 
               RowBox[{"4", "+", "imax", "-", "1"}]}], "]"}], "]"}], ",", 
            "compkeystep"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ss", "=", 
          RowBox[{"ssC", "[", 
           RowBox[{"key", ",", 
            RowBox[{"imkmv", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"keyg", "=", 
          RowBox[{"keygenesC", "[", 
           RowBox[{
            RowBox[{"imkmv", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", 
            RowBox[{"imkmv", "[", 
             RowBox[{"[", 
              RowBox[{"4", ";;", 
               RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "compkeystep", ",", 
            "genes", ",", "signature"}], "]"}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"rates", "=", 
          RowBox[{"ratesC", "[", 
           RowBox[{"ss", ",", 
            RowBox[{"imkmv", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", "keyg"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"ratescum", "=", 
          RowBox[{"Accumulate", "[", "rates", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"rcum1", "=", 
          RowBox[{"ratescum", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ratesn", "=", 
          RowBox[{"rates", "/", "rcum1"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"nondriverspace", "=", 
          RowBox[{"maxnondrivermut", "-", 
           RowBox[{"imkmv", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"semidriverspace", "=", 
          RowBox[{"maxsemidrivermut", "-", 
           RowBox[{"imkmv", "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"driverspace", "=", 
          RowBox[{"maxdrivermut", "-", 
           RowBox[{"Total", "[", 
            RowBox[{"imkmv", "[", 
             RowBox[{"[", 
              RowBox[{"4", ";;", 
               RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"space", "=", 
          RowBox[{
          "nondriverspace", "+", "semidriverspace", "+", "driverspace"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"spaceprob", "=", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "driverspace", ",", "semidriverspace", ",", "nondriverspace"}], 
            "}"}], "/", "space"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"Internal`StuffBag", "[", 
          RowBox[{"stateslist", ",", "state", ",", "2"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Internal`StuffBag", "[", 
          RowBox[{"Ncslist", ",", "Ncell", ",", "2"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Internal`StuffBag", "[", 
          RowBox[{"probslist", ",", "ratesn", ",", "2"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Internal`StuffBag", "[", 
          RowBox[{"spprobslist", ",", "spaceprob", ",", "2"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Internal`StuffBag", "[", 
          RowBox[{"Ntslist", ",", "Ntot"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Internal`StuffBag", "[", 
          RowBox[{"tslist", ",", "t"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"states", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"states", ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "Ncell", ",", "state"}], "}"}]}], "]"}]}], 
         ";"}], "*)"}], " ", 
       RowBox[{"(*", 
        RowBox[{
        "not", " ", "needed", " ", "in", " ", "this", " ", "testing", " ", 
         "part"}], "*)"}], "\[IndentingNewLine]", " ", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Internal`StuffBag", "[", 
         RowBox[{"stateslist", ",", 
          RowBox[{"Internal`BagPart", "[", 
           RowBox[{"stateslist", ",", "All"}], "]"}], ",", "1"}], "]"}], 
        ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"Internal`BagPart", "[", 
         RowBox[{"Ncslist", ",", "All"}], "]"}], ",", "1"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"Internal`BagPart", "[", 
         RowBox[{"probslist", ",", "All"}], "]"}], ",", "1"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"Internal`BagPart", "[", 
         RowBox[{"spprobslist", ",", "All"}], "]"}], ",", "1"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"Internal`BagPart", "[", 
         RowBox[{"Ntslist", ",", "All"}], "]"}], ",", "1"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"Internal`BagPart", "[", 
         RowBox[{"tslist", ",", "All"}], "]"}], ",", "1"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", "Nmax"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", "imax"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"ct", "+", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"Dimensions", "[", "state", "]"}], ",", "1"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"ct", "+", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"Dimensions", "[", "Ncell", "]"}], ",", "1"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"ct", "+", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"Dimensions", "[", "ratesn", "]"}], ",", "1"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"ct", "+", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"Dimensions", "[", "spaceprob", "]"}], ",", "1"}], "]"}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"ct", "+", "1"}]}], "]"}], ";", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"ct", "+", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"Length", "@", 
         RowBox[{"Dimensions", "[", 
          RowBox[{"{", "state", "}"}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"Length", "@", 
         RowBox[{"Dimensions", "[", 
          RowBox[{"{", "Ncell", "}"}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"Dimensions", "[", 
          RowBox[{"{", "ratesn", "}"}], "]"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"Dimensions", "[", 
          RowBox[{"{", "spaceprob", "}"}], "]"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"Length", "@", 
         RowBox[{"Dimensions", "[", 
          RowBox[{"{", "Ntot", "}"}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", 
        RowBox[{"Length", "@", 
         RowBox[{"Dimensions", "[", 
          RowBox[{"{", "t", "}"}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", "0"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", "0"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"stateslist", ",", "8"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Internal`BagPart", "[", 
       RowBox[{"stateslist", ",", "All"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Striptease", "[", "Main2NC", "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.673013188542861*^9, 3.673013240682844*^9, 3.67302814054263*^9, {
   3.673028620507494*^9, 3.673028652972818*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Main2: Full Compiled With Parameters", "Subsection",
 CellChangeTimes->{{3.657006576744567*^9, 3.6570065805686617`*^9}, 
   3.657007431809258*^9, 3.66289321186264*^9, {3.663281049205646*^9, 
   3.663281065819446*^9}, {3.664017817298422*^9, 3.66401784054171*^9}, {
   3.6640179514392433`*^9, 3.664017954441811*^9}, 3.67264720871126*^9}],

Cell[CellGroupData[{

Cell[TextData[{
 "Main2 ",
 Cell[BoxData[
  ButtonBox["\<\"Evaluate\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
       EvaluationNotebook[], All, ButtonCell] SelectionMove[
       EvaluationNotebook[], All, CellGroup]) SelectionEvaluateCreateCell[
      EvaluationNotebook[]],
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False,
  CellChangeTimes->{3.6252904677946167`*^9, 3.626670633881194*^9, 
   3.6519101150134897`*^9}]
}], "Subsubsection",
 CellChangeTimes->{{3.651910339748372*^9, 3.651910345476472*^9}, {
  3.6519103897649527`*^9, 3.651910391384837*^9}, {3.651910480974146*^9, 
  3.651910484694303*^9}, {3.6642583962201366`*^9, 3.66425839871624*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Main2", "=", 
  RowBox[{"ReleaseHold", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Hold", "[", 
           RowBox[{"Compile", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"NtotE", ",", "_Integer"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"Nmax", ",", "_Integer"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"scegli", ",", "_Integer"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"kmax", ",", "_Integer"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"imax", ",", "_Integer"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"maxsemidrivermut", ",", "_Integer"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"maxnondrivermut", ",", "_Integer"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"signature", ",", "_Integer", ",", "1"}], "}"}], ",", 
               
               RowBox[{"{", 
                RowBox[{"compkeystep", ",", "_Integer", ",", "1"}], "}"}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"expG", ",", "_Real", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"cntG", ",", "_Real", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"ctmax", ",", "_Integer"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"tmax", ",", "_Integer"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"maxmjump", ",", "_Integer"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"maxtjump", ",", "_Integer"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Aasym", ",", "_Real", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"Asym", ",", "_Real", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"Aapop", ",", "_Real", ",", "1"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"Apass", ",", "_Real"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"cen", ",", "_Real"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"wide", ",", "_Real"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"slope", ",", "_Real"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"ratio", ",", "_Real", ",", "2"}], "}"}]}], "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"Block", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Ntot", ",", 
                 RowBox[{"Empty", "=", "0"}], ",", 
                 RowBox[{"Ncell", "=", 
                  RowBox[{"{", 
                   RowBox[{"{", "0", "}"}], "}"}]}], ",", 
                 RowBox[{"ord", "=", 
                  RowBox[{"{", "1", "}"}]}], ",", 
                 RowBox[{"times", "=", 
                  RowBox[{"{", "0.", "}"}]}], ",", 
                 RowBox[{"state", "=", 
                  RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0."}], "}"}], "}"}]}], ",", 
                 RowBox[{"Ccell", "=", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"t", "=", "0.0"}], ",", 
                 RowBox[{"ct", "=", "0"}], ",", "\[IndentingNewLine]", 
                 "maxdrivermut", ",", "smv0", ",", "state0", ",", "sstate0", 
                 ",", "Cmut", ",", "genes", ",", 
                 RowBox[{"krates", "=", 
                  RowBox[{"{", "1.0", "}"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"i", "=", "0"}], ",", 
                 RowBox[{"m", "=", "0"}], ",", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"k", "=", "1"}], ","}], "*)"}], 
                 RowBox[{"mv", "=", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
                   "}"}]}], ",", 
                 RowBox[{"p", "=", "0.1"}], ",", " ", 
                 RowBox[{"r", "=", "0.1"}], ",", " ", 
                 RowBox[{"mv0", "=", 
                  RowBox[{"{", "0", "}"}]}], ",", 
                 RowBox[{"imkmv", "=", 
                  RowBox[{"{", "0", "}"}]}], ",", 
                 RowBox[{"in", "=", "0"}], ",", 
                 RowBox[{"fn", "=", "0"}], ",", 
                 RowBox[{"mid", "=", "0"}], ",", 
                 RowBox[{"midr", "=", "0."}], ",", 
                 RowBox[{"CT", "=", "False"}], ",", "statetmp1", ",", 
                 "statetmp2", ",", "NewNcell", ",", 
                 RowBox[{"\[CapitalDelta]i", "=", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}]}], ",", 
                 RowBox[{"\[CapitalDelta]Nc", "=", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}]}], ",", 
                 RowBox[{"\[CapitalDelta]Nc2", "=", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}]}], ",", 
                 RowBox[{"\[CapitalDelta]k", "=", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}]}], ",", 
                 RowBox[{"chooseiorm", "=", 
                  RowBox[{"{", "10", "}"}]}], ",", 
                 RowBox[{"(*", 
                  RowBox[{"s", ","}], "*)"}], "ratescum", ",", "ratesn", ",", 
                 "stateslist", ",", "Ncslist", ",", "probslist", ",", 
                 "spprobslist", ",", "Ntslist", ",", "tslist", ",", "key", 
                 ",", "ss", ",", "keyg", ",", "rates", ",", 
                 RowBox[{"(*", 
                  RowBox[{"rcs", ","}], "*)"}], 
                 RowBox[{"(*", 
                  RowBox[{"rnns", ","}], "*)"}], "rcum1", ",", 
                 "nondriverspace", ",", "semidriverspace", ",", "driverspace",
                  ",", "space", ",", "spaceprob"}], "}"}], ",", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"derivated", " ", "variables"}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"maxdrivermut", "=", 
                 RowBox[{"imax", "-", "1"}]}], ";", " ", 
                RowBox[{"(*", 
                 RowBox[{
                 "number", " ", "of", " ", "driver", " ", "mutations"}], 
                 "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"mv0", "=", 
                 RowBox[{"Table", "[", 
                  RowBox[{"0", ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", "imax"}], "}"}]}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"state0", "=", 
                 RowBox[{"Table", "[", 
                  RowBox[{"0", ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"imax", "+", "3"}]}], "}"}]}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Cmut", "=", 
                 RowBox[{"Join", "[", 
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{"1", ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "maxdrivermut"}], "}"}]}], "]"}], ",", 
                   RowBox[{"{", "maxsemidrivermut", "}"}]}], "]"}]}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"genes", "=", 
                   RowBox[{"Log", "[", 
                    RowBox[{"expG", "/", "cntG"}], "]"}]}], ";"}], " ", 
                 "*)"}], "\[IndentingNewLine]", 
                RowBox[{"genes", "=", 
                 RowBox[{"expG", "/", "cntG"}]}], ";", " ", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"krates", "=", 
                 RowBox[{"Apass", " ", 
                  RowBox[{"Join", "[", 
                   RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"1", ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"kmax", "-", "1"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"{", "0", "}"}]}], "]"}]}]}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"Ntot", "=", "NtotE"}], ";", "\[IndentingNewLine]", 
                RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"Empty", "=", 
                 RowBox[{"Nmax", "-", "Ntot", "-", "scegli"}]}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"Ncell", "=", 
                 RowBox[{"Join", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"Ntot", ",", "0", ",", "0", ",", "0", ",", "0"}], 
                    "}"}], "}"}], ",", 
                   RowBox[{"Table", "[", 
                    RowBox[{"mv0", ",", 
                    RowBox[{"{", 
                    RowBox[{"l", ",", "1", ",", 
                    RowBox[{"kmax", "-", "1"}]}], "}"}]}], "]"}]}], "]"}]}], 
                ";", 
                RowBox[{"(*", 
                 RowBox[{
                 "this", " ", "should", " ", "be", " ", "less", " ", "than", 
                  " ", "nm"}], "*)"}], "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"state", "=", 
                 RowBox[{"createstate0C", "[", 
                  RowBox[{
                   RowBox[{"Nmax", "+", "2"}], ",", "t"}], "]"}]}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"Ccell", "=", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Floor", "[", 
                    RowBox[{"Ntot", "+", "Empty"}], "]"}], ",", 
                   RowBox[{"Max", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"Floor", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Nmax", "-", "Ntot", "-", "Empty"}], ")"}], "/", 
                    "2"}], "]"}]}], "]"}], ",", 
                   RowBox[{"Max", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"Floor", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Nmax", "-", "Ntot", "-", "Empty"}], ")"}], "/", 
                    "2"}], "]"}]}], "]"}]}], "}"}]}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"times", "=", 
                 RowBox[{
                  RowBox[{"Transpose", "[", "state", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"ord", "=", 
                 RowBox[{"Ordering", "[", "times", "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"state", "=", 
                 RowBox[{"state", "[", 
                  RowBox[{"[", "ord", "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{"do", " ", "something"}], "*)"}], 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"imkmv", "=", 
                 RowBox[{"IntegerPart", "[", 
                  RowBox[{"state", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", 
                    RowBox[{"1", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}]}], "]"}], "]"}], 
                  "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"key", "=", 
                 RowBox[{"keyC", "[", 
                  RowBox[{
                   RowBox[{"imkmv", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", 
                   RowBox[{"imkmv", "[", 
                    RowBox[{"[", 
                    RowBox[{"4", ";;", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "compkeystep"}], 
                  "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"ss", "=", 
                 RowBox[{"ssC", "[", 
                  RowBox[{"key", ",", 
                   RowBox[{"imkmv", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
                RowBox[{"keyg", "=", 
                 RowBox[{"keygenesC", "[", 
                  RowBox[{
                   RowBox[{"imkmv", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", 
                   RowBox[{"imkmv", "[", 
                    RowBox[{"[", 
                    RowBox[{"4", ";;", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "compkeystep", 
                   ",", "genes", ",", "signature"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"rates", "=", 
                 RowBox[{"ratesC", "[", 
                  RowBox[{"ss", ",", 
                   RowBox[{"imkmv", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", "keyg"}], "]"}]}], 
                ";", "\[IndentingNewLine]", 
                RowBox[{"ratescum", "=", 
                 RowBox[{"Accumulate", "[", "rates", "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"rcum1", "=", 
                 RowBox[{"ratescum", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"ratesn", "=", 
                 RowBox[{"rates", "/", "rcum1"}]}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"nondriverspace", "=", 
                 RowBox[{"maxnondrivermut", "-", 
                  RowBox[{"imkmv", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"semidriverspace", "=", 
                 RowBox[{"maxsemidrivermut", "-", 
                  RowBox[{"imkmv", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"driverspace", "=", 
                 RowBox[{"maxdrivermut", "-", 
                  RowBox[{"Total", "[", 
                   RowBox[{"imkmv", "[", 
                    RowBox[{"[", 
                    RowBox[{"4", ";;", 
                    RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}]}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"space", "=", 
                 RowBox[{
                 "nondriverspace", "+", "semidriverspace", "+", 
                  "driverspace"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"spaceprob", "=", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "driverspace", ",", "semidriverspace", ",", 
                    "nondriverspace"}], "}"}], "/", "space"}]}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"stateslist", "=", 
                 RowBox[{"Internal`Bag", "[", 
                  RowBox[{"Most", "[", 
                   RowBox[{"{", "1.", "}"}], "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Ncslist", "=", 
                 RowBox[{"Internal`Bag", "[", 
                  RowBox[{"Most", "[", 
                   RowBox[{"{", "1.", "}"}], "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"probslist", "=", 
                 RowBox[{"Internal`Bag", "[", 
                  RowBox[{"Most", "[", 
                   RowBox[{"{", "1.", "}"}], "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"spprobslist", "=", 
                 RowBox[{"Internal`Bag", "[", 
                  RowBox[{"Most", "[", 
                   RowBox[{"{", "1.", "}"}], "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Ntslist", "=", 
                 RowBox[{"Internal`Bag", "[", 
                  RowBox[{"Most", "[", 
                   RowBox[{"{", "1.", "}"}], "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"tslist", "=", 
                 RowBox[{"Internal`Bag", "[", 
                  RowBox[{"Most", "[", 
                   RowBox[{"{", "1.", "}"}], "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", "state", ",", "2"}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"Ncslist", ",", "Ncell", ",", "2"}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"probslist", ",", "ratesn", ",", "2"}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"spprobslist", ",", "spaceprob", ",", "2"}], "]"}], 
                ";", "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"Ntslist", ",", "Ntot"}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"tslist", ",", "t"}], "]"}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"While", "[", 
                 RowBox[{
                  RowBox[{"And", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"state", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}], "<", "tmax"}], ",", 
                    " ", 
                    RowBox[{"ct", "<", "ctmax"}], ",", 
                    RowBox[{"Ntot", ">", "0"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"ct", "+=", "1"}], ";", "\[IndentingNewLine]", 
                   RowBox[{"t", "=", 
                    RowBox[{"state", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", 
                   "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"imkmv", "=", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{"state", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", 
                    RowBox[{"1", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}]}], "]"}], "]"}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"key", "=", 
                    RowBox[{"keyC", "[", 
                    RowBox[{
                    RowBox[{"imkmv", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", 
                    RowBox[{"imkmv", "[", 
                    RowBox[{"[", 
                    RowBox[{"4", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}], "]"}], "]"}], ",",
                     "compkeystep"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"ss", "=", 
                    RowBox[{"ssC", "[", 
                    RowBox[{"key", ",", "m"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"keyg", "=", 
                    RowBox[{"keygenesC", "[", 
                    RowBox[{
                    RowBox[{"imkmv", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", 
                    RowBox[{"imkmv", "[", 
                    RowBox[{"[", 
                    RowBox[{"4", ";;", 
                    RowBox[{
                    RowBox[{"+", "imax"}], "-", "1"}]}], "]"}], "]"}], ",", 
                    "compkeystep", ",", "genes", ",", "signature"}], "]"}]}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"rates", "=", 
                    RowBox[{"ratesC", "[", 
                    RowBox[{"ss", ",", 
                    RowBox[{"imkmv", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", "keyg"}], "]"}]}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"ratescum", "=", 
                    RowBox[{"Accumulate", "[", "rates", "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"rcum1", "=", 
                    RowBox[{"ratescum", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"ratesn", "=", 
                    RowBox[{"rates", "/", "rcum1"}]}], ";"}], "*)"}], 
                   "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   "\[IndentingNewLine]", 
                   RowBox[{"fateC", "[", 
                    RowBox[{
                    RowBox[{"imkmv", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"imkmv", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"imkmv", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", 
                    RowBox[{"imkmv", "[", 
                    RowBox[{"[", 
                    RowBox[{"4", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}], "]"}], "]"}], ",", 
                    RowBox[{"givepC", "[", "]"}], ",", "rcum1", ",", 
                    "ratesn"}], "]"}], ";", "\[IndentingNewLine]", 
                   "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   RowBox[{"imkmv", "=", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{"state", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", 
                    RowBox[{"1", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}]}], "]"}], "]"}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"key", "=", 
                    RowBox[{"keyC", "[", 
                    RowBox[{
                    RowBox[{"imkmv", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", 
                    RowBox[{"imkmv", "[", 
                    RowBox[{"[", 
                    RowBox[{"4", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}], "]"}], "]"}], ",",
                     "compkeystep"}], "]"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"ss", "=", 
                    RowBox[{"ssC", "[", 
                    RowBox[{"key", ",", 
                    RowBox[{"imkmv", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"keyg", "=", 
                    RowBox[{"keygenesC", "[", 
                    RowBox[{
                    RowBox[{"imkmv", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", 
                    RowBox[{"imkmv", "[", 
                    RowBox[{"[", 
                    RowBox[{"4", ";;", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "compkeystep", 
                    ",", "genes", ",", "signature"}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"rates", "=", 
                    RowBox[{"ratesC", "[", 
                    RowBox[{"ss", ",", 
                    RowBox[{"imkmv", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", "keyg"}], "]"}]}], 
                   ";", "\[IndentingNewLine]", 
                   RowBox[{"ratescum", "=", 
                    RowBox[{"Accumulate", "[", "rates", "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"rcum1", "=", 
                    RowBox[{"ratescum", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"ratesn", "=", 
                    RowBox[{"rates", "/", "rcum1"}]}], ";", 
                   "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   "\[IndentingNewLine]", 
                   RowBox[{"nondriverspace", "=", 
                    RowBox[{"maxnondrivermut", "-", 
                    RowBox[{"imkmv", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"semidriverspace", "=", 
                    RowBox[{"maxsemidrivermut", "-", 
                    RowBox[{"imkmv", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"driverspace", "=", 
                    RowBox[{"maxdrivermut", "-", 
                    RowBox[{"Total", "[", 
                    RowBox[{"imkmv", "[", 
                    RowBox[{"[", 
                    RowBox[{"4", ";;", 
                    RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}]}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"space", "=", 
                    RowBox[{
                    "nondriverspace", "+", "semidriverspace", "+", 
                    "driverspace"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"spaceprob", "=", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "driverspace", ",", "semidriverspace", ",", 
                    "nondriverspace"}], "}"}], "/", "space"}]}], ";", 
                   "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", "state", ",", "2"}], "]"}], 
                   ";", "\[IndentingNewLine]", 
                   RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"Ncslist", ",", "Ncell", ",", "2"}], "]"}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"probslist", ",", "ratesn", ",", "2"}], "]"}], 
                   ";", "\[IndentingNewLine]", 
                   RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"spprobslist", ",", "spaceprob", ",", "2"}], 
                    "]"}], ";", "\[IndentingNewLine]", 
                   RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"Ntslist", ",", "Ntot"}], "]"}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"tslist", ",", "t"}], "]"}], ";"}]}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"states", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"states", ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "Ncell", ",", "state"}], "}"}]}], 
                    "]"}]}], ";"}], "*)"}], " ", 
                 RowBox[{"(*", 
                  RowBox[{
                  "not", " ", "needed", " ", "in", " ", "this", " ", 
                   "testing", " ", "part"}], "*)"}], "\[IndentingNewLine]", 
                 " ", "]"}], ";", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"Internal`StuffBag", "[", 
                   RowBox[{"stateslist", ",", 
                    RowBox[{"Internal`BagPart", "[", 
                    RowBox[{"stateslist", ",", "All"}], "]"}], ",", "1"}], 
                   "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"Internal`BagPart", "[", 
                   RowBox[{"Ncslist", ",", "All"}], "]"}], ",", "1"}], "]"}], 
                ";", "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"Internal`BagPart", "[", 
                   RowBox[{"probslist", ",", "All"}], "]"}], ",", "1"}], 
                 "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"Internal`BagPart", "[", 
                   RowBox[{"spprobslist", ",", "All"}], "]"}], ",", "1"}], 
                 "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"Internal`BagPart", "[", 
                   RowBox[{"Ntslist", ",", "All"}], "]"}], ",", "1"}], "]"}], 
                ";", "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"Internal`BagPart", "[", 
                   RowBox[{"tslist", ",", "All"}], "]"}], ",", "1"}], "]"}], 
                ";", "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", "Nmax"}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", "imax"}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"ct", "+", "1"}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"Dimensions", "[", "state", "]"}], ",", "1"}], 
                 "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"ct", "+", "1"}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"Dimensions", "[", "Ncell", "]"}], ",", "1"}], 
                 "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"ct", "+", "1"}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"Dimensions", "[", "ratesn", "]"}], ",", "1"}], 
                 "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"ct", "+", "1"}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"Dimensions", "[", "spaceprob", "]"}], ",", "1"}], 
                 "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"ct", "+", "1"}]}], "]"}], ";", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"ct", "+", "1"}]}], "]"}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"Length", "@", 
                   RowBox[{"Dimensions", "[", 
                    RowBox[{"{", "state", "}"}], "]"}]}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"Length", "@", 
                   RowBox[{"Dimensions", "[", 
                    RowBox[{"{", "Ncell", "}"}], "]"}]}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"Length", "[", 
                   RowBox[{"Dimensions", "[", 
                    RowBox[{"{", "ratesn", "}"}], "]"}], "]"}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"Length", "[", 
                   RowBox[{"Dimensions", "[", 
                    RowBox[{"{", "spaceprob", "}"}], "]"}], "]"}]}], "]"}], 
                ";", "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"Length", "@", 
                   RowBox[{"Dimensions", "[", 
                    RowBox[{"{", "Ntot", "}"}], "]"}]}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", 
                  RowBox[{"Length", "@", 
                   RowBox[{"Dimensions", "[", 
                    RowBox[{"{", "t", "}"}], "]"}]}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", "0"}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", "0"}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`StuffBag", "[", 
                 RowBox[{"stateslist", ",", "8"}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"Internal`BagPart", "[", 
                 RowBox[{"stateslist", ",", "All"}], "]"}]}]}], 
              "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
             RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}], ",", 
             RowBox[{"CompilationOptions", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                "\"\<InlineExternalDefinitions\>\"", "\[Rule]", "False"}], 
                ",", 
                RowBox[{
                "\"\<InlineCompiledFunctions\>\"", "\[Rule]", "False"}]}], 
               "}"}]}], ",", 
             RowBox[{"(*", 
              RowBox[{"RuntimeOptions", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"\"\<EvaluateSymbolically\>\"", "\[Rule]", "False"}], 
                "}"}]}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"RuntimeOptions", "\[Rule]", "\"\<Speed\>\""}]}], "]"}], 
           "]"}], "/.", 
          RowBox[{"DownValues", "[", "createstate0C", "]"}]}], "/.", 
         RowBox[{"DownValues", "[", "givepC", "]"}]}], "/.", 
        RowBox[{"DownValues", "[", "fateC", "]"}]}], "/.", 
       RowBox[{"DownValues", "[", "keyC", "]"}]}], "/.", 
      RowBox[{"DownValues", "[", "keygenesC", "]"}]}], "/.", 
     RowBox[{"DownValues", "[", "ssC", "]"}]}], "/.", 
    RowBox[{"DownValues", "[", "ratesC", "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"StringPosition", "[", 
  RowBox[{
   RowBox[{"CompilePrint", "[", "Main2", "]"}], ",", "\"\<MainEvaluate\>\""}],
   "]"}]}], "Input",
 CellChangeTimes->{{3.663065984474782*^9, 3.663065985434761*^9}, {
   3.663066022090193*^9, 3.6630660596279087`*^9}, {3.663066104753413*^9, 
   3.6630661301616898`*^9}, {3.663066173091741*^9, 3.663066193745377*^9}, {
   3.663066235837915*^9, 3.663066262836252*^9}, {3.663066315565566*^9, 
   3.663066330516568*^9}, {3.663066979486066*^9, 3.663066990599139*^9}, {
   3.663067021590357*^9, 3.663067027661983*^9}, {3.663067651808361*^9, 
   3.6630677076586523`*^9}, {3.66306781519312*^9, 3.6630678191421957`*^9}, {
   3.663068250573867*^9, 3.663068299418538*^9}, {3.663068962956272*^9, 
   3.663068964777721*^9}, {3.6630690554157133`*^9, 3.6630690583587303`*^9}, 
   3.66306918649376*^9, {3.6630692189126577`*^9, 3.663069271515167*^9}, 
   3.6630693031686583`*^9, {3.663069344503191*^9, 3.663069381854713*^9}, {
   3.6630695201821327`*^9, 3.663069543102285*^9}, {3.6630695907784452`*^9, 
   3.663069620253936*^9}, {3.6630697388433847`*^9, 3.663069783957868*^9}, {
   3.6630700795103493`*^9, 3.663070124760158*^9}, 3.6630702024635344`*^9, {
   3.663070386833015*^9, 3.6630704685852423`*^9}, {3.663070506695046*^9, 
   3.663070556305407*^9}, {3.66307111909544*^9, 3.663071153521842*^9}, 
   3.663071211045204*^9, 3.66307126757379*^9, {3.663071301070389*^9, 
   3.663071355565974*^9}, {3.663071407905973*^9, 3.663071524919181*^9}, {
   3.663071564897708*^9, 3.663071566427251*^9}, {3.663071642128031*^9, 
   3.663071653968628*^9}, {3.6630716940955772`*^9, 3.6630717072005787`*^9}, {
   3.663071746366124*^9, 3.663071915494692*^9}, 3.6630719585349913`*^9, {
   3.663072011026037*^9, 3.6630720213379*^9}, 3.663072058930451*^9, 
   3.663072119744956*^9, {3.663072224346943*^9, 3.663072243047616*^9}, {
   3.663072314424211*^9, 3.663072316564138*^9}, {3.6630723836379623`*^9, 
   3.663072394802822*^9}, {3.6630724768004913`*^9, 3.663072477270281*^9}, 
   3.663072526685871*^9, {3.663072584047974*^9, 3.663072634045545*^9}, {
   3.663072691683898*^9, 3.663072746393441*^9}, {3.6630727882437468`*^9, 
   3.6630730302293053`*^9}, 3.663073069885269*^9, {3.663073103048015*^9, 
   3.663073105913621*^9}, {3.6630731458749943`*^9, 3.6630731971844263`*^9}, {
   3.663073300011486*^9, 3.663073344197056*^9}, {3.6630733833254547`*^9, 
   3.663073398780321*^9}, {3.663094721645434*^9, 3.6630947290252028`*^9}, {
   3.663094801828889*^9, 3.663094863772458*^9}, {3.663094899427356*^9, 
   3.6630949044530983`*^9}, {3.663094957044277*^9, 3.663094977588344*^9}, 
   3.663095029914866*^9, {3.663095203771655*^9, 3.663095230254595*^9}, {
   3.663095323457555*^9, 3.66309533329567*^9}, {3.663095377650897*^9, 
   3.663095413623983*^9}, {3.663095461978677*^9, 3.663095492609427*^9}, {
   3.663095569914268*^9, 3.663095574381094*^9}, {3.663096382003302*^9, 
   3.663096384425642*^9}, {3.6630964499707003`*^9, 3.6630964699995613`*^9}, {
   3.663096519063695*^9, 3.6630965236259937`*^9}, 3.663096558928487*^9, 
   3.663096599418392*^9, {3.66309664012148*^9, 3.663096658999535*^9}, 
   3.663096715133231*^9, 3.663097606271288*^9, {3.663148710969715*^9, 
   3.663148745012903*^9}, {3.663148953919354*^9, 3.663148954600293*^9}, {
   3.663152091643221*^9, 3.663152108896803*^9}, 3.663222780912932*^9, {
   3.6632820912871532`*^9, 3.663282113997312*^9}, {3.6632823541370373`*^9, 
   3.663282376262917*^9}, 3.6632824110533447`*^9, {3.6632825598880033`*^9, 
   3.663282561847369*^9}, {3.663282614449017*^9, 3.6632826362341127`*^9}, {
   3.663315202690233*^9, 3.6633152420032377`*^9}, {3.663315273889944*^9, 
   3.663315287234872*^9}, {3.663315339041541*^9, 3.663315353843377*^9}, {
   3.6633154062285223`*^9, 3.663315467271014*^9}, {3.663315510448366*^9, 
   3.663315511222876*^9}, {3.6633155637289953`*^9, 3.663315565184523*^9}, {
   3.663315615473077*^9, 3.663315657474004*^9}, 3.6633160499584227`*^9, {
   3.663316166680739*^9, 3.663316278030846*^9}, {3.6633163346445637`*^9, 
   3.663316380351283*^9}, {3.663316438131714*^9, 3.6633165623570967`*^9}, {
   3.66331665525266*^9, 3.663316696470375*^9}, 3.663316728383131*^9, {
   3.6633169555110703`*^9, 3.663316962602624*^9}, {3.663318265930442*^9, 
   3.663318286415922*^9}, {3.663318323076302*^9, 3.663318339467849*^9}, {
   3.663318384925177*^9, 3.6633184135658283`*^9}, {3.663318451878227*^9, 
   3.663318510901792*^9}, {3.6633187007077723`*^9, 3.663318724442112*^9}, {
   3.663318763765823*^9, 3.663318789215232*^9}, 3.663324868384891*^9, {
   3.6633250029319*^9, 3.6633250075377693`*^9}, {3.663325109039316*^9, 
   3.663325157080628*^9}, {3.6633252201790133`*^9, 3.6633252238956127`*^9}, {
   3.6633252616504087`*^9, 3.663325263366506*^9}, {3.663325328930949*^9, 
   3.6633253303685207`*^9}, {3.663325524137698*^9, 3.6633255366128902`*^9}, {
   3.6633256741996193`*^9, 3.663325675108037*^9}, {3.663325713690666*^9, 
   3.663325715872011*^9}, {3.663325980381751*^9, 3.663326000907568*^9}, {
   3.663326970870544*^9, 3.663326978468421*^9}, 3.6633284478635683`*^9, {
   3.663328530393073*^9, 3.663328563297941*^9}, {3.663328605949326*^9, 
   3.6633286359070797`*^9}, 3.663328667437839*^9, {3.6633287549077377`*^9, 
   3.6633287656648827`*^9}, {3.663328886645598*^9, 3.663328935439196*^9}, {
   3.6633289734886*^9, 3.6633289846597013`*^9}, {3.66333007792992*^9, 
   3.6633300866217213`*^9}, {3.6633301601004467`*^9, 3.663330161042305*^9}, 
   3.663330264328886*^9, {3.66333041520677*^9, 3.663330417572813*^9}, {
   3.663330464307765*^9, 3.663330473365033*^9}, {3.663330569723639*^9, 
   3.663330578231504*^9}, 3.6633306365677547`*^9, {3.663330679734951*^9, 
   3.663330737411634*^9}, 3.66333078373816*^9, {3.663330830412961*^9, 
   3.663330856128551*^9}, {3.663332876763105*^9, 3.663332881523519*^9}, {
   3.663332964710881*^9, 3.663332965444642*^9}, {3.663333213028927*^9, 
   3.663333224140821*^9}, {3.6633335258648148`*^9, 3.6633335363366537`*^9}, {
   3.663333601353211*^9, 3.663333616071753*^9}, {3.663333651839913*^9, 
   3.6633336689424953`*^9}, {3.663333700674305*^9, 3.663333730435072*^9}, {
   3.663333971935047*^9, 3.663333974455553*^9}, {3.664001839975205*^9, 
   3.664001848730391*^9}, {3.664017732787558*^9, 3.664017733239545*^9}, {
   3.664018180979843*^9, 3.6640181852387447`*^9}, {3.664018454440075*^9, 
   3.664018455386375*^9}, {3.6640187855378103`*^9, 3.664018791653226*^9}, {
   3.6699753415653667`*^9, 3.6699753498128033`*^9}, {3.6699780434950647`*^9, 
   3.669978047410412*^9}, 3.669978490258506*^9, {3.669981416639886*^9, 
   3.669981420326282*^9}, {3.669981456070631*^9, 3.669981457140435*^9}, {
   3.669981671755438*^9, 3.669981672695311*^9}, {3.669982198085183*^9, 
   3.6699821991945047`*^9}, 3.669982244907041*^9, {3.669982344907098*^9, 
   3.669982345842507*^9}, 3.669982707489834*^9, {3.670147164517432*^9, 
   3.670147167655663*^9}, 3.6701488316362457`*^9, {3.6701497234013557`*^9, 
   3.670149794961445*^9}, {3.670149908661776*^9, 3.6701499143968973`*^9}, 
   3.670149988443161*^9, {3.670150050456015*^9, 3.670150064709457*^9}, {
   3.6701505251373577`*^9, 3.670150560315374*^9}, 3.670150643831335*^9, {
   3.670150757903544*^9, 3.670150763388444*^9}, 3.670151972996113*^9, 
   3.6702208862829227`*^9, {3.670221567469125*^9, 3.670221572306119*^9}, {
   3.670221644291823*^9, 3.670221644499305*^9}, 3.6702217600146437`*^9, {
   3.670223133151329*^9, 3.670223143359782*^9}, {3.67022418113584*^9, 
   3.670224201267817*^9}, {3.670224304256386*^9, 3.670224304720331*^9}, {
   3.6703276437529297`*^9, 3.670327687812883*^9}, {3.6703277454197283`*^9, 
   3.670327753027543*^9}, {3.670423806343001*^9, 3.670423811945075*^9}, {
   3.6704242013136597`*^9, 3.67042424034816*^9}, {3.670424455011647*^9, 
   3.670424493882679*^9}, {3.670424613849964*^9, 3.670424614493936*^9}, {
   3.670425920373101*^9, 3.670425929699339*^9}, {3.6705830755334272`*^9, 
   3.6705830995479517`*^9}, {3.670583444559546*^9, 3.670583449810687*^9}, {
   3.6705835133256702`*^9, 3.670583515734079*^9}, {3.6705836318742228`*^9, 
   3.670583633490415*^9}, {3.670583722061254*^9, 3.670583736335167*^9}, {
   3.670586752061344*^9, 3.6705867621978703`*^9}, {3.6705869364326057`*^9, 
   3.67058693923446*^9}, {3.670648405685566*^9, 3.670648413101391*^9}, {
   3.6706507622533493`*^9, 3.670650768250822*^9}, 3.6706537118116217`*^9, {
   3.671340873032489*^9, 3.671340875937221*^9}, 3.671969972649726*^9, {
   3.67197011901509*^9, 3.6719701966939087`*^9}, {3.671970759163103*^9, 
   3.671970792604383*^9}, {3.671971071739847*^9, 3.6719711306821413`*^9}, 
   3.671971170719329*^9, 3.671971202937572*^9, {3.6726394324363747`*^9, 
   3.672639464933963*^9}, {3.672639561514398*^9, 3.672639591334065*^9}, {
   3.6726397087937193`*^9, 3.672639727085371*^9}, {3.672641474500093*^9, 
   3.672641480186864*^9}, {3.67264159422831*^9, 3.672641628051834*^9}, {
   3.6726416636560917`*^9, 3.672641696734295*^9}, {3.672641780807776*^9, 
   3.672641785644998*^9}, {3.6726418382677937`*^9, 3.672641893615905*^9}, 
   3.6726420213730516`*^9, {3.672642110526319*^9, 3.672642154452632*^9}, {
   3.672652297843032*^9, 3.672652301272605*^9}, 3.6726523504956293`*^9, {
   3.6726526338664827`*^9, 3.672652672664823*^9}, {3.672652760682498*^9, 
   3.6726528210228653`*^9}, {3.672652934224889*^9, 3.672652977896079*^9}, {
   3.672653087968059*^9, 3.6726531236718397`*^9}, {3.67265316458603*^9, 
   3.672653196451195*^9}, {3.6726532441951513`*^9, 3.672653256898377*^9}, {
   3.6726533198023767`*^9, 3.672653332498852*^9}, {3.672653396362774*^9, 
   3.672653409771248*^9}, {3.672653553931471*^9, 3.672653826102255*^9}, {
   3.672654012537922*^9, 3.672654033403924*^9}, {3.672654100948619*^9, 
   3.6726541061412697`*^9}, {3.672654137285121*^9, 3.6726542774796543`*^9}, {
   3.672654325103179*^9, 3.672654336671425*^9}, {3.67265472679772*^9, 
   3.672654742802188*^9}, {3.672654835314752*^9, 3.672654884218547*^9}, {
   3.6726549166585417`*^9, 3.672654928298297*^9}, 3.6726554851911077`*^9, {
   3.672656224567602*^9, 3.672656229696906*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.499999999999996`,
              2.5}, {25.499999999999996`, 1.3953100000000003`}, {
             24.604699999999998`, 0.49999999999999994`}, {23.5, 
             0.49999999999999994`}, {2.5, 0.49999999999999994`}, {
             1.3953100000000003`, 0.49999999999999994`}, {
             0.49999999999999994`, 1.3953100000000003`}, {
             0.49999999999999994`, 2.5}, {0.49999999999999994`, 23.5}, {
             0.49999999999999994`, 24.604699999999998`}, {1.3953100000000003`,
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
             25.499999999999996`}, {24.604699999999998`, 
             25.499999999999996`}, {25.499999999999996`, 
             24.604699999999998`}, {25.499999999999996`, 23.5}, {
             25.499999999999996`, 2.5}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
             19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
             20.021499999999996`}, {6.930469999999999, 20.021499999999996`}, {
             6.930469999999999, 18.212100000000003`}, {16.3832, 
             18.212100000000003`}, {16.3832, 16.357399999999995`}, {20.5426, 
             19.116799999999998`}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
             "]]}},
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], 
         GridBox[{
           {
            RowBox[{
             TagBox["\<\"Argument count: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["23",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Argument types: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              StyleBox[
               PaneBox[
                RowBox[{"{", 
                 RowBox[{
                 "_Integer", ",", "_Integer", ",", "_Integer", ",", 
                  "_Integer", ",", "_Integer", ",", "_Integer", ",", 
                  "_Integer", ",", 
                  RowBox[{"{", 
                   RowBox[{"_Integer", ",", "1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"_Integer", ",", "1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"_Real", ",", "1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"_Real", ",", "1"}], "}"}], ",", "_Integer", ",", 
                  "_Integer", ",", "_Integer", ",", "_Integer", ",", 
                  RowBox[{"{", 
                   RowBox[{"_Real", ",", "1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"_Real", ",", "1"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"_Real", ",", "1"}], "}"}], ",", "_Real", ",", 
                  "_Real", ",", "_Real", ",", "_Real", ",", 
                  RowBox[{"{", 
                   RowBox[{"_Real", ",", "2"}], "}"}]}], "}"}],
                BaselinePosition->Baseline,
                ContentPadding->False,
                FrameMargins->0,
                ImageSize->{{1, 300}, Automatic},
                ScrollPosition->{0., 0.},
                StripOnInput->True],
               LineBreakWithin->False],
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.499999999999996`,
              2.5}, {25.499999999999996`, 1.3953100000000003`}, {
             24.604699999999998`, 0.49999999999999994`}, {23.5, 
             0.49999999999999994`}, {2.5, 0.49999999999999994`}, {
             1.3953100000000003`, 0.49999999999999994`}, {
             0.49999999999999994`, 1.3953100000000003`}, {
             0.49999999999999994`, 2.5}, {0.49999999999999994`, 23.5}, {
             0.49999999999999994`, 24.604699999999998`}, {1.3953100000000003`,
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
             25.499999999999996`}, {24.604699999999998`, 
             25.499999999999996`}, {25.499999999999996`, 
             24.604699999999998`}, {25.499999999999996`, 23.5}, {
             25.499999999999996`, 2.5}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
             19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
             20.021499999999996`}, {6.930469999999999, 20.021499999999996`}, {
             6.930469999999999, 18.212100000000003`}, {16.3832, 
             18.212100000000003`}, {16.3832, 16.357399999999995`}, {20.5426, 
             19.116799999999998`}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
             "]]}},
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], 
         GridBox[{
           {
            RowBox[{
             TagBox["\<\"Argument count: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["23",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Argument types: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               RowBox[{"{", 
                RowBox[{
                "_Integer", ",", "_Integer", ",", "_Integer", ",", "_Integer",
                  ",", "_Integer", ",", "_Integer", ",", "_Integer", ",", 
                 RowBox[{"{", 
                  RowBox[{"_Integer", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"_Integer", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"_Real", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"_Real", ",", "1"}], "}"}], ",", "_Integer", ",", 
                 "_Integer", ",", "_Integer", ",", "_Integer", ",", 
                 RowBox[{"{", 
                  RowBox[{"_Real", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"_Real", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"_Real", ",", "1"}], "}"}], ",", "_Real", ",", 
                 "_Real", ",", "_Real", ",", "_Real", ",", 
                 RowBox[{"{", 
                  RowBox[{"_Real", ",", "2"}], "}"}]}], "}"}],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Variables: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              RowBox[{"{", 
               RowBox[{
               "NtotE", ",", "Nmax", ",", "scegli", ",", "kmax", ",", "imax", 
                ",", "maxsemidrivermut", ",", "maxnondrivermut", ",", 
                "signature", ",", "compkeystep", ",", "expG", ",", "cntG", 
                ",", "ctmax", ",", "tmax", ",", "maxmjump", ",", "maxtjump", 
                ",", "Aasym", ",", "Asym", ",", "Aapop", ",", "Apass", ",", 
                "cen", ",", "wide", ",", "slope", ",", "ratio"}], "}"}],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Expression: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               RowBox[{"Block", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "Compile`$35", ",", "Compile`$36", ",", "Compile`$37", ",", 
                   "Compile`$38", ",", "Compile`$88", ",", "Compile`$89", ",",
                    "Compile`$90", ",", "Compile`$91", ",", "Compile`$92", 
                   ",", "Compile`$93", ",", "Compile`$94", ",", 
                   "Compile`$137", ",", "Compile`$135", ",", "Compile`$138", 
                   ",", "Compile`$139", ",", "Compile`$140", ",", 
                   "Compile`$252", ",", "Compile`$392", ",", "Compile`$522", 
                   ",", "Compile`$523", ",", "Compile`$524", ",", 
                   "Compile`$611", ",", "Compile`$609", ",", "Compile`$612", 
                   ",", "Compile`$613", ",", "Compile`$614"}], "}"}], ",", 
                 RowBox[{"Block", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Ntot", ",", 
                    RowBox[{"Empty", "=", "0"}], ",", 
                    RowBox[{"Ncell", "=", 
                    RowBox[{"{", 
                    RowBox[{"{", "0", "}"}], "}"}]}], ",", 
                    RowBox[{"ord", "=", 
                    RowBox[{"{", "1", "}"}]}], ",", 
                    RowBox[{"times", "=", 
                    RowBox[{"{", "0.`", "}"}]}], ",", 
                    RowBox[{"state", "=", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0.`"}], "}"}], "}"}]}], ",", 
                    RowBox[{"Ccell", "=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
                    RowBox[{"t", "=", "0.`"}], ",", 
                    RowBox[{"ct", "=", "0"}], ",", "maxdrivermut", ",", 
                    "smv0", ",", "state0", ",", "sstate0", ",", "Cmut", ",", 
                    "genes", ",", 
                    RowBox[{"krates", "=", 
                    RowBox[{"{", "1.`", "}"}]}], ",", 
                    RowBox[{"i", "=", "0"}], ",", 
                    RowBox[{"m", "=", "0"}], ",", 
                    RowBox[{"mv", "=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
                    "}"}]}], ",", 
                    RowBox[{"p", "=", "0.1`"}], ",", 
                    RowBox[{"r", "=", "0.1`"}], ",", 
                    RowBox[{"mv0", "=", 
                    RowBox[{"{", "0", "}"}]}], ",", 
                    RowBox[{"imkmv", "=", 
                    RowBox[{"{", "0", "}"}]}], ",", 
                    RowBox[{"in", "=", "0"}], ",", 
                    RowBox[{"fn", "=", "0"}], ",", 
                    RowBox[{"mid", "=", "0"}], ",", 
                    RowBox[{"midr", "=", "0.`"}], ",", 
                    RowBox[{"CT", "=", "False"}], ",", "statetmp1", ",", 
                    "statetmp2", ",", "NewNcell", ",", 
                    RowBox[{"\[CapitalDelta]i", "=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], ",", 
                    RowBox[{"\[CapitalDelta]Nc", "=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], ",", 
                    RowBox[{"\[CapitalDelta]Nc2", "=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], ",", 
                    RowBox[{"\[CapitalDelta]k", "=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], ",", 
                    RowBox[{"chooseiorm", "=", 
                    RowBox[{"{", "10", "}"}]}], ",", "ratescum", ",", 
                    "ratesn", ",", "stateslist", ",", "Ncslist", ",", 
                    "probslist", ",", "spprobslist", ",", "Ntslist", ",", 
                    "tslist", ",", "key", ",", "ss", ",", "keyg", ",", 
                    "rates", ",", "rcum1", ",", "nondriverspace", ",", 
                    "semidriverspace", ",", "driverspace", ",", "space", ",", 
                    "spaceprob"}], "}"}], ",", 
                   RowBox[{
                    RowBox[{"maxdrivermut", "=", 
                    RowBox[{"imax", "-", "1"}]}], ";", 
                    RowBox[{"mv0", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "imax"}], "}"}]}], "]"}]}], ";", 
                    RowBox[{"state0", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"imax", "+", "3"}]}], "}"}]}], "]"}]}], ";", 
                    RowBox[{"Cmut", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"1", ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "maxdrivermut"}], "}"}]}], "]"}], ",", 
                    RowBox[{"{", "maxsemidrivermut", "}"}]}], "]"}]}], ";", 
                    RowBox[{"genes", "=", 
                    FractionBox["expG", "cntG"]}], ";", 
                    RowBox[{"krates", "=", 
                    RowBox[{"Apass", " ", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"1", ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"kmax", "-", "1"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"{", "0", "}"}]}], "]"}]}]}], ";", 
                    RowBox[{"Ntot", "=", "NtotE"}], ";", 
                    RowBox[{"Empty", "=", 
                    RowBox[{"Nmax", "-", "Ntot", "-", "scegli"}]}], ";", 
                    RowBox[{"Ncell", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"Ntot", ",", "0", ",", "0", ",", "0", ",", "0"}], 
                    "}"}], "}"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{"mv0", ",", 
                    RowBox[{"{", 
                    RowBox[{"l", ",", "1", ",", 
                    RowBox[{"kmax", "-", "1"}]}], "}"}]}], "]"}]}], "]"}]}], 
                    ";", 
                    RowBox[{"state", "=", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"m", "=", "0"}], ",", 
                    RowBox[{"k", "=", "1"}], ",", 
                    RowBox[{"mv", "=", "mv0"}], ",", 
                    RowBox[{"s", "=", "0.`"}], ",", 
                    RowBox[{"rnn", "=", 
                    RowBox[{"{", "0.`", "}"}]}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"s", "=", 
                    FractionBox[
                    RowBox[{"2", " ", "\[ExponentialE]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"10.`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Plus", "@@", 
                    RowBox[{"mv", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{
                    "compkeystep", "\[LeftDoubleBracket]", "k", 
                    "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}]}], 
                    "+", "1"}], ")"}]}], 
                    RowBox[{"10", " ", 
                    RowBox[{"Exp", "[", 
                    FractionBox[
                    SuperscriptBox["m", "0.5`"], "2"], "]"}]}]]}], "]"}]}], 
                    "]"}], "-", 
                    FractionBox["1", "\[ExponentialE]"]}], ")"}]}], 
                    RowBox[{"\[ExponentialE]", "-", "1"}]]}], ";", 
                    RowBox[{"rnn", "=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Compile`$35", "=", 
                    RowBox[{"-", "wide"}]}], ";", 
                    RowBox[{"Compile`$36", "=", 
                    FractionBox["1", "2"]}], ";", 
                    RowBox[{"Compile`$37", "=", 
                    RowBox[{"Compile`$35", " ", "Compile`$36"}]}], ";", 
                    RowBox[{"Compile`$38", "=", 
                    SuperscriptBox["\[ExponentialE]", "Compile`$37"]}], ";", 
                    RowBox[{"Accumulate", "[", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "Aasym", "\[LeftDoubleBracket]", "k", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"slope", " ", "Compile`$38", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cosh", "[", 
                    RowBox[{"Compile`$35", " ", 
                    RowBox[{"(", 
                    RowBox[{"s", "-", "2.`"}], ")"}]}], "]"}], "-", "1"}], 
                    ")"}]}], ")"}]}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "Asym", "\[LeftDoubleBracket]", "k", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"slope", " ", "Compile`$38", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cosh", "[", 
                    RowBox[{"Compile`$35", " ", 
                    RowBox[{"(", 
                    RowBox[{"s", "-", "1.`"}], ")"}]}], "]"}], "-", "1"}], 
                    ")"}]}], ")"}]}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "Aapop", "\[LeftDoubleBracket]", "k", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"slope", " ", "Compile`$38", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cosh", "[", 
                    RowBox[{"Compile`$35", " ", 
                    RowBox[{"(", 
                    RowBox[{"s", "-", "0.5`"}], ")"}]}], "]"}], "-", "1"}], 
                    ")"}]}], ")"}]}], "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "krates", "\[LeftDoubleBracket]", "k", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"Times", "@@", 
                    RowBox[{
                    SuperscriptBox["genes", 
                    RowBox[{"mv", " ", "signature"}]], "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{
                    "compkeystep", "\[LeftDoubleBracket]", "k", 
                    "\[RightDoubleBracket]"}]}], 
                    "\[RightDoubleBracket]"}]}]}], "}"}]}], "]"}], "]"}]}], 
                    ")"}]}], ";", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"1.`", " ", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", "mv0"}], 
                    "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"k", ",", "1", ",", 
                    RowBox[{"Nmax", "+", "2"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Nmax", "+", "2"}], ",", "1"}], "}"}]}], "]"}], 
                    "]"}], 
                    RowBox[{"rnn", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]]}], "+", 
                    "t"}], ",", "2"}], "]"}]}]}], "]"}]}], ";", 
                    RowBox[{"Ccell", "=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Compile`$88", "=", 
                    RowBox[{"-", "Ntot"}]}], ";", 
                    RowBox[{"Compile`$89", "=", 
                    RowBox[{"-", "Empty"}]}], ";", 
                    RowBox[{"Compile`$90", "=", 
                    RowBox[{
                    "Nmax", "+", "Compile`$88", "+", "Compile`$89"}]}], ";", 
                    RowBox[{"Compile`$91", "=", 
                    FractionBox["1", "2"]}], ";", 
                    RowBox[{"Compile`$92", "=", 
                    RowBox[{"Compile`$90", " ", "Compile`$91"}]}], ";", 
                    RowBox[{"Compile`$93", "=", 
                    RowBox[{"Floor", "[", "Compile`$92", "]"}]}], ";", 
                    RowBox[{"Compile`$94", "=", 
                    RowBox[{"Max", "[", 
                    RowBox[{"0", ",", "Compile`$93"}], "]"}]}], ";", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Floor", "[", 
                    RowBox[{"Ntot", "+", "Empty"}], "]"}], ",", "Compile`$94",
                     ",", "Compile`$94"}], "}"}]}], ")"}]}], ";", 
                    RowBox[{"times", "=", 
                    RowBox[{
                    RowBox[{"Transpose", "[", "state", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"ord", "=", 
                    RowBox[{"Ordering", "[", "times", "]"}]}], ";", 
                    RowBox[{"state", "=", 
                    RowBox[{
                    "state", "\[LeftDoubleBracket]", "ord", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"imkmv", "=", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", 
                    RowBox[{"1", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}]}], 
                    "\[RightDoubleBracket]"}], "]"}]}], ";", 
                    RowBox[{"key", "=", 
                    RowBox[{"Plus", "@@", 
                    RowBox[{
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{"compkeystep", "\[LeftDoubleBracket]", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}], 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"ss", "=", 
                    FractionBox[
                    RowBox[{"2", " ", "\[ExponentialE]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"10.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"key", "+", "1"}], ")"}]}], 
                    RowBox[{"10", " ", 
                    RowBox[{"Exp", "[", 
                    FractionBox[
                    SuperscriptBox[
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "0.5`"], "2"], "]"}]}]]}], 
                    "]"}]}], "]"}], "-", 
                    FractionBox["1", "\[ExponentialE]"]}], ")"}]}], 
                    RowBox[{"\[ExponentialE]", "-", "1"}]]}], ";", 
                    RowBox[{"keyg", "=", 
                    RowBox[{"Times", "@@", 
                    RowBox[{
                    SuperscriptBox["genes", 
                    RowBox[{
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], " ", 
                    "signature"}]], "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{"compkeystep", "\[LeftDoubleBracket]", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}], 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"rates", "=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Compile`$137", "=", 
                    RowBox[{"-", "wide"}]}], ";", 
                    RowBox[{"Compile`$135", "=", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"Compile`$138", "=", 
                    FractionBox["1", "2"]}], ";", 
                    RowBox[{"Compile`$139", "=", 
                    RowBox[{"Compile`$137", " ", "Compile`$138"}]}], ";", 
                    RowBox[{"Compile`$140", "=", 
                    SuperscriptBox["\[ExponentialE]", "Compile`$139"]}], ";", 
                    
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "Aasym", "\[LeftDoubleBracket]", "Compile`$135", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"slope", " ", "Compile`$140", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cosh", "[", 
                    RowBox[{"Compile`$137", " ", 
                    RowBox[{"(", 
                    RowBox[{"ss", "-", "2.`"}], ")"}]}], "]"}], "-", "1"}], 
                    ")"}]}], ")"}]}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "Asym", "\[LeftDoubleBracket]", "Compile`$135", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"slope", " ", "Compile`$140", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cosh", "[", 
                    RowBox[{"Compile`$137", " ", 
                    RowBox[{"(", 
                    RowBox[{"ss", "-", "1.`"}], ")"}]}], "]"}], "-", "1"}], 
                    ")"}]}], ")"}]}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "Aapop", "\[LeftDoubleBracket]", "Compile`$135", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"slope", " ", "Compile`$140", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cosh", "[", 
                    RowBox[{"Compile`$137", " ", 
                    RowBox[{"(", 
                    RowBox[{"ss", "-", "0.5`"}], ")"}]}], "]"}], "-", "1"}], 
                    ")"}]}], ")"}]}], "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "krates", "\[LeftDoubleBracket]", "Compile`$135", 
                    "\[RightDoubleBracket]"}], " ", "keyg"}], "}"}]}], 
                    "]"}]}], ")"}]}], ";", 
                    RowBox[{"ratescum", "=", 
                    RowBox[{"Accumulate", "[", "rates", "]"}]}], ";", 
                    RowBox[{"rcum1", "=", 
                    RowBox[{"ratescum", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"ratesn", "=", 
                    FractionBox["rates", "rcum1"]}], ";", 
                    RowBox[{"nondriverspace", "=", 
                    RowBox[{"maxnondrivermut", "-", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"semidriverspace", "=", 
                    RowBox[{"maxsemidrivermut", "-", 
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"driverspace", "=", 
                    RowBox[{"maxdrivermut", "-", 
                    RowBox[{"Total", "[", 
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}], 
                    "]"}]}]}], ";", 
                    RowBox[{"space", "=", 
                    RowBox[{
                    "nondriverspace", "+", "semidriverspace", "+", 
                    "driverspace"}]}], ";", 
                    RowBox[{"spaceprob", "=", 
                    FractionBox[
                    RowBox[{"{", 
                    RowBox[{
                    "driverspace", ",", "semidriverspace", ",", 
                    "nondriverspace"}], "}"}], "space"]}], ";", 
                    RowBox[{"stateslist", "=", 
                    RowBox[{"Internal`Bag", "[", 
                    RowBox[{"Most", "[", 
                    RowBox[{"{", "1.`", "}"}], "]"}], "]"}]}], ";", 
                    RowBox[{"Ncslist", "=", 
                    RowBox[{"Internal`Bag", "[", 
                    RowBox[{"Most", "[", 
                    RowBox[{"{", "1.`", "}"}], "]"}], "]"}]}], ";", 
                    RowBox[{"probslist", "=", 
                    RowBox[{"Internal`Bag", "[", 
                    RowBox[{"Most", "[", 
                    RowBox[{"{", "1.`", "}"}], "]"}], "]"}]}], ";", 
                    RowBox[{"spprobslist", "=", 
                    RowBox[{"Internal`Bag", "[", 
                    RowBox[{"Most", "[", 
                    RowBox[{"{", "1.`", "}"}], "]"}], "]"}]}], ";", 
                    RowBox[{"Ntslist", "=", 
                    RowBox[{"Internal`Bag", "[", 
                    RowBox[{"Most", "[", 
                    RowBox[{"{", "1.`", "}"}], "]"}], "]"}]}], ";", 
                    RowBox[{"tslist", "=", 
                    RowBox[{"Internal`Bag", "[", 
                    RowBox[{"Most", "[", 
                    RowBox[{"{", "1.`", "}"}], "]"}], "]"}]}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", "state", ",", "2"}], "]"}], 
                    ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"Ncslist", ",", "Ncell", ",", "2"}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"probslist", ",", "ratesn", ",", "2"}], "]"}], 
                    ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"spprobslist", ",", "spaceprob", ",", "2"}], 
                    "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"Ntslist", ",", "Ntot"}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"tslist", ",", "t"}], "]"}], ";", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "<", 
                    "tmax"}], "&&", 
                    RowBox[{"ct", "<", "ctmax"}], "&&", 
                    RowBox[{"Ntot", ">", "0"}]}], ",", 
                    RowBox[{
                    RowBox[{"ct", "+=", "1"}], ";", 
                    RowBox[{"t", "=", 
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", "probc", "}"}], ",", 
                    RowBox[{
                    RowBox[{"probc", "=", 
                    RowBox[{"Accumulate", "[", "ratesn", "]"}]}], ";", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "<", 
                    RowBox[{
                    "probc", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"statetmp1", "=", 
                    RowBox[{"{", "0.`", "}"}]}], ",", 
                    RowBox[{"statetmp2", "=", 
                    RowBox[{"{", "0.`", "}"}]}], ",", 
                    RowBox[{"chooseiorm", "=", 
                    RowBox[{"{", "0", "}"}]}], ",", "\[CapitalDelta]i", ",", 
                    "\[CapitalDelta]Nc", ",", "NewNcell", ",", "CT"}], "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"statetmp2", "=", 
                    RowBox[{"1.`", " ", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "}"}], ",", 
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", "t", "}"}]}], "]"}]}]}], ";", 
                    RowBox[{"chooseiorm", "=", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"nondriverspace", "=", "0"}], ",", 
                    RowBox[{"space", "=", "0"}], ",", 
                    RowBox[{"currentmut", "=", "0"}], ",", 
                    RowBox[{"range", "=", 
                    RowBox[{"{", "0", "}"}]}], ",", 
                    RowBox[{"mut", "=", "0"}], ",", 
                    RowBox[{"gm", "=", "0"}], ",", 
                    RowBox[{"dmv", "=", "mv0"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"nondriverspace", "=", 
                    RowBox[{"maxnondrivermut", "-", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"space", "=", 
                    RowBox[{"maxsemidrivermut", "+", "maxdrivermut", "-", 
                    RowBox[{"Total", "[", 
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}], 
                    "\[RightDoubleBracket]"}], "]"}], "+", 
                    "nondriverspace"}]}], ";", 
                    RowBox[{"currentmut", "=", 
                    RowBox[{
                    RowBox[{"RandomInteger", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"1", ",", "space"}], "]"}], ",", "space"}], "}"}],
                     "]"}], "-", "nondriverspace"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"currentmut", ">", "0"}], ",", 
                    RowBox[{
                    RowBox[{"range", "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", "imax", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}], 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "#1", 
                    "\[RightDoubleBracket]"}], "<", 
                    RowBox[{
                    "Cmut", "\[LeftDoubleBracket]", "#1", 
                    "\[RightDoubleBracket]"}]}], "&"}]}], "]"}]}], ";", 
                    RowBox[{"mut", "=", 
                    RowBox[{"range", "\[LeftDoubleBracket]", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"Length", "[", "range", "]"}], ",", 
                    "currentmut"}], "]"}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{
                    RowBox[{
                    "dmv", "\[LeftDoubleBracket]", "mut", 
                    "\[RightDoubleBracket]"}], "+=", "1"}]}], ",", 
                    RowBox[{"gm", "=", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{"RandomInteger", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "maxmjump"}], "}"}], "]"}], "]"}]}]}], 
                    "]"}], ";", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Total", "[", 
                    RowBox[{"Most", "[", "dmv", "]"}], "]"}], ",", 
                    RowBox[{"Min", "[", 
                    RowBox[{"gm", ",", "nondriverspace"}], "]"}], ",", "0"}], 
                    "}"}], ",", "dmv"}], "]"}]}]}], "]"}]}], ";", 
                    RowBox[{"NewNcell", "=", "Ncell"}], ";", 
                    RowBox[{"\[CapitalDelta]i", "=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"First", "[", "chooseiorm", "]"}]}], "}"}]}], ";", 
                    RowBox[{"\[CapitalDelta]Nc", "=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], ";", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"NewNcell", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", "1", "+", "#1"}]}], 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{
                    RowBox[{"NewNcell", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", "1", "+", "#1"}]}], 
                    "\[RightDoubleBracket]"}], "+", "#2"}]}], ")"}], "&"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\[CapitalDelta]i", ",", "\[CapitalDelta]Nc"}], 
                    "}"}]}], "]"}], ";", 
                    RowBox[{"CT", "=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Compile`$252", "=", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "Ccell", "\[LeftDoubleBracket]", "Compile`$252", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    RowBox[{
                    "NewNcell", "\[LeftDoubleBracket]", "Compile`$252", 
                    "\[RightDoubleBracket]"}], ".", 
                    RowBox[{
                    "ratio", "\[LeftDoubleBracket]", "Compile`$252", 
                    "\[RightDoubleBracket]"}]}]}], "\[GreaterEqual]", "0"}]}],
                     ")"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"CT", ",", 
                    RowBox[{
                    RowBox[{"Ncell", "=", "NewNcell"}], ";", 
                    RowBox[{"statetmp1", "=", 
                    RowBox[{"statetmp2", "+", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "mv0", ",", 
                    RowBox[{"{", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}], "rcum1"]}], 
                    "}"}]}], "]"}]}]}], ";", 
                    RowBox[{"statetmp2", "=", 
                    RowBox[{"statetmp2", "+", 
                    RowBox[{"Join", "[", 
                    RowBox[{"chooseiorm", ",", 
                    RowBox[{"{", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}], "rcum1"]}], 
                    "}"}]}], "]"}]}]}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mid", "=", "1"}], ";", 
                    RowBox[{"midr", "=", "1.`"}], ";", 
                    RowBox[{"in", "=", "2"}], ";", 
                    RowBox[{"fn", "=", "Ntot"}], ";", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"midr", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"fn", "+", "1", "-", "in"}], ")"}], " ", 
                    "0.5`"}]}], ";", 
                    RowBox[{"midr", "\[GreaterEqual]", "1"}]}], ",", 
                    RowBox[{
                    RowBox[{"mid", "=", 
                    RowBox[{
                    RowBox[{"IntegerPart", "[", "midr", "]"}], "+", "in"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"mid", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ">", 
                    RowBox[{"statetmp1", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "=", 
                    RowBox[{"mid", "-", "1"}]}], ",", 
                    RowBox[{"in", "=", 
                    RowBox[{"mid", "+", "1"}]}]}], "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"midr", "\[LessEqual]", "0"}], ",", 
                    RowBox[{"fn", "+=", "1"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "<", 
                    RowBox[{"statetmp1", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "+=", "1"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"fn", ">", "2"}], ",", 
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{"fn", "-", "2"}]}], "\[RightDoubleBracket]"}], 
                    "=", 
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ";;", 
                    RowBox[{"fn", "-", "1"}]}], "\[RightDoubleBracket]"}]}]}],
                     "]"}], ";", 
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", "-", "1"}], "\[RightDoubleBracket]"}], "=", 
                    "statetmp1"}]}], ")"}]}], ")"}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mid", "=", "1"}], ";", 
                    RowBox[{"midr", "=", "1.`"}], ";", 
                    RowBox[{"in", "=", "1"}], ";", 
                    RowBox[{"fn", "=", "Ntot"}], ";", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"midr", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"fn", "+", "1", "-", "in"}], ")"}], " ", 
                    "0.5`"}]}], ";", 
                    RowBox[{"midr", "\[GreaterEqual]", "1"}]}], ",", 
                    RowBox[{
                    RowBox[{"mid", "=", 
                    RowBox[{
                    RowBox[{"IntegerPart", "[", "midr", "]"}], "+", "in"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"mid", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ">", 
                    RowBox[{"statetmp2", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "=", 
                    RowBox[{"mid", "-", "1"}]}], ",", 
                    RowBox[{"in", "=", 
                    RowBox[{"mid", "+", "1"}]}]}], "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"midr", "\[LessEqual]", "0"}], ",", 
                    RowBox[{"fn", "+=", "1"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "<", 
                    RowBox[{"statetmp2", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "+=", "1"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"fn", "+", "1"}], ";;", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", ";;", 
                    RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{
                    RowBox[{
                    "state", "\[LeftDoubleBracket]", "fn", 
                    "\[RightDoubleBracket]"}], "=", "statetmp2"}]}], ")"}]}], 
                    ")"}], ";", 
                    RowBox[{"Ntot", "+=", "1"}], ";"}], ",", 
                    RowBox[{
                    RowBox[{"statetmp1", "=", 
                    RowBox[{"statetmp2", "+", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "mv0", ",", 
                    RowBox[{"{", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}], "rcum1"]}], 
                    "}"}]}], "]"}]}]}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mid", "=", "1"}], ";", 
                    RowBox[{"midr", "=", "1.`"}], ";", 
                    RowBox[{"in", "=", "2"}], ";", 
                    RowBox[{"fn", "=", "Ntot"}], ";", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"midr", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"fn", "+", "1", "-", "in"}], ")"}], " ", 
                    "0.5`"}]}], ";", 
                    RowBox[{"midr", "\[GreaterEqual]", "1"}]}], ",", 
                    RowBox[{
                    RowBox[{"mid", "=", 
                    RowBox[{
                    RowBox[{"IntegerPart", "[", "midr", "]"}], "+", "in"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"mid", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ">", 
                    RowBox[{"statetmp1", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "=", 
                    RowBox[{"mid", "-", "1"}]}], ",", 
                    RowBox[{"in", "=", 
                    RowBox[{"mid", "+", "1"}]}]}], "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"midr", "\[LessEqual]", "0"}], ",", 
                    RowBox[{"fn", "+=", "1"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "<", 
                    RowBox[{"statetmp1", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "+=", "1"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"fn", ">", "2"}], ",", 
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{"fn", "-", "2"}]}], "\[RightDoubleBracket]"}], 
                    "=", 
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ";;", 
                    RowBox[{"fn", "-", "1"}]}], "\[RightDoubleBracket]"}]}]}],
                     "]"}], ";", 
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", "-", "1"}], "\[RightDoubleBracket]"}], "=", 
                    "statetmp1"}]}], ")"}]}], ")"}], ";"}]}], "]"}], ";"}]}], 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "<", 
                    RowBox[{
                    "probc", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"statetmp1", "=", 
                    RowBox[{"{", "0.`", "}"}]}], ",", 
                    RowBox[{"statetmp2", "=", 
                    RowBox[{"{", "0.`", "}"}]}], ",", 
                    RowBox[{"chooseiorm", "=", 
                    RowBox[{"{", "0", "}"}]}], ",", "\[CapitalDelta]i", ",", 
                    "\[CapitalDelta]Nc", ",", "NewNcell", ",", "CT"}], "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"statetmp2", "=", 
                    RowBox[{"1.`", " ", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "}"}], ",", 
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", "t", "}"}]}], "]"}]}]}], ";", 
                    RowBox[{"chooseiorm", "=", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"nondriverspace", "=", "0"}], ",", 
                    RowBox[{"space", "=", "0"}], ",", 
                    RowBox[{"currentmut", "=", "0"}], ",", 
                    RowBox[{"range", "=", 
                    RowBox[{"{", "0", "}"}]}], ",", 
                    RowBox[{"mut", "=", "0"}], ",", 
                    RowBox[{"gm", "=", "0"}], ",", 
                    RowBox[{"dmv", "=", "mv0"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"nondriverspace", "=", 
                    RowBox[{"maxnondrivermut", "-", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"space", "=", 
                    RowBox[{"maxsemidrivermut", "+", "maxdrivermut", "-", 
                    RowBox[{"Total", "[", 
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}], 
                    "\[RightDoubleBracket]"}], "]"}], "+", 
                    "nondriverspace"}]}], ";", 
                    RowBox[{"currentmut", "=", 
                    RowBox[{
                    RowBox[{"RandomInteger", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"1", ",", "space"}], "]"}], ",", "space"}], "}"}],
                     "]"}], "-", "nondriverspace"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"currentmut", ">", "0"}], ",", 
                    RowBox[{
                    RowBox[{"range", "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", "imax", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}], 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "#1", 
                    "\[RightDoubleBracket]"}], "<", 
                    RowBox[{
                    "Cmut", "\[LeftDoubleBracket]", "#1", 
                    "\[RightDoubleBracket]"}]}], "&"}]}], "]"}]}], ";", 
                    RowBox[{"mut", "=", 
                    RowBox[{"range", "\[LeftDoubleBracket]", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"Length", "[", "range", "]"}], ",", 
                    "currentmut"}], "]"}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{
                    RowBox[{
                    "dmv", "\[LeftDoubleBracket]", "mut", 
                    "\[RightDoubleBracket]"}], "+=", "1"}]}], ",", 
                    RowBox[{"gm", "=", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{"RandomInteger", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "maxmjump"}], "}"}], "]"}], "]"}]}]}], 
                    "]"}], ";", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Total", "[", 
                    RowBox[{"Most", "[", "dmv", "]"}], "]"}], ",", 
                    RowBox[{"Min", "[", 
                    RowBox[{"gm", ",", "nondriverspace"}], "]"}], ",", "0"}], 
                    "}"}], ",", "dmv"}], "]"}]}]}], "]"}]}], ";", 
                    RowBox[{"NewNcell", "=", "Ncell"}], ";", 
                    RowBox[{"\[CapitalDelta]i", "=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"First", "[", "chooseiorm", "]"}]}], "}"}]}], ";", 
                    RowBox[{"\[CapitalDelta]Nc", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "}"}]}], ";", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"NewNcell", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", "1", "+", "#1"}]}], 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{
                    RowBox[{"NewNcell", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", "1", "+", "#1"}]}], 
                    "\[RightDoubleBracket]"}], "+", "#2"}]}], ")"}], "&"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\[CapitalDelta]i", ",", "\[CapitalDelta]Nc"}], 
                    "}"}]}], "]"}], ";", 
                    RowBox[{"CT", "=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Compile`$392", "=", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "Ccell", "\[LeftDoubleBracket]", "Compile`$392", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    RowBox[{
                    "NewNcell", "\[LeftDoubleBracket]", "Compile`$392", 
                    "\[RightDoubleBracket]"}], ".", 
                    RowBox[{
                    "ratio", "\[LeftDoubleBracket]", "Compile`$392", 
                    "\[RightDoubleBracket]"}]}]}], "\[GreaterEqual]", "0"}]}],
                     ")"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"CT", ",", 
                    RowBox[{
                    RowBox[{"Ncell", "=", "NewNcell"}], ";", 
                    RowBox[{"statetmp1", "=", 
                    RowBox[{"statetmp2", "+", 
                    RowBox[{"Join", "[", 
                    RowBox[{"chooseiorm", ",", 
                    RowBox[{"{", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}], "rcum1"]}], 
                    "}"}]}], "]"}]}]}], ";", 
                    RowBox[{"statetmp2", "=", 
                    RowBox[{"statetmp2", "+", 
                    RowBox[{"Join", "[", 
                    RowBox[{"chooseiorm", ",", 
                    RowBox[{"{", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}], "rcum1"]}], 
                    "}"}]}], "]"}]}]}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mid", "=", "1"}], ";", 
                    RowBox[{"midr", "=", "1.`"}], ";", 
                    RowBox[{"in", "=", "2"}], ";", 
                    RowBox[{"fn", "=", "Ntot"}], ";", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"midr", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"fn", "+", "1", "-", "in"}], ")"}], " ", 
                    "0.5`"}]}], ";", 
                    RowBox[{"midr", "\[GreaterEqual]", "1"}]}], ",", 
                    RowBox[{
                    RowBox[{"mid", "=", 
                    RowBox[{
                    RowBox[{"IntegerPart", "[", "midr", "]"}], "+", "in"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"mid", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ">", 
                    RowBox[{"statetmp1", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "=", 
                    RowBox[{"mid", "-", "1"}]}], ",", 
                    RowBox[{"in", "=", 
                    RowBox[{"mid", "+", "1"}]}]}], "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"midr", "\[LessEqual]", "0"}], ",", 
                    RowBox[{"fn", "+=", "1"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "<", 
                    RowBox[{"statetmp1", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "+=", "1"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"fn", ">", "2"}], ",", 
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{"fn", "-", "2"}]}], "\[RightDoubleBracket]"}], 
                    "=", 
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ";;", 
                    RowBox[{"fn", "-", "1"}]}], "\[RightDoubleBracket]"}]}]}],
                     "]"}], ";", 
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", "-", "1"}], "\[RightDoubleBracket]"}], "=", 
                    "statetmp1"}]}], ")"}]}], ")"}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mid", "=", "1"}], ";", 
                    RowBox[{"midr", "=", "1.`"}], ";", 
                    RowBox[{"in", "=", "1"}], ";", 
                    RowBox[{"fn", "=", "Ntot"}], ";", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"midr", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"fn", "+", "1", "-", "in"}], ")"}], " ", 
                    "0.5`"}]}], ";", 
                    RowBox[{"midr", "\[GreaterEqual]", "1"}]}], ",", 
                    RowBox[{
                    RowBox[{"mid", "=", 
                    RowBox[{
                    RowBox[{"IntegerPart", "[", "midr", "]"}], "+", "in"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"mid", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ">", 
                    RowBox[{"statetmp2", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "=", 
                    RowBox[{"mid", "-", "1"}]}], ",", 
                    RowBox[{"in", "=", 
                    RowBox[{"mid", "+", "1"}]}]}], "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"midr", "\[LessEqual]", "0"}], ",", 
                    RowBox[{"fn", "+=", "1"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "<", 
                    RowBox[{"statetmp2", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "+=", "1"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"fn", "+", "1"}], ";;", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", ";;", 
                    RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{
                    RowBox[{
                    "state", "\[LeftDoubleBracket]", "fn", 
                    "\[RightDoubleBracket]"}], "=", "statetmp2"}]}], ")"}]}], 
                    ")"}], ";", 
                    RowBox[{"Ntot", "+=", "1"}], ";"}], ",", 
                    RowBox[{
                    RowBox[{"statetmp1", "=", 
                    RowBox[{"statetmp2", "+", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "mv0", ",", 
                    RowBox[{"{", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}], "rcum1"]}], 
                    "}"}]}], "]"}]}]}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mid", "=", "1"}], ";", 
                    RowBox[{"midr", "=", "1.`"}], ";", 
                    RowBox[{"in", "=", "2"}], ";", 
                    RowBox[{"fn", "=", "Ntot"}], ";", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"midr", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"fn", "+", "1", "-", "in"}], ")"}], " ", 
                    "0.5`"}]}], ";", 
                    RowBox[{"midr", "\[GreaterEqual]", "1"}]}], ",", 
                    RowBox[{
                    RowBox[{"mid", "=", 
                    RowBox[{
                    RowBox[{"IntegerPart", "[", "midr", "]"}], "+", "in"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"mid", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ">", 
                    RowBox[{"statetmp1", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "=", 
                    RowBox[{"mid", "-", "1"}]}], ",", 
                    RowBox[{"in", "=", 
                    RowBox[{"mid", "+", "1"}]}]}], "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"midr", "\[LessEqual]", "0"}], ",", 
                    RowBox[{"fn", "+=", "1"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "<", 
                    RowBox[{"statetmp1", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "+=", "1"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"fn", ">", "2"}], ",", 
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{"fn", "-", "2"}]}], "\[RightDoubleBracket]"}], 
                    "=", 
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ";;", 
                    RowBox[{"fn", "-", "1"}]}], "\[RightDoubleBracket]"}]}]}],
                     "]"}], ";", 
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", "-", "1"}], "\[RightDoubleBracket]"}], "=", 
                    "statetmp1"}]}], ")"}]}], ")"}], ";"}]}], "]"}], ";"}]}], 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "<", 
                    RowBox[{
                    "probc", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[CapitalDelta]i", ",", "\[CapitalDelta]Nc"}], 
                    "}"}], ",", 
                    RowBox[{
                    RowBox[{"\[CapitalDelta]i", "=", 
                    RowBox[{"{", "0", "}"}]}], ";", 
                    RowBox[{"\[CapitalDelta]Nc", "=", 
                    RowBox[{"{", 
                    RowBox[{"-", "1"}], "}"}]}], ";", 
                    RowBox[{
                    RowBox[{"Ncell", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", "1", "+", 
                    RowBox[{
                    "\[CapitalDelta]i", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}], "\[RightDoubleBracket]"}], 
                    "=", 
                    RowBox[{
                    RowBox[{"Ncell", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", "1", "+", 
                    RowBox[{
                    "\[CapitalDelta]i", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}], "\[RightDoubleBracket]"}], 
                    "+", 
                    RowBox[{
                    "\[CapitalDelta]Nc", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ";;", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}]}], ";"}], 
                    ")"}], ";", 
                    RowBox[{"Ntot", "-=", "1"}], ";"}]}], "]"}], ",", "True", 
                    ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"statetmp1", "=", 
                    RowBox[{"{", "0.`", "}"}]}], ",", 
                    RowBox[{"statetmp2", "=", 
                    RowBox[{"{", "0.`", "}"}]}], ",", "chooseiorm", ",", 
                    "\[CapitalDelta]i", ",", "\[CapitalDelta]Nc", ",", 
                    "\[CapitalDelta]k", ",", "NewNcell", ",", "CT"}], "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"CT", "=", "False"}], ";", 
                    RowBox[{"statetmp1", "=", 
                    RowBox[{"1.`", " ", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "}"}], ",", 
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", "t", "}"}]}], "]"}]}]}], ";", 
                    RowBox[{"NewNcell", "=", "Ncell"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "<", "kmax"}], ",", 
                    RowBox[{
                    RowBox[{"\[CapitalDelta]i", "=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], ";", 
                    RowBox[{"\[CapitalDelta]Nc", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ";", 
                    RowBox[{"\[CapitalDelta]k", "=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], ";", 
                    RowBox[{
                    RowBox[{"NewNcell", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "+", 
                    RowBox[{
                    "\[CapitalDelta]k", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", "1", "+", 
                    RowBox[{
                    "\[CapitalDelta]i", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}], "\[RightDoubleBracket]"}], 
                    "=", 
                    RowBox[{
                    RowBox[{"NewNcell", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "+", 
                    RowBox[{
                    "\[CapitalDelta]k", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", "1", "+", 
                    RowBox[{
                    "\[CapitalDelta]i", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}], "\[RightDoubleBracket]"}], 
                    "+", 
                    RowBox[{
                    "\[CapitalDelta]Nc", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{
                    RowBox[{"NewNcell", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "+", 
                    RowBox[{
                    "\[CapitalDelta]k", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", "1", "+", 
                    RowBox[{
                    "\[CapitalDelta]i", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "\[RightDoubleBracket]"}], 
                    "=", 
                    RowBox[{
                    RowBox[{"NewNcell", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "+", 
                    RowBox[{
                    "\[CapitalDelta]k", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", "1", "+", 
                    RowBox[{
                    "\[CapitalDelta]i", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "\[RightDoubleBracket]"}], 
                    "+", 
                    RowBox[{
                    "\[CapitalDelta]Nc", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"CT", "=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Compile`$522", "=", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"Compile`$523", "=", 
                    RowBox[{"Last", "[", "\[CapitalDelta]k", "]"}]}], ";", 
                    RowBox[{"Compile`$524", "=", 
                    RowBox[{"Compile`$522", "+", "Compile`$523"}]}], ";", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "Ccell", "\[LeftDoubleBracket]", "Compile`$524", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    RowBox[{
                    "NewNcell", "\[LeftDoubleBracket]", "Compile`$524", 
                    "\[RightDoubleBracket]"}], ".", 
                    RowBox[{
                    "ratio", "\[LeftDoubleBracket]", "Compile`$524", 
                    "\[RightDoubleBracket]"}]}]}], "\[GreaterEqual]", "0"}]}],
                     ")"}]}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"CT", ",", 
                    RowBox[{
                    RowBox[{"Ncell", "=", "NewNcell"}], ";", 
                    RowBox[{"statetmp1", "=", 
                    RowBox[{"statetmp1", "+", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", "mv0", ",", 
                    RowBox[{"{", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}], "rcum1"]}], 
                    "}"}]}], "]"}]}]}]}], ",", 
                    RowBox[{"statetmp1", "=", 
                    RowBox[{"statetmp1", "+", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "mv0", ",", 
                    RowBox[{"{", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}], "rcum1"]}], 
                    "}"}]}], "]"}]}]}]}], "]"}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mid", "=", "1"}], ";", 
                    RowBox[{"midr", "=", "1.`"}], ";", 
                    RowBox[{"in", "=", "2"}], ";", 
                    RowBox[{"fn", "=", "Ntot"}], ";", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"midr", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"fn", "+", "1", "-", "in"}], ")"}], " ", 
                    "0.5`"}]}], ";", 
                    RowBox[{"midr", "\[GreaterEqual]", "1"}]}], ",", 
                    RowBox[{
                    RowBox[{"mid", "=", 
                    RowBox[{
                    RowBox[{"IntegerPart", "[", "midr", "]"}], "+", "in"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"mid", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ">", 
                    RowBox[{"statetmp1", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "=", 
                    RowBox[{"mid", "-", "1"}]}], ",", 
                    RowBox[{"in", "=", 
                    RowBox[{"mid", "+", "1"}]}]}], "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"midr", "\[LessEqual]", "0"}], ",", 
                    RowBox[{"fn", "+=", "1"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "<", 
                    RowBox[{"statetmp1", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "+=", "1"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"fn", ">", "2"}], ",", 
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{"fn", "-", "2"}]}], "\[RightDoubleBracket]"}], 
                    "=", 
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ";;", 
                    RowBox[{"fn", "-", "1"}]}], "\[RightDoubleBracket]"}]}]}],
                     "]"}], ";", 
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", "-", "1"}], "\[RightDoubleBracket]"}], "=", 
                    "statetmp1"}]}], ")"}]}], ")"}], ";"}]}], "]"}]}], 
                    "]"}]}]}], "]"}], ";", 
                    RowBox[{"imkmv", "=", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", 
                    RowBox[{"1", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}]}], 
                    "\[RightDoubleBracket]"}], "]"}]}], ";", 
                    RowBox[{"key", "=", 
                    RowBox[{"Plus", "@@", 
                    RowBox[{
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}], 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{"compkeystep", "\[LeftDoubleBracket]", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}], 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"ss", "=", 
                    FractionBox[
                    RowBox[{"2", " ", "\[ExponentialE]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"10.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"key", "+", "1"}], ")"}]}], 
                    RowBox[{"10", " ", 
                    RowBox[{"Exp", "[", 
                    FractionBox[
                    SuperscriptBox[
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "0.5`"], "2"], "]"}]}]]}], 
                    "]"}]}], "]"}], "-", 
                    FractionBox["1", "\[ExponentialE]"]}], ")"}]}], 
                    RowBox[{"\[ExponentialE]", "-", "1"}]]}], ";", 
                    RowBox[{"keyg", "=", 
                    RowBox[{"Times", "@@", 
                    RowBox[{
                    SuperscriptBox["genes", 
                    RowBox[{
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], " ", 
                    "signature"}]], "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{"compkeystep", "\[LeftDoubleBracket]", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}], 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"rates", "=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Compile`$611", "=", 
                    RowBox[{"-", "wide"}]}], ";", 
                    RowBox[{"Compile`$609", "=", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"Compile`$612", "=", 
                    FractionBox["1", "2"]}], ";", 
                    RowBox[{"Compile`$613", "=", 
                    RowBox[{"Compile`$611", " ", "Compile`$612"}]}], ";", 
                    RowBox[{"Compile`$614", "=", 
                    SuperscriptBox["\[ExponentialE]", "Compile`$613"]}], ";", 
                    
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "Aasym", "\[LeftDoubleBracket]", "Compile`$609", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"slope", " ", "Compile`$614", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cosh", "[", 
                    RowBox[{"Compile`$611", " ", 
                    RowBox[{"(", 
                    RowBox[{"ss", "-", "2.`"}], ")"}]}], "]"}], "-", "1"}], 
                    ")"}]}], ")"}]}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "Asym", "\[LeftDoubleBracket]", "Compile`$609", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"slope", " ", "Compile`$614", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cosh", "[", 
                    RowBox[{"Compile`$611", " ", 
                    RowBox[{"(", 
                    RowBox[{"ss", "-", "1.`"}], ")"}]}], "]"}], "-", "1"}], 
                    ")"}]}], ")"}]}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "Aapop", "\[LeftDoubleBracket]", "Compile`$609", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"slope", " ", "Compile`$614", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cosh", "[", 
                    RowBox[{"Compile`$611", " ", 
                    RowBox[{"(", 
                    RowBox[{"ss", "-", "0.5`"}], ")"}]}], "]"}], "-", "1"}], 
                    ")"}]}], ")"}]}], "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "krates", "\[LeftDoubleBracket]", "Compile`$609", 
                    "\[RightDoubleBracket]"}], " ", "keyg"}], "}"}]}], 
                    "]"}]}], ")"}]}], ";", 
                    RowBox[{"ratescum", "=", 
                    RowBox[{"Accumulate", "[", "rates", "]"}]}], ";", 
                    RowBox[{"rcum1", "=", 
                    RowBox[{"ratescum", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"ratesn", "=", 
                    FractionBox["rates", "rcum1"]}], ";", 
                    RowBox[{"nondriverspace", "=", 
                    RowBox[{"maxnondrivermut", "-", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"semidriverspace", "=", 
                    RowBox[{"maxsemidrivermut", "-", 
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"driverspace", "=", 
                    RowBox[{"maxdrivermut", "-", 
                    RowBox[{"Total", "[", 
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}], 
                    "]"}]}]}], ";", 
                    RowBox[{"space", "=", 
                    RowBox[{
                    "nondriverspace", "+", "semidriverspace", "+", 
                    "driverspace"}]}], ";", 
                    RowBox[{"spaceprob", "=", 
                    FractionBox[
                    RowBox[{"{", 
                    RowBox[{
                    "driverspace", ",", "semidriverspace", ",", 
                    "nondriverspace"}], "}"}], "space"]}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", "state", ",", "2"}], "]"}], 
                    ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"Ncslist", ",", "Ncell", ",", "2"}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"probslist", ",", "ratesn", ",", "2"}], "]"}], 
                    ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"spprobslist", ",", "spaceprob", ",", "2"}], 
                    "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"Ntslist", ",", "Ntot"}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"tslist", ",", "t"}], "]"}], ";"}]}], "]"}], ";", 
                    
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Internal`BagPart", "[", 
                    RowBox[{"Ncslist", ",", "All"}], "]"}], ",", "1"}], "]"}],
                     ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Internal`BagPart", "[", 
                    RowBox[{"probslist", ",", "All"}], "]"}], ",", "1"}], 
                    "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Internal`BagPart", "[", 
                    RowBox[{"spprobslist", ",", "All"}], "]"}], ",", "1"}], 
                    "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Internal`BagPart", "[", 
                    RowBox[{"Ntslist", ",", "All"}], "]"}], ",", "1"}], "]"}],
                     ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Internal`BagPart", "[", 
                    RowBox[{"tslist", ",", "All"}], "]"}], ",", "1"}], "]"}], 
                    ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", "Nmax"}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", "imax"}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"ct", "+", "1"}]}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Dimensions", "[", "state", "]"}], ",", "1"}], 
                    "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"ct", "+", "1"}]}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Dimensions", "[", "Ncell", "]"}], ",", "1"}], 
                    "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"ct", "+", "1"}]}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Dimensions", "[", "ratesn", "]"}], ",", "1"}], 
                    "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"ct", "+", "1"}]}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Dimensions", "[", "spaceprob", "]"}], ",", "1"}],
                     "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"ct", "+", "1"}]}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"ct", "+", "1"}]}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Dimensions", "[", 
                    RowBox[{"{", "state", "}"}], "]"}], "]"}]}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Dimensions", "[", 
                    RowBox[{"{", "Ncell", "}"}], "]"}], "]"}]}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Dimensions", "[", 
                    RowBox[{"{", "ratesn", "}"}], "]"}], "]"}]}], "]"}], ";", 
                    
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Dimensions", "[", 
                    RowBox[{"{", "spaceprob", "}"}], "]"}], "]"}]}], "]"}], 
                    ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Dimensions", "[", 
                    RowBox[{"{", "Ntot", "}"}], "]"}], "]"}]}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Dimensions", "[", 
                    RowBox[{"{", "t", "}"}], "]"}], "]"}]}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", "0"}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", "0"}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", "8"}], "]"}], ";", 
                    RowBox[{"Internal`BagPart", "[", 
                    RowBox[{"stateslist", ",", "All"}], "]"}]}]}], "]"}]}], 
                "]"}],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  CompiledFunction[{10, 10.1, 5464}, {
    Blank[Integer], 
    Blank[Integer], 
    Blank[Integer], 
    Blank[Integer], 
    Blank[Integer], 
    Blank[Integer], 
    Blank[Integer], {
     Blank[Integer], 1}, {
     Blank[Integer], 1}, {
     Blank[Real], 1}, {
     Blank[Real], 1}, 
    Blank[Integer], 
    Blank[Integer], 
    Blank[Integer], 
    Blank[Integer], {
     Blank[Real], 1}, {
     Blank[Real], 1}, {
     Blank[Real], 1}, 
    Blank[Real], 
    Blank[Real], 
    Blank[Real], 
    Blank[Real], {
     Blank[Real], 2}}, {{2, 0, 0}, {2, 0, 1}, {2, 0, 2}, {2, 0, 3}, {2, 0, 
   4}, {2, 0, 5}, {2, 0, 6}, {2, 1, 0}, {2, 1, 1}, {3, 1, 2}, {3, 1, 3}, {2, 
   0, 7}, {2, 0, 8}, {2, 0, 9}, {2, 0, 10}, {3, 1, 4}, {3, 1, 5}, {3, 1, 6}, {
   3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 3}, {3, 2, 7}, {3, 1, 
   46}}, {{{0}, {2, 1, 15}}, {{1, -2, 1}, {2, 1, 
    43}}, {{-1, 1}, {2, 1, 45}}, {False, {1, 0, 0}}, {-10., {3, 0, 9}}, {{
    2, -1, 1}, {2, 1, 44}}, {0, {2, 0, 11}}, {{0.}, {3, 1, 10}}, {
    1., {3, 0, 21}}, {{4, -2, 1}, {2, 1, 30}}, {{1.}, {3, 1, 13}}, {{0, 0, 
    1}, {2, 1, 26}}, {{0, 0}, {2, 1, 16}}, {{0, 0, 0, 0, 0}, {2, 1, 14}}, {
    10, {2, 0, 25}}, {{{0., 0.}}, {3, 2, 11}}, {
    4, {2, 0, 27}}, {{-1}, {2, 1, 42}}, {{10}, {2, 1, 17}}, {
    8, {2, 0, 26}}, {-1., {3, 0, 17}}, {{1}, {2, 1, 9}}, {-0.5, {3, 0, 
     19}}, {{0, 0, 0}, {2, 1, 12}}, {-2, {2, 0, 49}}, {{{0}}, {2, 2, 8}}, {
    2, {2, 0, 21}}, {-1, {2, 0, 12}}, {-2., {3, 0, 14}}, {1, {2, 0, 15}}, {{
    4, -1, 1}, {2, 1, 29}}, {3, {2, 0, 18}}, {2.718281828459045, {3, 0, 6}}, {
    0.5, {3, 0, 10}}, {
    0., {3, 0, 4}}, {{-1, 2}, {2, 1, 41}}, {{0, 1}, {2, 1, 37}}, {
    0.1, {3, 0, 5}}}, {8, 61, 43, 0, 
   56}, {{6, 11, 37}, {42, "CopyTensor", 2, 2, 8, 2, 2, 32}, {
    42, "CopyTensor", 2, 1, 9, 2, 1, 24}, {
    42, "CopyTensor", 3, 1, 10, 3, 1, 21}, {
    42, "CopyTensor", 3, 2, 11, 3, 2, 34}, {
    42, "CopyTensor", 2, 1, 12, 2, 1, 35}, {7, 4, 7}, {6, 11, 24}, {
    42, "CopyTensor", 3, 1, 13, 3, 1, 33}, {
    42, "CopyTensor", 2, 1, 15, 2, 1, 23}, {
    42, "CopyTensor", 2, 1, 15, 2, 1, 22}, {6, 11, 16}, {6, 11, 35}, {6, 11, 
    14}, {7, 4, 20}, {12, 4, 12, 45}, {6, 4, 42}, {6, 11, 22}, {35, 42, 2, 
    31}, {6, 11, 29}, {3, 2}, {36, 22, 11, 2, 31}, {4, 29, 42, -1}, {
    42, "CopyTensor", 2, 1, 31, 2, 1, 23}, {12, 4, 18, 29}, {6, 11, 44}, {35, 
    29, 2, 31}, {6, 11, 54}, {3, 2}, {36, 44, 11, 2, 31}, {4, 54, 29, -1}, {6,
     45, 22}, {6, 11, 42}, {35, 22, 2, 27}, {6, 11, 44}, {3, 2}, {36, 42, 15, 
    2, 27}, {4, 44, 22, -1}, {34, 1, 1, 5, 2, 40}, {
    42, "Join", 2, 1, 27, 2, 1, 40, 2, 1, 20}, {40, 60, 3, 1, 3, 3, 1, 27}, {
    45, 2, 27, 40}, {12, 3, 12, 44}, {6, 11, 29}, {35, 44, 2, 27}, {6, 11, 
    54}, {3, 2}, {36, 29, 15, 2, 27}, {4, 54, 44, -1}, {
    42, "Join", 2, 1, 27, 2, 1, 15, 2, 1, 28}, {41, 259, 3, 0, 0, 2, 1, 28, 3,
     1, 27}, {42, "CopyTensor", 3, 1, 27, 3, 1, 33}, {6, 0, 42}, {18, 42, 
    22}, {18, 2, 29}, {12, 1, 22, 29, 44}, {6, 44, 37}, {34, 2, 1, 5, 42, 11, 
    11, 11, 11, 2, 27}, {12, 3, 12, 22}, {6, 12, 29}, {35, 22, 29, 2, 28}, {6,
     11, 54}, {3, 2}, {36, 29, 23, 0, 28}, {4, 54, 22, -1}, {
    42, "Join", 2, 2, 27, 2, 2, 28, 2, 2, 38}, {
    42, "CopyTensor", 2, 2, 38, 2, 2, 32}, {
    42, "CopyTensor", 2, 1, 23, 2, 1, 38}, {7, 4, 36}, {
    42, "CopyTensor", 3, 1, 10, 3, 1, 28}, {10, 12, 38}, {13, 6, 38, 27}, {40,
     60, 3, 0, 27, 3, 0, 38}, {16, 6, 38, 27}, {38, 1, 0, 15, 0, 17}, {34, 1, 
    3, 15, 17, 15, 2, 18}, {38, 38, 3, 18, 1, 49}, {6, 11, 17}, {33, 49, 
    29}, {6, 11, 41}, {3, 4}, {37, 49, 41, 2, 22}, {12, 17, 22, 32}, {6, 32, 
    17}, {4, 41, 29, -3}, {12, 17, 15, 17}, {41, 263, 2, 0, 11, 3, 0, 10, 3, 
    0, 38}, {10, 21, 22}, {40, 60, 3, 0, 22, 3, 0, 12}, {16, 38, 12, 38}, {40,
     34, 3, 0, 38, 3, 0, 12}, {10, 25, 38}, {16, 38, 12, 38}, {40, 60, 3, 0, 
    38, 3, 0, 12}, {10, 17, 38}, {16, 38, 12, 38}, {16, 9, 38, 12}, {40, 34, 
    3, 0, 12, 3, 0, 38}, {19, 38, 12}, {40, 34, 3, 0, 12, 3, 0, 38}, {10, 12, 
    12}, {40, 34, 3, 0, 12, 3, 0, 22}, {19, 22, 12}, {13, 38, 12, 38}, {10, 
    21, 12}, {16, 12, 27, 38, 12}, {7, 12, 36}, {19, 2, 12}, {7, 12, 32}, {10,
     21, 12}, {40, 60, 3, 0, 12, 3, 0, 27}, {7, 27, 33}, {16, 32, 33, 27}, {7,
     27, 34}, {40, 34, 3, 0, 34, 3, 0, 27}, {7, 27, 35}, {38, 4, 0, 15, 0, 
    27}, {13, 36, 14, 12}, {16, 32, 12, 38}, {40, 10, 3, 0, 38, 3, 0, 12}, {
    10, 12, 38}, {13, 12, 38, 12}, {16, 3, 35, 12, 38}, {19, 38, 12}, {40, 34,
     3, 0, 12, 3, 0, 38}, {16, 27, 38, 27}, {38, 5, 0, 15, 0, 38}, {13, 36, 
    17, 12}, {16, 32, 12, 22}, {40, 10, 3, 0, 22, 3, 0, 12}, {10, 12, 22}, {
    13, 12, 22, 12}, {16, 3, 35, 12, 22}, {19, 22, 12}, {40, 34, 3, 0, 12, 3, 
    0, 22}, {16, 38, 22, 38}, {38, 6, 0, 15, 0, 22}, {13, 36, 19, 12}, {16, 
    32, 12, 30}, {40, 10, 3, 0, 30, 3, 0, 12}, {10, 12, 30}, {13, 12, 30, 
    12}, {16, 3, 35, 12, 30}, {19, 30, 12}, {40, 34, 3, 0, 12, 3, 0, 30}, {16,
     22, 30, 22}, {34, 1, 3, 27, 38, 22, 3, 27}, {38, 33, 0, 15, 0, 27}, {45, 
    38, 0, 39}, {41, 263, 3, 1, 40, 2, 1, 39, 3, 1, 49}, {38, 1, 0, 15, 0, 
    54}, {34, 1, 3, 15, 54, 15, 2, 39}, {38, 49, 3, 39, 1, 18}, {7, 21, 22}, {
    33, 18, 41}, {6, 11, 44}, {3, 4}, {37, 18, 44, 3, 38}, {16, 22, 38, 30}, {
    7, 30, 22}, {4, 44, 41, -3}, {16, 27, 22, 27}, {34, 1, 1, 27, 3, 25}, {
    42, "Join", 3, 1, 27, 3, 1, 25, 3, 1, 18}, {
    42, "Accumulate", 3, 1, 18, 2, 0, 26, 3, 1, 27}, {
    42, "CopyTensor", 3, 1, 27, 3, 1, 28}, {12, 1, 21, 54}, {6, 12, 17}, {35, 
    54, 17, 3, 27}, {6, 11, 41}, {3, 4}, {
    42, "Join", 2, 1, 26, 2, 1, 23, 2, 1, 25}, {41, 259, 3, 0, 21, 2, 1, 25, 
    3, 1, 49}, {36, 17, 49, 0, 27}, {4, 41, 54, -3}, {12, 1, 21, 44}, {34, 1, 
    2, 44, 15, 2, 49}, {10, 11, 27}, {10, 15, 22}, {
    42, "RandomReals", 3, 0, 27, 3, 0, 22, 2, 1, 49, 3, 2, 25}, {40, 35, 3, 2,
     25, 3, 2, 18}, {40, 43, 3, 2, 18, 3, 2, 25}, {38, 28, 0, 12, 0, 27}, {40,
     60, 3, 0, 27, 3, 0, 22}, {41, 259, 3, 0, 22, 3, 2, 25, 3, 2, 18}, {41, 
    257, 3, 0, 7, 3, 2, 18, 3, 2, 25}, {
    42, "JoinAtLevel", 3, 2, 27, 3, 2, 25, 2, 0, 21, 3, 2, 18}, {
    42, "CopyTensor", 3, 2, 18, 3, 2, 34}, {18, 42, 44}, {6, 44, 38}, {18, 37,
     44}, {6, 44, 19}, {12, 1, 38, 19, 44}, {6, 44, 34}, {10, 21, 36}, {40, 
    60, 3, 0, 36, 3, 0, 22}, {7, 22, 23}, {10, 34, 22}, {16, 22, 23, 22}, {7, 
    22, 13}, {40, 50, 3, 0, 13, 2, 0, 44}, {6, 44, 23}, {
    42, "MaxI", 2, 0, 11, 2, 0, 23, 2, 0, 44}, {6, 44, 30}, {12, 42, 37, 
    44}, {34, 1, 3, 44, 30, 30, 2, 18}, {
    42, "CopyTensor", 2, 1, 18, 2, 1, 35}, {
    42, "Transpose", 3, 2, 34, 3, 2, 18}, {38, 18, 0, 12, 1, 46}, {
    42, "CopyTensor", 3, 1, 46, 3, 1, 21}, {
    42, "Ordering", 3, 1, 21, 2, 1, 46}, {
    42, "CopyTensor", 2, 1, 46, 2, 1, 24}, {38, 34, 1, 24, 2, 46}, {
    42, "CopyTensor", 3, 2, 46, 3, 2, 34}, {12, 27, 4, 12, 44}, {34, 1, 3, 15,
     44, 15, 2, 46}, {38, 34, 0, 15, 3, 46, 1, 18}, {40, 53, 3, 1, 18, 2, 1, 
    46}, {42, "CopyTensor", 2, 1, 46, 2, 1, 22}, {38, 22, 3, 29, 1, 38}, {38, 
    22, 0, 18, 0, 41}, {38, 1, 0, 41, 0, 44}, {34, 1, 3, 15, 44, 15, 2, 46}, {
    38, 38, 3, 46, 1, 18}, {6, 11, 44}, {33, 18, 54}, {6, 11, 32}, {3, 4}, {
    37, 18, 32, 2, 29}, {12, 44, 29, 22}, {6, 22, 44}, {4, 32, 54, -3}, {10, 
    12, 22}, {13, 6, 22, 36}, {40, 60, 3, 0, 36, 3, 0, 22}, {16, 6, 22, 36}, {
    12, 44, 15, 32}, {38, 22, 0, 21, 0, 41}, {41, 263, 2, 0, 41, 3, 0, 10, 3, 
    0, 22}, {10, 21, 27}, {40, 60, 3, 0, 27, 3, 0, 30}, {16, 22, 30, 22}, {40,
     34, 3, 0, 22, 3, 0, 30}, {10, 25, 22}, {16, 22, 30, 22}, {40, 60, 3, 0, 
    22, 3, 0, 30}, {10, 32, 22}, {16, 22, 30, 22}, {16, 9, 22, 30}, {40, 34, 
    3, 0, 30, 3, 0, 22}, {19, 22, 30}, {40, 34, 3, 0, 30, 3, 0, 22}, {10, 12, 
    30}, {40, 34, 3, 0, 30, 3, 0, 27}, {19, 27, 30}, {13, 22, 30, 22}, {10, 
    21, 30}, {16, 30, 36, 22, 30}, {38, 22, 3, 29, 1, 46}, {45, 46, 0, 46}, {
    41, 263, 3, 1, 40, 2, 1, 46, 3, 1, 28}, {38, 22, 0, 18, 0, 54}, {38, 1, 0,
     54, 0, 32}, {34, 1, 3, 15, 32, 15, 2, 46}, {38, 28, 3, 46, 1, 18}, {7, 
    21, 22}, {33, 18, 41}, {6, 11, 17}, {3, 4}, {37, 18, 17, 3, 36}, {16, 22, 
    36, 27}, {7, 27, 22}, {4, 17, 41, -3}, {19, 2, 27}, {7, 27, 24}, {38, 22, 
    0, 18, 0, 17}, {6, 17, 33}, {10, 21, 27}, {40, 60, 3, 0, 27, 3, 0, 36}, {
    7, 36, 11}, {16, 24, 11, 36}, {7, 36, 18}, {40, 34, 3, 0, 18, 3, 0, 36}, {
    7, 36, 8}, {38, 4, 0, 33, 0, 36}, {13, 30, 14, 27}, {16, 24, 27, 38}, {40,
     10, 3, 0, 38, 3, 0, 27}, {10, 12, 38}, {13, 27, 38, 27}, {16, 3, 8, 27, 
    38}, {19, 38, 27}, {40, 34, 3, 0, 27, 3, 0, 38}, {16, 36, 38, 36}, {38, 5,
     0, 33, 0, 38}, {13, 30, 17, 27}, {16, 24, 27, 12}, {40, 10, 3, 0, 12, 3, 
    0, 27}, {10, 12, 12}, {13, 27, 12, 27}, {16, 3, 8, 27, 12}, {19, 12, 
    27}, {40, 34, 3, 0, 27, 3, 0, 12}, {16, 38, 12, 38}, {38, 6, 0, 33, 0, 
    12}, {13, 30, 19, 27}, {16, 24, 27, 16}, {40, 10, 3, 0, 16, 3, 0, 27}, {
    10, 12, 16}, {13, 27, 16, 27}, {16, 3, 8, 27, 16}, {19, 16, 27}, {40, 34, 
    3, 0, 27, 3, 0, 16}, {16, 12, 16, 12}, {34, 1, 3, 36, 38, 12, 3, 38}, {38,
     33, 0, 33, 0, 36}, {16, 36, 22, 36}, {34, 1, 1, 36, 3, 18}, {
    42, "Join", 3, 1, 38, 3, 1, 18, 3, 1, 28}, {
    42, "Accumulate", 3, 1, 28, 2, 0, 26, 3, 1, 38}, {38, 38, 0, 12, 0, 36}, {
    40, 60, 3, 0, 36, 3, 0, 38}, {41, 259, 3, 0, 38, 3, 1, 28, 3, 1, 18}, {38,
     22, 0, 21, 0, 17}, {18, 17, 32}, {12, 6, 32, 17}, {38, 22, 0, 12, 0, 
    32}, {18, 32, 54}, {12, 5, 54, 32}, {38, 22, 3, 30, 1, 46}, {
    42, "TotalAll", 2, 1, 46, 2, 0, 26, 2, 0, 54}, {18, 54, 41}, {12, 45, 41, 
    54}, {12, 17, 32, 54, 41}, {34, 1, 3, 54, 32, 17, 2, 46}, {10, 41, 38}, {
    40, 60, 3, 0, 38, 3, 0, 12}, {41, 259, 3, 0, 12, 2, 1, 46, 3, 1, 27}, {
    42, "Drop", 3, 1, 13, 2, 0, 11, 2, 0, 12, 3, 1, 46}, {
    42, "Bag", 2, 0, 18, 3, 0, 12}, {
    42, "StuffBag", 3, 0, 12, 3, 1, 46, 6, 0, 17}, {
    42, "Drop", 3, 1, 13, 2, 0, 11, 2, 0, 12, 3, 1, 46}, {
    42, "Bag", 2, 0, 18, 3, 0, 38}, {
    42, "StuffBag", 3, 0, 38, 3, 1, 46, 6, 0, 17}, {
    42, "Drop", 3, 1, 13, 2, 0, 11, 2, 0, 12, 3, 1, 46}, {
    42, "Bag", 2, 0, 18, 3, 0, 16}, {
    42, "StuffBag", 3, 0, 16, 3, 1, 46, 6, 0, 17}, {
    42, "Drop", 3, 1, 13, 2, 0, 11, 2, 0, 12, 3, 1, 46}, {
    42, "Bag", 2, 0, 18, 3, 0, 27}, {
    42, "StuffBag", 3, 0, 27, 3, 1, 46, 6, 0, 17}, {
    42, "Drop", 3, 1, 13, 2, 0, 11, 2, 0, 12, 3, 1, 46}, {
    42, "Bag", 2, 0, 18, 3, 0, 41}, {
    42, "StuffBag", 3, 0, 41, 3, 1, 46, 6, 0, 17}, {
    42, "Drop", 3, 1, 13, 2, 0, 11, 2, 0, 12, 3, 1, 46}, {
    42, "Bag", 2, 0, 18, 3, 0, 15}, {
    42, "StuffBag", 3, 0, 15, 3, 1, 46, 6, 0, 17}, {
    42, "StuffBag", 3, 0, 12, 3, 2, 34, 6, 0, 17}, {
    42, "CoerceTensor", 2, 0, 18, 2, 2, 32, 3, 2, 46}, {
    42, "StuffBag", 3, 0, 38, 3, 2, 46, 6, 0, 17}, {
    42, "StuffBag", 3, 0, 16, 3, 1, 18, 6, 0, 17}, {
    42, "StuffBag", 3, 0, 27, 3, 1, 27, 6, 0, 17}, {10, 42, 37}, {
    42, "StuffBagScalar", 3, 0, 41, 3, 0, 37, 6, 0, 17}, {
    42, "StuffBagScalar", 3, 0, 15, 3, 0, 7, 6, 0, 17}, {38, 34, 0, 15, 0, 12,
     0, 37}, {10, 8, 40}, {27, 3, 4, 37, 40, 2}, {2, 2, 9}, {25, 24, 7, 1}, {
    2, 1, 4}, {25, 11, 42, 4}, {5, 4, 3}, {3, 2}, {5, 0, 3}, {5, 3, 1}, {3, 
    2}, {5, 0, 1}, {2, 1, 982}, {12, 24, 15, 22}, {6, 22, 24}, {38, 34, 0, 15,
     0, 12, 0, 37}, {7, 37, 7}, {
    42, "Accumulate", 3, 1, 18, 2, 0, 26, 3, 1, 46}, {10, 11, 37}, {10, 15, 
    40}, {42, "RandomReal", 3, 0, 37, 3, 0, 40, 3, 0, 25}, {38, 46, 0, 15, 0, 
    37}, {27, 3, 4, 25, 37, 2}, {2, 2, 325}, {
    42, "CopyTensor", 3, 1, 10, 3, 1, 51}, {
    42, "CopyTensor", 3, 1, 10, 3, 1, 50}, {
    42, "CopyTensor", 2, 1, 15, 2, 1, 47}, {38, 22, 0, 15, 0, 46}, {38, 22, 0,
     21, 0, 47}, {38, 22, 0, 18, 0, 22}, {34, 1, 3, 46, 47, 22, 2, 48}, {12, 
    27, 4, 12, 46}, {34, 1, 3, 27, 46, 15, 2, 25}, {38, 22, 3, 25, 1, 54}, {
    34, 1, 1, 7, 3, 25}, {42, "CoerceTensor", 2, 0, 18, 2, 1, 48, 3, 1, 39}, {
    42, "CoerceTensor", 2, 0, 18, 2, 1, 54, 3, 1, 49}, {
    42, "Join", 3, 1, 39, 3, 1, 49, 3, 1, 25, 3, 1, 52}, {41, 259, 3, 0, 21, 
    3, 1, 52, 3, 1, 48}, {42, "CopyTensor", 3, 1, 48, 3, 1, 50}, {6, 11, 
    48}, {6, 11, 20}, {6, 11, 40}, {42, "CopyTensor", 2, 1, 15, 2, 1, 48}, {6,
     11, 51}, {6, 11, 22}, {42, "CopyTensor", 2, 1, 23, 2, 1, 49}, {38, 22, 0,
     21, 0, 52}, {18, 52, 57}, {12, 6, 57, 52}, {6, 52, 48}, {12, 27, 4, 12, 
    52}, {34, 1, 3, 27, 52, 15, 2, 54}, {38, 22, 3, 54, 1, 52}, {
    42, "TotalAll", 2, 1, 52, 2, 0, 26, 2, 0, 52}, {18, 52, 57}, {12, 5, 45, 
    57, 48, 52}, {6, 52, 20}, {42, "MinI", 2, 0, 15, 2, 0, 20, 2, 0, 52}, {
    42, "RandomInteger", 2, 0, 52, 2, 0, 20, 2, 0, 57}, {18, 48, 52}, {12, 57,
     52, 57}, {6, 57, 40}, {25, 11, 40, 3}, {2, 3, 56}, {6, 11, 29}, {6, 11, 
    53}, {6, 4, 47}, {6, 11, 56}, {35, 47, 2, 52}, {6, 11, 57}, {3, 2}, {36, 
    56, 57, 2, 52}, {4, 57, 47, -1}, {33, 52, 57}, {6, 11, 52}, {35, 57, 2, 
    54}, {6, 11, 50}, {3, 16}, {37, 52, 50, 2, 58}, {6, 58, 36}, {12, 27, 4, 
    12, 59}, {34, 1, 3, 27, 59, 15, 2, 25}, {38, 22, 3, 25, 1, 55}, {38, 55, 
    0, 36, 0, 59}, {38, 20, 0, 36, 0, 60}, {25, 59, 60, 4}, {2, 4, 5}, {12, 
    29, 15, 36}, {6, 36, 29}, {6, 50, 36}, {3, 2}, {6, 12, 36}, {36, 52, 36, 
    2, 54}, {4, 50, 57, -15}, {6, 29, 56}, {6, 11, 52}, {35, 56, 2, 55}, {6, 
    11, 47}, {3, 11}, {12, 53, 15, 36}, {6, 36, 53}, {37, 54, 53, 2, 36}, {24,
     36, 12, 4}, {2, 4, 4}, {12, 53, 15, 36}, {6, 36, 53}, {3, -5}, {37, 52, 
    53, 2, 36}, {36, 52, 36, 2, 55}, {4, 47, 56, -10}, {
    42, "CopyTensor", 2, 1, 55, 2, 1, 48}, {33, 48, 53}, {
    42, "MinI", 2, 0, 53, 2, 0, 40, 2, 0, 29}, {38, 48, 0, 29, 0, 53}, {6, 53,
     51}, {38, 49, 0, 51, 0, 53}, {12, 53, 15, 53}, {39, 49, 0, 51, 0, 53}, {
    3, 3}, {42, "RandomInteger", 2, 0, 15, 2, 0, 9, 2, 0, 29}, {6, 29, 22}, {
    42, "Drop", 2, 1, 49, 2, 0, 11, 2, 0, 12, 2, 1, 55}, {
    42, "TotalAll", 2, 1, 55, 2, 0, 26, 2, 0, 53}, {
    42, "MinI", 2, 0, 22, 2, 0, 48, 2, 0, 29}, {34, 1, 3, 53, 29, 11, 2, 
    55}, {42, "Join", 2, 1, 55, 2, 1, 49, 2, 1, 53}, {
    42, "CopyTensor", 2, 1, 53, 2, 1, 47}, {
    42, "CopyTensor", 2, 2, 32, 2, 2, 53}, {38, 47, 0, 15, 0, 22}, {34, 1, 2, 
    11, 22, 2, 39}, {33, 37, 40}, {6, 11, 20}, {35, 40, 2, 49}, {6, 11, 48}, {
    3, 14}, {38, 22, 0, 18, 0, 53}, {38, 22, 0, 15, 0, 29}, {37, 39, 48, 2, 
    58}, {12, 29, 15, 58, 29}, {38, 22, 0, 18, 0, 58}, {38, 22, 0, 15, 0, 
    52}, {37, 39, 48, 2, 36}, {12, 52, 15, 36, 52}, {38, 53, 0, 58, 0, 52, 0, 
    36}, {37, 37, 48, 2, 58}, {12, 36, 58, 36}, {39, 53, 0, 53, 0, 29, 0, 
    36}, {36, 20, 36, 2, 49}, {4, 48, 40, -13}, {38, 22, 0, 18, 0, 22}, {6, 
    22, 43}, {38, 35, 0, 43, 0, 22}, {38, 53, 0, 43, 1, 48}, {38, 7, 0, 43, 1,
     55}, {42, "CoerceTensor", 2, 0, 18, 2, 1, 48, 3, 1, 52}, {
    42, "DotVV", 3, 1, 52, 3, 1, 55, 2, 0, 26, 3, 0, 25}, {19, 25, 37}, {10, 
    22, 25}, {13, 25, 37, 25}, {10, 11, 37}, {27, 6, 4, 25, 37, 3}, {2, 3, 
    123}, {42, "CopyTensor", 2, 2, 53, 2, 2, 32}, {10, 11, 25}, {10, 15, 
    37}, {42, "RandomReal", 3, 0, 25, 3, 0, 37, 3, 0, 40}, {40, 35, 3, 0, 40, 
    3, 0, 25}, {19, 25, 40}, {40, 60, 3, 0, 36, 3, 0, 25}, {16, 40, 25, 40}, {
    34, 1, 1, 40, 3, 48}, {
    42, "CoerceTensor", 2, 0, 18, 2, 1, 12, 3, 1, 55}, {
    42, "CoerceTensor", 2, 0, 18, 2, 1, 23, 3, 1, 52}, {
    42, "Join", 3, 1, 55, 3, 1, 52, 3, 1, 48, 3, 1, 54}, {44, 50, 54, 48}, {
    42, "CopyTensor", 3, 1, 48, 3, 1, 51}, {10, 11, 40}, {10, 15, 25}, {
    42, "RandomReal", 3, 0, 40, 3, 0, 25, 3, 0, 37}, {40, 35, 3, 0, 37, 3, 0, 
    40}, {19, 40, 37}, {40, 60, 3, 0, 36, 3, 0, 40}, {16, 37, 40, 37}, {34, 1,
     1, 37, 3, 48}, {42, "CoerceTensor", 2, 0, 18, 2, 1, 47, 3, 1, 54}, {
    42, "Join", 3, 1, 54, 3, 1, 48, 3, 1, 55}, {44, 50, 55, 48}, {
    42, "CopyTensor", 3, 1, 48, 3, 1, 50}, {6, 15, 14}, {7, 21, 20}, {6, 21, 
    16}, {6, 42, 35}, {18, 16, 22}, {12, 35, 15, 22, 51}, {10, 51, 37}, {16, 
    37, 10, 37}, {7, 37, 20}, {10, 15, 37}, {27, 6, 4, 20, 37, 4}, {2, 4, 
    14}, {40, 53, 3, 0, 20, 2, 0, 51}, {12, 51, 16, 51}, {6, 51, 14}, {38, 34,
     0, 14, 0, 12, 0, 37}, {38, 51, 0, 12, 0, 40}, {27, 7, 4, 37, 40, 5}, {2, 
    5, 4}, {12, 14, 12, 51}, {6, 51, 35}, {3, 3}, {12, 14, 15, 51}, {6, 51, 
    16}, {3, -20}, {10, 11, 37}, {27, 4, 4, 20, 37, 4}, {2, 4, 4}, {12, 35, 
    15, 51}, {6, 51, 35}, {3, 8}, {38, 34, 0, 35, 0, 12, 0, 37}, {38, 51, 0, 
    12, 0, 40}, {27, 3, 4, 37, 40, 5}, {2, 5, 4}, {12, 35, 15, 51}, {6, 51, 
    35}, {3, 1}, {25, 21, 35, 4}, {2, 4, 8}, {12, 35, 49, 51}, {34, 1, 3, 15, 
    51, 15, 2, 48}, {12, 35, 12, 51}, {34, 1, 3, 21, 51, 15, 2, 55}, {38, 34, 
    3, 55, 2, 54}, {39, 34, 3, 48, 2, 54}, {3, 1}, {12, 35, 12, 51}, {39, 34, 
    0, 51, 1, 51}, {6, 15, 14}, {7, 21, 20}, {6, 15, 16}, {6, 42, 35}, {18, 
    16, 51}, {12, 35, 15, 51, 22}, {10, 22, 37}, {16, 37, 10, 37}, {7, 37, 
    20}, {10, 15, 37}, {27, 6, 4, 20, 37, 4}, {2, 4, 14}, {40, 53, 3, 0, 20, 
    2, 0, 22}, {12, 22, 16, 22}, {6, 22, 14}, {38, 34, 0, 14, 0, 12, 0, 37}, {
    38, 50, 0, 12, 0, 40}, {27, 7, 4, 37, 40, 5}, {2, 5, 4}, {12, 14, 12, 
    22}, {6, 22, 35}, {3, 3}, {12, 14, 15, 22}, {6, 22, 16}, {3, -20}, {10, 
    11, 37}, {27, 4, 4, 20, 37, 4}, {2, 4, 4}, {12, 35, 15, 22}, {6, 22, 
    35}, {3, 8}, {38, 34, 0, 35, 0, 12, 0, 37}, {38, 50, 0, 12, 0, 40}, {27, 
    3, 4, 37, 40, 5}, {2, 5, 4}, {12, 35, 15, 22}, {6, 22, 35}, {3, 1}, {12, 
    35, 15, 22}, {34, 1, 3, 22, 12, 15, 2, 48}, {34, 1, 3, 35, 49, 15, 2, 
    54}, {38, 34, 3, 54, 2, 55}, {39, 34, 3, 48, 2, 55}, {39, 34, 0, 35, 1, 
    50}, {12, 42, 15, 22}, {6, 22, 42}, {3, 63}, {10, 11, 37}, {10, 15, 40}, {
    42, "RandomReal", 3, 0, 37, 3, 0, 40, 3, 0, 25}, {40, 35, 3, 0, 25, 3, 0, 
    37}, {19, 37, 25}, {40, 60, 3, 0, 36, 3, 0, 37}, {16, 25, 37, 25}, {34, 1,
     1, 25, 3, 55}, {42, "CoerceTensor", 2, 0, 18, 2, 1, 12, 3, 1, 48}, {
    42, "CoerceTensor", 2, 0, 18, 2, 1, 23, 3, 1, 54}, {
    42, "Join", 3, 1, 48, 3, 1, 54, 3, 1, 55, 3, 1, 52}, {44, 50, 52, 55}, {
    42, "CopyTensor", 3, 1, 55, 3, 1, 51}, {6, 15, 14}, {7, 21, 20}, {6, 21, 
    16}, {6, 42, 35}, {18, 16, 22}, {12, 35, 15, 22, 51}, {10, 51, 25}, {16, 
    25, 10, 25}, {7, 25, 20}, {10, 15, 25}, {27, 6, 4, 20, 25, 4}, {2, 4, 
    14}, {40, 53, 3, 0, 20, 2, 0, 51}, {12, 51, 16, 51}, {6, 51, 14}, {38, 34,
     0, 14, 0, 12, 0, 25}, {38, 51, 0, 12, 0, 37}, {27, 7, 4, 25, 37, 5}, {2, 
    5, 4}, {12, 14, 12, 51}, {6, 51, 35}, {3, 3}, {12, 14, 15, 51}, {6, 51, 
    16}, {3, -20}, {10, 11, 25}, {27, 4, 4, 20, 25, 4}, {2, 4, 4}, {12, 35, 
    15, 51}, {6, 51, 35}, {3, 8}, {38, 34, 0, 35, 0, 12, 0, 25}, {38, 51, 0, 
    12, 0, 37}, {27, 3, 4, 25, 37, 5}, {2, 5, 4}, {12, 35, 15, 51}, {6, 51, 
    35}, {3, 1}, {25, 21, 35, 4}, {2, 4, 8}, {12, 35, 49, 51}, {34, 1, 3, 15, 
    51, 15, 2, 55}, {12, 35, 12, 51}, {34, 1, 3, 21, 51, 15, 2, 52}, {38, 34, 
    3, 52, 2, 48}, {39, 34, 3, 55, 2, 48}, {3, 1}, {12, 35, 12, 51}, {39, 34, 
    0, 51, 1, 51}, {3, 500}, {10, 11, 25}, {10, 15, 37}, {
    42, "RandomReal", 3, 0, 25, 3, 0, 37, 3, 0, 40}, {38, 46, 0, 21, 0, 25}, {
    27, 3, 4, 40, 25, 3}, {2, 3, 324}, {
    42, "CopyTensor", 3, 1, 10, 3, 1, 55}, {
    42, "CopyTensor", 3, 1, 10, 3, 1, 50}, {
    42, "CopyTensor", 2, 1, 15, 2, 1, 51}, {38, 22, 0, 15, 0, 20}, {38, 22, 0,
     21, 0, 46}, {38, 22, 0, 18, 0, 51}, {34, 1, 3, 20, 46, 51, 2, 48}, {12, 
    27, 4, 12, 20}, {34, 1, 3, 27, 20, 15, 2, 53}, {38, 22, 3, 53, 1, 47}, {
    34, 1, 1, 7, 3, 53}, {42, "CoerceTensor", 2, 0, 18, 2, 1, 48, 3, 1, 49}, {
    42, "CoerceTensor", 2, 0, 18, 2, 1, 47, 3, 1, 39}, {
    42, "Join", 3, 1, 49, 3, 1, 39, 3, 1, 53, 3, 1, 52}, {41, 259, 3, 0, 21, 
    3, 1, 52, 3, 1, 48}, {42, "CopyTensor", 3, 1, 48, 3, 1, 50}, {6, 11, 
    29}, {6, 11, 40}, {6, 11, 47}, {42, "CopyTensor", 2, 1, 15, 2, 1, 48}, {6,
     11, 50}, {6, 11, 20}, {42, "CopyTensor", 2, 1, 23, 2, 1, 39}, {38, 22, 0,
     21, 0, 57}, {18, 57, 48}, {12, 6, 48, 57}, {6, 57, 29}, {12, 27, 4, 12, 
    57}, {34, 1, 3, 27, 57, 15, 2, 47}, {38, 22, 3, 47, 1, 52}, {
    42, "TotalAll", 2, 1, 52, 2, 0, 26, 2, 0, 57}, {18, 57, 48}, {12, 5, 45, 
    48, 29, 57}, {6, 57, 40}, {42, "MinI", 2, 0, 15, 2, 0, 40, 2, 0, 57}, {
    42, "RandomInteger", 2, 0, 57, 2, 0, 40, 2, 0, 48}, {18, 29, 57}, {12, 48,
     57, 48}, {6, 48, 47}, {25, 11, 47, 4}, {2, 4, 56}, {6, 11, 22}, {6, 11, 
    58}, {6, 4, 51}, {6, 11, 56}, {35, 51, 2, 52}, {6, 11, 48}, {3, 2}, {36, 
    56, 48, 2, 52}, {4, 48, 51, -1}, {33, 52, 48}, {6, 11, 52}, {35, 48, 2, 
    47}, {6, 11, 57}, {3, 16}, {37, 52, 57, 2, 36}, {6, 36, 53}, {12, 27, 4, 
    12, 59}, {34, 1, 3, 27, 59, 15, 2, 53}, {38, 22, 3, 53, 1, 25}, {38, 25, 
    0, 53, 0, 59}, {38, 20, 0, 53, 0, 60}, {25, 59, 60, 5}, {2, 5, 5}, {12, 
    22, 15, 53}, {6, 53, 22}, {6, 57, 53}, {3, 2}, {6, 12, 53}, {36, 52, 53, 
    2, 47}, {4, 57, 48, -15}, {6, 22, 56}, {6, 11, 52}, {35, 56, 2, 25}, {6, 
    11, 51}, {3, 11}, {12, 58, 15, 53}, {6, 53, 58}, {37, 47, 58, 2, 53}, {24,
     53, 12, 5}, {2, 5, 4}, {12, 58, 15, 53}, {6, 53, 58}, {3, -5}, {37, 52, 
    58, 2, 53}, {36, 52, 53, 2, 25}, {4, 51, 56, -10}, {
    42, "CopyTensor", 2, 1, 25, 2, 1, 48}, {33, 48, 58}, {
    42, "MinI", 2, 0, 58, 2, 0, 47, 2, 0, 22}, {38, 48, 0, 22, 0, 58}, {6, 58,
     50}, {38, 39, 0, 50, 0, 58}, {12, 58, 15, 58}, {39, 39, 0, 50, 0, 58}, {
    3, 3}, {42, "RandomInteger", 2, 0, 15, 2, 0, 9, 2, 0, 22}, {6, 22, 20}, {
    42, "Drop", 2, 1, 39, 2, 0, 11, 2, 0, 12, 2, 1, 25}, {
    42, "TotalAll", 2, 1, 25, 2, 0, 26, 2, 0, 58}, {
    42, "MinI", 2, 0, 20, 2, 0, 29, 2, 0, 22}, {34, 1, 3, 58, 22, 11, 2, 
    25}, {42, "Join", 2, 1, 25, 2, 1, 39, 2, 1, 54}, {
    42, "CopyTensor", 2, 1, 54, 2, 1, 51}, {
    42, "CopyTensor", 2, 2, 32, 2, 2, 54}, {38, 51, 0, 15, 0, 20}, {34, 1, 2, 
    11, 20, 2, 49}, {33, 41, 47}, {6, 11, 40}, {35, 47, 2, 39}, {6, 11, 29}, {
    3, 14}, {38, 22, 0, 18, 0, 58}, {38, 22, 0, 15, 0, 22}, {37, 49, 29, 2, 
    36}, {12, 22, 15, 36, 22}, {38, 22, 0, 18, 0, 36}, {38, 22, 0, 15, 0, 
    52}, {37, 49, 29, 2, 53}, {12, 52, 15, 53, 52}, {38, 54, 0, 36, 0, 52, 0, 
    53}, {37, 41, 29, 2, 36}, {12, 53, 36, 53}, {39, 54, 0, 58, 0, 22, 0, 
    53}, {36, 40, 53, 2, 39}, {4, 29, 47, -13}, {38, 22, 0, 18, 0, 20}, {6, 
    20, 28}, {38, 35, 0, 28, 0, 20}, {38, 54, 0, 28, 1, 48}, {38, 7, 0, 28, 1,
     25}, {42, "CoerceTensor", 2, 0, 18, 2, 1, 48, 3, 1, 52}, {
    42, "DotVV", 3, 1, 52, 3, 1, 25, 2, 0, 26, 3, 0, 40}, {19, 40, 25}, {10, 
    20, 40}, {13, 40, 25, 40}, {10, 11, 25}, {27, 6, 4, 40, 25, 4}, {2, 4, 
    122}, {42, "CopyTensor", 2, 2, 54, 2, 2, 32}, {10, 11, 40}, {10, 15, 
    25}, {42, "RandomReal", 3, 0, 40, 3, 0, 25, 3, 0, 37}, {40, 35, 3, 0, 37, 
    3, 0, 40}, {19, 40, 37}, {40, 60, 3, 0, 36, 3, 0, 40}, {16, 37, 40, 37}, {
    34, 1, 1, 37, 3, 48}, {
    42, "CoerceTensor", 2, 0, 18, 2, 1, 51, 3, 1, 25}, {
    42, "Join", 3, 1, 25, 3, 1, 48, 3, 1, 52}, {44, 50, 52, 48}, {
    42, "CopyTensor", 3, 1, 48, 3, 1, 55}, {10, 11, 37}, {10, 15, 40}, {
    42, "RandomReal", 3, 0, 37, 3, 0, 40, 3, 0, 25}, {40, 35, 3, 0, 25, 3, 0, 
    37}, {19, 37, 25}, {40, 60, 3, 0, 36, 3, 0, 37}, {16, 25, 37, 25}, {34, 1,
     1, 25, 3, 48}, {42, "CoerceTensor", 2, 0, 18, 2, 1, 51, 3, 1, 52}, {
    42, "Join", 3, 1, 52, 3, 1, 48, 3, 1, 25}, {44, 50, 25, 48}, {
    42, "CopyTensor", 3, 1, 48, 3, 1, 50}, {6, 15, 14}, {7, 21, 20}, {6, 21, 
    16}, {6, 42, 35}, {18, 16, 20}, {12, 35, 15, 20, 50}, {10, 50, 25}, {16, 
    25, 10, 25}, {7, 25, 20}, {10, 15, 25}, {27, 6, 4, 20, 25, 5}, {2, 5, 
    14}, {40, 53, 3, 0, 20, 2, 0, 50}, {12, 50, 16, 50}, {6, 50, 14}, {38, 34,
     0, 14, 0, 12, 0, 25}, {38, 55, 0, 12, 0, 37}, {27, 7, 4, 25, 37, 6}, {2, 
    6, 4}, {12, 14, 12, 50}, {6, 50, 35}, {3, 3}, {12, 14, 15, 50}, {6, 50, 
    16}, {3, -20}, {10, 11, 25}, {27, 4, 4, 20, 25, 5}, {2, 5, 4}, {12, 35, 
    15, 50}, {6, 50, 35}, {3, 8}, {38, 34, 0, 35, 0, 12, 0, 25}, {38, 55, 0, 
    12, 0, 37}, {27, 3, 4, 25, 37, 6}, {2, 6, 4}, {12, 35, 15, 50}, {6, 50, 
    35}, {3, 1}, {25, 21, 35, 5}, {2, 5, 8}, {12, 35, 49, 50}, {34, 1, 3, 15, 
    50, 15, 2, 48}, {12, 35, 12, 50}, {34, 1, 3, 21, 50, 15, 2, 25}, {38, 34, 
    3, 25, 2, 52}, {39, 34, 3, 48, 2, 52}, {3, 1}, {12, 35, 12, 50}, {39, 34, 
    0, 50, 1, 55}, {6, 15, 14}, {7, 21, 20}, {6, 15, 16}, {6, 42, 35}, {18, 
    16, 50}, {12, 35, 15, 50, 20}, {10, 20, 25}, {16, 25, 10, 25}, {7, 25, 
    20}, {10, 15, 25}, {27, 6, 4, 20, 25, 5}, {2, 5, 14}, {40, 53, 3, 0, 20, 
    2, 0, 20}, {12, 20, 16, 20}, {6, 20, 14}, {38, 34, 0, 14, 0, 12, 0, 25}, {
    38, 50, 0, 12, 0, 37}, {27, 7, 4, 25, 37, 6}, {2, 6, 4}, {12, 14, 12, 
    20}, {6, 20, 35}, {3, 3}, {12, 14, 15, 20}, {6, 20, 16}, {3, -20}, {10, 
    11, 25}, {27, 4, 4, 20, 25, 5}, {2, 5, 4}, {12, 35, 15, 20}, {6, 20, 
    35}, {3, 8}, {38, 34, 0, 35, 0, 12, 0, 25}, {38, 50, 0, 12, 0, 37}, {27, 
    3, 4, 25, 37, 6}, {2, 6, 4}, {12, 35, 15, 20}, {6, 20, 35}, {3, 1}, {12, 
    35, 15, 20}, {34, 1, 3, 20, 12, 15, 2, 48}, {34, 1, 3, 35, 49, 15, 2, 
    52}, {38, 34, 3, 52, 2, 25}, {39, 34, 3, 48, 2, 25}, {39, 34, 0, 35, 1, 
    50}, {12, 42, 15, 20}, {6, 20, 42}, {3, 63}, {10, 11, 25}, {10, 15, 37}, {
    42, "RandomReal", 3, 0, 25, 3, 0, 37, 3, 0, 40}, {40, 35, 3, 0, 40, 3, 0, 
    25}, {19, 25, 40}, {40, 60, 3, 0, 36, 3, 0, 25}, {16, 40, 25, 40}, {34, 1,
     1, 40, 3, 25}, {42, "CoerceTensor", 2, 0, 18, 2, 1, 12, 3, 1, 48}, {
    42, "CoerceTensor", 2, 0, 18, 2, 1, 23, 3, 1, 52}, {
    42, "Join", 3, 1, 48, 3, 1, 52, 3, 1, 25, 3, 1, 47}, {44, 50, 47, 25}, {
    42, "CopyTensor", 3, 1, 25, 3, 1, 55}, {6, 15, 14}, {7, 21, 20}, {6, 21, 
    16}, {6, 42, 35}, {18, 16, 20}, {12, 35, 15, 20, 50}, {10, 50, 40}, {16, 
    40, 10, 40}, {7, 40, 20}, {10, 15, 40}, {27, 6, 4, 20, 40, 5}, {2, 5, 
    14}, {40, 53, 3, 0, 20, 2, 0, 50}, {12, 50, 16, 50}, {6, 50, 14}, {38, 34,
     0, 14, 0, 12, 0, 40}, {38, 55, 0, 12, 0, 25}, {27, 7, 4, 40, 25, 6}, {2, 
    6, 4}, {12, 14, 12, 50}, {6, 50, 35}, {3, 3}, {12, 14, 15, 50}, {6, 50, 
    16}, {3, -20}, {10, 11, 40}, {27, 4, 4, 20, 40, 5}, {2, 5, 4}, {12, 35, 
    15, 50}, {6, 50, 35}, {3, 8}, {38, 34, 0, 35, 0, 12, 0, 40}, {38, 55, 0, 
    12, 0, 25}, {27, 3, 4, 40, 25, 6}, {2, 6, 4}, {12, 35, 15, 50}, {6, 50, 
    35}, {3, 1}, {25, 21, 35, 5}, {2, 5, 8}, {12, 35, 49, 50}, {34, 1, 3, 15, 
    50, 15, 2, 25}, {12, 35, 12, 50}, {34, 1, 3, 21, 50, 15, 2, 47}, {38, 34, 
    3, 47, 2, 48}, {39, 34, 3, 25, 2, 48}, {3, 1}, {12, 35, 12, 50}, {39, 34, 
    0, 50, 1, 55}, {3, 171}, {10, 11, 40}, {10, 15, 25}, {
    42, "RandomReal", 3, 0, 40, 3, 0, 25, 3, 0, 37}, {38, 46, 0, 18, 0, 40}, {
    27, 3, 4, 37, 40, 4}, {2, 4, 18}, {38, 22, 0, 18, 0, 50}, {38, 22, 0, 15, 
    0, 20}, {38, 15, 0, 15, 0, 46}, {12, 20, 15, 46, 20}, {38, 22, 0, 18, 0, 
    46}, {38, 22, 0, 15, 0, 40}, {38, 15, 0, 15, 0, 53}, {12, 40, 15, 53, 
    40}, {38, 32, 0, 46, 0, 40, 0, 53}, {38, 42, 0, 15, 0, 46}, {12, 53, 46, 
    53}, {39, 32, 0, 50, 0, 20, 0, 53}, {38, 34, 3, 44, 2, 54}, {39, 34, 3, 
    43, 2, 54}, {41, 258, 2, 0, 42, 2, 0, 15, 2, 0, 50}, {6, 50, 42}, {3, 
    148}, {42, "CopyTensor", 3, 1, 10, 3, 1, 54}, {5, 0, 5}, {38, 22, 0, 15, 
    0, 47}, {38, 22, 0, 21, 0, 40}, {38, 22, 0, 18, 0, 53}, {34, 1, 3, 47, 40,
     53, 2, 39}, {12, 27, 4, 12, 47}, {34, 1, 3, 27, 47, 15, 2, 49}, {38, 22, 
    3, 49, 1, 51}, {34, 1, 1, 7, 3, 49}, {
    42, "CoerceTensor", 2, 0, 18, 2, 1, 39, 3, 1, 50}, {
    42, "CoerceTensor", 2, 0, 18, 2, 1, 51, 3, 1, 55}, {
    42, "Join", 3, 1, 50, 3, 1, 55, 3, 1, 49, 3, 1, 25}, {41, 259, 3, 0, 21, 
    3, 1, 25, 3, 1, 39}, {42, "CopyTensor", 3, 1, 39, 3, 1, 54}, {
    42, "CopyTensor", 2, 2, 32, 2, 2, 39}, {38, 22, 0, 18, 0, 47}, {25, 47, 3,
     6}, {2, 6, 51}, {38, 22, 0, 18, 0, 47}, {38, 37, 0, 15, 0, 40}, {12, 47, 
    40, 47}, {38, 22, 0, 15, 0, 40}, {38, 16, 0, 15, 0, 53}, {12, 40, 15, 53, 
    40}, {38, 22, 0, 18, 0, 53}, {38, 37, 0, 15, 0, 50}, {12, 53, 50, 53}, {
    38, 22, 0, 15, 0, 50}, {38, 16, 0, 15, 0, 20}, {12, 50, 15, 20, 50}, {38, 
    39, 0, 53, 0, 50, 0, 20}, {38, 45, 0, 15, 0, 53}, {12, 20, 53, 20}, {39, 
    39, 0, 47, 0, 40, 0, 20}, {38, 22, 0, 18, 0, 47}, {38, 37, 0, 21, 0, 
    40}, {12, 47, 40, 47}, {38, 22, 0, 15, 0, 40}, {38, 16, 0, 21, 0, 53}, {
    12, 40, 15, 53, 40}, {38, 22, 0, 18, 0, 53}, {38, 37, 0, 21, 0, 50}, {12, 
    53, 50, 53}, {38, 22, 0, 15, 0, 50}, {38, 16, 0, 21, 0, 46}, {12, 50, 15, 
    46, 50}, {38, 39, 0, 53, 0, 50, 0, 46}, {38, 45, 0, 21, 0, 53}, {12, 46, 
    53, 46}, {39, 39, 0, 47, 0, 40, 0, 46}, {38, 22, 0, 18, 0, 47}, {6, 47, 
    39}, {38, 37, 0, 12, 0, 47}, {6, 47, 55}, {12, 39, 55, 47}, {6, 47, 31}, {
    38, 35, 0, 31, 0, 47}, {38, 39, 0, 31, 1, 25}, {38, 7, 0, 31, 1, 51}, {
    42, "CoerceTensor", 2, 0, 18, 2, 1, 25, 3, 1, 49}, {
    42, "DotVV", 3, 1, 49, 3, 1, 51, 2, 0, 26, 3, 0, 40}, {19, 40, 25}, {10, 
    47, 40}, {13, 40, 25, 40}, {10, 11, 25}, {27, 6, 4, 40, 25, 7}, {5, 7, 
    5}, {3, 1}, {2, 5, 16}, {42, "CopyTensor", 2, 2, 39, 2, 2, 32}, {10, 11, 
    40}, {10, 15, 25}, {42, "RandomReal", 3, 0, 40, 3, 0, 25, 3, 0, 37}, {40, 
    35, 3, 0, 37, 3, 0, 40}, {19, 40, 37}, {40, 60, 3, 0, 36, 3, 0, 40}, {16, 
    37, 40, 37}, {34, 1, 1, 37, 3, 25}, {
    42, "CoerceTensor", 2, 0, 18, 2, 1, 26, 3, 1, 51}, {
    42, "CoerceTensor", 2, 0, 18, 2, 1, 23, 3, 1, 49}, {
    42, "Join", 3, 1, 51, 3, 1, 49, 3, 1, 25, 3, 1, 50}, {44, 54, 50, 25}, {
    42, "CopyTensor", 3, 1, 25, 3, 1, 54}, {3, 14}, {10, 11, 37}, {10, 15, 
    40}, {42, "RandomReal", 3, 0, 37, 3, 0, 40, 3, 0, 25}, {40, 35, 3, 0, 25, 
    3, 0, 37}, {19, 37, 25}, {40, 60, 3, 0, 36, 3, 0, 37}, {16, 25, 37, 25}, {
    34, 1, 1, 25, 3, 25}, {
    42, "CoerceTensor", 2, 0, 18, 2, 1, 12, 3, 1, 50}, {
    42, "CoerceTensor", 2, 0, 18, 2, 1, 23, 3, 1, 51}, {
    42, "Join", 3, 1, 50, 3, 1, 51, 3, 1, 25, 3, 1, 49}, {44, 54, 49, 25}, {
    42, "CopyTensor", 3, 1, 25, 3, 1, 54}, {6, 15, 14}, {7, 21, 20}, {6, 21, 
    16}, {6, 42, 35}, {18, 16, 20}, {12, 35, 15, 20, 46}, {10, 46, 25}, {16, 
    25, 10, 25}, {7, 25, 20}, {10, 15, 25}, {27, 6, 4, 20, 25, 6}, {2, 6, 
    14}, {40, 53, 3, 0, 20, 2, 0, 46}, {12, 46, 16, 46}, {6, 46, 14}, {38, 34,
     0, 14, 0, 12, 0, 25}, {38, 54, 0, 12, 0, 37}, {27, 7, 4, 25, 37, 7}, {2, 
    7, 4}, {12, 14, 12, 46}, {6, 46, 35}, {3, 3}, {12, 14, 15, 46}, {6, 46, 
    16}, {3, -20}, {10, 11, 25}, {27, 4, 4, 20, 25, 6}, {2, 6, 4}, {12, 35, 
    15, 46}, {6, 46, 35}, {3, 8}, {38, 34, 0, 35, 0, 12, 0, 25}, {38, 54, 0, 
    12, 0, 37}, {27, 3, 4, 25, 37, 7}, {2, 7, 4}, {12, 35, 15, 46}, {6, 46, 
    35}, {3, 1}, {25, 21, 35, 6}, {2, 6, 8}, {12, 35, 49, 46}, {34, 1, 3, 15, 
    46, 15, 2, 49}, {12, 35, 12, 46}, {34, 1, 3, 21, 46, 15, 2, 50}, {38, 34, 
    3, 50, 2, 51}, {39, 34, 3, 49, 2, 51}, {3, 1}, {12, 35, 12, 46}, {39, 34, 
    0, 46, 1, 54}, {12, 27, 4, 12, 46}, {34, 1, 3, 15, 46, 15, 2, 46}, {38, 
    34, 0, 15, 3, 46, 1, 39}, {40, 53, 3, 1, 39, 2, 1, 46}, {
    42, "CopyTensor", 2, 1, 46, 2, 1, 22}, {12, 27, 4, 12, 40}, {34, 1, 3, 27,
     40, 15, 2, 25}, {38, 22, 3, 25, 1, 46}, {38, 22, 0, 18, 0, 40}, {38, 1, 
    0, 40, 0, 46}, {34, 1, 3, 15, 46, 15, 2, 25}, {38, 46, 3, 25, 1, 39}, {6, 
    11, 46}, {33, 39, 47}, {6, 11, 50}, {3, 4}, {37, 39, 50, 2, 53}, {12, 46, 
    53, 29}, {6, 29, 46}, {4, 50, 47, -3}, {6, 46, 44}, {10, 12, 25}, {13, 6, 
    25, 37}, {40, 60, 3, 0, 37, 3, 0, 25}, {16, 6, 25, 37}, {12, 44, 15, 
    46}, {38, 22, 0, 21, 0, 50}, {41, 263, 2, 0, 50, 3, 0, 10, 3, 0, 25}, {10,
     21, 40}, {40, 60, 3, 0, 40, 3, 0, 42}, {16, 25, 42, 25}, {40, 34, 3, 0, 
    25, 3, 0, 42}, {10, 25, 25}, {16, 25, 42, 25}, {40, 60, 3, 0, 25, 3, 0, 
    42}, {10, 46, 25}, {16, 25, 42, 25}, {16, 9, 25, 42}, {40, 34, 3, 0, 42, 
    3, 0, 25}, {19, 25, 42}, {40, 34, 3, 0, 42, 3, 0, 25}, {10, 12, 42}, {40, 
    34, 3, 0, 42, 3, 0, 40}, {19, 40, 42}, {13, 25, 42, 25}, {10, 21, 42}, {
    16, 42, 37, 25, 42}, {7, 42, 30}, {38, 22, 3, 29, 1, 25}, {45, 25, 0, 
    25}, {41, 263, 3, 1, 40, 2, 1, 25, 3, 1, 54}, {38, 22, 0, 18, 0, 20}, {38,
     1, 0, 20, 0, 46}, {34, 1, 3, 15, 46, 15, 2, 25}, {38, 54, 3, 25, 1, 
    39}, {7, 21, 37}, {33, 39, 50}, {6, 11, 40}, {3, 4}, {37, 39, 40, 3, 
    42}, {16, 37, 42, 25}, {7, 25, 37}, {4, 40, 50, -3}, {7, 37, 22}, {19, 2, 
    37}, {7, 37, 29}, {38, 22, 0, 18, 0, 40}, {6, 40, 13}, {10, 21, 37}, {40, 
    60, 3, 0, 37, 3, 0, 25}, {7, 25, 26}, {16, 29, 26, 25}, {7, 25, 31}, {40, 
    34, 3, 0, 31, 3, 0, 25}, {7, 25, 28}, {38, 4, 0, 13, 0, 25}, {13, 30, 14, 
    37}, {16, 29, 37, 42}, {40, 10, 3, 0, 42, 3, 0, 37}, {10, 12, 42}, {13, 
    37, 42, 37}, {16, 3, 28, 37, 42}, {19, 42, 37}, {40, 34, 3, 0, 37, 3, 0, 
    42}, {16, 25, 42, 25}, {38, 5, 0, 13, 0, 42}, {13, 30, 17, 37}, {16, 29, 
    37, 40}, {40, 10, 3, 0, 40, 3, 0, 37}, {10, 12, 40}, {13, 37, 40, 37}, {
    16, 3, 28, 37, 40}, {19, 40, 37}, {40, 34, 3, 0, 37, 3, 0, 40}, {16, 42, 
    40, 42}, {38, 6, 0, 13, 0, 40}, {13, 30, 19, 37}, {16, 29, 37, 39}, {40, 
    10, 3, 0, 39, 3, 0, 37}, {10, 12, 39}, {13, 37, 39, 37}, {16, 3, 28, 37, 
    39}, {19, 39, 37}, {40, 34, 3, 0, 37, 3, 0, 39}, {16, 40, 39, 40}, {34, 1,
     3, 25, 42, 40, 3, 46}, {38, 33, 0, 13, 0, 25}, {16, 25, 22, 25}, {34, 1, 
    1, 25, 3, 39}, {42, "Join", 3, 1, 46, 3, 1, 39, 3, 1, 54}, {
    42, "CopyTensor", 3, 1, 54, 3, 1, 28}, {
    42, "Accumulate", 3, 1, 28, 2, 0, 26, 3, 1, 54}, {
    42, "CopyTensor", 3, 1, 54, 3, 1, 38}, {38, 38, 0, 12, 0, 25}, {7, 25, 
    36}, {40, 60, 3, 0, 36, 3, 0, 25}, {41, 259, 3, 0, 25, 3, 1, 28, 3, 1, 
    54}, {42, "CopyTensor", 3, 1, 54, 3, 1, 18}, {38, 22, 0, 21, 0, 40}, {18, 
    40, 46}, {12, 6, 46, 40}, {6, 40, 17}, {38, 22, 0, 12, 0, 40}, {18, 40, 
    46}, {12, 5, 46, 40}, {6, 40, 32}, {38, 22, 3, 30, 1, 54}, {
    42, "TotalAll", 2, 1, 54, 2, 0, 26, 2, 0, 40}, {18, 40, 46}, {12, 45, 46, 
    40}, {6, 40, 54}, {12, 17, 32, 54, 40}, {6, 40, 41}, {34, 1, 3, 54, 32, 
    17, 2, 54}, {10, 41, 25}, {40, 60, 3, 0, 25, 3, 0, 42}, {41, 259, 3, 0, 
    42, 2, 1, 54, 3, 1, 46}, {42, "CopyTensor", 3, 1, 46, 3, 1, 27}, {
    42, "StuffBag", 3, 0, 12, 3, 2, 34, 6, 0, 17}, {
    42, "CoerceTensor", 2, 0, 18, 2, 2, 32, 3, 2, 46}, {
    42, "StuffBag", 3, 0, 38, 3, 2, 46, 6, 0, 17}, {
    42, "StuffBag", 3, 0, 16, 3, 1, 18, 6, 0, 17}, {
    42, "StuffBag", 3, 0, 27, 3, 1, 27, 6, 0, 17}, {10, 42, 42}, {
    42, "StuffBagScalar", 3, 0, 41, 3, 0, 42, 6, 0, 17}, {
    42, "StuffBagScalar", 3, 0, 15, 3, 0, 7, 6, 0, 17}, {3, -994}, {
    42, "BagPart", 3, 0, 38, 2, 0, 21, 3, 1, 46}, {
    42, "StuffBag", 3, 0, 12, 3, 1, 46, 6, 0, 17}, {
    42, "BagPart", 3, 0, 16, 2, 0, 21, 3, 1, 46}, {
    42, "StuffBag", 3, 0, 12, 3, 1, 46, 6, 0, 17}, {
    42, "BagPart", 3, 0, 27, 2, 0, 21, 3, 1, 46}, {
    42, "StuffBag", 3, 0, 12, 3, 1, 46, 6, 0, 17}, {
    42, "BagPart", 3, 0, 41, 2, 0, 21, 3, 1, 46}, {
    42, "StuffBag", 3, 0, 12, 3, 1, 46, 6, 0, 17}, {
    42, "BagPart", 3, 0, 15, 2, 0, 21, 3, 1, 46}, {
    42, "StuffBag", 3, 0, 12, 3, 1, 46, 6, 0, 17}, {10, 1, 42}, {
    42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {10, 4, 42}, {
    42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {12, 24, 15, 40}, {
    10, 40, 42}, {42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {
    42, "Dimensions", 3, 2, 34, 2, 1, 46}, {
    42, "CoerceTensor", 2, 0, 18, 2, 1, 46, 3, 1, 54}, {
    42, "StuffBag", 3, 0, 12, 3, 1, 54, 6, 0, 17}, {12, 24, 15, 40}, {10, 40, 
    42}, {42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {
    42, "Dimensions", 2, 2, 32, 2, 1, 46}, {
    42, "CoerceTensor", 2, 0, 18, 2, 1, 46, 3, 1, 54}, {
    42, "StuffBag", 3, 0, 12, 3, 1, 54, 6, 0, 17}, {12, 24, 15, 40}, {10, 40, 
    42}, {42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {
    42, "Dimensions", 3, 1, 18, 2, 1, 46}, {
    42, "CoerceTensor", 2, 0, 18, 2, 1, 46, 3, 1, 54}, {
    42, "StuffBag", 3, 0, 12, 3, 1, 54, 6, 0, 17}, {12, 24, 15, 40}, {10, 40, 
    42}, {42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {
    42, "Dimensions", 3, 1, 27, 2, 1, 46}, {
    42, "CoerceTensor", 2, 0, 18, 2, 1, 46, 3, 1, 54}, {
    42, "StuffBag", 3, 0, 12, 3, 1, 54, 6, 0, 17}, {12, 24, 15, 40}, {10, 40, 
    42}, {42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {12, 24, 15, 
    40}, {10, 40, 42}, {42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {
    34, 1, 1, 34, 0, 46}, {42, "Dimensions", 3, 3, 46, 2, 1, 54}, {33, 54, 
    40}, {10, 40, 42}, {42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {
    34, 1, 1, 32, 0, 54}, {42, "Dimensions", 2, 3, 54, 2, 1, 46}, {33, 46, 
    40}, {10, 40, 42}, {42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {
    34, 1, 1, 18, 0, 46}, {42, "Dimensions", 3, 2, 46, 2, 1, 54}, {33, 54, 
    40}, {10, 40, 42}, {42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {
    34, 1, 1, 27, 0, 54}, {42, "Dimensions", 3, 2, 54, 2, 1, 46}, {33, 46, 
    40}, {10, 40, 42}, {42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {
    34, 1, 1, 42, 2, 46}, {42, "Dimensions", 2, 1, 46, 2, 1, 54}, {33, 54, 
    40}, {10, 40, 42}, {42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {
    34, 1, 1, 7, 3, 54}, {42, "Dimensions", 3, 1, 54, 2, 1, 46}, {33, 46, 
    40}, {10, 40, 42}, {42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {
    10, 11, 42}, {42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {10, 
    11, 42}, {42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {10, 26, 
    42}, {42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {
    42, "BagPart", 3, 0, 12, 2, 0, 21, 3, 1, 46}, {1}}, 
   Function[{$CellContext`NtotE, $CellContext`Nmax, $CellContext`scegli, \
$CellContext`kmax, $CellContext`imax, $CellContext`maxsemidrivermut, \
$CellContext`maxnondrivermut, $CellContext`signature, \
$CellContext`compkeystep, $CellContext`expG, $CellContext`cntG, \
$CellContext`ctmax, $CellContext`tmax, $CellContext`maxmjump, \
$CellContext`maxtjump, $CellContext`Aasym, $CellContext`Asym, \
$CellContext`Aapop, $CellContext`Apass, $CellContext`cen, $CellContext`wide, \
$CellContext`slope, $CellContext`ratio}, 
    Block[{
     Compile`$35, Compile`$36, Compile`$37, Compile`$38, Compile`$88, 
      Compile`$89, Compile`$90, Compile`$91, Compile`$92, Compile`$93, 
      Compile`$94, Compile`$137, Compile`$135, Compile`$138, Compile`$139, 
      Compile`$140, Compile`$252, Compile`$392, Compile`$522, Compile`$523, 
      Compile`$524, Compile`$611, Compile`$609, Compile`$612, Compile`$613, 
      Compile`$614}, 
     Block[{$CellContext`Ntot, Empty = 
       0, $CellContext`Ncell = {{0}}, $CellContext`ord = {
        1}, $CellContext`times = {
        0.}, $CellContext`state = {{0, 0.}}, $CellContext`Ccell = {0, 0, 
        0}, $CellContext`t = 0., $CellContext`ct = 
       0, $CellContext`maxdrivermut, $CellContext`smv0, $CellContext`state0, \
$CellContext`sstate0, $CellContext`Cmut, $CellContext`genes, \
$CellContext`krates = {1.}, $CellContext`i = 0, $CellContext`m = 
       0, $CellContext`mv = {0, 0, 0, 0, 0}, $CellContext`p = 
       0.1, $CellContext`r = 
       0.1, $CellContext`mv0 = {0}, $CellContext`imkmv = {0}, $CellContext`in = 
       0, $CellContext`fn = 0, $CellContext`mid = 0, $CellContext`midr = 
       0., $CellContext`CT = 
       False, $CellContext`statetmp1, $CellContext`statetmp2, \
$CellContext`NewNcell, $CellContext`\[CapitalDelta]i = {0, 
        0}, $CellContext`\[CapitalDelta]Nc = {0, 
        0}, $CellContext`\[CapitalDelta]Nc2 = {0, 
        0}, $CellContext`\[CapitalDelta]k = {0, 
        0}, $CellContext`chooseiorm = {
        10}, $CellContext`ratescum, $CellContext`ratesn, \
$CellContext`stateslist, $CellContext`Ncslist, $CellContext`probslist, \
$CellContext`spprobslist, $CellContext`Ntslist, $CellContext`tslist, \
$CellContext`key, $CellContext`ss, $CellContext`keyg, $CellContext`rates, \
$CellContext`rcum1, $CellContext`nondriverspace, \
$CellContext`semidriverspace, $CellContext`driverspace, $CellContext`space, \
$CellContext`spaceprob}, $CellContext`maxdrivermut = $CellContext`imax - 
        1; $CellContext`mv0 = 
       Table[0, {$CellContext`i, $CellContext`imax}]; $CellContext`state0 = 
       Table[0, {$CellContext`i, $CellContext`imax + 3}]; $CellContext`Cmut = 
       Join[
         Table[
         1, {$CellContext`i, $CellContext`maxdrivermut}], \
{$CellContext`maxsemidrivermut}]; $CellContext`genes = \
$CellContext`expG/$CellContext`cntG; $CellContext`krates = $CellContext`Apass 
        Join[
          Table[1, {$CellContext`i, $CellContext`kmax - 1}], {
          0}]; $CellContext`Ntot = $CellContext`NtotE; 
      Empty = $CellContext`Nmax - $CellContext`Ntot - $CellContext`scegli; \
$CellContext`Ncell = Join[{{$CellContext`Ntot, 0, 0, 0, 0}}, 
         Table[$CellContext`mv0, {$CellContext`l, 1, $CellContext`kmax - 
           1}]]; $CellContext`state = 
       Block[{$CellContext`m = 0, $CellContext`k = 
          1, $CellContext`mv = $CellContext`mv0, $CellContext`s = 
          0., $CellContext`rnn = {0.}}, $CellContext`s = 
          2 (E/(E - 1)) (Exp[-Exp[(-10.) ((Apply[Plus, 
                    Part[$CellContext`mv, 
                    Span[1, 
                    Part[$CellContext`compkeystep, $CellContext`k]]]] + 1)/(
                 10 Exp[$CellContext`m^0.5/2]))]] - 1/E); $CellContext`rnn = (
           Compile`$35 = -$CellContext`wide; Compile`$36 = 2^(-1); 
           Compile`$37 = Compile`$35 Compile`$36; Compile`$38 = E^Compile`$37; 
           Accumulate[
             Join[{
              Part[$CellContext`Aasym, $CellContext`k] 
               Exp[-($CellContext`slope 
                  Compile`$38 (Cosh[Compile`$35 ($CellContext`s - 2.)] - 1))],
                Part[$CellContext`Asym, $CellContext`k] 
               Exp[-($CellContext`slope 
                  Compile`$38 (Cosh[Compile`$35 ($CellContext`s - 1.)] - 1))],
                Part[$CellContext`Aapop, $CellContext`k] 
               Exp[-($CellContext`slope 
                  Compile`$38 (Cosh[Compile`$35 ($CellContext`s - 0.5)] - 
                   1))]}, {
              Part[$CellContext`krates, $CellContext`k] Apply[Times, 
                 
                 Part[$CellContext`genes^($CellContext`mv \
$CellContext`signature), 
                  Span[1, 
                   Part[$CellContext`compkeystep, $CellContext`k]]]]}]]); Join[
           Table[
           1. Join[{0, 0, 1}, $CellContext`mv0], {$CellContext`k, 
             1, $CellContext`Nmax + 2}], (-Log[
               RandomReal[{0, 1}, {$CellContext`Nmax + 2, 1}]])/
            Part[$CellContext`rnn, -1] + $CellContext`t, 
           2]]; $CellContext`Ccell = (Compile`$88 = -$CellContext`Ntot; 
        Compile`$89 = -Empty; 
        Compile`$90 = $CellContext`Nmax + Compile`$88 + Compile`$89; 
        Compile`$91 = 2^(-1); Compile`$92 = Compile`$90 Compile`$91; 
        Compile`$93 = Floor[Compile`$92]; 
        Compile`$94 = Max[0, Compile`$93]; {
          Floor[$CellContext`Ntot + Empty], Compile`$94, 
          Compile`$94}); $CellContext`times = Part[
         Transpose[$CellContext`state], -1]; $CellContext`ord = 
       Ordering[$CellContext`times]; $CellContext`state = 
       Part[$CellContext`state, $CellContext`ord]; $CellContext`imkmv = 
       IntegerPart[
         Part[$CellContext`state, 1, 
          Span[1, 4 + $CellContext`imax - 1]]]; $CellContext`key = Apply[Plus, 
         Part[
          Part[$CellContext`imkmv, 
           Span[4, -1]], 
          Span[1, 
           Part[$CellContext`compkeystep, 
            Part[$CellContext`imkmv, 3]]]]]; $CellContext`ss = 
       2 (E/(E - 1)) (
         Exp[-Exp[(-10.) (($CellContext`key + 1)/(10 
              Exp[Part[$CellContext`imkmv, 2]^0.5/2]))]] - 1/
         E); $CellContext`keyg = Apply[Times, 
         Part[$CellContext`genes^(Part[$CellContext`imkmv, 
             Span[4, -1]] $CellContext`signature), 
          Span[1, 
           Part[$CellContext`compkeystep, 
            Part[$CellContext`imkmv, 3]]]]]; $CellContext`rates = (
        Compile`$137 = -$CellContext`wide; 
        Compile`$135 = Part[$CellContext`imkmv, 3]; Compile`$138 = 2^(-1); 
        Compile`$139 = Compile`$137 Compile`$138; 
        Compile`$140 = E^Compile`$139; 
        Join[{Part[$CellContext`Aasym, Compile`$135] 
           Exp[-($CellContext`slope 
              Compile`$140 (Cosh[Compile`$137 ($CellContext`ss - 2.)] - 1))], 
           Part[$CellContext`Asym, Compile`$135] 
           Exp[-($CellContext`slope 
              Compile`$140 (Cosh[Compile`$137 ($CellContext`ss - 1.)] - 1))], 
           Part[$CellContext`Aapop, Compile`$135] 
           Exp[-($CellContext`slope 
              Compile`$140 (Cosh[Compile`$137 ($CellContext`ss - 0.5)] - 
               1))]}, {
          Part[$CellContext`krates, 
             Compile`$135] $CellContext`keyg}]); $CellContext`ratescum = 
       Accumulate[$CellContext`rates]; $CellContext`rcum1 = 
       Part[$CellContext`ratescum, -1]; $CellContext`ratesn = \
$CellContext`rates/$CellContext`rcum1; $CellContext`nondriverspace = \
$CellContext`maxnondrivermut - 
        Part[$CellContext`imkmv, 
         2]; $CellContext`semidriverspace = $CellContext`maxsemidrivermut - 
        Part[$CellContext`imkmv, -1]; $CellContext`driverspace = \
$CellContext`maxdrivermut - Total[
         Part[$CellContext`imkmv, 
          Span[
          4, -2]]]; $CellContext`space = $CellContext`nondriverspace + \
$CellContext`semidriverspace + $CellContext`driverspace; \
$CellContext`spaceprob = {$CellContext`driverspace, \
$CellContext`semidriverspace, $CellContext`nondriverspace}/$CellContext`space; \
$CellContext`stateslist = Internal`Bag[
         Most[{1.}]]; $CellContext`Ncslist = Internal`Bag[
         Most[{1.}]]; $CellContext`probslist = Internal`Bag[
         Most[{1.}]]; $CellContext`spprobslist = Internal`Bag[
         Most[{1.}]]; $CellContext`Ntslist = Internal`Bag[
         Most[{1.}]]; $CellContext`tslist = Internal`Bag[
         Most[{1.}]]; 
      Internal`StuffBag[$CellContext`stateslist, $CellContext`state, 2]; 
      Internal`StuffBag[$CellContext`Ncslist, $CellContext`Ncell, 2]; 
      Internal`StuffBag[$CellContext`probslist, $CellContext`ratesn, 2]; 
      Internal`StuffBag[$CellContext`spprobslist, $CellContext`spaceprob, 2]; 
      Internal`StuffBag[$CellContext`Ntslist, $CellContext`Ntot]; 
      Internal`StuffBag[$CellContext`tslist, $CellContext`t]; While[
        And[
        Part[$CellContext`state, 
           1, -1] < $CellContext`tmax, $CellContext`ct < $CellContext`ctmax, \
$CellContext`Ntot > 0], 
        AddTo[$CellContext`ct, 1]; $CellContext`t = 
         Part[$CellContext`state, 1, -1]; 
        Block[{$CellContext`probc}, $CellContext`probc = 
           Accumulate[$CellContext`ratesn]; 
          Which[RandomReal[{0, 1}] < Part[$CellContext`probc, 1], 
            
            Block[{$CellContext`statetmp1 = {0.}, $CellContext`statetmp2 = {
               0.}, $CellContext`chooseiorm = {
               0}, $CellContext`\[CapitalDelta]i, \
$CellContext`\[CapitalDelta]Nc, $CellContext`NewNcell, $CellContext`CT}, \
$CellContext`statetmp2 = 1. Join[{
                  Part[$CellContext`imkmv, 1], 
                  Part[$CellContext`imkmv, 2], 
                  Part[$CellContext`imkmv, 3]}, 
                 Part[$CellContext`imkmv, 
                  Span[
                  4, 4 + $CellContext`imax - 
                   1]], {$CellContext`t}]; $CellContext`chooseiorm = 
              Block[{$CellContext`nondriverspace = 0, $CellContext`space = 
                 0, $CellContext`currentmut = 
                 0, $CellContext`range = {0}, $CellContext`mut = 
                 0, $CellContext`gm = 
                 0, $CellContext`dmv = $CellContext`mv0}, \
$CellContext`nondriverspace = $CellContext`maxnondrivermut - 
                  Part[$CellContext`imkmv, 
                   2]; $CellContext`space = $CellContext`maxsemidrivermut + \
$CellContext`maxdrivermut - Total[
                   Part[$CellContext`imkmv, 
                    Span[
                    4, 4 + $CellContext`imax - 
                    
                    1]]] + $CellContext`nondriverspace; \
$CellContext`currentmut = RandomInteger[{
                    Min[
                    1, $CellContext`space], $CellContext`space}] - \
$CellContext`nondriverspace; 
                If[$CellContext`currentmut > 0, $CellContext`range = Select[
                    Range[$CellContext`imax], Part[
                    Part[$CellContext`imkmv, 
                    Span[4, 4 + $CellContext`imax - 1]], #] < 
                    Part[$CellContext`Cmut, #]& ]; $CellContext`mut = 
                   Part[$CellContext`range, 
                    Min[
                    Length[$CellContext`range], $CellContext`currentmut]]; 
                  AddTo[
                    Part[$CellContext`dmv, $CellContext`mut], 
                    1], $CellContext`gm = IntegerPart[
                    RandomInteger[{1, $CellContext`maxmjump}]]]; Join[{
                   Total[
                    Most[$CellContext`dmv]], 
                   Min[$CellContext`gm, $CellContext`nondriverspace], 
                   0}, $CellContext`dmv]]; $CellContext`NewNcell = \
$CellContext`Ncell; $CellContext`\[CapitalDelta]i = {0, 
                
                First[$CellContext`chooseiorm]}; \
$CellContext`\[CapitalDelta]Nc = {0, 1}; 
             MapThread[(Part[$CellContext`NewNcell, 
                 Part[$CellContext`imkmv, 3], Part[$CellContext`imkmv, 1] + 
                 1 + #] = Part[$CellContext`NewNcell, 
                  Part[$CellContext`imkmv, 3], Part[$CellContext`imkmv, 1] + 
                  1 + #] + #2)& , {$CellContext`\[CapitalDelta]i, \
$CellContext`\[CapitalDelta]Nc}]; $CellContext`CT = (
               Compile`$252 = Part[$CellContext`imkmv, 3]; 
               Part[$CellContext`Ccell, Compile`$252] - Dot[
                  Part[$CellContext`NewNcell, Compile`$252], 
                  Part[$CellContext`ratio, Compile`$252]] >= 0); 
             If[$CellContext`CT, $CellContext`Ncell = $CellContext`NewNcell; \
$CellContext`statetmp1 = $CellContext`statetmp2 + 
                 Join[{0, 0, 0}, $CellContext`mv0, {(-Log[
                    
                    RandomReal[{0, 
                    1}]])/$CellContext`rcum1}]; $CellContext`statetmp2 = \
$CellContext`statetmp2 + Join[$CellContext`chooseiorm, {(-Log[
                    
                    RandomReal[{0, 
                    1}]])/$CellContext`rcum1}]; ($CellContext`mid = 
                 1; $CellContext`midr = 1.; $CellContext`in = 
                 2; $CellContext`fn = $CellContext`Ntot; 
                While[$CellContext`midr = ($CellContext`fn + 
                    1 - $CellContext`in) 0.5; $CellContext`midr >= 
                   1, $CellContext`mid = 
                   IntegerPart[$CellContext`midr] + $CellContext`in; 
                  If[Part[$CellContext`state, $CellContext`mid, -1] > 
                    Part[$CellContext`statetmp1, -1], $CellContext`fn = \
$CellContext`mid - 1, $CellContext`in = $CellContext`mid + 1]]; 
                If[$CellContext`midr <= 0, 
                  AddTo[$CellContext`fn, 1], 
                  If[
                  Part[$CellContext`state, $CellContext`fn, -1] < 
                   Part[$CellContext`statetmp1, -1], 
                   AddTo[$CellContext`fn, 1]]]; (
                 If[$CellContext`fn > 2, Part[$CellContext`state, 
                    Span[1, $CellContext`fn - 2]] = Part[$CellContext`state, 
                    Span[2, $CellContext`fn - 1]]]; 
                 Part[$CellContext`state, $CellContext`fn - 
                    1] = $CellContext`statetmp1)); ($CellContext`mid = 
                 1; $CellContext`midr = 1.; $CellContext`in = 
                 1; $CellContext`fn = $CellContext`Ntot; 
                While[$CellContext`midr = ($CellContext`fn + 
                    1 - $CellContext`in) 0.5; $CellContext`midr >= 
                   1, $CellContext`mid = 
                   IntegerPart[$CellContext`midr] + $CellContext`in; 
                  If[Part[$CellContext`state, $CellContext`mid, -1] > 
                    Part[$CellContext`statetmp2, -1], $CellContext`fn = \
$CellContext`mid - 1, $CellContext`in = $CellContext`mid + 1]]; 
                If[$CellContext`midr <= 0, 
                  AddTo[$CellContext`fn, 1], 
                  If[
                  Part[$CellContext`state, $CellContext`fn, -1] < 
                   Part[$CellContext`statetmp2, -1], 
                   AddTo[$CellContext`fn, 1]]]; (Part[$CellContext`state, 
                    Span[$CellContext`fn + 1, -1]] = 
                  Part[$CellContext`state, 
                    Span[$CellContext`fn, -2]]; 
                 Part[$CellContext`state, $CellContext`fn] = \
$CellContext`statetmp2)); AddTo[$CellContext`Ntot, 1]; 
               Null, $CellContext`statetmp1 = $CellContext`statetmp2 + 
                 Join[{0, 0, 0}, $CellContext`mv0, {(-Log[
                    
                    RandomReal[{0, 
                    1}]])/$CellContext`rcum1}]; ($CellContext`mid = 
                 1; $CellContext`midr = 1.; $CellContext`in = 
                 2; $CellContext`fn = $CellContext`Ntot; 
                While[$CellContext`midr = ($CellContext`fn + 
                    1 - $CellContext`in) 0.5; $CellContext`midr >= 
                   1, $CellContext`mid = 
                   IntegerPart[$CellContext`midr] + $CellContext`in; 
                  If[Part[$CellContext`state, $CellContext`mid, -1] > 
                    Part[$CellContext`statetmp1, -1], $CellContext`fn = \
$CellContext`mid - 1, $CellContext`in = $CellContext`mid + 1]]; 
                If[$CellContext`midr <= 0, 
                  AddTo[$CellContext`fn, 1], 
                  If[
                  Part[$CellContext`state, $CellContext`fn, -1] < 
                   Part[$CellContext`statetmp1, -1], 
                   AddTo[$CellContext`fn, 1]]]; (
                 If[$CellContext`fn > 2, Part[$CellContext`state, 
                    Span[1, $CellContext`fn - 2]] = Part[$CellContext`state, 
                    Span[2, $CellContext`fn - 1]]]; 
                 Part[$CellContext`state, $CellContext`fn - 
                    1] = $CellContext`statetmp1)); Null]; Null], 
            RandomReal[{0, 1}] < Part[$CellContext`probc, 2], 
            
            Block[{$CellContext`statetmp1 = {0.}, $CellContext`statetmp2 = {
               0.}, $CellContext`chooseiorm = {
               0}, $CellContext`\[CapitalDelta]i, \
$CellContext`\[CapitalDelta]Nc, $CellContext`NewNcell, $CellContext`CT}, \
$CellContext`statetmp2 = 1. Join[{
                  Part[$CellContext`imkmv, 1], 
                  Part[$CellContext`imkmv, 2], 
                  Part[$CellContext`imkmv, 3]}, 
                 Part[$CellContext`imkmv, 
                  Span[
                  4, 4 + $CellContext`imax - 
                   1]], {$CellContext`t}]; $CellContext`chooseiorm = 
              Block[{$CellContext`nondriverspace = 0, $CellContext`space = 
                 0, $CellContext`currentmut = 
                 0, $CellContext`range = {0}, $CellContext`mut = 
                 0, $CellContext`gm = 
                 0, $CellContext`dmv = $CellContext`mv0}, \
$CellContext`nondriverspace = $CellContext`maxnondrivermut - 
                  Part[$CellContext`imkmv, 
                   2]; $CellContext`space = $CellContext`maxsemidrivermut + \
$CellContext`maxdrivermut - Total[
                   Part[$CellContext`imkmv, 
                    Span[
                    4, 4 + $CellContext`imax - 
                    1]]] + $CellContext`nondriverspace; \
$CellContext`currentmut = RandomInteger[{
                    Min[
                    1, $CellContext`space], $CellContext`space}] - \
$CellContext`nondriverspace; 
                If[$CellContext`currentmut > 0, $CellContext`range = Select[
                    Range[$CellContext`imax], Part[
                    Part[$CellContext`imkmv, 
                    Span[4, 4 + $CellContext`imax - 1]], #] < 
                    Part[$CellContext`Cmut, #]& ]; $CellContext`mut = 
                   Part[$CellContext`range, 
                    Min[
                    Length[$CellContext`range], $CellContext`currentmut]]; 
                  AddTo[
                    Part[$CellContext`dmv, $CellContext`mut], 
                    1], $CellContext`gm = IntegerPart[
                    RandomInteger[{1, $CellContext`maxmjump}]]]; Join[{
                   Total[
                    Most[$CellContext`dmv]], 
                   Min[$CellContext`gm, $CellContext`nondriverspace], 
                   0}, $CellContext`dmv]]; $CellContext`NewNcell = \
$CellContext`Ncell; $CellContext`\[CapitalDelta]i = {0, 
                
                First[$CellContext`chooseiorm]}; \
$CellContext`\[CapitalDelta]Nc = {-1, 2}; 
             MapThread[(Part[$CellContext`NewNcell, 
                 Part[$CellContext`imkmv, 3], Part[$CellContext`imkmv, 1] + 
                 1 + #] = Part[$CellContext`NewNcell, 
                  Part[$CellContext`imkmv, 3], Part[$CellContext`imkmv, 1] + 
                  1 + #] + #2)& , {$CellContext`\[CapitalDelta]i, \
$CellContext`\[CapitalDelta]Nc}]; $CellContext`CT = (
               Compile`$392 = Part[$CellContext`imkmv, 3]; 
               Part[$CellContext`Ccell, Compile`$392] - Dot[
                  Part[$CellContext`NewNcell, Compile`$392], 
                  Part[$CellContext`ratio, Compile`$392]] >= 0); 
             If[$CellContext`CT, $CellContext`Ncell = $CellContext`NewNcell; \
$CellContext`statetmp1 = $CellContext`statetmp2 + 
                 Join[$CellContext`chooseiorm, {(-Log[
                    
                    RandomReal[{0, 
                    1}]])/$CellContext`rcum1}]; $CellContext`statetmp2 = \
$CellContext`statetmp2 + Join[$CellContext`chooseiorm, {(-Log[
                    
                    RandomReal[{0, 
                    1}]])/$CellContext`rcum1}]; ($CellContext`mid = 
                 1; $CellContext`midr = 1.; $CellContext`in = 
                 2; $CellContext`fn = $CellContext`Ntot; 
                While[$CellContext`midr = ($CellContext`fn + 
                    1 - $CellContext`in) 0.5; $CellContext`midr >= 
                   1, $CellContext`mid = 
                   IntegerPart[$CellContext`midr] + $CellContext`in; 
                  If[Part[$CellContext`state, $CellContext`mid, -1] > 
                    Part[$CellContext`statetmp1, -1], $CellContext`fn = \
$CellContext`mid - 1, $CellContext`in = $CellContext`mid + 1]]; 
                If[$CellContext`midr <= 0, 
                  AddTo[$CellContext`fn, 1], 
                  If[
                  Part[$CellContext`state, $CellContext`fn, -1] < 
                   Part[$CellContext`statetmp1, -1], 
                   AddTo[$CellContext`fn, 1]]]; (
                 If[$CellContext`fn > 2, Part[$CellContext`state, 
                    Span[1, $CellContext`fn - 2]] = Part[$CellContext`state, 
                    Span[2, $CellContext`fn - 1]]]; 
                 Part[$CellContext`state, $CellContext`fn - 
                    1] = $CellContext`statetmp1)); ($CellContext`mid = 
                 1; $CellContext`midr = 1.; $CellContext`in = 
                 1; $CellContext`fn = $CellContext`Ntot; 
                While[$CellContext`midr = ($CellContext`fn + 
                    1 - $CellContext`in) 0.5; $CellContext`midr >= 
                   1, $CellContext`mid = 
                   IntegerPart[$CellContext`midr] + $CellContext`in; 
                  If[Part[$CellContext`state, $CellContext`mid, -1] > 
                    Part[$CellContext`statetmp2, -1], $CellContext`fn = \
$CellContext`mid - 1, $CellContext`in = $CellContext`mid + 1]]; 
                If[$CellContext`midr <= 0, 
                  AddTo[$CellContext`fn, 1], 
                  If[
                  Part[$CellContext`state, $CellContext`fn, -1] < 
                   Part[$CellContext`statetmp2, -1], 
                   AddTo[$CellContext`fn, 1]]]; (Part[$CellContext`state, 
                    Span[$CellContext`fn + 1, -1]] = 
                  Part[$CellContext`state, 
                    Span[$CellContext`fn, -2]]; 
                 Part[$CellContext`state, $CellContext`fn] = \
$CellContext`statetmp2)); AddTo[$CellContext`Ntot, 1]; 
               Null, $CellContext`statetmp1 = $CellContext`statetmp2 + 
                 Join[{0, 0, 0}, $CellContext`mv0, {(-Log[
                    
                    RandomReal[{0, 
                    1}]])/$CellContext`rcum1}]; ($CellContext`mid = 
                 1; $CellContext`midr = 1.; $CellContext`in = 
                 2; $CellContext`fn = $CellContext`Ntot; 
                While[$CellContext`midr = ($CellContext`fn + 
                    1 - $CellContext`in) 0.5; $CellContext`midr >= 
                   1, $CellContext`mid = 
                   IntegerPart[$CellContext`midr] + $CellContext`in; 
                  If[Part[$CellContext`state, $CellContext`mid, -1] > 
                    Part[$CellContext`statetmp1, -1], $CellContext`fn = \
$CellContext`mid - 1, $CellContext`in = $CellContext`mid + 1]]; 
                If[$CellContext`midr <= 0, 
                  AddTo[$CellContext`fn, 1], 
                  If[
                  Part[$CellContext`state, $CellContext`fn, -1] < 
                   Part[$CellContext`statetmp1, -1], 
                   AddTo[$CellContext`fn, 1]]]; (
                 If[$CellContext`fn > 2, Part[$CellContext`state, 
                    Span[1, $CellContext`fn - 2]] = Part[$CellContext`state, 
                    Span[2, $CellContext`fn - 1]]]; 
                 Part[$CellContext`state, $CellContext`fn - 
                    1] = $CellContext`statetmp1)); Null]; Null], 
            RandomReal[{0, 1}] < Part[$CellContext`probc, 3], 
            
            Block[{$CellContext`\[CapitalDelta]i, \
$CellContext`\[CapitalDelta]Nc}, $CellContext`\[CapitalDelta]i = {
               0}; $CellContext`\[CapitalDelta]Nc = {-1}; 
             Part[$CellContext`Ncell, 
                Part[$CellContext`imkmv, 3], Part[$CellContext`imkmv, 1] + 1 + 
                Part[$CellContext`\[CapitalDelta]i, 1]] = 
              Part[$CellContext`Ncell, 
                 Part[$CellContext`imkmv, 3], Part[$CellContext`imkmv, 1] + 1 + 
                 Part[$CellContext`\[CapitalDelta]i, 1]] + 
               Part[$CellContext`\[CapitalDelta]Nc, 1]; (
              Part[$CellContext`state, 
                 Span[1, -2]] = Part[$CellContext`state, 
                 Span[2, -1]]; Null); SubtractFrom[$CellContext`Ntot, 1]; 
             Null], True, 
            
            Block[{$CellContext`statetmp1 = {0.}, $CellContext`statetmp2 = {
               0.}, $CellContext`chooseiorm, $CellContext`\[CapitalDelta]i, \
$CellContext`\[CapitalDelta]Nc, $CellContext`\[CapitalDelta]k, \
$CellContext`NewNcell, $CellContext`CT}, $CellContext`CT = 
              False; $CellContext`statetmp1 = 1. Join[{
                  Part[$CellContext`imkmv, 1], 
                  Part[$CellContext`imkmv, 2], 
                  Part[$CellContext`imkmv, 3]}, 
                 Part[$CellContext`imkmv, 
                  Span[
                  4, 4 + $CellContext`imax - 
                   1]], {$CellContext`t}]; $CellContext`NewNcell = \
$CellContext`Ncell; 
             If[Part[$CellContext`imkmv, 
                 3] < $CellContext`kmax, $CellContext`\[CapitalDelta]i = {0, 
                 0}; $CellContext`\[CapitalDelta]Nc = {-1, 
                 1}; $CellContext`\[CapitalDelta]k = {0, 1}; 
               Part[$CellContext`NewNcell, Part[$CellContext`imkmv, 3] + 
                  Part[$CellContext`\[CapitalDelta]k, 1], 
                  Part[$CellContext`imkmv, 1] + 1 + 
                  Part[$CellContext`\[CapitalDelta]i, 1]] = 
                Part[$CellContext`NewNcell, Part[$CellContext`imkmv, 3] + 
                   Part[$CellContext`\[CapitalDelta]k, 1], 
                   Part[$CellContext`imkmv, 1] + 1 + 
                   Part[$CellContext`\[CapitalDelta]i, 1]] + 
                 Part[$CellContext`\[CapitalDelta]Nc, 1]; 
               Part[$CellContext`NewNcell, Part[$CellContext`imkmv, 3] + 
                  Part[$CellContext`\[CapitalDelta]k, 2], 
                  Part[$CellContext`imkmv, 1] + 1 + 
                  Part[$CellContext`\[CapitalDelta]i, 2]] = 
                Part[$CellContext`NewNcell, Part[$CellContext`imkmv, 3] + 
                   Part[$CellContext`\[CapitalDelta]k, 2], 
                   Part[$CellContext`imkmv, 1] + 1 + 
                   Part[$CellContext`\[CapitalDelta]i, 2]] + 
                 Part[$CellContext`\[CapitalDelta]Nc, 2]; $CellContext`CT = (
                 Compile`$522 = Part[$CellContext`imkmv, 3]; 
                 Compile`$523 = Last[$CellContext`\[CapitalDelta]k]; 
                 Compile`$524 = Compile`$522 + Compile`$523; 
                 Part[$CellContext`Ccell, Compile`$524] - Dot[
                    Part[$CellContext`NewNcell, Compile`$524], 
                    Part[$CellContext`ratio, Compile`$524]] >= 0)]; 
             If[$CellContext`CT, $CellContext`Ncell = $CellContext`NewNcell; \
$CellContext`statetmp1 = $CellContext`statetmp1 + 
                 Join[{0, 0, 1}, $CellContext`mv0, {(-Log[
                    
                    RandomReal[{0, 
                    1}]])/$CellContext`rcum1}], $CellContext`statetmp1 = \
$CellContext`statetmp1 + Join[{0, 0, 0}, $CellContext`mv0, {(-Log[
                    
                    RandomReal[{0, 
                    1}]])/$CellContext`rcum1}]]; ($CellContext`mid = 
               1; $CellContext`midr = 1.; $CellContext`in = 
               2; $CellContext`fn = $CellContext`Ntot; 
              While[$CellContext`midr = ($CellContext`fn + 
                   1 - $CellContext`in) 0.5; $CellContext`midr >= 
                 1, $CellContext`mid = 
                 IntegerPart[$CellContext`midr] + $CellContext`in; 
                If[Part[$CellContext`state, $CellContext`mid, -1] > 
                  Part[$CellContext`statetmp1, -1], $CellContext`fn = \
$CellContext`mid - 1, $CellContext`in = $CellContext`mid + 1]]; 
              If[$CellContext`midr <= 0, 
                AddTo[$CellContext`fn, 1], 
                If[
                Part[$CellContext`state, $CellContext`fn, -1] < 
                 Part[$CellContext`statetmp1, -1], 
                 AddTo[$CellContext`fn, 1]]]; (
               If[$CellContext`fn > 2, Part[$CellContext`state, 
                   Span[1, $CellContext`fn - 2]] = Part[$CellContext`state, 
                   Span[2, $CellContext`fn - 1]]]; 
               Part[$CellContext`state, $CellContext`fn - 
                  1] = $CellContext`statetmp1)); Null]]]; $CellContext`imkmv = 
         IntegerPart[
           Part[$CellContext`state, 1, 
            Span[1, 4 + $CellContext`imax - 1]]]; $CellContext`key = 
         Apply[Plus, 
           Part[
            Part[$CellContext`imkmv, 
             Span[4, 4 + $CellContext`imax - 1]], 
            Span[1, 
             Part[$CellContext`compkeystep, 
              Part[$CellContext`imkmv, 3]]]]]; $CellContext`ss = 
         2 (E/(E - 1)) (
           Exp[-Exp[(-10.) (($CellContext`key + 1)/(10 
                Exp[Part[$CellContext`imkmv, 2]^0.5/2]))]] - 1/
           E); $CellContext`keyg = Apply[Times, 
           Part[$CellContext`genes^(Part[$CellContext`imkmv, 
               Span[4, -1]] $CellContext`signature), 
            Span[1, 
             Part[$CellContext`compkeystep, 
              Part[$CellContext`imkmv, 3]]]]]; $CellContext`rates = (
          Compile`$611 = -$CellContext`wide; 
          Compile`$609 = Part[$CellContext`imkmv, 3]; Compile`$612 = 2^(-1); 
          Compile`$613 = Compile`$611 Compile`$612; 
          Compile`$614 = E^Compile`$613; 
          Join[{Part[$CellContext`Aasym, Compile`$609] 
             Exp[-($CellContext`slope 
                Compile`$614 (Cosh[Compile`$611 ($CellContext`ss - 2.)] - 
                 1))], Part[$CellContext`Asym, Compile`$609] 
             Exp[-($CellContext`slope 
                Compile`$614 (Cosh[Compile`$611 ($CellContext`ss - 1.)] - 
                 1))], Part[$CellContext`Aapop, Compile`$609] 
             Exp[-($CellContext`slope 
                Compile`$614 (Cosh[Compile`$611 ($CellContext`ss - 0.5)] - 
                 1))]}, {
            Part[$CellContext`krates, 
               Compile`$609] $CellContext`keyg}]); $CellContext`ratescum = 
         Accumulate[$CellContext`rates]; $CellContext`rcum1 = 
         Part[$CellContext`ratescum, -1]; $CellContext`ratesn = \
$CellContext`rates/$CellContext`rcum1; $CellContext`nondriverspace = \
$CellContext`maxnondrivermut - 
          Part[$CellContext`imkmv, 
           2]; $CellContext`semidriverspace = $CellContext`maxsemidrivermut - 
          Part[$CellContext`imkmv, -1]; $CellContext`driverspace = \
$CellContext`maxdrivermut - Total[
           Part[$CellContext`imkmv, 
            Span[
            4, -2]]]; $CellContext`space = $CellContext`nondriverspace + \
$CellContext`semidriverspace + $CellContext`driverspace; \
$CellContext`spaceprob = {$CellContext`driverspace, \
$CellContext`semidriverspace, $CellContext`nondriverspace}/$CellContext`space; 
        Internal`StuffBag[$CellContext`stateslist, $CellContext`state, 2]; 
        Internal`StuffBag[$CellContext`Ncslist, $CellContext`Ncell, 2]; 
        Internal`StuffBag[$CellContext`probslist, $CellContext`ratesn, 2]; 
        Internal`StuffBag[$CellContext`spprobslist, $CellContext`spaceprob, 
          2]; Internal`StuffBag[$CellContext`Ntslist, $CellContext`Ntot]; 
        Internal`StuffBag[$CellContext`tslist, $CellContext`t]; Null]; 
      Internal`StuffBag[$CellContext`stateslist, 
        Internal`BagPart[$CellContext`Ncslist, All], 1]; 
      Internal`StuffBag[$CellContext`stateslist, 
        Internal`BagPart[$CellContext`probslist, All], 1]; 
      Internal`StuffBag[$CellContext`stateslist, 
        Internal`BagPart[$CellContext`spprobslist, All], 1]; 
      Internal`StuffBag[$CellContext`stateslist, 
        Internal`BagPart[$CellContext`Ntslist, All], 1]; 
      Internal`StuffBag[$CellContext`stateslist, 
        Internal`BagPart[$CellContext`tslist, All], 1]; 
      Internal`StuffBag[$CellContext`stateslist, $CellContext`Nmax]; 
      Internal`StuffBag[$CellContext`stateslist, $CellContext`imax]; 
      Internal`StuffBag[$CellContext`stateslist, $CellContext`ct + 1]; 
      Internal`StuffBag[$CellContext`stateslist, 
        Dimensions[$CellContext`state], 1]; 
      Internal`StuffBag[$CellContext`stateslist, $CellContext`ct + 1]; 
      Internal`StuffBag[$CellContext`stateslist, 
        Dimensions[$CellContext`Ncell], 1]; 
      Internal`StuffBag[$CellContext`stateslist, $CellContext`ct + 1]; 
      Internal`StuffBag[$CellContext`stateslist, 
        Dimensions[$CellContext`ratesn], 1]; 
      Internal`StuffBag[$CellContext`stateslist, $CellContext`ct + 1]; 
      Internal`StuffBag[$CellContext`stateslist, 
        Dimensions[$CellContext`spaceprob], 1]; 
      Internal`StuffBag[$CellContext`stateslist, $CellContext`ct + 1]; 
      Internal`StuffBag[$CellContext`stateslist, $CellContext`ct + 1]; 
      Internal`StuffBag[$CellContext`stateslist, 
        Length[
         Dimensions[{$CellContext`state}]]]; 
      Internal`StuffBag[$CellContext`stateslist, 
        Length[
         Dimensions[{$CellContext`Ncell}]]]; 
      Internal`StuffBag[$CellContext`stateslist, 
        Length[
         Dimensions[{$CellContext`ratesn}]]]; 
      Internal`StuffBag[$CellContext`stateslist, 
        Length[
         Dimensions[{$CellContext`spaceprob}]]]; 
      Internal`StuffBag[$CellContext`stateslist, 
        Length[
         Dimensions[{$CellContext`Ntot}]]]; 
      Internal`StuffBag[$CellContext`stateslist, 
        Length[
         Dimensions[{$CellContext`t}]]]; 
      Internal`StuffBag[$CellContext`stateslist, 0]; 
      Internal`StuffBag[$CellContext`stateslist, 0]; 
      Internal`StuffBag[$CellContext`stateslist, 8]; 
      Internal`BagPart[$CellContext`stateslist, All]]]], Evaluate, 
   LibraryFunction[
   "/home/math/.Mathematica/ApplicationData/CCompilerDriver/BuildFolder/\
mycomputer-11374/compiledFunction0.so", 
    "compiledFunction0", {{Integer, 0, "Constant"}, {
     Integer, 0, "Constant"}, {Integer, 0, "Constant"}, {
     Integer, 0, "Constant"}, {Integer, 0, "Constant"}, {
     Integer, 0, "Constant"}, {Integer, 0, "Constant"}, {
     Integer, 1, "Constant"}, {Integer, 1, "Constant"}, {
     Real, 1, "Constant"}, {Real, 1, "Constant"}, {Integer, 0, "Constant"}, {
     Integer, 0, "Constant"}, {Integer, 0, "Constant"}, {
     Integer, 0, "Constant"}, {Real, 1, "Constant"}, {Real, 1, "Constant"}, {
     Real, 1, "Constant"}, {Real, 0, "Constant"}, {Real, 0, "Constant"}, {
     Real, 0, "Constant"}, {Real, 0, "Constant"}, {Real, 2, "Constant"}}, {
    Real, 1}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.66409440287685*^9, 3.664094513066437*^9, 3.6640946581979923`*^9, 
   3.664094725623085*^9, 3.664094793627159*^9, 3.664094913005612*^9, 
   3.6640949602128763`*^9, 3.664094990248762*^9, 3.664095054825629*^9, 
   3.664099686561893*^9, 3.664176174387162*^9, 3.6641775945613947`*^9, 
   3.664177770054965*^9, 3.664187969861042*^9, 3.664258914837994*^9, 
   3.66997877922017*^9, 3.670063508036828*^9, {3.6700636068075237`*^9, 
   3.670063615060647*^9}, 3.672643956952806*^9, 3.672644008869163*^9, 
   3.672998183669805*^9, 3.672998378154332*^9, {3.6729992395547113`*^9, 
   3.67299925825941*^9}, 3.6729993200548477`*^9, 3.67299954763863*^9, 
   3.6730141170664463`*^9, 3.673028520148728*^9, 3.673028748362797*^9, 
   3.756567091457254*^9, 3.756567255285824*^9, 3.756567340370076*^9}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{
  3.66409440287685*^9, 3.664094513066437*^9, 3.6640946581979923`*^9, 
   3.664094725623085*^9, 3.664094793627159*^9, 3.664094913005612*^9, 
   3.6640949602128763`*^9, 3.664094990248762*^9, 3.664095054825629*^9, 
   3.664099686561893*^9, 3.664176174387162*^9, 3.6641775945613947`*^9, 
   3.664177770054965*^9, 3.664187969861042*^9, 3.664258914837994*^9, 
   3.66997877922017*^9, 3.670063508036828*^9, {3.6700636068075237`*^9, 
   3.670063615060647*^9}, 3.672643956952806*^9, 3.672644008869163*^9, 
   3.672998183669805*^9, 3.672998378154332*^9, {3.6729992395547113`*^9, 
   3.67299925825941*^9}, 3.6729993200548477`*^9, 3.67299954763863*^9, 
   3.6730141170664463`*^9, 3.673028520148728*^9, 3.673028748362797*^9, 
   3.756567091457254*^9, 3.756567255285824*^9, 3.756567340998275*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Run2", "Subsection",
 CellChangeTimes->{{3.657006576744567*^9, 3.6570065805686617`*^9}, 
   3.657007431809258*^9, 3.66289321186264*^9, {3.663222793000924*^9, 
   3.663222803202347*^9}, {3.6640178852552357`*^9, 3.6640178859541597`*^9}, 
   3.664091095108634*^9}],

Cell[CellGroupData[{

Cell[TextData[{
 "Simulation Non Compiled ",
 Cell[BoxData[
  ButtonBox["\<\"Evaluate\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
       EvaluationNotebook[], All, ButtonCell] SelectionMove[
       EvaluationNotebook[], All, CellGroup]) SelectionEvaluateCreateCell[
      EvaluationNotebook[]],
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False,
  CellChangeTimes->{3.6252904677946167`*^9, 3.626670633881194*^9, 
   3.6519101150134897`*^9}]
}], "Subsubsection",
 CellChangeTimes->{{3.651910339748372*^9, 3.651910345476472*^9}, {
  3.6519103897649527`*^9, 3.651910391384837*^9}, {3.651910480974146*^9, 
  3.651910484694303*^9}, {3.6642583962201366`*^9, 3.66425839871624*^9}, {
  3.6642584307245283`*^9, 3.66425844154867*^9}, {3.673007675684816*^9, 
  3.673007686245162*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RunMain2NC", "[", "Nsims_", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
      "cen2", ",", "wide2", ",", "slope2", ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "Aasym2", ",", " ", 
       RowBox[{"(*", 
        RowBox[{
        "kmax", " ", "asymmetric", " ", "proliferation", " ", "rate", " ", 
         "amplitudes"}], " ", "*)"}], "\[IndentingNewLine]", "Asym2", ",", 
       " ", 
       RowBox[{"(*", 
        RowBox[{
        "kmax", " ", "symmetric", " ", "proliferation", " ", "rate", " ", 
         "amplitudes"}], " ", "*)"}], "\[IndentingNewLine]", "Aapop2", ",", 
       " ", 
       RowBox[{"(*", 
        RowBox[{"kmax", " ", "apoptotic", " ", "rate", " ", "amplitudes"}], 
        " ", "*)"}], "\[IndentingNewLine]", "Apass2", ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "imax2", ",", " ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"number", " ", "of", " ", "driver", " ", "mutations"}], "+", 
         
         RowBox[{"1", " ", 
          RowBox[{"(", 
           RowBox[{
           "for", " ", "the", " ", "non", " ", "mutated", " ", "case"}], 
           ")"}]}]}], "*)"}], "\[IndentingNewLine]", "kmax2", ",", " ", 
       RowBox[{"(*", 
        RowBox[{"number", " ", "of", " ", "compartments"}], "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "Ccell2", ",", 
       RowBox[{"(*", 
        RowBox[{
        "capacities", " ", "may", " ", "be", " ", "different", " ", "in", " ",
          "each", " ", "compartment"}], " ", "*)"}], "\[IndentingNewLine]", 
       "ratio2", ",", 
       RowBox[{"(*", 
        RowBox[{
        "imax", "*", "kmax", " ", "matrix", " ", "of", " ", "identical", " ", 
         "columns"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"EPCAMexp", "=", "1"}], ",", 
       RowBox[{"CD47exp", "=", "1"}], ",", 
       RowBox[{"CD44exp", "=", "1"}], ",", 
       RowBox[{"METexp", "=", "1"}], ",", 
       RowBox[{"EPCAMcnt", "=", "1"}], ",", 
       RowBox[{"CD47cnt", "=", "1"}], ",", 
       RowBox[{"CD44cnt", "=", "1"}], ",", 
       RowBox[{"METcnt", "=", "1"}], ",", "\[IndentingNewLine]", "expG2", ",",
        "cntG2", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "compkeystep2", ",", "\[IndentingNewLine]", "signature2", ",", " ", 
       RowBox[{"(*", 
        RowBox[{
        "the", " ", "0", " ", "is", " ", "for", " ", "the", " ", "semidriver",
          " ", "mutations"}], "*)"}], "\[IndentingNewLine]", 
       "maxsemidrivermut2", ",", " ", 
       RowBox[{"(*", 
        RowBox[{
        "maximum", " ", "number", " ", "of", " ", "semidriver", " ", 
         "mutations"}], "*)"}], "\[IndentingNewLine]", "maxnondrivermut2", 
       ",", " ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"this", " ", "is", " ", "mmax"}], ",", " ", 
         RowBox[{
         "the", " ", "maximum", " ", "number", " ", "of", " ", "non", " ", 
          "driver", " ", "mutations"}]}], "*)"}], "\[IndentingNewLine]", 
       "maxmjump2", ",", "maxtjump2", ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "Ntot2", ",", "Nmax2", ",", 
       RowBox[{"(*", 
        RowBox[{">", "Ntot"}], "*)"}], "\[IndentingNewLine]", "scegli2", ",", 
       
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"intero", " ", "tra", " ", "0", " ", "e", " ", "Ntot"}], "-",
          "Nmax"}], "*)"}], "\[IndentingNewLine]", "ctmax2", ",", "tmax2", 
       ",", "\[IndentingNewLine]", "sims", ",", "ctsims", ",", 
       RowBox[{"(*", 
        RowBox[{"Nsims", ","}], "*)"}], " ", "simslen", ",", "rawresults"}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"cen2", "=", "0.5"}], ";", 
      RowBox[{"wide2", "=", "20"}], ";", 
      RowBox[{"slope2", "=", "0.01"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Aasym2", "=", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{
       "kmax", " ", "asymmetric", " ", "proliferation", " ", "rate", " ", 
        "amplitudes"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Asym2", "=", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{
       "kmax", " ", "symmetric", " ", "proliferation", " ", "rate", " ", 
        "amplitudes"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Aapop2", "=", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"kmax", " ", "apoptotic", " ", "rate", " ", "amplitudes"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Apass2", "=", "0.1"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"imax2", "=", "5"}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"number", " ", "of", " ", "driver", " ", "mutations"}], "+", 
        RowBox[{"1", " ", 
         RowBox[{"(", 
          RowBox[{
          "for", " ", "the", " ", "non", " ", "mutated", " ", "case"}], 
          ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"kmax2", "=", "3"}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"number", " ", "of", " ", "compartments"}], "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Ccell2", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"100", ",", 
         RowBox[{"{", "kmax2", "}"}]}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"ConstantArray", "[", 
         RowBox[{"100", ",", "kmax2"}], "]"}], ";"}], "*)"}], 
      RowBox[{"(*", 
       RowBox[{
       "capacities", " ", "may", " ", "be", " ", "different", " ", "in", " ", 
        "each", " ", "compartment"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ratio2", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1.2"}], "}"}], ",", 
         RowBox[{"{", "kmax2", "}"}]}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
       "imax", "*", "kmax", " ", "matrix", " ", "of", " ", "identical", " ", 
        "columns"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"EPCAMexp", "=", "1"}], ";", 
      RowBox[{"CD47exp", "=", "1"}], ";", 
      RowBox[{"CD44exp", "=", "1"}], ";", 
      RowBox[{"METexp", "=", "1"}], ";", 
      RowBox[{"EPCAMcnt", "=", "1"}], ";", 
      RowBox[{"CD47cnt", "=", "1"}], ";", 
      RowBox[{"CD44cnt", "=", "1"}], ";", 
      RowBox[{"METcnt", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"expG2", "=", 
       RowBox[{"{", 
        RowBox[{
        "EPCAMexp", ",", "CD47exp", ",", "CD44exp", ",", "METexp", ",", "1"}],
         "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cntG2", "=", 
       RowBox[{"{", 
        RowBox[{
        "EPCAMcnt", ",", "CD47cnt", ",", "CD44cnt", ",", "METcnt", ",", "1"}],
         "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"compkeystep2", "=", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "4"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"signature2", "=", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "0"}], "}"}]}], ";", 
      " ", 
      RowBox[{"(*", 
       RowBox[{
       "the", " ", "0", " ", "is", " ", "for", " ", "the", " ", "semidriver", 
        " ", "mutations"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"maxsemidrivermut2", "=", "6"}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{
       "maximum", " ", "number", " ", "of", " ", "semidriver", " ", 
        "mutations"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"maxnondrivermut2", "=", "6"}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"this", " ", "is", " ", "mmax"}], ",", " ", 
        RowBox[{
        "the", " ", "maximum", " ", "number", " ", "of", " ", "non", " ", 
         "driver", " ", "mutations"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"maxmjump2", "=", "5"}], ";", 
      RowBox[{"maxtjump2", "=", "10"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Ntot2", "=", "10"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Nmax2", "=", "150"}], ";", 
      RowBox[{"(*", 
       RowBox[{">", "Ntot"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"scegli2", "=", "0"}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"intero", " ", "tra", " ", "0", " ", "e", " ", "Ntot"}], "-", 
        "Nmax"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ctmax2", "=", "100"}], ";", 
      RowBox[{"tmax2", "=", "30"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"sims", "=", 
       RowBox[{"Internal`Bag", "[", 
        RowBox[{"Most", "[", 
         RowBox[{"{", "1.", "}"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"simslen", "=", 
       RowBox[{"Internal`Bag", "[", 
        RowBox[{"Most", "[", 
         RowBox[{"{", "1.", "}"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ctsims", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"ctsims", "<", "Nsims"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ctsims", "=", 
          RowBox[{"ctsims", "+", "1"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"rawresults", "=", 
          RowBox[{"Main2NC", "[", "\[IndentingNewLine]", 
           RowBox[{
           "Ntot2", ",", "Nmax2", ",", "scegli2", ",", "kmax2", ",", "imax2", 
            ",", "maxsemidrivermut2", ",", "\[IndentingNewLine]", 
            "maxnondrivermut2", ",", "signature2", ",", "compkeystep2", ",", 
            "expG2", ",", "cntG2", ",", "ctmax2", ",", "\[IndentingNewLine]", 
            "tmax2", ",", "maxmjump2", ",", "maxtjump2", ",", "Aasym2", ",", 
            "Asym2", ",", "Aapop2", ",", "\[IndentingNewLine]", "Apass2", ",",
             "cen2", ",", "wide2", ",", "slope2", ",", "ratio2"}], "]"}]}], 
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"Internal`StuffBag", "[", 
          RowBox[{"sims", ",", "rawresults", ",", "1"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Internal`StuffBag", "[", 
          RowBox[{"simslen", ",", "1."}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Internal`StuffBag", "[", 
          RowBox[{"simslen", ",", 
           RowBox[{"Dimensions", "[", "rawresults", "]"}], ",", "1"}], "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"sims", ",", 
        RowBox[{"Internal`BagPart", "[", 
         RowBox[{"simslen", ",", "All"}], "]"}], ",", "1"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"sims", ",", 
        RowBox[{"Table", "[", 
         RowBox[{"1.", ",", 
          RowBox[{"{", "Nsims", "}"}]}], "]"}], ",", "1"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Internal`StuffBag", "[", 
       RowBox[{"sims", ",", "Nsims"}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Internal`BagPart", "[", 
       RowBox[{"sims", ",", "All"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Striptease", "[", "RunMain2NC", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.664094117165552*^9, 3.664094120540743*^9}, 
   3.6640945162899427`*^9, {3.6640948703311863`*^9, 3.66409487439193*^9}, 
   3.664097450750594*^9, 3.6641762696398573`*^9, {3.664176376156743*^9, 
   3.664176388387895*^9}, {3.66417658011649*^9, 3.6641765867503643`*^9}, {
   3.664176703962508*^9, 3.664176706800387*^9}, {3.6641768538779716`*^9, 
   3.664176854169723*^9}, 3.664177171134535*^9, {3.66417737169521*^9, 
   3.664177401003343*^9}, 3.664177603189044*^9, {3.6641776907088213`*^9, 
   3.664177704322896*^9}, 3.672646466005804*^9, {3.672646584821747*^9, 
   3.672646591447578*^9}, 3.672647265394946*^9, {3.672983928738779*^9, 
   3.672983939985669*^9}, {3.672983970594702*^9, 3.672984045186508*^9}, {
   3.672984202029872*^9, 3.672984389446012*^9}, {3.6729844494870243`*^9, 
   3.67298446404355*^9}, {3.672984681749091*^9, 3.672984687181387*^9}, {
   3.6729847959754047`*^9, 3.672984799666541*^9}, {3.672985209256632*^9, 
   3.672985248250671*^9}, 3.672985285724204*^9, {3.67298533171763*^9, 
   3.6729853660525*^9}, {3.672985428990575*^9, 3.6729854352159863`*^9}, {
   3.672985613953526*^9, 3.6729856596959248`*^9}, {3.6729856940364857`*^9, 
   3.672985768320487*^9}, 3.67298584943576*^9, {3.6729862549851513`*^9, 
   3.672986276912717*^9}, {3.672986348957795*^9, 3.672986394272643*^9}, {
   3.672986451220607*^9, 3.672986456708479*^9}, {3.672986496656067*^9, 
   3.672986505387764*^9}, 3.672986536256695*^9, {3.672986764520049*^9, 
   3.6729867656092377`*^9}, {3.6729983329151773`*^9, 3.672998341344447*^9}, {
   3.67299840755403*^9, 3.672998417272809*^9}, {3.6729984480249434`*^9, 
   3.672998454838599*^9}, {3.672998509436797*^9, 3.672998628365632*^9}, 
   3.672999325734303*^9, {3.67299957201169*^9, 3.67299959777223*^9}, 
   3.672999752571455*^9, {3.672999790635144*^9, 3.672999821247164*^9}, 
   3.67300705472265*^9, 3.673007256615041*^9, {3.6730072972918243`*^9, 
   3.67300730345022*^9}, 3.673007336520254*^9, {3.673007399315741*^9, 
   3.673007402476512*^9}, {3.673007455497458*^9, 3.673007456014806*^9}, {
   3.6730075283860207`*^9, 3.673007538585475*^9}, {3.673007612322452*^9, 
   3.67300764815427*^9}, {3.673013553515238*^9, 3.6730135539944077`*^9}, {
   3.67301478416708*^9, 3.673014790692851*^9}, {3.673015001521121*^9, 
   3.673015019865728*^9}, {3.673028780691101*^9, 3.673028806702881*^9}, {
   3.67303042463661*^9, 3.673030424920311*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Simulation ",
 Cell[BoxData[
  ButtonBox["\<\"Evaluate\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
       EvaluationNotebook[], All, ButtonCell] SelectionMove[
       EvaluationNotebook[], All, CellGroup]) SelectionEvaluateCreateCell[
      EvaluationNotebook[]],
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False,
  CellChangeTimes->{3.6252904677946167`*^9, 3.626670633881194*^9, 
   3.6519101150134897`*^9}]
}], "Subsubsection",
 CellChangeTimes->{{3.651910339748372*^9, 3.651910345476472*^9}, {
  3.6519103897649527`*^9, 3.651910391384837*^9}, {3.651910480974146*^9, 
  3.651910484694303*^9}, {3.6642583962201366`*^9, 3.66425839871624*^9}, {
  3.6642584307245283`*^9, 3.66425844154867*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"RunMain2", "=", "\[IndentingNewLine]", 
  RowBox[{"Compile", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Nsims", ",", "_Integer"}], "}"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Block", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
       "cen2", ",", "wide2", ",", "slope2", ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "Aasym2", ",", " ", 
        RowBox[{"(*", 
         RowBox[{
         "kmax", " ", "asymmetric", " ", "proliferation", " ", "rate", " ", 
          "amplitudes"}], " ", "*)"}], "\[IndentingNewLine]", "Asym2", ",", 
        " ", 
        RowBox[{"(*", 
         RowBox[{
         "kmax", " ", "symmetric", " ", "proliferation", " ", "rate", " ", 
          "amplitudes"}], " ", "*)"}], "\[IndentingNewLine]", "Aapop2", ",", 
        " ", 
        RowBox[{"(*", 
         RowBox[{"kmax", " ", "apoptotic", " ", "rate", " ", "amplitudes"}], 
         " ", "*)"}], "\[IndentingNewLine]", "Apass2", ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "imax2", ",", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"number", " ", "of", " ", "driver", " ", "mutations"}], "+", 
          RowBox[{"1", " ", 
           RowBox[{"(", 
            RowBox[{
            "for", " ", "the", " ", "non", " ", "mutated", " ", "case"}], 
            ")"}]}]}], "*)"}], "\[IndentingNewLine]", "kmax2", ",", " ", 
        RowBox[{"(*", 
         RowBox[{"number", " ", "of", " ", "compartments"}], "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "Ccell2", ",", 
        RowBox[{"(*", 
         RowBox[{
         "capacities", " ", "may", " ", "be", " ", "different", " ", "in", 
          " ", "each", " ", "compartment"}], " ", "*)"}], 
        "\[IndentingNewLine]", "ratio2", ",", 
        RowBox[{"(*", 
         RowBox[{
         "imax", "*", "kmax", " ", "matrix", " ", "of", " ", "identical", " ",
           "columns"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"EPCAMexp", "=", "1"}], ",", 
        RowBox[{"CD47exp", "=", "1"}], ",", 
        RowBox[{"CD44exp", "=", "1"}], ",", 
        RowBox[{"METexp", "=", "1"}], ",", 
        RowBox[{"EPCAMcnt", "=", "1"}], ",", 
        RowBox[{"CD47cnt", "=", "1"}], ",", 
        RowBox[{"CD44cnt", "=", "1"}], ",", 
        RowBox[{"METcnt", "=", "1"}], ",", "\[IndentingNewLine]", "expG2", 
        ",", "cntG2", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        "compkeystep2", ",", "\[IndentingNewLine]", "signature2", ",", " ", 
        RowBox[{"(*", 
         RowBox[{
         "the", " ", "0", " ", "is", " ", "for", " ", "the", " ", 
          "semidriver", " ", "mutations"}], "*)"}], "\[IndentingNewLine]", 
        "maxsemidrivermut2", ",", " ", 
        RowBox[{"(*", 
         RowBox[{
         "maximum", " ", "number", " ", "of", " ", "semidriver", " ", 
          "mutations"}], "*)"}], "\[IndentingNewLine]", "maxnondrivermut2", 
        ",", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"this", " ", "is", " ", "mmax"}], ",", " ", 
          RowBox[{
          "the", " ", "maximum", " ", "number", " ", "of", " ", "non", " ", 
           "driver", " ", "mutations"}]}], "*)"}], "\[IndentingNewLine]", 
        "maxmjump2", ",", "maxtjump2", ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "Ntot2", ",", "Nmax2", ",", 
        RowBox[{"(*", 
         RowBox[{">", "Ntot"}], "*)"}], "\[IndentingNewLine]", "scegli2", ",", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"intero", " ", "tra", " ", "0", " ", "e", " ", "Ntot"}], 
          "-", "Nmax"}], "*)"}], "\[IndentingNewLine]", "ctmax2", ",", 
        "tmax2", ",", "\[IndentingNewLine]", "sims", ",", "ctsims", ",", 
        RowBox[{"(*", 
         RowBox[{"Nsims", ","}], "*)"}], " ", "simslen", ",", "rawresults"}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"cen2", "=", "0.5"}], ";", 
       RowBox[{"wide2", "=", "20"}], ";", 
       RowBox[{"slope2", "=", "0.01"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Aasym2", "=", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{
        "kmax", " ", "asymmetric", " ", "proliferation", " ", "rate", " ", 
         "amplitudes"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Asym2", "=", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{
        "kmax", " ", "symmetric", " ", "proliferation", " ", "rate", " ", 
         "amplitudes"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Aapop2", "=", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{"kmax", " ", "apoptotic", " ", "rate", " ", "amplitudes"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Apass2", "=", "0.1"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"imax2", "=", "5"}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"number", " ", "of", " ", "driver", " ", "mutations"}], "+", 
         
         RowBox[{"1", " ", 
          RowBox[{"(", 
           RowBox[{
           "for", " ", "the", " ", "non", " ", "mutated", " ", "case"}], 
           ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"kmax2", "=", "3"}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{"number", " ", "of", " ", "compartments"}], "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Ccell2", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"100", ",", 
          RowBox[{"{", "kmax2", "}"}]}], "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"ConstantArray", "[", 
          RowBox[{"100", ",", "kmax2"}], "]"}], ";"}], "*)"}], 
       RowBox[{"(*", 
        RowBox[{
        "capacities", " ", "may", " ", "be", " ", "different", " ", "in", " ",
          "each", " ", "compartment"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"ratio2", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1.2"}], "}"}], 
          ",", 
          RowBox[{"{", "kmax2", "}"}]}], "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{
        "imax", "*", "kmax", " ", "matrix", " ", "of", " ", "identical", " ", 
         "columns"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"EPCAMexp", "=", "1"}], ";", 
       RowBox[{"CD47exp", "=", "1"}], ";", 
       RowBox[{"CD44exp", "=", "1"}], ";", 
       RowBox[{"METexp", "=", "1"}], ";", 
       RowBox[{"EPCAMcnt", "=", "1"}], ";", 
       RowBox[{"CD47cnt", "=", "1"}], ";", 
       RowBox[{"CD44cnt", "=", "1"}], ";", 
       RowBox[{"METcnt", "=", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"expG2", "=", 
        RowBox[{"{", 
         RowBox[{
         "EPCAMexp", ",", "CD47exp", ",", "CD44exp", ",", "METexp", ",", 
          "1"}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"cntG2", "=", 
        RowBox[{"{", 
         RowBox[{
         "EPCAMcnt", ",", "CD47cnt", ",", "CD44cnt", ",", "METcnt", ",", 
          "1"}], "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"compkeystep2", "=", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "4"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"signature2", "=", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "0"}], "}"}]}], ";", 
       " ", 
       RowBox[{"(*", 
        RowBox[{
        "the", " ", "0", " ", "is", " ", "for", " ", "the", " ", "semidriver",
          " ", "mutations"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"maxsemidrivermut2", "=", "6"}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{
        "maximum", " ", "number", " ", "of", " ", "semidriver", " ", 
         "mutations"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"maxnondrivermut2", "=", "6"}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"this", " ", "is", " ", "mmax"}], ",", " ", 
         RowBox[{
         "the", " ", "maximum", " ", "number", " ", "of", " ", "non", " ", 
          "driver", " ", "mutations"}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"maxmjump2", "=", "5"}], ";", 
       RowBox[{"maxtjump2", "=", "10"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Ntot2", "=", "10"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Nmax2", "=", "150"}], ";", 
       RowBox[{"(*", 
        RowBox[{">", "Ntot"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"scegli2", "=", "0"}], ";", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"intero", " ", "tra", " ", "0", " ", "e", " ", "Ntot"}], "-",
          "Nmax"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"ctmax2", "=", "100"}], ";", 
       RowBox[{"tmax2", "=", "30"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"sims", "=", 
        RowBox[{"Internal`Bag", "[", 
         RowBox[{"Most", "[", 
          RowBox[{"{", "1.", "}"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"simslen", "=", 
        RowBox[{"Internal`Bag", "[", 
         RowBox[{"Most", "[", 
          RowBox[{"{", "1.", "}"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ctsims", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"ctsims", "<", "Nsims"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"ctsims", "=", 
           RowBox[{"ctsims", "+", "1"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"rawresults", "=", 
           RowBox[{"Main2", "[", "\[IndentingNewLine]", 
            RowBox[{
            "Ntot2", ",", "Nmax2", ",", "scegli2", ",", "kmax2", ",", "imax2",
              ",", "maxsemidrivermut2", ",", "\[IndentingNewLine]", 
             "maxnondrivermut2", ",", "signature2", ",", "compkeystep2", ",", 
             "expG2", ",", "cntG2", ",", "ctmax2", ",", "\[IndentingNewLine]",
              "tmax2", ",", "maxmjump2", ",", "maxtjump2", ",", "Aasym2", ",",
              "Asym2", ",", "Aapop2", ",", "\[IndentingNewLine]", "Apass2", 
             ",", "cen2", ",", "wide2", ",", "slope2", ",", "ratio2"}], 
            "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"Internal`StuffBag", "[", 
           RowBox[{"sims", ",", "rawresults", ",", "1"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Internal`StuffBag", "[", 
           RowBox[{"simslen", ",", "1.", ",", "1"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Internal`StuffBag", "[", 
           RowBox[{"simslen", ",", 
            RowBox[{"Dimensions", "[", "rawresults", "]"}], ",", "1"}], "]"}],
           ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"Internal`StuffBag", "[", 
        RowBox[{"sims", ",", 
         RowBox[{"Internal`BagPart", "[", 
          RowBox[{"simslen", ",", "All"}], "]"}], ",", "1"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Internal`StuffBag", "[", 
        RowBox[{"sims", ",", 
         RowBox[{"Table", "[", 
          RowBox[{"1.", ",", 
           RowBox[{"{", "Nsims", "}"}]}], "]"}], ",", "1"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Internal`StuffBag", "[", 
        RowBox[{"sims", ",", "Nsims"}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Internal`BagPart", "[", 
        RowBox[{"sims", ",", "All"}], "]"}]}]}], "\[IndentingNewLine]", "]"}],
     "\[IndentingNewLine]", ",", 
    RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}], ",", 
    RowBox[{"CompilationOptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<InlineExternalDefinitions\>\"", "\[Rule]", "True"}], ",", 
       
       RowBox[{"\"\<InlineCompiledFunctions\>\"", "\[Rule]", "True"}]}], 
      "}"}]}], ",", 
    RowBox[{"RuntimeOptions", "\[Rule]", "\"\<Speed\>\""}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"StringPosition", "[", 
  RowBox[{
   RowBox[{"CompilePrint", "[", "RunMain2", "]"}], ",", 
   "\"\<MainEvaluate\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.664094117165552*^9, 3.664094120540743*^9}, 
   3.6640945162899427`*^9, {3.6640948703311863`*^9, 3.66409487439193*^9}, 
   3.664097450750594*^9, 3.6641762696398573`*^9, {3.664176376156743*^9, 
   3.664176388387895*^9}, {3.66417658011649*^9, 3.6641765867503643`*^9}, {
   3.664176703962508*^9, 3.664176706800387*^9}, {3.6641768538779716`*^9, 
   3.664176854169723*^9}, 3.664177171134535*^9, {3.66417737169521*^9, 
   3.664177401003343*^9}, 3.664177603189044*^9, {3.6641776907088213`*^9, 
   3.664177704322896*^9}, 3.672646466005804*^9, {3.672646584821747*^9, 
   3.672646591447578*^9}, 3.672647265394946*^9, {3.672983928738779*^9, 
   3.672983939985669*^9}, {3.672983970594702*^9, 3.672984045186508*^9}, {
   3.672984202029872*^9, 3.672984389446012*^9}, {3.6729844494870243`*^9, 
   3.67298446404355*^9}, {3.672984681749091*^9, 3.672984687181387*^9}, {
   3.6729847959754047`*^9, 3.672984799666541*^9}, {3.672985209256632*^9, 
   3.672985248250671*^9}, 3.672985285724204*^9, {3.67298533171763*^9, 
   3.6729853660525*^9}, {3.672985428990575*^9, 3.6729854352159863`*^9}, {
   3.672985613953526*^9, 3.6729856596959248`*^9}, {3.6729856940364857`*^9, 
   3.672985768320487*^9}, 3.67298584943576*^9, {3.6729862549851513`*^9, 
   3.672986276912717*^9}, {3.672986348957795*^9, 3.672986394272643*^9}, {
   3.672986451220607*^9, 3.672986456708479*^9}, {3.672986496656067*^9, 
   3.672986505387764*^9}, 3.672986536256695*^9, {3.672986764520049*^9, 
   3.6729867656092377`*^9}, {3.6729983329151773`*^9, 3.672998341344447*^9}, {
   3.67299840755403*^9, 3.672998417272809*^9}, {3.6729984480249434`*^9, 
   3.672998454838599*^9}, {3.672998509436797*^9, 3.672998628365632*^9}, 
   3.672999325734303*^9, {3.67299957201169*^9, 3.67299959777223*^9}, 
   3.672999752571455*^9, {3.672999790635144*^9, 3.672999821247164*^9}, 
   3.67300705472265*^9, 3.673007256615041*^9, {3.6730072972918243`*^9, 
   3.67300730345022*^9}, 3.673007336520254*^9, {3.673007399315741*^9, 
   3.673007402476512*^9}, {3.673007455497458*^9, 3.673007456014806*^9}, {
   3.6730075283860207`*^9, 3.673007538585475*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.499999999999996`,
              2.5}, {25.499999999999996`, 1.3953100000000003`}, {
             24.604699999999998`, 0.49999999999999994`}, {23.5, 
             0.49999999999999994`}, {2.5, 0.49999999999999994`}, {
             1.3953100000000003`, 0.49999999999999994`}, {
             0.49999999999999994`, 1.3953100000000003`}, {
             0.49999999999999994`, 2.5}, {0.49999999999999994`, 23.5}, {
             0.49999999999999994`, 24.604699999999998`}, {1.3953100000000003`,
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
             25.499999999999996`}, {24.604699999999998`, 
             25.499999999999996`}, {25.499999999999996`, 
             24.604699999999998`}, {25.499999999999996`, 23.5}, {
             25.499999999999996`, 2.5}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
             19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
             20.021499999999996`}, {6.930469999999999, 20.021499999999996`}, {
             6.930469999999999, 18.212100000000003`}, {16.3832, 
             18.212100000000003`}, {16.3832, 16.357399999999995`}, {20.5426, 
             19.116799999999998`}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
             "]]}},
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], 
         GridBox[{
           {
            RowBox[{
             TagBox["\<\"Argument count: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Argument types: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              StyleBox[
               PaneBox[
                RowBox[{"{", "_Integer", "}"}],
                BaselinePosition->Baseline,
                ContentPadding->False,
                FrameMargins->0,
                ImageSize->{{1, 300}, Automatic},
                StripOnInput->True],
               LineBreakWithin->False],
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
      GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], 
         GraphicsBox[
          {Thickness[0.038461538461538464`], 
           {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
            FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{25.499999999999996`,
              2.5}, {25.499999999999996`, 1.3953100000000003`}, {
             24.604699999999998`, 0.49999999999999994`}, {23.5, 
             0.49999999999999994`}, {2.5, 0.49999999999999994`}, {
             1.3953100000000003`, 0.49999999999999994`}, {
             0.49999999999999994`, 1.3953100000000003`}, {
             0.49999999999999994`, 2.5}, {0.49999999999999994`, 23.5}, {
             0.49999999999999994`, 24.604699999999998`}, {1.3953100000000003`,
              25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
             25.499999999999996`}, {24.604699999999998`, 
             25.499999999999996`}, {25.499999999999996`, 
             24.604699999999998`}, {25.499999999999996`, 23.5}, {
             25.499999999999996`, 2.5}}}]}, 
           {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
             19.116799999999998`}, {16.3832, 21.876199999999997`}, {16.3832, 
             20.021499999999996`}, {6.930469999999999, 20.021499999999996`}, {
             6.930469999999999, 18.212100000000003`}, {16.3832, 
             18.212100000000003`}, {16.3832, 16.357399999999995`}, {20.5426, 
             19.116799999999998`}}}], 
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {9.46445, 
             11.079700000000003`}, {9.46445, 12.933999999999997`}, {
             18.917199999999998`, 12.933999999999997`}, {18.917199999999998`, 
             14.7438}, {9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
             13.8391}}}], 
            FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
             "]]}},
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.7]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], 
         GridBox[{
           {
            RowBox[{
             TagBox["\<\"Argument count: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["1",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Argument types: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               RowBox[{"{", "_Integer", "}"}],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Variables: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              RowBox[{"{", "Nsims", "}"}],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Expression: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              PaneBox[
               RowBox[{"Block", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "cen2", ",", "wide2", ",", "slope2", ",", "Aasym2", ",", 
                   "Asym2", ",", "Aapop2", ",", "Apass2", ",", "imax2", ",", 
                   "kmax2", ",", "Ccell2", ",", "ratio2", ",", 
                   RowBox[{"EPCAMexp", "=", "1"}], ",", 
                   RowBox[{"CD47exp", "=", "1"}], ",", 
                   RowBox[{"CD44exp", "=", "1"}], ",", 
                   RowBox[{"METexp", "=", "1"}], ",", 
                   RowBox[{"EPCAMcnt", "=", "1"}], ",", 
                   RowBox[{"CD47cnt", "=", "1"}], ",", 
                   RowBox[{"CD44cnt", "=", "1"}], ",", 
                   RowBox[{"METcnt", "=", "1"}], ",", "expG2", ",", "cntG2", 
                   ",", "compkeystep2", ",", "signature2", ",", 
                   "maxsemidrivermut2", ",", "maxnondrivermut2", ",", 
                   "maxmjump2", ",", "maxtjump2", ",", "Ntot2", ",", "Nmax2", 
                   ",", "scegli2", ",", "ctmax2", ",", "tmax2", ",", "sims", 
                   ",", "ctsims", ",", "simslen", ",", "rawresults"}], "}"}], 
                 ",", 
                 RowBox[{
                  RowBox[{"cen2", "=", "0.5`"}], ";", 
                  RowBox[{"wide2", "=", "20"}], ";", 
                  RowBox[{"slope2", "=", "0.01`"}], ";", 
                  RowBox[{"Aasym2", "=", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ";", 
                  RowBox[{"Asym2", "=", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ";", 
                  RowBox[{"Aapop2", "=", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ";", 
                  RowBox[{"Apass2", "=", "0.1`"}], ";", 
                  RowBox[{"imax2", "=", "5"}], ";", 
                  RowBox[{"kmax2", "=", "3"}], ";", 
                  RowBox[{"Ccell2", "=", 
                   RowBox[{"Table", "[", 
                    RowBox[{"100", ",", 
                    RowBox[{"{", "kmax2", "}"}]}], "]"}]}], ";", 
                  RowBox[{"ratio2", "=", 
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1.2`"}], 
                    "}"}], ",", 
                    RowBox[{"{", "kmax2", "}"}]}], "]"}]}], ";", 
                  RowBox[{"EPCAMexp", "=", "1"}], ";", 
                  RowBox[{"CD47exp", "=", "1"}], ";", 
                  RowBox[{"CD44exp", "=", "1"}], ";", 
                  RowBox[{"METexp", "=", "1"}], ";", 
                  RowBox[{"EPCAMcnt", "=", "1"}], ";", 
                  RowBox[{"CD47cnt", "=", "1"}], ";", 
                  RowBox[{"CD44cnt", "=", "1"}], ";", 
                  RowBox[{"METcnt", "=", "1"}], ";", 
                  RowBox[{"expG2", "=", 
                   RowBox[{"{", 
                    RowBox[{
                    "EPCAMexp", ",", "CD47exp", ",", "CD44exp", ",", "METexp",
                     ",", "1"}], "}"}]}], ";", 
                  RowBox[{"cntG2", "=", 
                   RowBox[{"{", 
                    RowBox[{
                    "EPCAMcnt", ",", "CD47cnt", ",", "CD44cnt", ",", "METcnt",
                     ",", "1"}], "}"}]}], ";", 
                  RowBox[{"compkeystep2", "=", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "4"}], "}"}]}], ";", 
                  RowBox[{"signature2", "=", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "0"}], 
                    "}"}]}], ";", 
                  RowBox[{"maxsemidrivermut2", "=", "6"}], ";", 
                  RowBox[{"maxnondrivermut2", "=", "6"}], ";", 
                  RowBox[{"maxmjump2", "=", "5"}], ";", 
                  RowBox[{"maxtjump2", "=", "10"}], ";", 
                  RowBox[{"Ntot2", "=", "10"}], ";", 
                  RowBox[{"Nmax2", "=", "150"}], ";", 
                  RowBox[{"scegli2", "=", "0"}], ";", 
                  RowBox[{"ctmax2", "=", "100"}], ";", 
                  RowBox[{"tmax2", "=", "30"}], ";", 
                  RowBox[{"sims", "=", 
                   RowBox[{"Internal`Bag", "[", 
                    RowBox[{"Most", "[", 
                    RowBox[{"{", "1.`", "}"}], "]"}], "]"}]}], ";", 
                  RowBox[{"simslen", "=", 
                   RowBox[{"Internal`Bag", "[", 
                    RowBox[{"Most", "[", 
                    RowBox[{"{", "1.`", "}"}], "]"}], "]"}]}], ";", 
                  RowBox[{"ctsims", "=", "0"}], ";", 
                  RowBox[{"While", "[", 
                   RowBox[{
                    RowBox[{"ctsims", "<", "Nsims"}], ",", 
                    RowBox[{
                    RowBox[{"ctsims", "=", 
                    RowBox[{"ctsims", "+", "1"}]}], ";", 
                    RowBox[{"rawresults", "=", 
                    RowBox[{
                    InterpretationBox[
                    RowBox[{
                    TagBox["CompiledFunction",
                    "SummaryHead"], "[", 
                    DynamicModuleBox[{Typeset`open$$ = False}, 
                    PanelBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    PaneBox[
                    ButtonBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]],
                    Appearance->None,
                    ButtonFunction:>(Typeset`open$$ = True),
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    Alignment->{Center, Center},
                    
                    ImageSize->Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[
                    {Thickness[0.038461538461538464`], 
                    {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, 
                    {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3,
                     3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    
                    "]]}},
                    AspectRatio->1,
                    Axes->False,
                    Background->GrayLevel[0.93],
                    Frame->True,
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]],
                    FrameTicks->None,
                    ImageSize->{Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], 
                    GridBox[{
                    {
                    RowBox[{
                    TagBox["\<\"Argument count: \"\>",
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["23",
                    "SummaryItem"]}]},
                    {
                    RowBox[{
                    TagBox["\<\"Argument types: \"\>",
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{
                    "_Integer", ",", "_Integer", ",", "_Integer", ",", 
                    "_Integer", ",", "_Integer", ",", "_Integer", ",", 
                    "_Integer", ",", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "1"}], "}"}], ",", "_Integer", ",", 
                    "_Integer", ",", "_Integer", ",", "_Integer", ",", 
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "1"}], "}"}], ",", "_Real", ",", 
                    "_Real", ",", "_Real", ",", "_Real", ",", 
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "2"}], "}"}]}], "}"}],
                    BaselinePosition->Baseline,
                    ContentPadding->False,
                    FrameMargins->0,
                    ImageSize->{{1, 300}, Automatic},
                    StripOnInput->True],
                    LineBreakWithin->False],
                    "SummaryItem"]}]}
                    },
                    AutoDelete->False,
                    
                    BaseStyle->{ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Rows" -> {{Top}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    True->GridBox[{
                    {
                    PaneBox[
                    ButtonBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]],
                    Appearance->None,
                    ButtonFunction:>(Typeset`open$$ = False),
                    Evaluator->Automatic,
                    Method->"Preemptive"],
                    Alignment->{Center, Center},
                    
                    ImageSize->Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[
                    {Thickness[0.038461538461538464`], 
                    {FaceForm[{GrayLevel[0.93], Opacity[1.]}], 
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                    25.499999999999996`, 2.5}, {25.499999999999996`, 
                    1.3953100000000003`}, {24.604699999999998`, 
                    0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5,
                     0.49999999999999994`}, {1.3953100000000003`, 
                    0.49999999999999994`}, {0.49999999999999994`, 
                    1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                    0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                    24.604699999999998`}, {1.3953100000000003`, 
                    25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                    25.499999999999996`}, {24.604699999999998`, 
                    25.499999999999996`}, {25.499999999999996`, 
                    24.604699999999998`}, {25.499999999999996`, 23.5}, {
                    25.499999999999996`, 2.5}}}]}, 
                    {FaceForm[{RGBColor[0.5, 0.5, 0.5], Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                    19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                    16.3832, 20.021499999999996`}, {6.930469999999999, 
                    20.021499999999996`}, {6.930469999999999, 
                    18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                    16.3832, 16.357399999999995`}, {20.5426, 
                    19.116799999999998`}}}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 
                    13.8391}, {9.46445, 11.079700000000003`}, {9.46445, 
                    12.933999999999997`}, {18.917199999999998`, 
                    12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                    9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 
                    13.8391}}}], FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3,
                     3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                    
                    "]]}},
                    AspectRatio->1,
                    Axes->False,
                    Background->GrayLevel[0.93],
                    Frame->True,
                    FrameStyle->Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]],
                    FrameTicks->None,
                    ImageSize->{Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]), ImageSizeCache -> {45., {0., 9.}}]}], 
                    GridBox[{
                    {
                    RowBox[{
                    TagBox["\<\"Argument count: \"\>",
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["23",
                    "SummaryItem"]}]},
                    {
                    RowBox[{
                    TagBox["\<\"Argument types: \"\>",
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"{", 
                    RowBox[{
                    "_Integer", ",", "_Integer", ",", "_Integer", ",", 
                    "_Integer", ",", "_Integer", ",", "_Integer", ",", 
                    "_Integer", ",", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "1"}], "}"}], ",", "_Integer", ",", 
                    "_Integer", ",", "_Integer", ",", "_Integer", ",", 
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "1"}], "}"}], ",", "_Real", ",", 
                    "_Real", ",", "_Real", ",", "_Real", ",", 
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "2"}], "}"}]}], "}"}],
                    BaselinePosition->Baseline,
                    ContentPadding->False,
                    FrameMargins->0,
                    ImageSize->{{1, 500}, Automatic},
                    StripOnInput->True],
                    "SummaryItem"]}]},
                    {
                    RowBox[{
                    TagBox["\<\"Variables: \"\>",
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    "NtotE", ",", "Nmax", ",", "scegli", ",", "kmax", ",", 
                    "imax", ",", "maxsemidrivermut", ",", "maxnondrivermut", 
                    ",", "signature", ",", "compkeystep", ",", "expG", ",", 
                    "cntG", ",", "ctmax", ",", "tmax", ",", "maxmjump", ",", 
                    "maxtjump", ",", "Aasym", ",", "Asym", ",", "Aapop", ",", 
                    "Apass", ",", "cen", ",", "wide", ",", "slope", ",", 
                    "ratio"}], "}"}],
                    "SummaryItem"]}]},
                    {
                    RowBox[{
                    TagBox["\<\"Expression: \"\>",
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    PaneBox[
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "Compile`$35", ",", "Compile`$36", ",", "Compile`$37", 
                    ",", "Compile`$38", ",", "Compile`$88", ",", 
                    "Compile`$89", ",", "Compile`$90", ",", "Compile`$91", 
                    ",", "Compile`$92", ",", "Compile`$93", ",", 
                    "Compile`$94", ",", "Compile`$137", ",", "Compile`$135", 
                    ",", "Compile`$138", ",", "Compile`$139", ",", 
                    "Compile`$140", ",", "Compile`$252", ",", "Compile`$392", 
                    ",", "Compile`$522", ",", "Compile`$523", ",", 
                    "Compile`$524", ",", "Compile`$611", ",", "Compile`$609", 
                    ",", "Compile`$612", ",", "Compile`$613", ",", 
                    "Compile`$614"}], "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Ntot", ",", 
                    RowBox[{"Empty", "=", "0"}], ",", 
                    RowBox[{"Ncell", "=", 
                    RowBox[{"{", 
                    RowBox[{"{", "0", "}"}], "}"}]}], ",", 
                    RowBox[{"ord", "=", 
                    RowBox[{"{", "1", "}"}]}], ",", 
                    RowBox[{"times", "=", 
                    RowBox[{"{", "0.`", "}"}]}], ",", 
                    RowBox[{"state", "=", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0.`"}], "}"}], "}"}]}], ",", 
                    RowBox[{"Ccell", "=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
                    RowBox[{"t", "=", "0.`"}], ",", 
                    RowBox[{"ct", "=", "0"}], ",", "maxdrivermut", ",", 
                    "smv0", ",", "state0", ",", "sstate0", ",", "Cmut", ",", 
                    "genes", ",", 
                    RowBox[{"krates", "=", 
                    RowBox[{"{", "1.`", "}"}]}], ",", 
                    RowBox[{"i", "=", "0"}], ",", 
                    RowBox[{"m", "=", "0"}], ",", 
                    RowBox[{"mv", "=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
                    "}"}]}], ",", 
                    RowBox[{"p", "=", "0.1`"}], ",", 
                    RowBox[{"r", "=", "0.1`"}], ",", 
                    RowBox[{"mv0", "=", 
                    RowBox[{"{", "0", "}"}]}], ",", 
                    RowBox[{"imkmv", "=", 
                    RowBox[{"{", "0", "}"}]}], ",", 
                    RowBox[{"in", "=", "0"}], ",", 
                    RowBox[{"fn", "=", "0"}], ",", 
                    RowBox[{"mid", "=", "0"}], ",", 
                    RowBox[{"midr", "=", "0.`"}], ",", 
                    RowBox[{"CT", "=", "False"}], ",", "statetmp1", ",", 
                    "statetmp2", ",", "NewNcell", ",", 
                    RowBox[{"\[CapitalDelta]i", "=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], ",", 
                    RowBox[{"\[CapitalDelta]Nc", "=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], ",", 
                    RowBox[{"\[CapitalDelta]Nc2", "=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], ",", 
                    RowBox[{"\[CapitalDelta]k", "=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], ",", 
                    RowBox[{"chooseiorm", "=", 
                    RowBox[{"{", "10", "}"}]}], ",", "ratescum", ",", 
                    "ratesn", ",", "stateslist", ",", "Ncslist", ",", 
                    "probslist", ",", "spprobslist", ",", "Ntslist", ",", 
                    "tslist", ",", "key", ",", "ss", ",", "keyg", ",", 
                    "rates", ",", "rcum1", ",", "nondriverspace", ",", 
                    "semidriverspace", ",", "driverspace", ",", "space", ",", 
                    "spaceprob"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"maxdrivermut", "=", 
                    RowBox[{"imax", "-", "1"}]}], ";", 
                    RowBox[{"mv0", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "imax"}], "}"}]}], "]"}]}], ";", 
                    RowBox[{"state0", "=", 
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"imax", "+", "3"}]}], "}"}]}], "]"}]}], ";", 
                    RowBox[{"Cmut", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"1", ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "maxdrivermut"}], "}"}]}], "]"}], ",", 
                    RowBox[{"{", "maxsemidrivermut", "}"}]}], "]"}]}], ";", 
                    RowBox[{"genes", "=", 
                    FractionBox["expG", "cntG"]}], ";", 
                    RowBox[{"krates", "=", 
                    RowBox[{"Apass", " ", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"1", ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"kmax", "-", "1"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{"{", "0", "}"}]}], "]"}]}]}], ";", 
                    RowBox[{"Ntot", "=", "NtotE"}], ";", 
                    RowBox[{"Empty", "=", 
                    RowBox[{"Nmax", "-", "Ntot", "-", "scegli"}]}], ";", 
                    RowBox[{"Ncell", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"Ntot", ",", "0", ",", "0", ",", "0", ",", "0"}], 
                    "}"}], "}"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{"mv0", ",", 
                    RowBox[{"{", 
                    RowBox[{"l", ",", "1", ",", 
                    RowBox[{"kmax", "-", "1"}]}], "}"}]}], "]"}]}], "]"}]}], 
                    ";", 
                    RowBox[{"state", "=", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"m", "=", "0"}], ",", 
                    RowBox[{"k", "=", "1"}], ",", 
                    RowBox[{"mv", "=", "mv0"}], ",", 
                    RowBox[{"s", "=", "0.`"}], ",", 
                    RowBox[{"rnn", "=", 
                    RowBox[{"{", "0.`", "}"}]}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"s", "=", 
                    FractionBox[
                    RowBox[{"2", " ", "\[ExponentialE]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"10.`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Plus", "@@", 
                    RowBox[{"mv", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{
                    "compkeystep", "\[LeftDoubleBracket]", "k", 
                    "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}]}], 
                    "+", "1"}], ")"}]}], 
                    RowBox[{"10", " ", 
                    RowBox[{"Exp", "[", 
                    FractionBox[
                    SuperscriptBox["m", "0.5`"], "2"], "]"}]}]]}], "]"}]}], 
                    "]"}], "-", 
                    FractionBox["1", "\[ExponentialE]"]}], ")"}]}], 
                    RowBox[{"\[ExponentialE]", "-", "1"}]]}], ";", 
                    RowBox[{"rnn", "=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Compile`$35", "=", 
                    RowBox[{"-", "wide"}]}], ";", 
                    RowBox[{"Compile`$36", "=", 
                    FractionBox["1", "2"]}], ";", 
                    RowBox[{"Compile`$37", "=", 
                    RowBox[{"Compile`$35", " ", "Compile`$36"}]}], ";", 
                    RowBox[{"Compile`$38", "=", 
                    SuperscriptBox["\[ExponentialE]", "Compile`$37"]}], ";", 
                    RowBox[{"Accumulate", "[", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "Aasym", "\[LeftDoubleBracket]", "k", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"slope", " ", "Compile`$38", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cosh", "[", 
                    RowBox[{"Compile`$35", " ", 
                    RowBox[{"(", 
                    RowBox[{"s", "-", "2.`"}], ")"}]}], "]"}], "-", "1"}], 
                    ")"}]}], ")"}]}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "Asym", "\[LeftDoubleBracket]", "k", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"slope", " ", "Compile`$38", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cosh", "[", 
                    RowBox[{"Compile`$35", " ", 
                    RowBox[{"(", 
                    RowBox[{"s", "-", "1.`"}], ")"}]}], "]"}], "-", "1"}], 
                    ")"}]}], ")"}]}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "Aapop", "\[LeftDoubleBracket]", "k", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"slope", " ", "Compile`$38", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cosh", "[", 
                    RowBox[{"Compile`$35", " ", 
                    RowBox[{"(", 
                    RowBox[{"s", "-", "0.5`"}], ")"}]}], "]"}], "-", "1"}], 
                    ")"}]}], ")"}]}], "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "krates", "\[LeftDoubleBracket]", "k", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"Times", "@@", 
                    RowBox[{
                    SuperscriptBox["genes", 
                    RowBox[{"mv", " ", "signature"}]], "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{
                    "compkeystep", "\[LeftDoubleBracket]", "k", 
                    "\[RightDoubleBracket]"}]}], 
                    "\[RightDoubleBracket]"}]}]}], "}"}]}], "]"}], "]"}]}], 
                    ")"}]}], ";", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"1.`", " ", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", "mv0"}], 
                    "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"k", ",", "1", ",", 
                    RowBox[{"Nmax", "+", "2"}]}], "}"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Nmax", "+", "2"}], ",", "1"}], "}"}]}], "]"}], 
                    "]"}], 
                    RowBox[{"rnn", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]]}], "+", 
                    "t"}], ",", "2"}], "]"}]}]}], "]"}]}], ";", 
                    RowBox[{"Ccell", "=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Compile`$88", "=", 
                    RowBox[{"-", "Ntot"}]}], ";", 
                    RowBox[{"Compile`$89", "=", 
                    RowBox[{"-", "Empty"}]}], ";", 
                    RowBox[{"Compile`$90", "=", 
                    RowBox[{
                    "Nmax", "+", "Compile`$88", "+", "Compile`$89"}]}], ";", 
                    RowBox[{"Compile`$91", "=", 
                    FractionBox["1", "2"]}], ";", 
                    RowBox[{"Compile`$92", "=", 
                    RowBox[{"Compile`$90", " ", "Compile`$91"}]}], ";", 
                    RowBox[{"Compile`$93", "=", 
                    RowBox[{"Floor", "[", "Compile`$92", "]"}]}], ";", 
                    RowBox[{"Compile`$94", "=", 
                    RowBox[{"Max", "[", 
                    RowBox[{"0", ",", "Compile`$93"}], "]"}]}], ";", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Floor", "[", 
                    RowBox[{"Ntot", "+", "Empty"}], "]"}], ",", "Compile`$94",
                     ",", "Compile`$94"}], "}"}]}], ")"}]}], ";", 
                    RowBox[{"times", "=", 
                    RowBox[{
                    RowBox[{"Transpose", "[", "state", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"ord", "=", 
                    RowBox[{"Ordering", "[", "times", "]"}]}], ";", 
                    RowBox[{"state", "=", 
                    RowBox[{
                    "state", "\[LeftDoubleBracket]", "ord", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"imkmv", "=", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", 
                    RowBox[{"1", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}]}], 
                    "\[RightDoubleBracket]"}], "]"}]}], ";", 
                    RowBox[{"key", "=", 
                    RowBox[{"Plus", "@@", 
                    RowBox[{
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{"compkeystep", "\[LeftDoubleBracket]", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}], 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"ss", "=", 
                    FractionBox[
                    RowBox[{"2", " ", "\[ExponentialE]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"10.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"key", "+", "1"}], ")"}]}], 
                    RowBox[{"10", " ", 
                    RowBox[{"Exp", "[", 
                    FractionBox[
                    SuperscriptBox[
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "0.5`"], "2"], "]"}]}]]}], 
                    "]"}]}], "]"}], "-", 
                    FractionBox["1", "\[ExponentialE]"]}], ")"}]}], 
                    RowBox[{"\[ExponentialE]", "-", "1"}]]}], ";", 
                    RowBox[{"keyg", "=", 
                    RowBox[{"Times", "@@", 
                    RowBox[{
                    SuperscriptBox["genes", 
                    RowBox[{
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], " ", 
                    "signature"}]], "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{"compkeystep", "\[LeftDoubleBracket]", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}], 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"rates", "=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Compile`$137", "=", 
                    RowBox[{"-", "wide"}]}], ";", 
                    RowBox[{"Compile`$135", "=", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"Compile`$138", "=", 
                    FractionBox["1", "2"]}], ";", 
                    RowBox[{"Compile`$139", "=", 
                    RowBox[{"Compile`$137", " ", "Compile`$138"}]}], ";", 
                    RowBox[{"Compile`$140", "=", 
                    SuperscriptBox["\[ExponentialE]", "Compile`$139"]}], ";", 
                    
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "Aasym", "\[LeftDoubleBracket]", "Compile`$135", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"slope", " ", "Compile`$140", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cosh", "[", 
                    RowBox[{"Compile`$137", " ", 
                    RowBox[{"(", 
                    RowBox[{"ss", "-", "2.`"}], ")"}]}], "]"}], "-", "1"}], 
                    ")"}]}], ")"}]}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "Asym", "\[LeftDoubleBracket]", "Compile`$135", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"slope", " ", "Compile`$140", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cosh", "[", 
                    RowBox[{"Compile`$137", " ", 
                    RowBox[{"(", 
                    RowBox[{"ss", "-", "1.`"}], ")"}]}], "]"}], "-", "1"}], 
                    ")"}]}], ")"}]}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "Aapop", "\[LeftDoubleBracket]", "Compile`$135", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"slope", " ", "Compile`$140", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cosh", "[", 
                    RowBox[{"Compile`$137", " ", 
                    RowBox[{"(", 
                    RowBox[{"ss", "-", "0.5`"}], ")"}]}], "]"}], "-", "1"}], 
                    ")"}]}], ")"}]}], "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "krates", "\[LeftDoubleBracket]", "Compile`$135", 
                    "\[RightDoubleBracket]"}], " ", "keyg"}], "}"}]}], 
                    "]"}]}], ")"}]}], ";", 
                    RowBox[{"ratescum", "=", 
                    RowBox[{"Accumulate", "[", "rates", "]"}]}], ";", 
                    RowBox[{"rcum1", "=", 
                    RowBox[{"ratescum", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"ratesn", "=", 
                    FractionBox["rates", "rcum1"]}], ";", 
                    RowBox[{"nondriverspace", "=", 
                    RowBox[{"maxnondrivermut", "-", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"semidriverspace", "=", 
                    RowBox[{"maxsemidrivermut", "-", 
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"driverspace", "=", 
                    RowBox[{"maxdrivermut", "-", 
                    RowBox[{"Total", "[", 
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}], 
                    "]"}]}]}], ";", 
                    RowBox[{"space", "=", 
                    RowBox[{
                    "nondriverspace", "+", "semidriverspace", "+", 
                    "driverspace"}]}], ";", 
                    RowBox[{"spaceprob", "=", 
                    FractionBox[
                    RowBox[{"{", 
                    RowBox[{
                    "driverspace", ",", "semidriverspace", ",", 
                    "nondriverspace"}], "}"}], "space"]}], ";", 
                    RowBox[{"stateslist", "=", 
                    RowBox[{"Internal`Bag", "[", 
                    RowBox[{"Most", "[", 
                    RowBox[{"{", "1.`", "}"}], "]"}], "]"}]}], ";", 
                    RowBox[{"Ncslist", "=", 
                    RowBox[{"Internal`Bag", "[", 
                    RowBox[{"Most", "[", 
                    RowBox[{"{", "1.`", "}"}], "]"}], "]"}]}], ";", 
                    RowBox[{"probslist", "=", 
                    RowBox[{"Internal`Bag", "[", 
                    RowBox[{"Most", "[", 
                    RowBox[{"{", "1.`", "}"}], "]"}], "]"}]}], ";", 
                    RowBox[{"spprobslist", "=", 
                    RowBox[{"Internal`Bag", "[", 
                    RowBox[{"Most", "[", 
                    RowBox[{"{", "1.`", "}"}], "]"}], "]"}]}], ";", 
                    RowBox[{"Ntslist", "=", 
                    RowBox[{"Internal`Bag", "[", 
                    RowBox[{"Most", "[", 
                    RowBox[{"{", "1.`", "}"}], "]"}], "]"}]}], ";", 
                    RowBox[{"tslist", "=", 
                    RowBox[{"Internal`Bag", "[", 
                    RowBox[{"Most", "[", 
                    RowBox[{"{", "1.`", "}"}], "]"}], "]"}]}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", "state", ",", "2"}], "]"}], 
                    ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"Ncslist", ",", "Ncell", ",", "2"}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"probslist", ",", "ratesn", ",", "2"}], "]"}], 
                    ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"spprobslist", ",", "spaceprob", ",", "2"}], 
                    "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"Ntslist", ",", "Ntot"}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"tslist", ",", "t"}], "]"}], ";", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "<", 
                    "tmax"}], "&&", 
                    RowBox[{"ct", "<", "ctmax"}], "&&", 
                    RowBox[{"Ntot", ">", "0"}]}], ",", 
                    RowBox[{
                    RowBox[{"ct", "+=", "1"}], ";", 
                    RowBox[{"t", "=", 
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", "probc", "}"}], ",", 
                    RowBox[{
                    RowBox[{"probc", "=", 
                    RowBox[{"Accumulate", "[", "ratesn", "]"}]}], ";", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "<", 
                    RowBox[{
                    "probc", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"statetmp1", "=", 
                    RowBox[{"{", "0.`", "}"}]}], ",", 
                    RowBox[{"statetmp2", "=", 
                    RowBox[{"{", "0.`", "}"}]}], ",", 
                    RowBox[{"chooseiorm", "=", 
                    RowBox[{"{", "0", "}"}]}], ",", "\[CapitalDelta]i", ",", 
                    "\[CapitalDelta]Nc", ",", "NewNcell", ",", "CT"}], "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"statetmp2", "=", 
                    RowBox[{"1.`", " ", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "}"}], ",", 
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", "t", "}"}]}], "]"}]}]}], ";", 
                    RowBox[{"chooseiorm", "=", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"nondriverspace", "=", "0"}], ",", 
                    RowBox[{"space", "=", "0"}], ",", 
                    RowBox[{"currentmut", "=", "0"}], ",", 
                    RowBox[{"range", "=", 
                    RowBox[{"{", "0", "}"}]}], ",", 
                    RowBox[{"mut", "=", "0"}], ",", 
                    RowBox[{"gm", "=", "0"}], ",", 
                    RowBox[{"dmv", "=", "mv0"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"nondriverspace", "=", 
                    RowBox[{"maxnondrivermut", "-", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"space", "=", 
                    RowBox[{"maxsemidrivermut", "+", "maxdrivermut", "-", 
                    RowBox[{"Total", "[", 
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}], 
                    "\[RightDoubleBracket]"}], "]"}], "+", 
                    "nondriverspace"}]}], ";", 
                    RowBox[{"currentmut", "=", 
                    RowBox[{
                    RowBox[{"RandomInteger", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"1", ",", "space"}], "]"}], ",", "space"}], "}"}],
                     "]"}], "-", "nondriverspace"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"currentmut", ">", "0"}], ",", 
                    RowBox[{
                    RowBox[{"range", "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", "imax", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}], 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "#1", 
                    "\[RightDoubleBracket]"}], "<", 
                    RowBox[{
                    "Cmut", "\[LeftDoubleBracket]", "#1", 
                    "\[RightDoubleBracket]"}]}], "&"}]}], "]"}]}], ";", 
                    RowBox[{"mut", "=", 
                    RowBox[{"range", "\[LeftDoubleBracket]", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"Length", "[", "range", "]"}], ",", 
                    "currentmut"}], "]"}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{
                    RowBox[{
                    "dmv", "\[LeftDoubleBracket]", "mut", 
                    "\[RightDoubleBracket]"}], "+=", "1"}]}], ",", 
                    RowBox[{"gm", "=", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{"RandomInteger", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "maxmjump"}], "}"}], "]"}], "]"}]}]}], 
                    "]"}], ";", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Total", "[", 
                    RowBox[{"Most", "[", "dmv", "]"}], "]"}], ",", 
                    RowBox[{"Min", "[", 
                    RowBox[{"gm", ",", "nondriverspace"}], "]"}], ",", "0"}], 
                    "}"}], ",", "dmv"}], "]"}]}]}], "]"}]}], ";", 
                    RowBox[{"NewNcell", "=", "Ncell"}], ";", 
                    RowBox[{"\[CapitalDelta]i", "=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"First", "[", "chooseiorm", "]"}]}], "}"}]}], ";", 
                    RowBox[{"\[CapitalDelta]Nc", "=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], ";", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"NewNcell", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", "1", "+", "#1"}]}], 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{
                    RowBox[{"NewNcell", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", "1", "+", "#1"}]}], 
                    "\[RightDoubleBracket]"}], "+", "#2"}]}], ")"}], "&"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\[CapitalDelta]i", ",", "\[CapitalDelta]Nc"}], 
                    "}"}]}], "]"}], ";", 
                    RowBox[{"CT", "=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Compile`$252", "=", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "Ccell", "\[LeftDoubleBracket]", "Compile`$252", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    RowBox[{
                    "NewNcell", "\[LeftDoubleBracket]", "Compile`$252", 
                    "\[RightDoubleBracket]"}], ".", 
                    RowBox[{
                    "ratio", "\[LeftDoubleBracket]", "Compile`$252", 
                    "\[RightDoubleBracket]"}]}]}], "\[GreaterEqual]", "0"}]}],
                     ")"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"CT", ",", 
                    RowBox[{
                    RowBox[{"Ncell", "=", "NewNcell"}], ";", 
                    RowBox[{"statetmp1", "=", 
                    RowBox[{"statetmp2", "+", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "mv0", ",", 
                    RowBox[{"{", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}], "rcum1"]}], 
                    "}"}]}], "]"}]}]}], ";", 
                    RowBox[{"statetmp2", "=", 
                    RowBox[{"statetmp2", "+", 
                    RowBox[{"Join", "[", 
                    RowBox[{"chooseiorm", ",", 
                    RowBox[{"{", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}], "rcum1"]}], 
                    "}"}]}], "]"}]}]}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mid", "=", "1"}], ";", 
                    RowBox[{"midr", "=", "1.`"}], ";", 
                    RowBox[{"in", "=", "2"}], ";", 
                    RowBox[{"fn", "=", "Ntot"}], ";", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"midr", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"fn", "+", "1", "-", "in"}], ")"}], " ", 
                    "0.5`"}]}], ";", 
                    RowBox[{"midr", "\[GreaterEqual]", "1"}]}], ",", 
                    RowBox[{
                    RowBox[{"mid", "=", 
                    RowBox[{
                    RowBox[{"IntegerPart", "[", "midr", "]"}], "+", "in"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"mid", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ">", 
                    RowBox[{"statetmp1", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "=", 
                    RowBox[{"mid", "-", "1"}]}], ",", 
                    RowBox[{"in", "=", 
                    RowBox[{"mid", "+", "1"}]}]}], "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"midr", "\[LessEqual]", "0"}], ",", 
                    RowBox[{"fn", "+=", "1"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "<", 
                    RowBox[{"statetmp1", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "+=", "1"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"fn", ">", "2"}], ",", 
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{"fn", "-", "2"}]}], "\[RightDoubleBracket]"}], 
                    "=", 
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ";;", 
                    RowBox[{"fn", "-", "1"}]}], "\[RightDoubleBracket]"}]}]}],
                     "]"}], ";", 
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", "-", "1"}], "\[RightDoubleBracket]"}], "=", 
                    "statetmp1"}]}], ")"}]}], ")"}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mid", "=", "1"}], ";", 
                    RowBox[{"midr", "=", "1.`"}], ";", 
                    RowBox[{"in", "=", "1"}], ";", 
                    RowBox[{"fn", "=", "Ntot"}], ";", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"midr", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"fn", "+", "1", "-", "in"}], ")"}], " ", 
                    "0.5`"}]}], ";", 
                    RowBox[{"midr", "\[GreaterEqual]", "1"}]}], ",", 
                    RowBox[{
                    RowBox[{"mid", "=", 
                    RowBox[{
                    RowBox[{"IntegerPart", "[", "midr", "]"}], "+", "in"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"mid", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ">", 
                    RowBox[{"statetmp2", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "=", 
                    RowBox[{"mid", "-", "1"}]}], ",", 
                    RowBox[{"in", "=", 
                    RowBox[{"mid", "+", "1"}]}]}], "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"midr", "\[LessEqual]", "0"}], ",", 
                    RowBox[{"fn", "+=", "1"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "<", 
                    RowBox[{"statetmp2", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "+=", "1"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"fn", "+", "1"}], ";;", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", ";;", 
                    RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{
                    RowBox[{
                    "state", "\[LeftDoubleBracket]", "fn", 
                    "\[RightDoubleBracket]"}], "=", "statetmp2"}]}], ")"}]}], 
                    ")"}], ";", 
                    RowBox[{"Ntot", "+=", "1"}], ";"}], ",", 
                    RowBox[{
                    RowBox[{"statetmp1", "=", 
                    RowBox[{"statetmp2", "+", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "mv0", ",", 
                    RowBox[{"{", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}], "rcum1"]}], 
                    "}"}]}], "]"}]}]}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mid", "=", "1"}], ";", 
                    RowBox[{"midr", "=", "1.`"}], ";", 
                    RowBox[{"in", "=", "2"}], ";", 
                    RowBox[{"fn", "=", "Ntot"}], ";", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"midr", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"fn", "+", "1", "-", "in"}], ")"}], " ", 
                    "0.5`"}]}], ";", 
                    RowBox[{"midr", "\[GreaterEqual]", "1"}]}], ",", 
                    RowBox[{
                    RowBox[{"mid", "=", 
                    RowBox[{
                    RowBox[{"IntegerPart", "[", "midr", "]"}], "+", "in"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"mid", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ">", 
                    RowBox[{"statetmp1", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "=", 
                    RowBox[{"mid", "-", "1"}]}], ",", 
                    RowBox[{"in", "=", 
                    RowBox[{"mid", "+", "1"}]}]}], "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"midr", "\[LessEqual]", "0"}], ",", 
                    RowBox[{"fn", "+=", "1"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "<", 
                    RowBox[{"statetmp1", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "+=", "1"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"fn", ">", "2"}], ",", 
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{"fn", "-", "2"}]}], "\[RightDoubleBracket]"}], 
                    "=", 
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ";;", 
                    RowBox[{"fn", "-", "1"}]}], "\[RightDoubleBracket]"}]}]}],
                     "]"}], ";", 
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", "-", "1"}], "\[RightDoubleBracket]"}], "=", 
                    "statetmp1"}]}], ")"}]}], ")"}], ";"}]}], "]"}], ";"}]}], 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "<", 
                    RowBox[{"probc", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"statetmp1", "=", 
                    RowBox[{"{", "0.`", "}"}]}], ",", 
                    RowBox[{"statetmp2", "=", 
                    RowBox[{"{", "0.`", "}"}]}], ",", 
                    RowBox[{"chooseiorm", "=", 
                    RowBox[{"{", "0", "}"}]}], ",", "\[CapitalDelta]i", ",", 
                    "\[CapitalDelta]Nc", ",", "NewNcell", ",", "CT"}], "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"statetmp2", "=", 
                    RowBox[{"1.`", " ", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "}"}], ",", 
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", "t", "}"}]}], "]"}]}]}], ";", 
                    RowBox[{"chooseiorm", "=", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"nondriverspace", "=", "0"}], ",", 
                    RowBox[{"space", "=", "0"}], ",", 
                    RowBox[{"currentmut", "=", "0"}], ",", 
                    RowBox[{"range", "=", 
                    RowBox[{"{", "0", "}"}]}], ",", 
                    RowBox[{"mut", "=", "0"}], ",", 
                    RowBox[{"gm", "=", "0"}], ",", 
                    RowBox[{"dmv", "=", "mv0"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"nondriverspace", "=", 
                    RowBox[{"maxnondrivermut", "-", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"space", "=", 
                    RowBox[{"maxsemidrivermut", "+", "maxdrivermut", "-", 
                    RowBox[{"Total", "[", 
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}], 
                    "\[RightDoubleBracket]"}], "]"}], "+", 
                    "nondriverspace"}]}], ";", 
                    RowBox[{"currentmut", "=", 
                    RowBox[{
                    RowBox[{"RandomInteger", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Min", "[", 
                    RowBox[{"1", ",", "space"}], "]"}], ",", "space"}], "}"}],
                     "]"}], "-", "nondriverspace"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"currentmut", ">", "0"}], ",", 
                    RowBox[{
                    RowBox[{"range", "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", "imax", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}], 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "#1", 
                    "\[RightDoubleBracket]"}], "<", 
                    RowBox[{"Cmut", "\[LeftDoubleBracket]", "#1", 
                    "\[RightDoubleBracket]"}]}], "&"}]}], "]"}]}], ";", 
                    RowBox[{"mut", "=", 
                    RowBox[{"range", "\[LeftDoubleBracket]", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"Length", "[", "range", "]"}], ",", 
                    "currentmut"}], "]"}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{
                    RowBox[{
                    "dmv", "\[LeftDoubleBracket]", "mut", 
                    "\[RightDoubleBracket]"}], "+=", "1"}]}], ",", 
                    RowBox[{"gm", "=", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{"RandomInteger", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "maxmjump"}], "}"}], "]"}], "]"}]}]}], 
                    "]"}], ";", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Total", "[", 
                    RowBox[{"Most", "[", "dmv", "]"}], "]"}], ",", 
                    RowBox[{"Min", "[", 
                    RowBox[{"gm", ",", "nondriverspace"}], "]"}], ",", "0"}], 
                    "}"}], ",", "dmv"}], "]"}]}]}], "]"}]}], ";", 
                    RowBox[{"NewNcell", "=", "Ncell"}], ";", 
                    RowBox[{"\[CapitalDelta]i", "=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"First", "[", "chooseiorm", "]"}]}], "}"}]}], ";", 
                    RowBox[{"\[CapitalDelta]Nc", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "}"}]}], ";", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"NewNcell", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", "1", "+", "#1"}]}], 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{
                    RowBox[{"NewNcell", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", "1", "+", "#1"}]}], 
                    "\[RightDoubleBracket]"}], "+", "#2"}]}], ")"}], "&"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\[CapitalDelta]i", ",", "\[CapitalDelta]Nc"}], 
                    "}"}]}], "]"}], ";", 
                    RowBox[{"CT", "=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Compile`$392", "=", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "Ccell", "\[LeftDoubleBracket]", "Compile`$392", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    RowBox[{
                    "NewNcell", "\[LeftDoubleBracket]", "Compile`$392", 
                    "\[RightDoubleBracket]"}], ".", 
                    RowBox[{
                    "ratio", "\[LeftDoubleBracket]", "Compile`$392", 
                    "\[RightDoubleBracket]"}]}]}], "\[GreaterEqual]", "0"}]}],
                     ")"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"CT", ",", 
                    RowBox[{
                    RowBox[{"Ncell", "=", "NewNcell"}], ";", 
                    RowBox[{"statetmp1", "=", 
                    RowBox[{"statetmp2", "+", 
                    RowBox[{"Join", "[", 
                    RowBox[{"chooseiorm", ",", 
                    RowBox[{"{", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}], "rcum1"]}], 
                    "}"}]}], "]"}]}]}], ";", 
                    RowBox[{"statetmp2", "=", 
                    RowBox[{"statetmp2", "+", 
                    RowBox[{"Join", "[", 
                    RowBox[{"chooseiorm", ",", 
                    RowBox[{"{", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}], "rcum1"]}], 
                    "}"}]}], "]"}]}]}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mid", "=", "1"}], ";", 
                    RowBox[{"midr", "=", "1.`"}], ";", 
                    RowBox[{"in", "=", "2"}], ";", 
                    RowBox[{"fn", "=", "Ntot"}], ";", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"midr", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"fn", "+", "1", "-", "in"}], ")"}], " ", 
                    "0.5`"}]}], ";", 
                    RowBox[{"midr", "\[GreaterEqual]", "1"}]}], ",", 
                    RowBox[{
                    RowBox[{"mid", "=", 
                    RowBox[{
                    RowBox[{"IntegerPart", "[", "midr", "]"}], "+", "in"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"mid", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ">", 
                    RowBox[{"statetmp1", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "=", 
                    RowBox[{"mid", "-", "1"}]}], ",", 
                    RowBox[{"in", "=", 
                    RowBox[{"mid", "+", "1"}]}]}], "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"midr", "\[LessEqual]", "0"}], ",", 
                    RowBox[{"fn", "+=", "1"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "<", 
                    RowBox[{"statetmp1", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "+=", "1"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"fn", ">", "2"}], ",", 
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{"fn", "-", "2"}]}], "\[RightDoubleBracket]"}], 
                    "=", 
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ";;", 
                    RowBox[{"fn", "-", "1"}]}], "\[RightDoubleBracket]"}]}]}],
                     "]"}], ";", 
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", "-", "1"}], "\[RightDoubleBracket]"}], "=", 
                    "statetmp1"}]}], ")"}]}], ")"}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mid", "=", "1"}], ";", 
                    RowBox[{"midr", "=", "1.`"}], ";", 
                    RowBox[{"in", "=", "1"}], ";", 
                    RowBox[{"fn", "=", "Ntot"}], ";", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"midr", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"fn", "+", "1", "-", "in"}], ")"}], " ", 
                    "0.5`"}]}], ";", 
                    RowBox[{"midr", "\[GreaterEqual]", "1"}]}], ",", 
                    RowBox[{
                    RowBox[{"mid", "=", 
                    RowBox[{
                    RowBox[{"IntegerPart", "[", "midr", "]"}], "+", "in"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"mid", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ">", 
                    RowBox[{"statetmp2", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "=", 
                    RowBox[{"mid", "-", "1"}]}], ",", 
                    RowBox[{"in", "=", 
                    RowBox[{"mid", "+", "1"}]}]}], "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"midr", "\[LessEqual]", "0"}], ",", 
                    RowBox[{"fn", "+=", "1"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "<", 
                    RowBox[{"statetmp2", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "+=", "1"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"fn", "+", "1"}], ";;", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", ";;", 
                    RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{
                    RowBox[{
                    "state", "\[LeftDoubleBracket]", "fn", 
                    "\[RightDoubleBracket]"}], "=", "statetmp2"}]}], ")"}]}], 
                    ")"}], ";", 
                    RowBox[{"Ntot", "+=", "1"}], ";"}], ",", 
                    RowBox[{
                    RowBox[{"statetmp1", "=", 
                    RowBox[{"statetmp2", "+", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "mv0", ",", 
                    RowBox[{"{", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}], "rcum1"]}], 
                    "}"}]}], "]"}]}]}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mid", "=", "1"}], ";", 
                    RowBox[{"midr", "=", "1.`"}], ";", 
                    RowBox[{"in", "=", "2"}], ";", 
                    RowBox[{"fn", "=", "Ntot"}], ";", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"midr", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"fn", "+", "1", "-", "in"}], ")"}], " ", 
                    "0.5`"}]}], ";", 
                    RowBox[{"midr", "\[GreaterEqual]", "1"}]}], ",", 
                    RowBox[{
                    RowBox[{"mid", "=", 
                    RowBox[{
                    RowBox[{"IntegerPart", "[", "midr", "]"}], "+", "in"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"mid", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ">", 
                    RowBox[{"statetmp1", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "=", 
                    RowBox[{"mid", "-", "1"}]}], ",", 
                    RowBox[{"in", "=", 
                    RowBox[{"mid", "+", "1"}]}]}], "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"midr", "\[LessEqual]", "0"}], ",", 
                    RowBox[{"fn", "+=", "1"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "<", 
                    RowBox[{"statetmp1", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "+=", "1"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"fn", ">", "2"}], ",", 
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{"fn", "-", "2"}]}], "\[RightDoubleBracket]"}], 
                    "=", 
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ";;", 
                    RowBox[{"fn", "-", "1"}]}], "\[RightDoubleBracket]"}]}]}],
                     "]"}], ";", 
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", "-", "1"}], "\[RightDoubleBracket]"}], "=", 
                    "statetmp1"}]}], ")"}]}], ")"}], ";"}]}], "]"}], ";"}]}], 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "<", 
                    RowBox[{
                    "probc", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[CapitalDelta]i", ",", "\[CapitalDelta]Nc"}], 
                    "}"}], ",", 
                    RowBox[{
                    RowBox[{"\[CapitalDelta]i", "=", 
                    RowBox[{"{", "0", "}"}]}], ";", 
                    RowBox[{"\[CapitalDelta]Nc", "=", 
                    RowBox[{"{", 
                    RowBox[{"-", "1"}], "}"}]}], ";", 
                    RowBox[{
                    RowBox[{"Ncell", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", "1", "+", 
                    RowBox[{
                    "\[CapitalDelta]i", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}], "\[RightDoubleBracket]"}], 
                    "=", 
                    RowBox[{
                    RowBox[{"Ncell", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", "1", "+", 
                    RowBox[{
                    "\[CapitalDelta]i", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}], "\[RightDoubleBracket]"}], 
                    "+", 
                    RowBox[{"\[CapitalDelta]Nc", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ";;", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}]}], ";"}], 
                    ")"}], ";", 
                    RowBox[{"Ntot", "-=", "1"}], ";"}]}], "]"}], ",", "True", 
                    ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"statetmp1", "=", 
                    RowBox[{"{", "0.`", "}"}]}], ",", 
                    RowBox[{"statetmp2", "=", 
                    RowBox[{"{", "0.`", "}"}]}], ",", "chooseiorm", ",", 
                    "\[CapitalDelta]i", ",", "\[CapitalDelta]Nc", ",", 
                    "\[CapitalDelta]k", ",", "NewNcell", ",", "CT"}], "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"CT", "=", "False"}], ";", 
                    RowBox[{"statetmp1", "=", 
                    RowBox[{"1.`", " ", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "}"}], ",", 
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", "t", "}"}]}], "]"}]}]}], ";", 
                    RowBox[{"NewNcell", "=", "Ncell"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "<", "kmax"}], ",", 
                    RowBox[{
                    RowBox[{"\[CapitalDelta]i", "=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], ";", 
                    RowBox[{"\[CapitalDelta]Nc", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ";", 
                    RowBox[{"\[CapitalDelta]k", "=", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], ";", 
                    RowBox[{
                    RowBox[{"NewNcell", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "+", 
                    RowBox[{
                    "\[CapitalDelta]k", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", "1", "+", 
                    RowBox[{
                    "\[CapitalDelta]i", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}], "\[RightDoubleBracket]"}], 
                    "=", 
                    RowBox[{
                    RowBox[{"NewNcell", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "+", 
                    RowBox[{
                    "\[CapitalDelta]k", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", "1", "+", 
                    RowBox[{
                    "\[CapitalDelta]i", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}], "\[RightDoubleBracket]"}], 
                    "+", 
                    RowBox[{"\[CapitalDelta]Nc", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{
                    RowBox[{"NewNcell", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "+", 
                    RowBox[{
                    "\[CapitalDelta]k", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", "1", "+", 
                    RowBox[{
                    "\[CapitalDelta]i", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "\[RightDoubleBracket]"}], 
                    "=", 
                    RowBox[{
                    RowBox[{"NewNcell", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "+", 
                    RowBox[{
                    "\[CapitalDelta]k", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", "1", "+", 
                    RowBox[{
                    "\[CapitalDelta]i", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "\[RightDoubleBracket]"}], 
                    "+", 
                    RowBox[{"\[CapitalDelta]Nc", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"CT", "=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Compile`$522", "=", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"Compile`$523", "=", 
                    RowBox[{"Last", "[", "\[CapitalDelta]k", "]"}]}], ";", 
                    RowBox[{"Compile`$524", "=", 
                    RowBox[{"Compile`$522", "+", "Compile`$523"}]}], ";", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "Ccell", "\[LeftDoubleBracket]", "Compile`$524", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    RowBox[{
                    "NewNcell", "\[LeftDoubleBracket]", "Compile`$524", 
                    "\[RightDoubleBracket]"}], ".", 
                    RowBox[{
                    "ratio", "\[LeftDoubleBracket]", "Compile`$524", 
                    "\[RightDoubleBracket]"}]}]}], "\[GreaterEqual]", "0"}]}],
                     ")"}]}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"CT", ",", 
                    RowBox[{
                    RowBox[{"Ncell", "=", "NewNcell"}], ";", 
                    RowBox[{"statetmp1", "=", 
                    RowBox[{"statetmp1", "+", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", "mv0", ",", 
                    RowBox[{"{", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}], "rcum1"]}], 
                    "}"}]}], "]"}]}]}]}], ",", 
                    RowBox[{"statetmp1", "=", 
                    RowBox[{"statetmp1", "+", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "mv0", ",", 
                    RowBox[{"{", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"Log", "[", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}], "rcum1"]}], 
                    "}"}]}], "]"}]}]}]}], "]"}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"mid", "=", "1"}], ";", 
                    RowBox[{"midr", "=", "1.`"}], ";", 
                    RowBox[{"in", "=", "2"}], ";", 
                    RowBox[{"fn", "=", "Ntot"}], ";", 
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"midr", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"fn", "+", "1", "-", "in"}], ")"}], " ", 
                    "0.5`"}]}], ";", 
                    RowBox[{"midr", "\[GreaterEqual]", "1"}]}], ",", 
                    RowBox[{
                    RowBox[{"mid", "=", 
                    RowBox[{
                    RowBox[{"IntegerPart", "[", "midr", "]"}], "+", "in"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"mid", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], ">", 
                    RowBox[{"statetmp1", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "=", 
                    RowBox[{"mid", "-", "1"}]}], ",", 
                    RowBox[{"in", "=", 
                    RowBox[{"mid", "+", "1"}]}]}], "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"midr", "\[LessEqual]", "0"}], ",", 
                    RowBox[{"fn", "+=", "1"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "<", 
                    RowBox[{"statetmp1", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"fn", "+=", "1"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"fn", ">", "2"}], ",", 
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{"fn", "-", "2"}]}], "\[RightDoubleBracket]"}], 
                    "=", 
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ";;", 
                    RowBox[{"fn", "-", "1"}]}], "\[RightDoubleBracket]"}]}]}],
                     "]"}], ";", 
                    RowBox[{
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"fn", "-", "1"}], "\[RightDoubleBracket]"}], "=", 
                    "statetmp1"}]}], ")"}]}], ")"}], ";"}]}], "]"}]}], 
                    "]"}]}]}], "]"}], ";", 
                    RowBox[{"imkmv", "=", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{"state", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", 
                    RowBox[{"1", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}]}], 
                    "\[RightDoubleBracket]"}], "]"}]}], ";", 
                    RowBox[{"key", "=", 
                    RowBox[{"Plus", "@@", 
                    RowBox[{
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"4", "+", "imax", "-", "1"}]}], 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{"compkeystep", "\[LeftDoubleBracket]", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}], 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"ss", "=", 
                    FractionBox[
                    RowBox[{"2", " ", "\[ExponentialE]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"10.`", " ", 
                    RowBox[{"(", 
                    RowBox[{"key", "+", "1"}], ")"}]}], 
                    RowBox[{"10", " ", 
                    RowBox[{"Exp", "[", 
                    FractionBox[
                    SuperscriptBox[
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "0.5`"], "2"], "]"}]}]]}], 
                    "]"}]}], "]"}], "-", 
                    FractionBox["1", "\[ExponentialE]"]}], ")"}]}], 
                    RowBox[{"\[ExponentialE]", "-", "1"}]]}], ";", 
                    RowBox[{"keyg", "=", 
                    RowBox[{"Times", "@@", 
                    RowBox[{
                    SuperscriptBox["genes", 
                    RowBox[{
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], " ", 
                    "signature"}]], "\[LeftDoubleBracket]", 
                    RowBox[{"1", ";;", 
                    RowBox[{"compkeystep", "\[LeftDoubleBracket]", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}], 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"rates", "=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Compile`$611", "=", 
                    RowBox[{"-", "wide"}]}], ";", 
                    RowBox[{"Compile`$609", "=", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"Compile`$612", "=", 
                    FractionBox["1", "2"]}], ";", 
                    RowBox[{"Compile`$613", "=", 
                    RowBox[{"Compile`$611", " ", "Compile`$612"}]}], ";", 
                    RowBox[{"Compile`$614", "=", 
                    SuperscriptBox["\[ExponentialE]", "Compile`$613"]}], ";", 
                    
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "Aasym", "\[LeftDoubleBracket]", "Compile`$609", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"slope", " ", "Compile`$614", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cosh", "[", 
                    RowBox[{"Compile`$611", " ", 
                    RowBox[{"(", 
                    RowBox[{"ss", "-", "2.`"}], ")"}]}], "]"}], "-", "1"}], 
                    ")"}]}], ")"}]}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "Asym", "\[LeftDoubleBracket]", "Compile`$609", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"slope", " ", "Compile`$614", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cosh", "[", 
                    RowBox[{"Compile`$611", " ", 
                    RowBox[{"(", 
                    RowBox[{"ss", "-", "1.`"}], ")"}]}], "]"}], "-", "1"}], 
                    ")"}]}], ")"}]}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "Aapop", "\[LeftDoubleBracket]", "Compile`$609", 
                    "\[RightDoubleBracket]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"slope", " ", "Compile`$614", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cosh", "[", 
                    RowBox[{"Compile`$611", " ", 
                    RowBox[{"(", 
                    RowBox[{"ss", "-", "0.5`"}], ")"}]}], "]"}], "-", "1"}], 
                    ")"}]}], ")"}]}], "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "krates", "\[LeftDoubleBracket]", "Compile`$609", 
                    "\[RightDoubleBracket]"}], " ", "keyg"}], "}"}]}], 
                    "]"}]}], ")"}]}], ";", 
                    RowBox[{"ratescum", "=", 
                    RowBox[{"Accumulate", "[", "rates", "]"}]}], ";", 
                    RowBox[{"rcum1", "=", 
                    RowBox[{"ratescum", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"ratesn", "=", 
                    FractionBox["rates", "rcum1"]}], ";", 
                    RowBox[{"nondriverspace", "=", 
                    RowBox[{"maxnondrivermut", "-", 
                    RowBox[{
                    "imkmv", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"semidriverspace", "=", 
                    RowBox[{"maxsemidrivermut", "-", 
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"driverspace", "=", 
                    RowBox[{"maxdrivermut", "-", 
                    RowBox[{"Total", "[", 
                    RowBox[{"imkmv", "\[LeftDoubleBracket]", 
                    RowBox[{"4", ";;", 
                    RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}], 
                    "]"}]}]}], ";", 
                    RowBox[{"space", "=", 
                    RowBox[{
                    "nondriverspace", "+", "semidriverspace", "+", 
                    "driverspace"}]}], ";", 
                    RowBox[{"spaceprob", "=", 
                    FractionBox[
                    RowBox[{"{", 
                    RowBox[{
                    "driverspace", ",", "semidriverspace", ",", 
                    "nondriverspace"}], "}"}], "space"]}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", "state", ",", "2"}], "]"}], 
                    ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"Ncslist", ",", "Ncell", ",", "2"}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"probslist", ",", "ratesn", ",", "2"}], "]"}], 
                    ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"spprobslist", ",", "spaceprob", ",", "2"}], 
                    "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"Ntslist", ",", "Ntot"}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"tslist", ",", "t"}], "]"}], ";"}]}], "]"}], ";", 
                    
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Internal`BagPart", "[", 
                    RowBox[{"Ncslist", ",", "All"}], "]"}], ",", "1"}], "]"}],
                     ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Internal`BagPart", "[", 
                    RowBox[{"probslist", ",", "All"}], "]"}], ",", "1"}], 
                    "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Internal`BagPart", "[", 
                    RowBox[{"spprobslist", ",", "All"}], "]"}], ",", "1"}], 
                    "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Internal`BagPart", "[", 
                    RowBox[{"Ntslist", ",", "All"}], "]"}], ",", "1"}], "]"}],
                     ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Internal`BagPart", "[", 
                    RowBox[{"tslist", ",", "All"}], "]"}], ",", "1"}], "]"}], 
                    ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", "Nmax"}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", "imax"}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"ct", "+", "1"}]}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Dimensions", "[", "state", "]"}], ",", "1"}], 
                    "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"ct", "+", "1"}]}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Dimensions", "[", "Ncell", "]"}], ",", "1"}], 
                    "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"ct", "+", "1"}]}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Dimensions", "[", "ratesn", "]"}], ",", "1"}], 
                    "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"ct", "+", "1"}]}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Dimensions", "[", "spaceprob", "]"}], ",", "1"}],
                     "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"ct", "+", "1"}]}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"ct", "+", "1"}]}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Dimensions", "[", 
                    RowBox[{"{", "state", "}"}], "]"}], "]"}]}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Dimensions", "[", 
                    RowBox[{"{", "Ncell", "}"}], "]"}], "]"}]}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Dimensions", "[", 
                    RowBox[{"{", "ratesn", "}"}], "]"}], "]"}]}], "]"}], ";", 
                    
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Dimensions", "[", 
                    RowBox[{"{", "spaceprob", "}"}], "]"}], "]"}]}], "]"}], 
                    ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Dimensions", "[", 
                    RowBox[{"{", "Ntot", "}"}], "]"}], "]"}]}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Dimensions", "[", 
                    RowBox[{"{", "t", "}"}], "]"}], "]"}]}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", "0"}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", "0"}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"stateslist", ",", "8"}], "]"}], ";", 
                    RowBox[{"Internal`BagPart", "[", 
                    RowBox[{"stateslist", ",", "All"}], "]"}]}]}], "]"}]}], 
                    "]"}],
                    BaselinePosition->Baseline,
                    ContentPadding->False,
                    FrameMargins->0,
                    ImageSize->{{1, 500}, Automatic},
                    StripOnInput->True],
                    "SummaryItem"]}]}
                    },
                    AutoDelete->False,
                    
                    BaseStyle->{ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Rows" -> {{Top}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
                    Dynamic[Typeset`open$$],
                    ImageSize->Automatic],
                    BaselinePosition->Baseline],
                    DynamicModuleValues:>{}], "]"}],
                    CompiledFunction[{10, 10.1, 5464}, {
                    Blank[Integer], 
                    Blank[Integer], 
                    Blank[Integer], 
                    Blank[Integer], 
                    Blank[Integer], 
                    Blank[Integer], 
                    Blank[Integer], {
                    Blank[Integer], 1}, {
                    Blank[Integer], 1}, {
                    Blank[Real], 1}, {
                    Blank[Real], 1}, 
                    Blank[Integer], 
                    Blank[Integer], 
                    Blank[Integer], 
                    Blank[Integer], {
                    Blank[Real], 1}, {
                    Blank[Real], 1}, {
                    Blank[Real], 1}, 
                    Blank[Real], 
                    Blank[Real], 
                    Blank[Real], 
                    Blank[Real], {
                    Blank[Real], 2}}, {{2, 0, 0}, {2, 0, 1}, {2, 0, 2}, {2, 0,
                     3}, {2, 0, 4}, {2, 0, 5}, {2, 0, 6}, {2, 1, 0}, {2, 1, 
                    1}, {3, 1, 2}, {3, 1, 3}, {2, 0, 7}, {2, 0, 8}, {2, 0, 
                    9}, {2, 0, 10}, {3, 1, 4}, {3, 1, 5}, {3, 1, 6}, {3, 0, 
                    0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 3}, {3, 2, 7}, {3, 1, 
                    46}}, {{{0}, {2, 1, 15}}, {{1, -2, 1}, {2, 1, 
                    43}}, {{-1, 1}, {2, 1, 45}}, {
                    False, {1, 0, 0}}, {-10., {3, 0, 9}}, {{2, -1, 1}, {2, 1, 
                    44}}, {0, {2, 0, 11}}, {{0.}, {3, 1, 10}}, {
                    1., {3, 0, 21}}, {{4, -2, 1}, {2, 1, 
                    30}}, {{1.}, {3, 1, 13}}, {{0, 0, 1}, {2, 1, 
                    26}}, {{0, 0}, {2, 1, 16}}, {{0, 0, 0, 0, 0}, {2, 1, 
                    14}}, {10, {2, 0, 25}}, {{{0., 0.}}, {3, 2, 11}}, {
                    4, {2, 0, 27}}, {{-1}, {2, 1, 42}}, {{10}, {2, 1, 17}}, {
                    8, {2, 0, 26}}, {-1., {3, 0, 17}}, {{1}, {2, 1, 
                    9}}, {-0.5, {3, 0, 19}}, {{0, 0, 0}, {2, 1, 
                    12}}, {-2, {2, 0, 49}}, {{{0}}, {2, 2, 8}}, {
                    2, {2, 0, 21}}, {-1, {2, 0, 12}}, {-2., {3, 0, 14}}, {
                    1, {2, 0, 15}}, {{4, -1, 1}, {2, 1, 29}}, {
                    3, {2, 0, 18}}, {2.718281828459045, {3, 0, 6}}, {
                    0.5, {3, 0, 10}}, {
                    0., {3, 0, 4}}, {{-1, 2}, {2, 1, 41}}, {{0, 1}, {2, 1, 
                    37}}, {0.1, {3, 0, 5}}}, {8, 61, 43, 0, 
                    56}, {{6, 11, 37}, {
                    42, "CopyTensor", 2, 2, 8, 2, 2, 32}, {
                    42, "CopyTensor", 2, 1, 9, 2, 1, 24}, {
                    42, "CopyTensor", 3, 1, 10, 3, 1, 21}, {
                    42, "CopyTensor", 3, 2, 11, 3, 2, 34}, {
                    42, "CopyTensor", 2, 1, 12, 2, 1, 35}, {7, 4, 7}, {6, 11, 
                    24}, {42, "CopyTensor", 3, 1, 13, 3, 1, 33}, {
                    42, "CopyTensor", 2, 1, 15, 2, 1, 23}, {
                    42, "CopyTensor", 2, 1, 15, 2, 1, 22}, {6, 11, 16}, {6, 
                    11, 35}, {6, 11, 14}, {7, 4, 20}, {12, 4, 12, 45}, {6, 4, 
                    42}, {6, 11, 22}, {35, 42, 2, 31}, {6, 11, 29}, {3, 2}, {
                    36, 22, 11, 2, 31}, {4, 29, 42, -1}, {
                    42, "CopyTensor", 2, 1, 31, 2, 1, 23}, {12, 4, 18, 29}, {
                    6, 11, 44}, {35, 29, 2, 31}, {6, 11, 54}, {3, 2}, {36, 44,
                     11, 2, 31}, {4, 54, 29, -1}, {6, 45, 22}, {6, 11, 42}, {
                    35, 22, 2, 27}, {6, 11, 44}, {3, 2}, {36, 42, 15, 2, 
                    27}, {4, 44, 22, -1}, {34, 1, 1, 5, 2, 40}, {
                    42, "Join", 2, 1, 27, 2, 1, 40, 2, 1, 20}, {40, 60, 3, 1, 
                    3, 3, 1, 27}, {45, 2, 27, 40}, {12, 3, 12, 44}, {6, 11, 
                    29}, {35, 44, 2, 27}, {6, 11, 54}, {3, 2}, {36, 29, 15, 2,
                     27}, {4, 54, 44, -1}, {
                    42, "Join", 2, 1, 27, 2, 1, 15, 2, 1, 28}, {41, 259, 3, 0,
                     0, 2, 1, 28, 3, 1, 27}, {
                    42, "CopyTensor", 3, 1, 27, 3, 1, 33}, {6, 0, 42}, {18, 
                    42, 22}, {18, 2, 29}, {12, 1, 22, 29, 44}, {6, 44, 37}, {
                    34, 2, 1, 5, 42, 11, 11, 11, 11, 2, 27}, {12, 3, 12, 
                    22}, {6, 12, 29}, {35, 22, 29, 2, 28}, {6, 11, 54}, {3, 
                    2}, {36, 29, 23, 0, 28}, {4, 54, 22, -1}, {
                    42, "Join", 2, 2, 27, 2, 2, 28, 2, 2, 38}, {
                    42, "CopyTensor", 2, 2, 38, 2, 2, 32}, {
                    42, "CopyTensor", 2, 1, 23, 2, 1, 38}, {7, 4, 36}, {
                    42, "CopyTensor", 3, 1, 10, 3, 1, 28}, {10, 12, 38}, {13, 
                    6, 38, 27}, {40, 60, 3, 0, 27, 3, 0, 38}, {16, 6, 38, 
                    27}, {38, 1, 0, 15, 0, 17}, {34, 1, 3, 15, 17, 15, 2, 
                    18}, {38, 38, 3, 18, 1, 49}, {6, 11, 17}, {33, 49, 29}, {
                    6, 11, 41}, {3, 4}, {37, 49, 41, 2, 22}, {12, 17, 22, 
                    32}, {6, 32, 17}, {4, 41, 29, -3}, {12, 17, 15, 17}, {41, 
                    263, 2, 0, 11, 3, 0, 10, 3, 0, 38}, {10, 21, 22}, {40, 60,
                     3, 0, 22, 3, 0, 12}, {16, 38, 12, 38}, {40, 34, 3, 0, 38,
                     3, 0, 12}, {10, 25, 38}, {16, 38, 12, 38}, {40, 60, 3, 0,
                     38, 3, 0, 12}, {10, 17, 38}, {16, 38, 12, 38}, {16, 9, 
                    38, 12}, {40, 34, 3, 0, 12, 3, 0, 38}, {19, 38, 12}, {40, 
                    34, 3, 0, 12, 3, 0, 38}, {10, 12, 12}, {40, 34, 3, 0, 12, 
                    3, 0, 22}, {19, 22, 12}, {13, 38, 12, 38}, {10, 21, 12}, {
                    16, 12, 27, 38, 12}, {7, 12, 36}, {19, 2, 12}, {7, 12, 
                    32}, {10, 21, 12}, {40, 60, 3, 0, 12, 3, 0, 27}, {7, 27, 
                    33}, {16, 32, 33, 27}, {7, 27, 34}, {40, 34, 3, 0, 34, 3, 
                    0, 27}, {7, 27, 35}, {38, 4, 0, 15, 0, 27}, {13, 36, 14, 
                    12}, {16, 32, 12, 38}, {40, 10, 3, 0, 38, 3, 0, 12}, {10, 
                    12, 38}, {13, 12, 38, 12}, {16, 3, 35, 12, 38}, {19, 38, 
                    12}, {40, 34, 3, 0, 12, 3, 0, 38}, {16, 27, 38, 27}, {38, 
                    5, 0, 15, 0, 38}, {13, 36, 17, 12}, {16, 32, 12, 22}, {40,
                     10, 3, 0, 22, 3, 0, 12}, {10, 12, 22}, {13, 12, 22, 
                    12}, {16, 3, 35, 12, 22}, {19, 22, 12}, {40, 34, 3, 0, 12,
                     3, 0, 22}, {16, 38, 22, 38}, {38, 6, 0, 15, 0, 22}, {13, 
                    36, 19, 12}, {16, 32, 12, 30}, {40, 10, 3, 0, 30, 3, 0, 
                    12}, {10, 12, 30}, {13, 12, 30, 12}, {16, 3, 35, 12, 
                    30}, {19, 30, 12}, {40, 34, 3, 0, 12, 3, 0, 30}, {16, 22, 
                    30, 22}, {34, 1, 3, 27, 38, 22, 3, 27}, {38, 33, 0, 15, 0,
                     27}, {45, 38, 0, 39}, {41, 263, 3, 1, 40, 2, 1, 39, 3, 1,
                     49}, {38, 1, 0, 15, 0, 54}, {34, 1, 3, 15, 54, 15, 2, 
                    39}, {38, 49, 3, 39, 1, 18}, {7, 21, 22}, {33, 18, 41}, {
                    6, 11, 44}, {3, 4}, {37, 18, 44, 3, 38}, {16, 22, 38, 
                    30}, {7, 30, 22}, {4, 44, 41, -3}, {16, 27, 22, 27}, {34, 
                    1, 1, 27, 3, 25}, {
                    42, "Join", 3, 1, 27, 3, 1, 25, 3, 1, 18}, {
                    42, "Accumulate", 3, 1, 18, 2, 0, 26, 3, 1, 27}, {
                    42, "CopyTensor", 3, 1, 27, 3, 1, 28}, {12, 1, 21, 54}, {
                    6, 12, 17}, {35, 54, 17, 3, 27}, {6, 11, 41}, {3, 4}, {
                    42, "Join", 2, 1, 26, 2, 1, 23, 2, 1, 25}, {41, 259, 3, 0,
                     21, 2, 1, 25, 3, 1, 49}, {36, 17, 49, 0, 27}, {4, 41, 
                    54, -3}, {12, 1, 21, 44}, {34, 1, 2, 44, 15, 2, 49}, {10, 
                    11, 27}, {10, 15, 22}, {
                    42, "RandomReals", 3, 0, 27, 3, 0, 22, 2, 1, 49, 3, 2, 
                    25}, {40, 35, 3, 2, 25, 3, 2, 18}, {40, 43, 3, 2, 18, 3, 
                    2, 25}, {38, 28, 0, 12, 0, 27}, {40, 60, 3, 0, 27, 3, 0, 
                    22}, {41, 259, 3, 0, 22, 3, 2, 25, 3, 2, 18}, {41, 257, 3,
                     0, 7, 3, 2, 18, 3, 2, 25}, {
                    42, "JoinAtLevel", 3, 2, 27, 3, 2, 25, 2, 0, 21, 3, 2, 
                    18}, {42, "CopyTensor", 3, 2, 18, 3, 2, 34}, {18, 42, 
                    44}, {6, 44, 38}, {18, 37, 44}, {6, 44, 19}, {12, 1, 38, 
                    19, 44}, {6, 44, 34}, {10, 21, 36}, {40, 60, 3, 0, 36, 3, 
                    0, 22}, {7, 22, 23}, {10, 34, 22}, {16, 22, 23, 22}, {7, 
                    22, 13}, {40, 50, 3, 0, 13, 2, 0, 44}, {6, 44, 23}, {
                    42, "MaxI", 2, 0, 11, 2, 0, 23, 2, 0, 44}, {6, 44, 30}, {
                    12, 42, 37, 44}, {34, 1, 3, 44, 30, 30, 2, 18}, {
                    42, "CopyTensor", 2, 1, 18, 2, 1, 35}, {
                    42, "Transpose", 3, 2, 34, 3, 2, 18}, {38, 18, 0, 12, 1, 
                    46}, {42, "CopyTensor", 3, 1, 46, 3, 1, 21}, {
                    42, "Ordering", 3, 1, 21, 2, 1, 46}, {
                    42, "CopyTensor", 2, 1, 46, 2, 1, 24}, {38, 34, 1, 24, 2, 
                    46}, {42, "CopyTensor", 3, 2, 46, 3, 2, 34}, {12, 27, 4, 
                    12, 44}, {34, 1, 3, 15, 44, 15, 2, 46}, {38, 34, 0, 15, 3,
                     46, 1, 18}, {40, 53, 3, 1, 18, 2, 1, 46}, {
                    42, "CopyTensor", 2, 1, 46, 2, 1, 22}, {38, 22, 3, 29, 1, 
                    38}, {38, 22, 0, 18, 0, 41}, {38, 1, 0, 41, 0, 44}, {34, 
                    1, 3, 15, 44, 15, 2, 46}, {38, 38, 3, 46, 1, 18}, {6, 11, 
                    44}, {33, 18, 54}, {6, 11, 32}, {3, 4}, {37, 18, 32, 2, 
                    29}, {12, 44, 29, 22}, {6, 22, 44}, {4, 32, 54, -3}, {10, 
                    12, 22}, {13, 6, 22, 36}, {40, 60, 3, 0, 36, 3, 0, 22}, {
                    16, 6, 22, 36}, {12, 44, 15, 32}, {38, 22, 0, 21, 0, 
                    41}, {41, 263, 2, 0, 41, 3, 0, 10, 3, 0, 22}, {10, 21, 
                    27}, {40, 60, 3, 0, 27, 3, 0, 30}, {16, 22, 30, 22}, {40, 
                    34, 3, 0, 22, 3, 0, 30}, {10, 25, 22}, {16, 22, 30, 22}, {
                    40, 60, 3, 0, 22, 3, 0, 30}, {10, 32, 22}, {16, 22, 30, 
                    22}, {16, 9, 22, 30}, {40, 34, 3, 0, 30, 3, 0, 22}, {19, 
                    22, 30}, {40, 34, 3, 0, 30, 3, 0, 22}, {10, 12, 30}, {40, 
                    34, 3, 0, 30, 3, 0, 27}, {19, 27, 30}, {13, 22, 30, 22}, {
                    10, 21, 30}, {16, 30, 36, 22, 30}, {38, 22, 3, 29, 1, 
                    46}, {45, 46, 0, 46}, {41, 263, 3, 1, 40, 2, 1, 46, 3, 1, 
                    28}, {38, 22, 0, 18, 0, 54}, {38, 1, 0, 54, 0, 32}, {34, 
                    1, 3, 15, 32, 15, 2, 46}, {38, 28, 3, 46, 1, 18}, {7, 21, 
                    22}, {33, 18, 41}, {6, 11, 17}, {3, 4}, {37, 18, 17, 3, 
                    36}, {16, 22, 36, 27}, {7, 27, 22}, {4, 17, 41, -3}, {19, 
                    2, 27}, {7, 27, 24}, {38, 22, 0, 18, 0, 17}, {6, 17, 
                    33}, {10, 21, 27}, {40, 60, 3, 0, 27, 3, 0, 36}, {7, 36, 
                    11}, {16, 24, 11, 36}, {7, 36, 18}, {40, 34, 3, 0, 18, 3, 
                    0, 36}, {7, 36, 8}, {38, 4, 0, 33, 0, 36}, {13, 30, 14, 
                    27}, {16, 24, 27, 38}, {40, 10, 3, 0, 38, 3, 0, 27}, {10, 
                    12, 38}, {13, 27, 38, 27}, {16, 3, 8, 27, 38}, {19, 38, 
                    27}, {40, 34, 3, 0, 27, 3, 0, 38}, {16, 36, 38, 36}, {38, 
                    5, 0, 33, 0, 38}, {13, 30, 17, 27}, {16, 24, 27, 12}, {40,
                     10, 3, 0, 12, 3, 0, 27}, {10, 12, 12}, {13, 27, 12, 
                    27}, {16, 3, 8, 27, 12}, {19, 12, 27}, {40, 34, 3, 0, 27, 
                    3, 0, 12}, {16, 38, 12, 38}, {38, 6, 0, 33, 0, 12}, {13, 
                    30, 19, 27}, {16, 24, 27, 16}, {40, 10, 3, 0, 16, 3, 0, 
                    27}, {10, 12, 16}, {13, 27, 16, 27}, {16, 3, 8, 27, 16}, {
                    19, 16, 27}, {40, 34, 3, 0, 27, 3, 0, 16}, {16, 12, 16, 
                    12}, {34, 1, 3, 36, 38, 12, 3, 38}, {38, 33, 0, 33, 0, 
                    36}, {16, 36, 22, 36}, {34, 1, 1, 36, 3, 18}, {
                    42, "Join", 3, 1, 38, 3, 1, 18, 3, 1, 28}, {
                    42, "Accumulate", 3, 1, 28, 2, 0, 26, 3, 1, 38}, {38, 38, 
                    0, 12, 0, 36}, {40, 60, 3, 0, 36, 3, 0, 38}, {41, 259, 3, 
                    0, 38, 3, 1, 28, 3, 1, 18}, {38, 22, 0, 21, 0, 17}, {18, 
                    17, 32}, {12, 6, 32, 17}, {38, 22, 0, 12, 0, 32}, {18, 32,
                     54}, {12, 5, 54, 32}, {38, 22, 3, 30, 1, 46}, {
                    42, "TotalAll", 2, 1, 46, 2, 0, 26, 2, 0, 54}, {18, 54, 
                    41}, {12, 45, 41, 54}, {12, 17, 32, 54, 41}, {34, 1, 3, 
                    54, 32, 17, 2, 46}, {10, 41, 38}, {40, 60, 3, 0, 38, 3, 0,
                     12}, {41, 259, 3, 0, 12, 2, 1, 46, 3, 1, 27}, {
                    42, "Drop", 3, 1, 13, 2, 0, 11, 2, 0, 12, 3, 1, 46}, {
                    42, "Bag", 2, 0, 18, 3, 0, 12}, {
                    42, "StuffBag", 3, 0, 12, 3, 1, 46, 6, 0, 17}, {
                    42, "Drop", 3, 1, 13, 2, 0, 11, 2, 0, 12, 3, 1, 46}, {
                    42, "Bag", 2, 0, 18, 3, 0, 38}, {
                    42, "StuffBag", 3, 0, 38, 3, 1, 46, 6, 0, 17}, {
                    42, "Drop", 3, 1, 13, 2, 0, 11, 2, 0, 12, 3, 1, 46}, {
                    42, "Bag", 2, 0, 18, 3, 0, 16}, {
                    42, "StuffBag", 3, 0, 16, 3, 1, 46, 6, 0, 17}, {
                    42, "Drop", 3, 1, 13, 2, 0, 11, 2, 0, 12, 3, 1, 46}, {
                    42, "Bag", 2, 0, 18, 3, 0, 27}, {
                    42, "StuffBag", 3, 0, 27, 3, 1, 46, 6, 0, 17}, {
                    42, "Drop", 3, 1, 13, 2, 0, 11, 2, 0, 12, 3, 1, 46}, {
                    42, "Bag", 2, 0, 18, 3, 0, 41}, {
                    42, "StuffBag", 3, 0, 41, 3, 1, 46, 6, 0, 17}, {
                    42, "Drop", 3, 1, 13, 2, 0, 11, 2, 0, 12, 3, 1, 46}, {
                    42, "Bag", 2, 0, 18, 3, 0, 15}, {
                    42, "StuffBag", 3, 0, 15, 3, 1, 46, 6, 0, 17}, {
                    42, "StuffBag", 3, 0, 12, 3, 2, 34, 6, 0, 17}, {
                    42, "CoerceTensor", 2, 0, 18, 2, 2, 32, 3, 2, 46}, {
                    42, "StuffBag", 3, 0, 38, 3, 2, 46, 6, 0, 17}, {
                    42, "StuffBag", 3, 0, 16, 3, 1, 18, 6, 0, 17}, {
                    42, "StuffBag", 3, 0, 27, 3, 1, 27, 6, 0, 17}, {10, 42, 
                    37}, {42, "StuffBagScalar", 3, 0, 41, 3, 0, 37, 6, 0, 
                    17}, {42, "StuffBagScalar", 3, 0, 15, 3, 0, 7, 6, 0, 
                    17}, {38, 34, 0, 15, 0, 12, 0, 37}, {10, 8, 40}, {27, 3, 
                    4, 37, 40, 2}, {2, 2, 9}, {25, 24, 7, 1}, {2, 1, 4}, {25, 
                    11, 42, 4}, {5, 4, 3}, {3, 2}, {5, 0, 3}, {5, 3, 1}, {3, 
                    2}, {5, 0, 1}, {2, 1, 982}, {12, 24, 15, 22}, {6, 22, 
                    24}, {38, 34, 0, 15, 0, 12, 0, 37}, {7, 37, 7}, {
                    42, "Accumulate", 3, 1, 18, 2, 0, 26, 3, 1, 46}, {10, 11, 
                    37}, {10, 15, 40}, {
                    42, "RandomReal", 3, 0, 37, 3, 0, 40, 3, 0, 25}, {38, 46, 
                    0, 15, 0, 37}, {27, 3, 4, 25, 37, 2}, {2, 2, 325}, {
                    42, "CopyTensor", 3, 1, 10, 3, 1, 51}, {
                    42, "CopyTensor", 3, 1, 10, 3, 1, 50}, {
                    42, "CopyTensor", 2, 1, 15, 2, 1, 47}, {38, 22, 0, 15, 0, 
                    46}, {38, 22, 0, 21, 0, 47}, {38, 22, 0, 18, 0, 22}, {34, 
                    1, 3, 46, 47, 22, 2, 48}, {12, 27, 4, 12, 46}, {34, 1, 3, 
                    27, 46, 15, 2, 25}, {38, 22, 3, 25, 1, 54}, {34, 1, 1, 7, 
                    3, 25}, {
                    42, "CoerceTensor", 2, 0, 18, 2, 1, 48, 3, 1, 39}, {
                    42, "CoerceTensor", 2, 0, 18, 2, 1, 54, 3, 1, 49}, {
                    42, "Join", 3, 1, 39, 3, 1, 49, 3, 1, 25, 3, 1, 52}, {41, 
                    259, 3, 0, 21, 3, 1, 52, 3, 1, 48}, {
                    42, "CopyTensor", 3, 1, 48, 3, 1, 50}, {6, 11, 48}, {6, 
                    11, 20}, {6, 11, 40}, {
                    42, "CopyTensor", 2, 1, 15, 2, 1, 48}, {6, 11, 51}, {6, 
                    11, 22}, {42, "CopyTensor", 2, 1, 23, 2, 1, 49}, {38, 22, 
                    0, 21, 0, 52}, {18, 52, 57}, {12, 6, 57, 52}, {6, 52, 
                    48}, {12, 27, 4, 12, 52}, {34, 1, 3, 27, 52, 15, 2, 54}, {
                    38, 22, 3, 54, 1, 52}, {
                    42, "TotalAll", 2, 1, 52, 2, 0, 26, 2, 0, 52}, {18, 52, 
                    57}, {12, 5, 45, 57, 48, 52}, {6, 52, 20}, {
                    42, "MinI", 2, 0, 15, 2, 0, 20, 2, 0, 52}, {
                    42, "RandomInteger", 2, 0, 52, 2, 0, 20, 2, 0, 57}, {18, 
                    48, 52}, {12, 57, 52, 57}, {6, 57, 40}, {25, 11, 40, 3}, {
                    2, 3, 56}, {6, 11, 29}, {6, 11, 53}, {6, 4, 47}, {6, 11, 
                    56}, {35, 47, 2, 52}, {6, 11, 57}, {3, 2}, {36, 56, 57, 2,
                     52}, {4, 57, 47, -1}, {33, 52, 57}, {6, 11, 52}, {35, 57,
                     2, 54}, {6, 11, 50}, {3, 16}, {37, 52, 50, 2, 58}, {6, 
                    58, 36}, {12, 27, 4, 12, 59}, {34, 1, 3, 27, 59, 15, 2, 
                    25}, {38, 22, 3, 25, 1, 55}, {38, 55, 0, 36, 0, 59}, {38, 
                    20, 0, 36, 0, 60}, {25, 59, 60, 4}, {2, 4, 5}, {12, 29, 
                    15, 36}, {6, 36, 29}, {6, 50, 36}, {3, 2}, {6, 12, 36}, {
                    36, 52, 36, 2, 54}, {4, 50, 57, -15}, {6, 29, 56}, {6, 11,
                     52}, {35, 56, 2, 55}, {6, 11, 47}, {3, 11}, {12, 53, 15, 
                    36}, {6, 36, 53}, {37, 54, 53, 2, 36}, {24, 36, 12, 4}, {
                    2, 4, 4}, {12, 53, 15, 36}, {6, 36, 53}, {3, -5}, {37, 52,
                     53, 2, 36}, {36, 52, 36, 2, 55}, {4, 47, 56, -10}, {
                    42, "CopyTensor", 2, 1, 55, 2, 1, 48}, {33, 48, 53}, {
                    42, "MinI", 2, 0, 53, 2, 0, 40, 2, 0, 29}, {38, 48, 0, 29,
                     0, 53}, {6, 53, 51}, {38, 49, 0, 51, 0, 53}, {12, 53, 15,
                     53}, {39, 49, 0, 51, 0, 53}, {3, 3}, {
                    42, "RandomInteger", 2, 0, 15, 2, 0, 9, 2, 0, 29}, {6, 29,
                     22}, {42, "Drop", 2, 1, 49, 2, 0, 11, 2, 0, 12, 2, 1, 
                    55}, {42, "TotalAll", 2, 1, 55, 2, 0, 26, 2, 0, 53}, {
                    42, "MinI", 2, 0, 22, 2, 0, 48, 2, 0, 29}, {34, 1, 3, 53, 
                    29, 11, 2, 55}, {
                    42, "Join", 2, 1, 55, 2, 1, 49, 2, 1, 53}, {
                    42, "CopyTensor", 2, 1, 53, 2, 1, 47}, {
                    42, "CopyTensor", 2, 2, 32, 2, 2, 53}, {38, 47, 0, 15, 0, 
                    22}, {34, 1, 2, 11, 22, 2, 39}, {33, 37, 40}, {6, 11, 
                    20}, {35, 40, 2, 49}, {6, 11, 48}, {3, 14}, {38, 22, 0, 
                    18, 0, 53}, {38, 22, 0, 15, 0, 29}, {37, 39, 48, 2, 58}, {
                    12, 29, 15, 58, 29}, {38, 22, 0, 18, 0, 58}, {38, 22, 0, 
                    15, 0, 52}, {37, 39, 48, 2, 36}, {12, 52, 15, 36, 52}, {
                    38, 53, 0, 58, 0, 52, 0, 36}, {37, 37, 48, 2, 58}, {12, 
                    36, 58, 36}, {39, 53, 0, 53, 0, 29, 0, 36}, {36, 20, 36, 
                    2, 49}, {4, 48, 40, -13}, {38, 22, 0, 18, 0, 22}, {6, 22, 
                    43}, {38, 35, 0, 43, 0, 22}, {38, 53, 0, 43, 1, 48}, {38, 
                    7, 0, 43, 1, 55}, {
                    42, "CoerceTensor", 2, 0, 18, 2, 1, 48, 3, 1, 52}, {
                    42, "DotVV", 3, 1, 52, 3, 1, 55, 2, 0, 26, 3, 0, 25}, {19,
                     25, 37}, {10, 22, 25}, {13, 25, 37, 25}, {10, 11, 37}, {
                    27, 6, 4, 25, 37, 3}, {2, 3, 123}, {
                    42, "CopyTensor", 2, 2, 53, 2, 2, 32}, {10, 11, 25}, {10, 
                    15, 37}, {
                    42, "RandomReal", 3, 0, 25, 3, 0, 37, 3, 0, 40}, {40, 35, 
                    3, 0, 40, 3, 0, 25}, {19, 25, 40}, {40, 60, 3, 0, 36, 3, 
                    0, 25}, {16, 40, 25, 40}, {34, 1, 1, 40, 3, 48}, {
                    42, "CoerceTensor", 2, 0, 18, 2, 1, 12, 3, 1, 55}, {
                    42, "CoerceTensor", 2, 0, 18, 2, 1, 23, 3, 1, 52}, {
                    42, "Join", 3, 1, 55, 3, 1, 52, 3, 1, 48, 3, 1, 54}, {44, 
                    50, 54, 48}, {42, "CopyTensor", 3, 1, 48, 3, 1, 51}, {10, 
                    11, 40}, {10, 15, 25}, {
                    42, "RandomReal", 3, 0, 40, 3, 0, 25, 3, 0, 37}, {40, 35, 
                    3, 0, 37, 3, 0, 40}, {19, 40, 37}, {40, 60, 3, 0, 36, 3, 
                    0, 40}, {16, 37, 40, 37}, {34, 1, 1, 37, 3, 48}, {
                    42, "CoerceTensor", 2, 0, 18, 2, 1, 47, 3, 1, 54}, {
                    42, "Join", 3, 1, 54, 3, 1, 48, 3, 1, 55}, {44, 50, 55, 
                    48}, {42, "CopyTensor", 3, 1, 48, 3, 1, 50}, {6, 15, 
                    14}, {7, 21, 20}, {6, 21, 16}, {6, 42, 35}, {18, 16, 
                    22}, {12, 35, 15, 22, 51}, {10, 51, 37}, {16, 37, 10, 
                    37}, {7, 37, 20}, {10, 15, 37}, {27, 6, 4, 20, 37, 4}, {2,
                     4, 14}, {40, 53, 3, 0, 20, 2, 0, 51}, {12, 51, 16, 51}, {
                    6, 51, 14}, {38, 34, 0, 14, 0, 12, 0, 37}, {38, 51, 0, 12,
                     0, 40}, {27, 7, 4, 37, 40, 5}, {2, 5, 4}, {12, 14, 12, 
                    51}, {6, 51, 35}, {3, 3}, {12, 14, 15, 51}, {6, 51, 16}, {
                    3, -20}, {10, 11, 37}, {27, 4, 4, 20, 37, 4}, {2, 4, 4}, {
                    12, 35, 15, 51}, {6, 51, 35}, {3, 8}, {38, 34, 0, 35, 0, 
                    12, 0, 37}, {38, 51, 0, 12, 0, 40}, {27, 3, 4, 37, 40, 
                    5}, {2, 5, 4}, {12, 35, 15, 51}, {6, 51, 35}, {3, 1}, {25,
                     21, 35, 4}, {2, 4, 8}, {12, 35, 49, 51}, {34, 1, 3, 15, 
                    51, 15, 2, 48}, {12, 35, 12, 51}, {34, 1, 3, 21, 51, 15, 
                    2, 55}, {38, 34, 3, 55, 2, 54}, {39, 34, 3, 48, 2, 54}, {
                    3, 1}, {12, 35, 12, 51}, {39, 34, 0, 51, 1, 51}, {6, 15, 
                    14}, {7, 21, 20}, {6, 15, 16}, {6, 42, 35}, {18, 16, 
                    51}, {12, 35, 15, 51, 22}, {10, 22, 37}, {16, 37, 10, 
                    37}, {7, 37, 20}, {10, 15, 37}, {27, 6, 4, 20, 37, 4}, {2,
                     4, 14}, {40, 53, 3, 0, 20, 2, 0, 22}, {12, 22, 16, 22}, {
                    6, 22, 14}, {38, 34, 0, 14, 0, 12, 0, 37}, {38, 50, 0, 12,
                     0, 40}, {27, 7, 4, 37, 40, 5}, {2, 5, 4}, {12, 14, 12, 
                    22}, {6, 22, 35}, {3, 3}, {12, 14, 15, 22}, {6, 22, 16}, {
                    3, -20}, {10, 11, 37}, {27, 4, 4, 20, 37, 4}, {2, 4, 4}, {
                    12, 35, 15, 22}, {6, 22, 35}, {3, 8}, {38, 34, 0, 35, 0, 
                    12, 0, 37}, {38, 50, 0, 12, 0, 40}, {27, 3, 4, 37, 40, 
                    5}, {2, 5, 4}, {12, 35, 15, 22}, {6, 22, 35}, {3, 1}, {12,
                     35, 15, 22}, {34, 1, 3, 22, 12, 15, 2, 48}, {34, 1, 3, 
                    35, 49, 15, 2, 54}, {38, 34, 3, 54, 2, 55}, {39, 34, 3, 
                    48, 2, 55}, {39, 34, 0, 35, 1, 50}, {12, 42, 15, 22}, {6, 
                    22, 42}, {3, 63}, {10, 11, 37}, {10, 15, 40}, {
                    42, "RandomReal", 3, 0, 37, 3, 0, 40, 3, 0, 25}, {40, 35, 
                    3, 0, 25, 3, 0, 37}, {19, 37, 25}, {40, 60, 3, 0, 36, 3, 
                    0, 37}, {16, 25, 37, 25}, {34, 1, 1, 25, 3, 55}, {
                    42, "CoerceTensor", 2, 0, 18, 2, 1, 12, 3, 1, 48}, {
                    42, "CoerceTensor", 2, 0, 18, 2, 1, 23, 3, 1, 54}, {
                    42, "Join", 3, 1, 48, 3, 1, 54, 3, 1, 55, 3, 1, 52}, {44, 
                    50, 52, 55}, {42, "CopyTensor", 3, 1, 55, 3, 1, 51}, {6, 
                    15, 14}, {7, 21, 20}, {6, 21, 16}, {6, 42, 35}, {18, 16, 
                    22}, {12, 35, 15, 22, 51}, {10, 51, 25}, {16, 25, 10, 
                    25}, {7, 25, 20}, {10, 15, 25}, {27, 6, 4, 20, 25, 4}, {2,
                     4, 14}, {40, 53, 3, 0, 20, 2, 0, 51}, {12, 51, 16, 51}, {
                    6, 51, 14}, {38, 34, 0, 14, 0, 12, 0, 25}, {38, 51, 0, 12,
                     0, 37}, {27, 7, 4, 25, 37, 5}, {2, 5, 4}, {12, 14, 12, 
                    51}, {6, 51, 35}, {3, 3}, {12, 14, 15, 51}, {6, 51, 16}, {
                    3, -20}, {10, 11, 25}, {27, 4, 4, 20, 25, 4}, {2, 4, 4}, {
                    12, 35, 15, 51}, {6, 51, 35}, {3, 8}, {38, 34, 0, 35, 0, 
                    12, 0, 25}, {38, 51, 0, 12, 0, 37}, {27, 3, 4, 25, 37, 
                    5}, {2, 5, 4}, {12, 35, 15, 51}, {6, 51, 35}, {3, 1}, {25,
                     21, 35, 4}, {2, 4, 8}, {12, 35, 49, 51}, {34, 1, 3, 15, 
                    51, 15, 2, 55}, {12, 35, 12, 51}, {34, 1, 3, 21, 51, 15, 
                    2, 52}, {38, 34, 3, 52, 2, 48}, {39, 34, 3, 55, 2, 48}, {
                    3, 1}, {12, 35, 12, 51}, {39, 34, 0, 51, 1, 51}, {3, 
                    500}, {10, 11, 25}, {10, 15, 37}, {
                    42, "RandomReal", 3, 0, 25, 3, 0, 37, 3, 0, 40}, {38, 46, 
                    0, 21, 0, 25}, {27, 3, 4, 40, 25, 3}, {2, 3, 324}, {
                    42, "CopyTensor", 3, 1, 10, 3, 1, 55}, {
                    42, "CopyTensor", 3, 1, 10, 3, 1, 50}, {
                    42, "CopyTensor", 2, 1, 15, 2, 1, 51}, {38, 22, 0, 15, 0, 
                    20}, {38, 22, 0, 21, 0, 46}, {38, 22, 0, 18, 0, 51}, {34, 
                    1, 3, 20, 46, 51, 2, 48}, {12, 27, 4, 12, 20}, {34, 1, 3, 
                    27, 20, 15, 2, 53}, {38, 22, 3, 53, 1, 47}, {34, 1, 1, 7, 
                    3, 53}, {
                    42, "CoerceTensor", 2, 0, 18, 2, 1, 48, 3, 1, 49}, {
                    42, "CoerceTensor", 2, 0, 18, 2, 1, 47, 3, 1, 39}, {
                    42, "Join", 3, 1, 49, 3, 1, 39, 3, 1, 53, 3, 1, 52}, {41, 
                    259, 3, 0, 21, 3, 1, 52, 3, 1, 48}, {
                    42, "CopyTensor", 3, 1, 48, 3, 1, 50}, {6, 11, 29}, {6, 
                    11, 40}, {6, 11, 47}, {
                    42, "CopyTensor", 2, 1, 15, 2, 1, 48}, {6, 11, 50}, {6, 
                    11, 20}, {42, "CopyTensor", 2, 1, 23, 2, 1, 39}, {38, 22, 
                    0, 21, 0, 57}, {18, 57, 48}, {12, 6, 48, 57}, {6, 57, 
                    29}, {12, 27, 4, 12, 57}, {34, 1, 3, 27, 57, 15, 2, 47}, {
                    38, 22, 3, 47, 1, 52}, {
                    42, "TotalAll", 2, 1, 52, 2, 0, 26, 2, 0, 57}, {18, 57, 
                    48}, {12, 5, 45, 48, 29, 57}, {6, 57, 40}, {
                    42, "MinI", 2, 0, 15, 2, 0, 40, 2, 0, 57}, {
                    42, "RandomInteger", 2, 0, 57, 2, 0, 40, 2, 0, 48}, {18, 
                    29, 57}, {12, 48, 57, 48}, {6, 48, 47}, {25, 11, 47, 4}, {
                    2, 4, 56}, {6, 11, 22}, {6, 11, 58}, {6, 4, 51}, {6, 11, 
                    56}, {35, 51, 2, 52}, {6, 11, 48}, {3, 2}, {36, 56, 48, 2,
                     52}, {4, 48, 51, -1}, {33, 52, 48}, {6, 11, 52}, {35, 48,
                     2, 47}, {6, 11, 57}, {3, 16}, {37, 52, 57, 2, 36}, {6, 
                    36, 53}, {12, 27, 4, 12, 59}, {34, 1, 3, 27, 59, 15, 2, 
                    53}, {38, 22, 3, 53, 1, 25}, {38, 25, 0, 53, 0, 59}, {38, 
                    20, 0, 53, 0, 60}, {25, 59, 60, 5}, {2, 5, 5}, {12, 22, 
                    15, 53}, {6, 53, 22}, {6, 57, 53}, {3, 2}, {6, 12, 53}, {
                    36, 52, 53, 2, 47}, {4, 57, 48, -15}, {6, 22, 56}, {6, 11,
                     52}, {35, 56, 2, 25}, {6, 11, 51}, {3, 11}, {12, 58, 15, 
                    53}, {6, 53, 58}, {37, 47, 58, 2, 53}, {24, 53, 12, 5}, {
                    2, 5, 4}, {12, 58, 15, 53}, {6, 53, 58}, {3, -5}, {37, 52,
                     58, 2, 53}, {36, 52, 53, 2, 25}, {4, 51, 56, -10}, {
                    42, "CopyTensor", 2, 1, 25, 2, 1, 48}, {33, 48, 58}, {
                    42, "MinI", 2, 0, 58, 2, 0, 47, 2, 0, 22}, {38, 48, 0, 22,
                     0, 58}, {6, 58, 50}, {38, 39, 0, 50, 0, 58}, {12, 58, 15,
                     58}, {39, 39, 0, 50, 0, 58}, {3, 3}, {
                    42, "RandomInteger", 2, 0, 15, 2, 0, 9, 2, 0, 22}, {6, 22,
                     20}, {42, "Drop", 2, 1, 39, 2, 0, 11, 2, 0, 12, 2, 1, 
                    25}, {42, "TotalAll", 2, 1, 25, 2, 0, 26, 2, 0, 58}, {
                    42, "MinI", 2, 0, 20, 2, 0, 29, 2, 0, 22}, {34, 1, 3, 58, 
                    22, 11, 2, 25}, {
                    42, "Join", 2, 1, 25, 2, 1, 39, 2, 1, 54}, {
                    42, "CopyTensor", 2, 1, 54, 2, 1, 51}, {
                    42, "CopyTensor", 2, 2, 32, 2, 2, 54}, {38, 51, 0, 15, 0, 
                    20}, {34, 1, 2, 11, 20, 2, 49}, {33, 41, 47}, {6, 11, 
                    40}, {35, 47, 2, 39}, {6, 11, 29}, {3, 14}, {38, 22, 0, 
                    18, 0, 58}, {38, 22, 0, 15, 0, 22}, {37, 49, 29, 2, 36}, {
                    12, 22, 15, 36, 22}, {38, 22, 0, 18, 0, 36}, {38, 22, 0, 
                    15, 0, 52}, {37, 49, 29, 2, 53}, {12, 52, 15, 53, 52}, {
                    38, 54, 0, 36, 0, 52, 0, 53}, {37, 41, 29, 2, 36}, {12, 
                    53, 36, 53}, {39, 54, 0, 58, 0, 22, 0, 53}, {36, 40, 53, 
                    2, 39}, {4, 29, 47, -13}, {38, 22, 0, 18, 0, 20}, {6, 20, 
                    28}, {38, 35, 0, 28, 0, 20}, {38, 54, 0, 28, 1, 48}, {38, 
                    7, 0, 28, 1, 25}, {
                    42, "CoerceTensor", 2, 0, 18, 2, 1, 48, 3, 1, 52}, {
                    42, "DotVV", 3, 1, 52, 3, 1, 25, 2, 0, 26, 3, 0, 40}, {19,
                     40, 25}, {10, 20, 40}, {13, 40, 25, 40}, {10, 11, 25}, {
                    27, 6, 4, 40, 25, 4}, {2, 4, 122}, {
                    42, "CopyTensor", 2, 2, 54, 2, 2, 32}, {10, 11, 40}, {10, 
                    15, 25}, {
                    42, "RandomReal", 3, 0, 40, 3, 0, 25, 3, 0, 37}, {40, 35, 
                    3, 0, 37, 3, 0, 40}, {19, 40, 37}, {40, 60, 3, 0, 36, 3, 
                    0, 40}, {16, 37, 40, 37}, {34, 1, 1, 37, 3, 48}, {
                    42, "CoerceTensor", 2, 0, 18, 2, 1, 51, 3, 1, 25}, {
                    42, "Join", 3, 1, 25, 3, 1, 48, 3, 1, 52}, {44, 50, 52, 
                    48}, {42, "CopyTensor", 3, 1, 48, 3, 1, 55}, {10, 11, 
                    37}, {10, 15, 40}, {
                    42, "RandomReal", 3, 0, 37, 3, 0, 40, 3, 0, 25}, {40, 35, 
                    3, 0, 25, 3, 0, 37}, {19, 37, 25}, {40, 60, 3, 0, 36, 3, 
                    0, 37}, {16, 25, 37, 25}, {34, 1, 1, 25, 3, 48}, {
                    42, "CoerceTensor", 2, 0, 18, 2, 1, 51, 3, 1, 52}, {
                    42, "Join", 3, 1, 52, 3, 1, 48, 3, 1, 25}, {44, 50, 25, 
                    48}, {42, "CopyTensor", 3, 1, 48, 3, 1, 50}, {6, 15, 
                    14}, {7, 21, 20}, {6, 21, 16}, {6, 42, 35}, {18, 16, 
                    20}, {12, 35, 15, 20, 50}, {10, 50, 25}, {16, 25, 10, 
                    25}, {7, 25, 20}, {10, 15, 25}, {27, 6, 4, 20, 25, 5}, {2,
                     5, 14}, {40, 53, 3, 0, 20, 2, 0, 50}, {12, 50, 16, 50}, {
                    6, 50, 14}, {38, 34, 0, 14, 0, 12, 0, 25}, {38, 55, 0, 12,
                     0, 37}, {27, 7, 4, 25, 37, 6}, {2, 6, 4}, {12, 14, 12, 
                    50}, {6, 50, 35}, {3, 3}, {12, 14, 15, 50}, {6, 50, 16}, {
                    3, -20}, {10, 11, 25}, {27, 4, 4, 20, 25, 5}, {2, 5, 4}, {
                    12, 35, 15, 50}, {6, 50, 35}, {3, 8}, {38, 34, 0, 35, 0, 
                    12, 0, 25}, {38, 55, 0, 12, 0, 37}, {27, 3, 4, 25, 37, 
                    6}, {2, 6, 4}, {12, 35, 15, 50}, {6, 50, 35}, {3, 1}, {25,
                     21, 35, 5}, {2, 5, 8}, {12, 35, 49, 50}, {34, 1, 3, 15, 
                    50, 15, 2, 48}, {12, 35, 12, 50}, {34, 1, 3, 21, 50, 15, 
                    2, 25}, {38, 34, 3, 25, 2, 52}, {39, 34, 3, 48, 2, 52}, {
                    3, 1}, {12, 35, 12, 50}, {39, 34, 0, 50, 1, 55}, {6, 15, 
                    14}, {7, 21, 20}, {6, 15, 16}, {6, 42, 35}, {18, 16, 
                    50}, {12, 35, 15, 50, 20}, {10, 20, 25}, {16, 25, 10, 
                    25}, {7, 25, 20}, {10, 15, 25}, {27, 6, 4, 20, 25, 5}, {2,
                     5, 14}, {40, 53, 3, 0, 20, 2, 0, 20}, {12, 20, 16, 20}, {
                    6, 20, 14}, {38, 34, 0, 14, 0, 12, 0, 25}, {38, 50, 0, 12,
                     0, 37}, {27, 7, 4, 25, 37, 6}, {2, 6, 4}, {12, 14, 12, 
                    20}, {6, 20, 35}, {3, 3}, {12, 14, 15, 20}, {6, 20, 16}, {
                    3, -20}, {10, 11, 25}, {27, 4, 4, 20, 25, 5}, {2, 5, 4}, {
                    12, 35, 15, 20}, {6, 20, 35}, {3, 8}, {38, 34, 0, 35, 0, 
                    12, 0, 25}, {38, 50, 0, 12, 0, 37}, {27, 3, 4, 25, 37, 
                    6}, {2, 6, 4}, {12, 35, 15, 20}, {6, 20, 35}, {3, 1}, {12,
                     35, 15, 20}, {34, 1, 3, 20, 12, 15, 2, 48}, {34, 1, 3, 
                    35, 49, 15, 2, 52}, {38, 34, 3, 52, 2, 25}, {39, 34, 3, 
                    48, 2, 25}, {39, 34, 0, 35, 1, 50}, {12, 42, 15, 20}, {6, 
                    20, 42}, {3, 63}, {10, 11, 25}, {10, 15, 37}, {
                    42, "RandomReal", 3, 0, 25, 3, 0, 37, 3, 0, 40}, {40, 35, 
                    3, 0, 40, 3, 0, 25}, {19, 25, 40}, {40, 60, 3, 0, 36, 3, 
                    0, 25}, {16, 40, 25, 40}, {34, 1, 1, 40, 3, 25}, {
                    42, "CoerceTensor", 2, 0, 18, 2, 1, 12, 3, 1, 48}, {
                    42, "CoerceTensor", 2, 0, 18, 2, 1, 23, 3, 1, 52}, {
                    42, "Join", 3, 1, 48, 3, 1, 52, 3, 1, 25, 3, 1, 47}, {44, 
                    50, 47, 25}, {42, "CopyTensor", 3, 1, 25, 3, 1, 55}, {6, 
                    15, 14}, {7, 21, 20}, {6, 21, 16}, {6, 42, 35}, {18, 16, 
                    20}, {12, 35, 15, 20, 50}, {10, 50, 40}, {16, 40, 10, 
                    40}, {7, 40, 20}, {10, 15, 40}, {27, 6, 4, 20, 40, 5}, {2,
                     5, 14}, {40, 53, 3, 0, 20, 2, 0, 50}, {12, 50, 16, 50}, {
                    6, 50, 14}, {38, 34, 0, 14, 0, 12, 0, 40}, {38, 55, 0, 12,
                     0, 25}, {27, 7, 4, 40, 25, 6}, {2, 6, 4}, {12, 14, 12, 
                    50}, {6, 50, 35}, {3, 3}, {12, 14, 15, 50}, {6, 50, 16}, {
                    3, -20}, {10, 11, 40}, {27, 4, 4, 20, 40, 5}, {2, 5, 4}, {
                    12, 35, 15, 50}, {6, 50, 35}, {3, 8}, {38, 34, 0, 35, 0, 
                    12, 0, 40}, {38, 55, 0, 12, 0, 25}, {27, 3, 4, 40, 25, 
                    6}, {2, 6, 4}, {12, 35, 15, 50}, {6, 50, 35}, {3, 1}, {25,
                     21, 35, 5}, {2, 5, 8}, {12, 35, 49, 50}, {34, 1, 3, 15, 
                    50, 15, 2, 25}, {12, 35, 12, 50}, {34, 1, 3, 21, 50, 15, 
                    2, 47}, {38, 34, 3, 47, 2, 48}, {39, 34, 3, 25, 2, 48}, {
                    3, 1}, {12, 35, 12, 50}, {39, 34, 0, 50, 1, 55}, {3, 
                    171}, {10, 11, 40}, {10, 15, 25}, {
                    42, "RandomReal", 3, 0, 40, 3, 0, 25, 3, 0, 37}, {38, 46, 
                    0, 18, 0, 40}, {27, 3, 4, 37, 40, 4}, {2, 4, 18}, {38, 22,
                     0, 18, 0, 50}, {38, 22, 0, 15, 0, 20}, {38, 15, 0, 15, 0,
                     46}, {12, 20, 15, 46, 20}, {38, 22, 0, 18, 0, 46}, {38, 
                    22, 0, 15, 0, 40}, {38, 15, 0, 15, 0, 53}, {12, 40, 15, 
                    53, 40}, {38, 32, 0, 46, 0, 40, 0, 53}, {38, 42, 0, 15, 0,
                     46}, {12, 53, 46, 53}, {39, 32, 0, 50, 0, 20, 0, 53}, {
                    38, 34, 3, 44, 2, 54}, {39, 34, 3, 43, 2, 54}, {41, 258, 
                    2, 0, 42, 2, 0, 15, 2, 0, 50}, {6, 50, 42}, {3, 148}, {
                    42, "CopyTensor", 3, 1, 10, 3, 1, 54}, {5, 0, 5}, {38, 22,
                     0, 15, 0, 47}, {38, 22, 0, 21, 0, 40}, {38, 22, 0, 18, 0,
                     53}, {34, 1, 3, 47, 40, 53, 2, 39}, {12, 27, 4, 12, 
                    47}, {34, 1, 3, 27, 47, 15, 2, 49}, {38, 22, 3, 49, 1, 
                    51}, {34, 1, 1, 7, 3, 49}, {
                    42, "CoerceTensor", 2, 0, 18, 2, 1, 39, 3, 1, 50}, {
                    42, "CoerceTensor", 2, 0, 18, 2, 1, 51, 3, 1, 55}, {
                    42, "Join", 3, 1, 50, 3, 1, 55, 3, 1, 49, 3, 1, 25}, {41, 
                    259, 3, 0, 21, 3, 1, 25, 3, 1, 39}, {
                    42, "CopyTensor", 3, 1, 39, 3, 1, 54}, {
                    42, "CopyTensor", 2, 2, 32, 2, 2, 39}, {38, 22, 0, 18, 0, 
                    47}, {25, 47, 3, 6}, {2, 6, 51}, {38, 22, 0, 18, 0, 47}, {
                    38, 37, 0, 15, 0, 40}, {12, 47, 40, 47}, {38, 22, 0, 15, 
                    0, 40}, {38, 16, 0, 15, 0, 53}, {12, 40, 15, 53, 40}, {38,
                     22, 0, 18, 0, 53}, {38, 37, 0, 15, 0, 50}, {12, 53, 50, 
                    53}, {38, 22, 0, 15, 0, 50}, {38, 16, 0, 15, 0, 20}, {12, 
                    50, 15, 20, 50}, {38, 39, 0, 53, 0, 50, 0, 20}, {38, 45, 
                    0, 15, 0, 53}, {12, 20, 53, 20}, {39, 39, 0, 47, 0, 40, 0,
                     20}, {38, 22, 0, 18, 0, 47}, {38, 37, 0, 21, 0, 40}, {12,
                     47, 40, 47}, {38, 22, 0, 15, 0, 40}, {38, 16, 0, 21, 0, 
                    53}, {12, 40, 15, 53, 40}, {38, 22, 0, 18, 0, 53}, {38, 
                    37, 0, 21, 0, 50}, {12, 53, 50, 53}, {38, 22, 0, 15, 0, 
                    50}, {38, 16, 0, 21, 0, 46}, {12, 50, 15, 46, 50}, {38, 
                    39, 0, 53, 0, 50, 0, 46}, {38, 45, 0, 21, 0, 53}, {12, 46,
                     53, 46}, {39, 39, 0, 47, 0, 40, 0, 46}, {38, 22, 0, 18, 
                    0, 47}, {6, 47, 39}, {38, 37, 0, 12, 0, 47}, {6, 47, 
                    55}, {12, 39, 55, 47}, {6, 47, 31}, {38, 35, 0, 31, 0, 
                    47}, {38, 39, 0, 31, 1, 25}, {38, 7, 0, 31, 1, 51}, {
                    42, "CoerceTensor", 2, 0, 18, 2, 1, 25, 3, 1, 49}, {
                    42, "DotVV", 3, 1, 49, 3, 1, 51, 2, 0, 26, 3, 0, 40}, {19,
                     40, 25}, {10, 47, 40}, {13, 40, 25, 40}, {10, 11, 25}, {
                    27, 6, 4, 40, 25, 7}, {5, 7, 5}, {3, 1}, {2, 5, 16}, {
                    42, "CopyTensor", 2, 2, 39, 2, 2, 32}, {10, 11, 40}, {10, 
                    15, 25}, {
                    42, "RandomReal", 3, 0, 40, 3, 0, 25, 3, 0, 37}, {40, 35, 
                    3, 0, 37, 3, 0, 40}, {19, 40, 37}, {40, 60, 3, 0, 36, 3, 
                    0, 40}, {16, 37, 40, 37}, {34, 1, 1, 37, 3, 25}, {
                    42, "CoerceTensor", 2, 0, 18, 2, 1, 26, 3, 1, 51}, {
                    42, "CoerceTensor", 2, 0, 18, 2, 1, 23, 3, 1, 49}, {
                    42, "Join", 3, 1, 51, 3, 1, 49, 3, 1, 25, 3, 1, 50}, {44, 
                    54, 50, 25}, {42, "CopyTensor", 3, 1, 25, 3, 1, 54}, {3, 
                    14}, {10, 11, 37}, {10, 15, 40}, {
                    42, "RandomReal", 3, 0, 37, 3, 0, 40, 3, 0, 25}, {40, 35, 
                    3, 0, 25, 3, 0, 37}, {19, 37, 25}, {40, 60, 3, 0, 36, 3, 
                    0, 37}, {16, 25, 37, 25}, {34, 1, 1, 25, 3, 25}, {
                    42, "CoerceTensor", 2, 0, 18, 2, 1, 12, 3, 1, 50}, {
                    42, "CoerceTensor", 2, 0, 18, 2, 1, 23, 3, 1, 51}, {
                    42, "Join", 3, 1, 50, 3, 1, 51, 3, 1, 25, 3, 1, 49}, {44, 
                    54, 49, 25}, {42, "CopyTensor", 3, 1, 25, 3, 1, 54}, {6, 
                    15, 14}, {7, 21, 20}, {6, 21, 16}, {6, 42, 35}, {18, 16, 
                    20}, {12, 35, 15, 20, 46}, {10, 46, 25}, {16, 25, 10, 
                    25}, {7, 25, 20}, {10, 15, 25}, {27, 6, 4, 20, 25, 6}, {2,
                     6, 14}, {40, 53, 3, 0, 20, 2, 0, 46}, {12, 46, 16, 46}, {
                    6, 46, 14}, {38, 34, 0, 14, 0, 12, 0, 25}, {38, 54, 0, 12,
                     0, 37}, {27, 7, 4, 25, 37, 7}, {2, 7, 4}, {12, 14, 12, 
                    46}, {6, 46, 35}, {3, 3}, {12, 14, 15, 46}, {6, 46, 16}, {
                    3, -20}, {10, 11, 25}, {27, 4, 4, 20, 25, 6}, {2, 6, 4}, {
                    12, 35, 15, 46}, {6, 46, 35}, {3, 8}, {38, 34, 0, 35, 0, 
                    12, 0, 25}, {38, 54, 0, 12, 0, 37}, {27, 3, 4, 25, 37, 
                    7}, {2, 7, 4}, {12, 35, 15, 46}, {6, 46, 35}, {3, 1}, {25,
                     21, 35, 6}, {2, 6, 8}, {12, 35, 49, 46}, {34, 1, 3, 15, 
                    46, 15, 2, 49}, {12, 35, 12, 46}, {34, 1, 3, 21, 46, 15, 
                    2, 50}, {38, 34, 3, 50, 2, 51}, {39, 34, 3, 49, 2, 51}, {
                    3, 1}, {12, 35, 12, 46}, {39, 34, 0, 46, 1, 54}, {12, 27, 
                    4, 12, 46}, {34, 1, 3, 15, 46, 15, 2, 46}, {38, 34, 0, 15,
                     3, 46, 1, 39}, {40, 53, 3, 1, 39, 2, 1, 46}, {
                    42, "CopyTensor", 2, 1, 46, 2, 1, 22}, {12, 27, 4, 12, 
                    40}, {34, 1, 3, 27, 40, 15, 2, 25}, {38, 22, 3, 25, 1, 
                    46}, {38, 22, 0, 18, 0, 40}, {38, 1, 0, 40, 0, 46}, {34, 
                    1, 3, 15, 46, 15, 2, 25}, {38, 46, 3, 25, 1, 39}, {6, 11, 
                    46}, {33, 39, 47}, {6, 11, 50}, {3, 4}, {37, 39, 50, 2, 
                    53}, {12, 46, 53, 29}, {6, 29, 46}, {4, 50, 47, -3}, {6, 
                    46, 44}, {10, 12, 25}, {13, 6, 25, 37}, {40, 60, 3, 0, 37,
                     3, 0, 25}, {16, 6, 25, 37}, {12, 44, 15, 46}, {38, 22, 0,
                     21, 0, 50}, {41, 263, 2, 0, 50, 3, 0, 10, 3, 0, 25}, {10,
                     21, 40}, {40, 60, 3, 0, 40, 3, 0, 42}, {16, 25, 42, 
                    25}, {40, 34, 3, 0, 25, 3, 0, 42}, {10, 25, 25}, {16, 25, 
                    42, 25}, {40, 60, 3, 0, 25, 3, 0, 42}, {10, 46, 25}, {16, 
                    25, 42, 25}, {16, 9, 25, 42}, {40, 34, 3, 0, 42, 3, 0, 
                    25}, {19, 25, 42}, {40, 34, 3, 0, 42, 3, 0, 25}, {10, 12, 
                    42}, {40, 34, 3, 0, 42, 3, 0, 40}, {19, 40, 42}, {13, 25, 
                    42, 25}, {10, 21, 42}, {16, 42, 37, 25, 42}, {7, 42, 
                    30}, {38, 22, 3, 29, 1, 25}, {45, 25, 0, 25}, {41, 263, 3,
                     1, 40, 2, 1, 25, 3, 1, 54}, {38, 22, 0, 18, 0, 20}, {38, 
                    1, 0, 20, 0, 46}, {34, 1, 3, 15, 46, 15, 2, 25}, {38, 54, 
                    3, 25, 1, 39}, {7, 21, 37}, {33, 39, 50}, {6, 11, 40}, {3,
                     4}, {37, 39, 40, 3, 42}, {16, 37, 42, 25}, {7, 25, 37}, {
                    4, 40, 50, -3}, {7, 37, 22}, {19, 2, 37}, {7, 37, 29}, {
                    38, 22, 0, 18, 0, 40}, {6, 40, 13}, {10, 21, 37}, {40, 60,
                     3, 0, 37, 3, 0, 25}, {7, 25, 26}, {16, 29, 26, 25}, {7, 
                    25, 31}, {40, 34, 3, 0, 31, 3, 0, 25}, {7, 25, 28}, {38, 
                    4, 0, 13, 0, 25}, {13, 30, 14, 37}, {16, 29, 37, 42}, {40,
                     10, 3, 0, 42, 3, 0, 37}, {10, 12, 42}, {13, 37, 42, 
                    37}, {16, 3, 28, 37, 42}, {19, 42, 37}, {40, 34, 3, 0, 37,
                     3, 0, 42}, {16, 25, 42, 25}, {38, 5, 0, 13, 0, 42}, {13, 
                    30, 17, 37}, {16, 29, 37, 40}, {40, 10, 3, 0, 40, 3, 0, 
                    37}, {10, 12, 40}, {13, 37, 40, 37}, {16, 3, 28, 37, 
                    40}, {19, 40, 37}, {40, 34, 3, 0, 37, 3, 0, 40}, {16, 42, 
                    40, 42}, {38, 6, 0, 13, 0, 40}, {13, 30, 19, 37}, {16, 29,
                     37, 39}, {40, 10, 3, 0, 39, 3, 0, 37}, {10, 12, 39}, {13,
                     37, 39, 37}, {16, 3, 28, 37, 39}, {19, 39, 37}, {40, 34, 
                    3, 0, 37, 3, 0, 39}, {16, 40, 39, 40}, {34, 1, 3, 25, 42, 
                    40, 3, 46}, {38, 33, 0, 13, 0, 25}, {16, 25, 22, 25}, {34,
                     1, 1, 25, 3, 39}, {
                    42, "Join", 3, 1, 46, 3, 1, 39, 3, 1, 54}, {
                    42, "CopyTensor", 3, 1, 54, 3, 1, 28}, {
                    42, "Accumulate", 3, 1, 28, 2, 0, 26, 3, 1, 54}, {
                    42, "CopyTensor", 3, 1, 54, 3, 1, 38}, {38, 38, 0, 12, 0, 
                    25}, {7, 25, 36}, {40, 60, 3, 0, 36, 3, 0, 25}, {41, 259, 
                    3, 0, 25, 3, 1, 28, 3, 1, 54}, {
                    42, "CopyTensor", 3, 1, 54, 3, 1, 18}, {38, 22, 0, 21, 0, 
                    40}, {18, 40, 46}, {12, 6, 46, 40}, {6, 40, 17}, {38, 22, 
                    0, 12, 0, 40}, {18, 40, 46}, {12, 5, 46, 40}, {6, 40, 
                    32}, {38, 22, 3, 30, 1, 54}, {
                    42, "TotalAll", 2, 1, 54, 2, 0, 26, 2, 0, 40}, {18, 40, 
                    46}, {12, 45, 46, 40}, {6, 40, 54}, {12, 17, 32, 54, 
                    40}, {6, 40, 41}, {34, 1, 3, 54, 32, 17, 2, 54}, {10, 41, 
                    25}, {40, 60, 3, 0, 25, 3, 0, 42}, {41, 259, 3, 0, 42, 2, 
                    1, 54, 3, 1, 46}, {
                    42, "CopyTensor", 3, 1, 46, 3, 1, 27}, {
                    42, "StuffBag", 3, 0, 12, 3, 2, 34, 6, 0, 17}, {
                    42, "CoerceTensor", 2, 0, 18, 2, 2, 32, 3, 2, 46}, {
                    42, "StuffBag", 3, 0, 38, 3, 2, 46, 6, 0, 17}, {
                    42, "StuffBag", 3, 0, 16, 3, 1, 18, 6, 0, 17}, {
                    42, "StuffBag", 3, 0, 27, 3, 1, 27, 6, 0, 17}, {10, 42, 
                    42}, {42, "StuffBagScalar", 3, 0, 41, 3, 0, 42, 6, 0, 
                    17}, {42, "StuffBagScalar", 3, 0, 15, 3, 0, 7, 6, 0, 
                    17}, {3, -994}, {
                    42, "BagPart", 3, 0, 38, 2, 0, 21, 3, 1, 46}, {
                    42, "StuffBag", 3, 0, 12, 3, 1, 46, 6, 0, 17}, {
                    42, "BagPart", 3, 0, 16, 2, 0, 21, 3, 1, 46}, {
                    42, "StuffBag", 3, 0, 12, 3, 1, 46, 6, 0, 17}, {
                    42, "BagPart", 3, 0, 27, 2, 0, 21, 3, 1, 46}, {
                    42, "StuffBag", 3, 0, 12, 3, 1, 46, 6, 0, 17}, {
                    42, "BagPart", 3, 0, 41, 2, 0, 21, 3, 1, 46}, {
                    42, "StuffBag", 3, 0, 12, 3, 1, 46, 6, 0, 17}, {
                    42, "BagPart", 3, 0, 15, 2, 0, 21, 3, 1, 46}, {
                    42, "StuffBag", 3, 0, 12, 3, 1, 46, 6, 0, 17}, {10, 1, 
                    42}, {42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 
                    17}, {10, 4, 42}, {
                    42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {12, 
                    24, 15, 40}, {10, 40, 42}, {
                    42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {
                    42, "Dimensions", 3, 2, 34, 2, 1, 46}, {
                    42, "CoerceTensor", 2, 0, 18, 2, 1, 46, 3, 1, 54}, {
                    42, "StuffBag", 3, 0, 12, 3, 1, 54, 6, 0, 17}, {12, 24, 
                    15, 40}, {10, 40, 42}, {
                    42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {
                    42, "Dimensions", 2, 2, 32, 2, 1, 46}, {
                    42, "CoerceTensor", 2, 0, 18, 2, 1, 46, 3, 1, 54}, {
                    42, "StuffBag", 3, 0, 12, 3, 1, 54, 6, 0, 17}, {12, 24, 
                    15, 40}, {10, 40, 42}, {
                    42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {
                    42, "Dimensions", 3, 1, 18, 2, 1, 46}, {
                    42, "CoerceTensor", 2, 0, 18, 2, 1, 46, 3, 1, 54}, {
                    42, "StuffBag", 3, 0, 12, 3, 1, 54, 6, 0, 17}, {12, 24, 
                    15, 40}, {10, 40, 42}, {
                    42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {
                    42, "Dimensions", 3, 1, 27, 2, 1, 46}, {
                    42, "CoerceTensor", 2, 0, 18, 2, 1, 46, 3, 1, 54}, {
                    42, "StuffBag", 3, 0, 12, 3, 1, 54, 6, 0, 17}, {12, 24, 
                    15, 40}, {10, 40, 42}, {
                    42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {12, 
                    24, 15, 40}, {10, 40, 42}, {
                    42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {34, 
                    1, 1, 34, 0, 46}, {
                    42, "Dimensions", 3, 3, 46, 2, 1, 54}, {33, 54, 40}, {10, 
                    40, 42}, {
                    42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {34, 
                    1, 1, 32, 0, 54}, {
                    42, "Dimensions", 2, 3, 54, 2, 1, 46}, {33, 46, 40}, {10, 
                    40, 42}, {
                    42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {34, 
                    1, 1, 18, 0, 46}, {
                    42, "Dimensions", 3, 2, 46, 2, 1, 54}, {33, 54, 40}, {10, 
                    40, 42}, {
                    42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {34, 
                    1, 1, 27, 0, 54}, {
                    42, "Dimensions", 3, 2, 54, 2, 1, 46}, {33, 46, 40}, {10, 
                    40, 42}, {
                    42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {34, 
                    1, 1, 42, 2, 46}, {
                    42, "Dimensions", 2, 1, 46, 2, 1, 54}, {33, 54, 40}, {10, 
                    40, 42}, {
                    42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {34, 
                    1, 1, 7, 3, 54}, {42, "Dimensions", 3, 1, 54, 2, 1, 46}, {
                    33, 46, 40}, {10, 40, 42}, {
                    42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {10, 
                    11, 42}, {
                    42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {10, 
                    11, 42}, {
                    42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {10, 
                    26, 42}, {
                    42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {
                    42, "BagPart", 3, 0, 12, 2, 0, 21, 3, 1, 46}, {1}}, 
                    
                    Function[{$CellContext`NtotE, $CellContext`Nmax, \
$CellContext`scegli, $CellContext`kmax, $CellContext`imax, \
$CellContext`maxsemidrivermut, $CellContext`maxnondrivermut, \
$CellContext`signature, $CellContext`compkeystep, $CellContext`expG, \
$CellContext`cntG, $CellContext`ctmax, $CellContext`tmax, \
$CellContext`maxmjump, $CellContext`maxtjump, $CellContext`Aasym, \
$CellContext`Asym, $CellContext`Aapop, $CellContext`Apass, $CellContext`cen, \
$CellContext`wide, $CellContext`slope, $CellContext`ratio}, 
                    
                    Block[{Compile`$35, Compile`$36, Compile`$37, Compile`$38,
                     Compile`$88, Compile`$89, Compile`$90, Compile`$91, 
                    Compile`$92, Compile`$93, Compile`$94, Compile`$137, 
                    Compile`$135, Compile`$138, Compile`$139, Compile`$140, 
                    Compile`$252, Compile`$392, Compile`$522, Compile`$523, 
                    Compile`$524, Compile`$611, Compile`$609, Compile`$612, 
                    Compile`$613, Compile`$614}, 
                    
                    Block[{$CellContext`Ntot, Empty = 
                    0, $CellContext`Ncell = {{0}}, $CellContext`ord = {
                    1}, $CellContext`times = {
                    0.}, $CellContext`state = {{
                    0, 0.}}, $CellContext`Ccell = {0, 0, 0}, $CellContext`t = 
                    0., $CellContext`ct = 
                    0, $CellContext`maxdrivermut, $CellContext`smv0, \
$CellContext`state0, $CellContext`sstate0, $CellContext`Cmut, \
$CellContext`genes, $CellContext`krates = {1.}, $CellContext`i = 
                    0, $CellContext`m = 
                    0, $CellContext`mv = {0, 0, 0, 0, 0}, $CellContext`p = 
                    0.1, $CellContext`r = 
                    0.1, $CellContext`mv0 = {0}, $CellContext`imkmv = {
                    0}, $CellContext`in = 0, $CellContext`fn = 
                    0, $CellContext`mid = 0, $CellContext`midr = 
                    0., $CellContext`CT = 
                    False, $CellContext`statetmp1, $CellContext`statetmp2, \
$CellContext`NewNcell, $CellContext`\[CapitalDelta]i = {0, 
                    0}, $CellContext`\[CapitalDelta]Nc = {0, 
                    0}, $CellContext`\[CapitalDelta]Nc2 = {0, 
                    0}, $CellContext`\[CapitalDelta]k = {0, 
                    0}, $CellContext`chooseiorm = {
                    10}, $CellContext`ratescum, $CellContext`ratesn, \
$CellContext`stateslist, $CellContext`Ncslist, $CellContext`probslist, \
$CellContext`spprobslist, $CellContext`Ntslist, $CellContext`tslist, \
$CellContext`key, $CellContext`ss, $CellContext`keyg, $CellContext`rates, \
$CellContext`rcum1, $CellContext`nondriverspace, \
$CellContext`semidriverspace, $CellContext`driverspace, $CellContext`space, \
$CellContext`spaceprob}, $CellContext`maxdrivermut = $CellContext`imax - 
                    1; $CellContext`mv0 = 
                    Table[0, {$CellContext`i, $CellContext`imax}]; \
$CellContext`state0 = Table[0, {$CellContext`i, $CellContext`imax + 
                    3}]; $CellContext`Cmut = Join[
                    Table[
                    1, {$CellContext`i, $CellContext`maxdrivermut}], \
{$CellContext`maxsemidrivermut}]; $CellContext`genes = \
$CellContext`expG/$CellContext`cntG; $CellContext`krates = $CellContext`Apass 
                    Join[
                    Table[1, {$CellContext`i, $CellContext`kmax - 1}], {
                    0}]; $CellContext`Ntot = $CellContext`NtotE; 
                    Empty = $CellContext`Nmax - $CellContext`Ntot - \
$CellContext`scegli; $CellContext`Ncell = 
                    Join[{{$CellContext`Ntot, 0, 0, 0, 0}}, 
                    
                    Table[$CellContext`mv0, {$CellContext`l, 
                    1, $CellContext`kmax - 1}]]; $CellContext`state = 
                    Block[{$CellContext`m = 0, $CellContext`k = 
                    1, $CellContext`mv = $CellContext`mv0, $CellContext`s = 
                    0., $CellContext`rnn = {0.}}, $CellContext`s = 
                    2 (E/(E - 1)) (Exp[-Exp[(-10.) ((Apply[Plus, 
                    Part[$CellContext`mv, 
                    Span[1, 
                    Part[$CellContext`compkeystep, $CellContext`k]]]] + 1)/(
                    10 Exp[$CellContext`m^0.5/2]))]] - 1/
                    E); $CellContext`rnn = (Compile`$35 = -$CellContext`wide; 
                    Compile`$36 = 2^(-1); 
                    Compile`$37 = Compile`$35 Compile`$36; 
                    Compile`$38 = E^Compile`$37; Accumulate[
                    
                    Join[{Part[$CellContext`Aasym, $CellContext`k] 
                    Exp[-($CellContext`slope 
                    Compile`$38 (Cosh[Compile`$35 ($CellContext`s - 2.)] - 
                    1))], Part[$CellContext`Asym, $CellContext`k] 
                    Exp[-($CellContext`slope 
                    Compile`$38 (Cosh[Compile`$35 ($CellContext`s - 1.)] - 
                    1))], Part[$CellContext`Aapop, $CellContext`k] 
                    Exp[-($CellContext`slope 
                    Compile`$38 (Cosh[Compile`$35 ($CellContext`s - 0.5)] - 
                    1))]}, {Part[$CellContext`krates, $CellContext`k] 
                    Apply[Times, 
                    
                    Part[$CellContext`genes^($CellContext`mv \
$CellContext`signature), 
                    Span[1, 
                    Part[$CellContext`compkeystep, $CellContext`k]]]]}]]); 
                    Join[
                    Table[
                    1. Join[{0, 0, 1}, $CellContext`mv0], {$CellContext`k, 
                    1, $CellContext`Nmax + 2}], (-Log[
                    RandomReal[{0, 1}, {$CellContext`Nmax + 2, 1}]])/
                    Part[$CellContext`rnn, -1] + $CellContext`t, 
                    2]]; $CellContext`Ccell = (
                    Compile`$88 = -$CellContext`Ntot; Compile`$89 = -Empty; 
                    Compile`$90 = $CellContext`Nmax + Compile`$88 + 
                    Compile`$89; Compile`$91 = 2^(-1); 
                    Compile`$92 = Compile`$90 Compile`$91; 
                    Compile`$93 = Floor[Compile`$92]; 
                    Compile`$94 = Max[0, Compile`$93]; {
                    Floor[$CellContext`Ntot + Empty], Compile`$94, 
                    Compile`$94}); $CellContext`times = Part[
                    Transpose[$CellContext`state], -1]; $CellContext`ord = 
                    Ordering[$CellContext`times]; $CellContext`state = 
                    Part[$CellContext`state, $CellContext`ord]; \
$CellContext`imkmv = IntegerPart[
                    Part[$CellContext`state, 1, 
                    Span[1, 4 + $CellContext`imax - 1]]]; $CellContext`key = 
                    Apply[Plus, 
                    Part[
                    Part[$CellContext`imkmv, 
                    Span[4, -1]], 
                    Span[1, 
                    Part[$CellContext`compkeystep, 
                    Part[$CellContext`imkmv, 3]]]]]; $CellContext`ss = 
                    2 (E/(E - 1)) (
                    Exp[-Exp[(-10.) (($CellContext`key + 1)/(10 
                    Exp[Part[$CellContext`imkmv, 2]^0.5/2]))]] - 1/
                    E); $CellContext`keyg = Apply[Times, 
                    Part[$CellContext`genes^(Part[$CellContext`imkmv, 
                    Span[4, -1]] $CellContext`signature), 
                    Span[1, 
                    Part[$CellContext`compkeystep, 
                    Part[$CellContext`imkmv, 3]]]]]; $CellContext`rates = (
                    Compile`$137 = -$CellContext`wide; 
                    Compile`$135 = Part[$CellContext`imkmv, 3]; 
                    Compile`$138 = 2^(-1); 
                    Compile`$139 = Compile`$137 Compile`$138; 
                    Compile`$140 = E^Compile`$139; 
                    Join[{Part[$CellContext`Aasym, Compile`$135] 
                    Exp[-($CellContext`slope 
                    Compile`$140 (Cosh[Compile`$137 ($CellContext`ss - 2.)] - 
                    1))], Part[$CellContext`Asym, Compile`$135] 
                    Exp[-($CellContext`slope 
                    Compile`$140 (Cosh[Compile`$137 ($CellContext`ss - 1.)] - 
                    1))], Part[$CellContext`Aapop, Compile`$135] 
                    Exp[-($CellContext`slope 
                    Compile`$140 (Cosh[Compile`$137 ($CellContext`ss - 0.5)] - 
                    1))]}, {Part[$CellContext`krates, 
                    Compile`$135] $CellContext`keyg}]); $CellContext`ratescum = 
                    Accumulate[$CellContext`rates]; $CellContext`rcum1 = 
                    Part[$CellContext`ratescum, -1]; $CellContext`ratesn = \
$CellContext`rates/$CellContext`rcum1; $CellContext`nondriverspace = \
$CellContext`maxnondrivermut - Part[$CellContext`imkmv, 
                    2]; $CellContext`semidriverspace = \
$CellContext`maxsemidrivermut - 
                    Part[$CellContext`imkmv, -1]; $CellContext`driverspace = \
$CellContext`maxdrivermut - Total[
                    Part[$CellContext`imkmv, 
                    Span[
                    4, -2]]]; $CellContext`space = \
$CellContext`nondriverspace + $CellContext`semidriverspace + \
$CellContext`driverspace; $CellContext`spaceprob = {$CellContext`driverspace, \
$CellContext`semidriverspace, $CellContext`nondriverspace}/$CellContext`space; \
$CellContext`stateslist = Internal`Bag[
                    Most[{1.}]]; $CellContext`Ncslist = Internal`Bag[
                    Most[{1.}]]; $CellContext`probslist = Internal`Bag[
                    Most[{1.}]]; $CellContext`spprobslist = Internal`Bag[
                    Most[{1.}]]; $CellContext`Ntslist = Internal`Bag[
                    Most[{1.}]]; $CellContext`tslist = Internal`Bag[
                    Most[{1.}]]; 
                    Internal`StuffBag[$CellContext`stateslist, \
$CellContext`state, 2]; 
                    Internal`StuffBag[$CellContext`Ncslist, \
$CellContext`Ncell, 2]; 
                    Internal`StuffBag[$CellContext`probslist, \
$CellContext`ratesn, 2]; 
                    Internal`StuffBag[$CellContext`spprobslist, \
$CellContext`spaceprob, 2]; 
                    Internal`StuffBag[$CellContext`Ntslist, \
$CellContext`Ntot]; Internal`StuffBag[$CellContext`tslist, $CellContext`t]; 
                    While[
                    And[
                    Part[$CellContext`state, 
                    1, -1] < $CellContext`tmax, $CellContext`ct < \
$CellContext`ctmax, $CellContext`Ntot > 0], 
                    AddTo[$CellContext`ct, 1]; $CellContext`t = 
                    Part[$CellContext`state, 1, -1]; 
                    Block[{$CellContext`probc}, $CellContext`probc = 
                    Accumulate[$CellContext`ratesn]; 
                    Which[RandomReal[{0, 1}] < Part[$CellContext`probc, 1], 
                    
                    Block[{$CellContext`statetmp1 = {
                    0.}, $CellContext`statetmp2 = {
                    0.}, $CellContext`chooseiorm = {
                    0}, $CellContext`\[CapitalDelta]i, $CellContext`\
\[CapitalDelta]Nc, $CellContext`NewNcell, $CellContext`CT}, \
$CellContext`statetmp2 = 1. Join[{
                    Part[$CellContext`imkmv, 1], 
                    Part[$CellContext`imkmv, 2], 
                    Part[$CellContext`imkmv, 3]}, 
                    Part[$CellContext`imkmv, 
                    Span[
                    4, 4 + $CellContext`imax - 
                    1]], {$CellContext`t}]; $CellContext`chooseiorm = 
                    Block[{$CellContext`nondriverspace = 
                    0, $CellContext`space = 0, $CellContext`currentmut = 
                    0, $CellContext`range = {0}, $CellContext`mut = 
                    0, $CellContext`gm = 
                    0, $CellContext`dmv = $CellContext`mv0}, \
$CellContext`nondriverspace = $CellContext`maxnondrivermut - 
                    Part[$CellContext`imkmv, 
                    2]; $CellContext`space = $CellContext`maxsemidrivermut + \
$CellContext`maxdrivermut - Total[
                    Part[$CellContext`imkmv, 
                    Span[
                    4, 4 + $CellContext`imax - 
                    1]]] + $CellContext`nondriverspace; \
$CellContext`currentmut = RandomInteger[{
                    Min[
                    1, $CellContext`space], $CellContext`space}] - \
$CellContext`nondriverspace; If[$CellContext`currentmut > 
                    0, $CellContext`range = Select[
                    Range[$CellContext`imax], Part[
                    Part[$CellContext`imkmv, 
                    Span[4, 4 + $CellContext`imax - 1]], #] < 
                    Part[$CellContext`Cmut, #]& ]; $CellContext`mut = 
                    Part[$CellContext`range, 
                    Min[
                    Length[$CellContext`range], $CellContext`currentmut]]; 
                    AddTo[
                    Part[$CellContext`dmv, $CellContext`mut], 
                    1], $CellContext`gm = IntegerPart[
                    RandomInteger[{1, $CellContext`maxmjump}]]]; Join[{
                    Total[
                    Most[$CellContext`dmv]], 
                    Min[$CellContext`gm, $CellContext`nondriverspace], 
                    0}, $CellContext`dmv]]; $CellContext`NewNcell = \
$CellContext`Ncell; $CellContext`\[CapitalDelta]i = {0, 
                    
                    First[$CellContext`chooseiorm]}; $CellContext`\
\[CapitalDelta]Nc = {0, 1}; MapThread[(Part[$CellContext`NewNcell, 
                    Part[$CellContext`imkmv, 3], Part[$CellContext`imkmv, 1] + 
                    1 + #] = Part[$CellContext`NewNcell, 
                    Part[$CellContext`imkmv, 3], Part[$CellContext`imkmv, 1] + 
                    1 + #] + #2)& , {$CellContext`\[CapitalDelta]i, \
$CellContext`\[CapitalDelta]Nc}]; $CellContext`CT = (
                    Compile`$252 = Part[$CellContext`imkmv, 3]; 
                    Part[$CellContext`Ccell, Compile`$252] - Dot[
                    Part[$CellContext`NewNcell, Compile`$252], 
                    Part[$CellContext`ratio, Compile`$252]] >= 0); 
                    If[$CellContext`CT, $CellContext`Ncell = \
$CellContext`NewNcell; $CellContext`statetmp1 = $CellContext`statetmp2 + 
                    Join[{0, 0, 0}, $CellContext`mv0, {(-Log[
                    
                    RandomReal[{0, 
                    1}]])/$CellContext`rcum1}]; $CellContext`statetmp2 = \
$CellContext`statetmp2 + Join[$CellContext`chooseiorm, {(-Log[
                    
                    RandomReal[{0, 
                    1}]])/$CellContext`rcum1}]; ($CellContext`mid = 
                    1; $CellContext`midr = 1.; $CellContext`in = 
                    2; $CellContext`fn = $CellContext`Ntot; 
                    While[$CellContext`midr = ($CellContext`fn + 
                    1 - $CellContext`in) 0.5; $CellContext`midr >= 
                    1, $CellContext`mid = 
                    IntegerPart[$CellContext`midr] + $CellContext`in; 
                    If[Part[$CellContext`state, $CellContext`mid, -1] > 
                    Part[$CellContext`statetmp1, -1], $CellContext`fn = \
$CellContext`mid - 1, $CellContext`in = $CellContext`mid + 1]]; 
                    If[$CellContext`midr <= 0, 
                    AddTo[$CellContext`fn, 1], 
                    If[
                    Part[$CellContext`state, $CellContext`fn, -1] < 
                    Part[$CellContext`statetmp1, -1], 
                    AddTo[$CellContext`fn, 1]]]; (
                    If[$CellContext`fn > 2, Part[$CellContext`state, 
                    Span[1, $CellContext`fn - 2]] = Part[$CellContext`state, 
                    Span[2, $CellContext`fn - 1]]]; 
                    Part[$CellContext`state, $CellContext`fn - 
                    1] = $CellContext`statetmp1)); ($CellContext`mid = 
                    1; $CellContext`midr = 1.; $CellContext`in = 
                    1; $CellContext`fn = $CellContext`Ntot; 
                    While[$CellContext`midr = ($CellContext`fn + 
                    1 - $CellContext`in) 0.5; $CellContext`midr >= 
                    1, $CellContext`mid = 
                    IntegerPart[$CellContext`midr] + $CellContext`in; 
                    If[Part[$CellContext`state, $CellContext`mid, -1] > 
                    Part[$CellContext`statetmp2, -1], $CellContext`fn = \
$CellContext`mid - 1, $CellContext`in = $CellContext`mid + 1]]; 
                    If[$CellContext`midr <= 0, 
                    AddTo[$CellContext`fn, 1], 
                    If[
                    Part[$CellContext`state, $CellContext`fn, -1] < 
                    Part[$CellContext`statetmp2, -1], 
                    AddTo[$CellContext`fn, 1]]]; (Part[$CellContext`state, 
                    Span[$CellContext`fn + 1, -1]] = 
                    Part[$CellContext`state, 
                    Span[$CellContext`fn, -2]]; 
                    Part[$CellContext`state, $CellContext`fn] = \
$CellContext`statetmp2)); AddTo[$CellContext`Ntot, 1]; 
                    Null, $CellContext`statetmp1 = $CellContext`statetmp2 + 
                    Join[{0, 0, 0}, $CellContext`mv0, {(-Log[
                    
                    RandomReal[{0, 
                    1}]])/$CellContext`rcum1}]; ($CellContext`mid = 
                    1; $CellContext`midr = 1.; $CellContext`in = 
                    2; $CellContext`fn = $CellContext`Ntot; 
                    While[$CellContext`midr = ($CellContext`fn + 
                    1 - $CellContext`in) 0.5; $CellContext`midr >= 
                    1, $CellContext`mid = 
                    IntegerPart[$CellContext`midr] + $CellContext`in; 
                    If[Part[$CellContext`state, $CellContext`mid, -1] > 
                    Part[$CellContext`statetmp1, -1], $CellContext`fn = \
$CellContext`mid - 1, $CellContext`in = $CellContext`mid + 1]]; 
                    If[$CellContext`midr <= 0, 
                    AddTo[$CellContext`fn, 1], 
                    If[
                    Part[$CellContext`state, $CellContext`fn, -1] < 
                    Part[$CellContext`statetmp1, -1], 
                    AddTo[$CellContext`fn, 1]]]; (
                    If[$CellContext`fn > 2, Part[$CellContext`state, 
                    Span[1, $CellContext`fn - 2]] = Part[$CellContext`state, 
                    Span[2, $CellContext`fn - 1]]]; 
                    Part[$CellContext`state, $CellContext`fn - 
                    1] = $CellContext`statetmp1)); Null]; Null], 
                    RandomReal[{0, 1}] < Part[$CellContext`probc, 2], 
                    
                    Block[{$CellContext`statetmp1 = {
                    0.}, $CellContext`statetmp2 = {
                    0.}, $CellContext`chooseiorm = {
                    0}, $CellContext`\[CapitalDelta]i, $CellContext`\
\[CapitalDelta]Nc, $CellContext`NewNcell, $CellContext`CT}, \
$CellContext`statetmp2 = 1. Join[{
                    Part[$CellContext`imkmv, 1], 
                    Part[$CellContext`imkmv, 2], 
                    Part[$CellContext`imkmv, 3]}, 
                    Part[$CellContext`imkmv, 
                    Span[
                    4, 4 + $CellContext`imax - 
                    1]], {$CellContext`t}]; $CellContext`chooseiorm = 
                    Block[{$CellContext`nondriverspace = 
                    0, $CellContext`space = 0, $CellContext`currentmut = 
                    0, $CellContext`range = {0}, $CellContext`mut = 
                    0, $CellContext`gm = 
                    0, $CellContext`dmv = $CellContext`mv0}, \
$CellContext`nondriverspace = $CellContext`maxnondrivermut - 
                    Part[$CellContext`imkmv, 
                    2]; $CellContext`space = $CellContext`maxsemidrivermut + \
$CellContext`maxdrivermut - Total[
                    Part[$CellContext`imkmv, 
                    Span[
                    4, 4 + $CellContext`imax - 
                    1]]] + $CellContext`nondriverspace; \
$CellContext`currentmut = RandomInteger[{
                    Min[
                    1, $CellContext`space], $CellContext`space}] - \
$CellContext`nondriverspace; If[$CellContext`currentmut > 
                    0, $CellContext`range = Select[
                    Range[$CellContext`imax], Part[
                    Part[$CellContext`imkmv, 
                    Span[4, 4 + $CellContext`imax - 1]], #] < 
                    Part[$CellContext`Cmut, #]& ]; $CellContext`mut = 
                    Part[$CellContext`range, 
                    Min[
                    Length[$CellContext`range], $CellContext`currentmut]]; 
                    AddTo[
                    Part[$CellContext`dmv, $CellContext`mut], 
                    1], $CellContext`gm = IntegerPart[
                    RandomInteger[{1, $CellContext`maxmjump}]]]; Join[{
                    Total[
                    Most[$CellContext`dmv]], 
                    Min[$CellContext`gm, $CellContext`nondriverspace], 
                    0}, $CellContext`dmv]]; $CellContext`NewNcell = \
$CellContext`Ncell; $CellContext`\[CapitalDelta]i = {0, 
                    
                    First[$CellContext`chooseiorm]}; $CellContext`\
\[CapitalDelta]Nc = {-1, 2}; MapThread[(Part[$CellContext`NewNcell, 
                    Part[$CellContext`imkmv, 3], Part[$CellContext`imkmv, 1] + 
                    1 + #] = Part[$CellContext`NewNcell, 
                    Part[$CellContext`imkmv, 3], Part[$CellContext`imkmv, 1] + 
                    1 + #] + #2)& , {$CellContext`\[CapitalDelta]i, \
$CellContext`\[CapitalDelta]Nc}]; $CellContext`CT = (
                    Compile`$392 = Part[$CellContext`imkmv, 3]; 
                    Part[$CellContext`Ccell, Compile`$392] - Dot[
                    Part[$CellContext`NewNcell, Compile`$392], 
                    Part[$CellContext`ratio, Compile`$392]] >= 0); 
                    If[$CellContext`CT, $CellContext`Ncell = \
$CellContext`NewNcell; $CellContext`statetmp1 = $CellContext`statetmp2 + 
                    Join[$CellContext`chooseiorm, {(-Log[
                    
                    RandomReal[{0, 
                    1}]])/$CellContext`rcum1}]; $CellContext`statetmp2 = \
$CellContext`statetmp2 + Join[$CellContext`chooseiorm, {(-Log[
                    
                    RandomReal[{0, 
                    1}]])/$CellContext`rcum1}]; ($CellContext`mid = 
                    1; $CellContext`midr = 1.; $CellContext`in = 
                    2; $CellContext`fn = $CellContext`Ntot; 
                    While[$CellContext`midr = ($CellContext`fn + 
                    1 - $CellContext`in) 0.5; $CellContext`midr >= 
                    1, $CellContext`mid = 
                    IntegerPart[$CellContext`midr] + $CellContext`in; 
                    If[Part[$CellContext`state, $CellContext`mid, -1] > 
                    Part[$CellContext`statetmp1, -1], $CellContext`fn = \
$CellContext`mid - 1, $CellContext`in = $CellContext`mid + 1]]; 
                    If[$CellContext`midr <= 0, 
                    AddTo[$CellContext`fn, 1], 
                    If[
                    Part[$CellContext`state, $CellContext`fn, -1] < 
                    Part[$CellContext`statetmp1, -1], 
                    AddTo[$CellContext`fn, 1]]]; (
                    If[$CellContext`fn > 2, Part[$CellContext`state, 
                    Span[1, $CellContext`fn - 2]] = Part[$CellContext`state, 
                    Span[2, $CellContext`fn - 1]]]; 
                    Part[$CellContext`state, $CellContext`fn - 
                    1] = $CellContext`statetmp1)); ($CellContext`mid = 
                    1; $CellContext`midr = 1.; $CellContext`in = 
                    1; $CellContext`fn = $CellContext`Ntot; 
                    While[$CellContext`midr = ($CellContext`fn + 
                    1 - $CellContext`in) 0.5; $CellContext`midr >= 
                    1, $CellContext`mid = 
                    IntegerPart[$CellContext`midr] + $CellContext`in; 
                    If[Part[$CellContext`state, $CellContext`mid, -1] > 
                    Part[$CellContext`statetmp2, -1], $CellContext`fn = \
$CellContext`mid - 1, $CellContext`in = $CellContext`mid + 1]]; 
                    If[$CellContext`midr <= 0, 
                    AddTo[$CellContext`fn, 1], 
                    If[
                    Part[$CellContext`state, $CellContext`fn, -1] < 
                    Part[$CellContext`statetmp2, -1], 
                    AddTo[$CellContext`fn, 1]]]; (Part[$CellContext`state, 
                    Span[$CellContext`fn + 1, -1]] = 
                    Part[$CellContext`state, 
                    Span[$CellContext`fn, -2]]; 
                    Part[$CellContext`state, $CellContext`fn] = \
$CellContext`statetmp2)); AddTo[$CellContext`Ntot, 1]; 
                    Null, $CellContext`statetmp1 = $CellContext`statetmp2 + 
                    Join[{0, 0, 0}, $CellContext`mv0, {(-Log[
                    
                    RandomReal[{0, 
                    1}]])/$CellContext`rcum1}]; ($CellContext`mid = 
                    1; $CellContext`midr = 1.; $CellContext`in = 
                    2; $CellContext`fn = $CellContext`Ntot; 
                    While[$CellContext`midr = ($CellContext`fn + 
                    1 - $CellContext`in) 0.5; $CellContext`midr >= 
                    1, $CellContext`mid = 
                    IntegerPart[$CellContext`midr] + $CellContext`in; 
                    If[Part[$CellContext`state, $CellContext`mid, -1] > 
                    Part[$CellContext`statetmp1, -1], $CellContext`fn = \
$CellContext`mid - 1, $CellContext`in = $CellContext`mid + 1]]; 
                    If[$CellContext`midr <= 0, 
                    AddTo[$CellContext`fn, 1], 
                    If[
                    Part[$CellContext`state, $CellContext`fn, -1] < 
                    Part[$CellContext`statetmp1, -1], 
                    AddTo[$CellContext`fn, 1]]]; (
                    If[$CellContext`fn > 2, Part[$CellContext`state, 
                    Span[1, $CellContext`fn - 2]] = Part[$CellContext`state, 
                    Span[2, $CellContext`fn - 1]]]; 
                    Part[$CellContext`state, $CellContext`fn - 
                    1] = $CellContext`statetmp1)); Null]; Null], 
                    RandomReal[{0, 1}] < Part[$CellContext`probc, 3], 
                    
                    Block[{$CellContext`\[CapitalDelta]i, $CellContext`\
\[CapitalDelta]Nc}, $CellContext`\[CapitalDelta]i = {
                    0}; $CellContext`\[CapitalDelta]Nc = {-1}; 
                    Part[$CellContext`Ncell, 
                    Part[$CellContext`imkmv, 3], Part[$CellContext`imkmv, 1] + 
                    1 + Part[$CellContext`\[CapitalDelta]i, 1]] = 
                    Part[$CellContext`Ncell, 
                    Part[$CellContext`imkmv, 3], Part[$CellContext`imkmv, 1] + 
                    1 + Part[$CellContext`\[CapitalDelta]i, 1]] + 
                    Part[$CellContext`\[CapitalDelta]Nc, 1]; (
                    Part[$CellContext`state, 
                    Span[1, -2]] = Part[$CellContext`state, 
                    Span[2, -1]]; Null); SubtractFrom[$CellContext`Ntot, 1]; 
                    Null], True, 
                    
                    Block[{$CellContext`statetmp1 = {
                    0.}, $CellContext`statetmp2 = {
                    0.}, $CellContext`chooseiorm, \
$CellContext`\[CapitalDelta]i, $CellContext`\[CapitalDelta]Nc, $CellContext`\
\[CapitalDelta]k, $CellContext`NewNcell, $CellContext`CT}, $CellContext`CT = 
                    False; $CellContext`statetmp1 = 1. Join[{
                    Part[$CellContext`imkmv, 1], 
                    Part[$CellContext`imkmv, 2], 
                    Part[$CellContext`imkmv, 3]}, 
                    Part[$CellContext`imkmv, 
                    Span[
                    4, 4 + $CellContext`imax - 
                    1]], {$CellContext`t}]; $CellContext`NewNcell = \
$CellContext`Ncell; If[Part[$CellContext`imkmv, 
                    3] < $CellContext`kmax, $CellContext`\[CapitalDelta]i = {
                    0, 0}; $CellContext`\[CapitalDelta]Nc = {-1, 
                    1}; $CellContext`\[CapitalDelta]k = {0, 1}; 
                    Part[$CellContext`NewNcell, Part[$CellContext`imkmv, 3] + 
                    Part[$CellContext`\[CapitalDelta]k, 1], 
                    Part[$CellContext`imkmv, 1] + 1 + 
                    Part[$CellContext`\[CapitalDelta]i, 1]] = 
                    Part[$CellContext`NewNcell, Part[$CellContext`imkmv, 3] + 
                    Part[$CellContext`\[CapitalDelta]k, 1], 
                    Part[$CellContext`imkmv, 1] + 1 + 
                    Part[$CellContext`\[CapitalDelta]i, 1]] + 
                    Part[$CellContext`\[CapitalDelta]Nc, 1]; 
                    Part[$CellContext`NewNcell, Part[$CellContext`imkmv, 3] + 
                    Part[$CellContext`\[CapitalDelta]k, 2], 
                    Part[$CellContext`imkmv, 1] + 1 + 
                    Part[$CellContext`\[CapitalDelta]i, 2]] = 
                    Part[$CellContext`NewNcell, Part[$CellContext`imkmv, 3] + 
                    Part[$CellContext`\[CapitalDelta]k, 2], 
                    Part[$CellContext`imkmv, 1] + 1 + 
                    Part[$CellContext`\[CapitalDelta]i, 2]] + 
                    Part[$CellContext`\[CapitalDelta]Nc, 
                    2]; $CellContext`CT = (
                    Compile`$522 = Part[$CellContext`imkmv, 3]; 
                    Compile`$523 = Last[$CellContext`\[CapitalDelta]k]; 
                    Compile`$524 = Compile`$522 + Compile`$523; 
                    Part[$CellContext`Ccell, Compile`$524] - Dot[
                    Part[$CellContext`NewNcell, Compile`$524], 
                    Part[$CellContext`ratio, Compile`$524]] >= 0)]; 
                    If[$CellContext`CT, $CellContext`Ncell = \
$CellContext`NewNcell; $CellContext`statetmp1 = $CellContext`statetmp1 + 
                    Join[{0, 0, 1}, $CellContext`mv0, {(-Log[
                    RandomReal[{0, 
                    1}]])/$CellContext`rcum1}], $CellContext`statetmp1 = \
$CellContext`statetmp1 + Join[{0, 0, 0}, $CellContext`mv0, {(-Log[
                    
                    RandomReal[{0, 
                    1}]])/$CellContext`rcum1}]]; ($CellContext`mid = 
                    1; $CellContext`midr = 1.; $CellContext`in = 
                    2; $CellContext`fn = $CellContext`Ntot; 
                    While[$CellContext`midr = ($CellContext`fn + 
                    1 - $CellContext`in) 0.5; $CellContext`midr >= 
                    1, $CellContext`mid = 
                    IntegerPart[$CellContext`midr] + $CellContext`in; 
                    If[Part[$CellContext`state, $CellContext`mid, -1] > 
                    Part[$CellContext`statetmp1, -1], $CellContext`fn = \
$CellContext`mid - 1, $CellContext`in = $CellContext`mid + 1]]; 
                    If[$CellContext`midr <= 0, 
                    AddTo[$CellContext`fn, 1], 
                    If[
                    Part[$CellContext`state, $CellContext`fn, -1] < 
                    Part[$CellContext`statetmp1, -1], 
                    AddTo[$CellContext`fn, 1]]]; (
                    If[$CellContext`fn > 2, Part[$CellContext`state, 
                    Span[1, $CellContext`fn - 2]] = Part[$CellContext`state, 
                    Span[2, $CellContext`fn - 1]]]; 
                    Part[$CellContext`state, $CellContext`fn - 
                    1] = $CellContext`statetmp1)); 
                    Null]]]; $CellContext`imkmv = IntegerPart[
                    Part[$CellContext`state, 1, 
                    Span[1, 4 + $CellContext`imax - 1]]]; $CellContext`key = 
                    Apply[Plus, 
                    Part[
                    Part[$CellContext`imkmv, 
                    Span[4, 4 + $CellContext`imax - 1]], 
                    Span[1, 
                    Part[$CellContext`compkeystep, 
                    Part[$CellContext`imkmv, 3]]]]]; $CellContext`ss = 
                    2 (E/(E - 1)) (
                    Exp[-Exp[(-10.) (($CellContext`key + 1)/(10 
                    Exp[Part[$CellContext`imkmv, 2]^0.5/2]))]] - 1/
                    E); $CellContext`keyg = Apply[Times, 
                    Part[$CellContext`genes^(Part[$CellContext`imkmv, 
                    Span[4, -1]] $CellContext`signature), 
                    Span[1, 
                    Part[$CellContext`compkeystep, 
                    Part[$CellContext`imkmv, 3]]]]]; $CellContext`rates = (
                    Compile`$611 = -$CellContext`wide; 
                    Compile`$609 = Part[$CellContext`imkmv, 3]; 
                    Compile`$612 = 2^(-1); 
                    Compile`$613 = Compile`$611 Compile`$612; 
                    Compile`$614 = E^Compile`$613; 
                    Join[{Part[$CellContext`Aasym, Compile`$609] 
                    Exp[-($CellContext`slope 
                    Compile`$614 (Cosh[Compile`$611 ($CellContext`ss - 2.)] - 
                    1))], Part[$CellContext`Asym, Compile`$609] 
                    Exp[-($CellContext`slope 
                    Compile`$614 (Cosh[Compile`$611 ($CellContext`ss - 1.)] - 
                    1))], Part[$CellContext`Aapop, Compile`$609] 
                    Exp[-($CellContext`slope 
                    Compile`$614 (Cosh[Compile`$611 ($CellContext`ss - 0.5)] - 
                    1))]}, {Part[$CellContext`krates, 
                    Compile`$609] $CellContext`keyg}]); $CellContext`ratescum = 
                    Accumulate[$CellContext`rates]; $CellContext`rcum1 = 
                    Part[$CellContext`ratescum, -1]; $CellContext`ratesn = \
$CellContext`rates/$CellContext`rcum1; $CellContext`nondriverspace = \
$CellContext`maxnondrivermut - Part[$CellContext`imkmv, 
                    2]; $CellContext`semidriverspace = \
$CellContext`maxsemidrivermut - 
                    Part[$CellContext`imkmv, -1]; $CellContext`driverspace = \
$CellContext`maxdrivermut - Total[
                    Part[$CellContext`imkmv, 
                    Span[
                    4, -2]]]; $CellContext`space = \
$CellContext`nondriverspace + $CellContext`semidriverspace + \
$CellContext`driverspace; $CellContext`spaceprob = {$CellContext`driverspace, \
$CellContext`semidriverspace, $CellContext`nondriverspace}/$CellContext`space; 
                    Internal`StuffBag[$CellContext`stateslist, \
$CellContext`state, 2]; 
                    Internal`StuffBag[$CellContext`Ncslist, \
$CellContext`Ncell, 2]; 
                    Internal`StuffBag[$CellContext`probslist, \
$CellContext`ratesn, 2]; 
                    Internal`StuffBag[$CellContext`spprobslist, \
$CellContext`spaceprob, 2]; 
                    Internal`StuffBag[$CellContext`Ntslist, \
$CellContext`Ntot]; Internal`StuffBag[$CellContext`tslist, $CellContext`t]; 
                    Null]; Internal`StuffBag[$CellContext`stateslist, 
                    Internal`BagPart[$CellContext`Ncslist, All], 1]; 
                    Internal`StuffBag[$CellContext`stateslist, 
                    Internal`BagPart[$CellContext`probslist, All], 1]; 
                    Internal`StuffBag[$CellContext`stateslist, 
                    Internal`BagPart[$CellContext`spprobslist, All], 1]; 
                    Internal`StuffBag[$CellContext`stateslist, 
                    Internal`BagPart[$CellContext`Ntslist, All], 1]; 
                    Internal`StuffBag[$CellContext`stateslist, 
                    Internal`BagPart[$CellContext`tslist, All], 1]; 
                    Internal`StuffBag[$CellContext`stateslist, \
$CellContext`Nmax]; 
                    Internal`StuffBag[$CellContext`stateslist, \
$CellContext`imax]; 
                    Internal`StuffBag[$CellContext`stateslist, \
$CellContext`ct + 1]; Internal`StuffBag[$CellContext`stateslist, 
                    Dimensions[$CellContext`state], 1]; 
                    Internal`StuffBag[$CellContext`stateslist, \
$CellContext`ct + 1]; Internal`StuffBag[$CellContext`stateslist, 
                    Dimensions[$CellContext`Ncell], 1]; 
                    Internal`StuffBag[$CellContext`stateslist, \
$CellContext`ct + 1]; Internal`StuffBag[$CellContext`stateslist, 
                    Dimensions[$CellContext`ratesn], 1]; 
                    Internal`StuffBag[$CellContext`stateslist, \
$CellContext`ct + 1]; Internal`StuffBag[$CellContext`stateslist, 
                    Dimensions[$CellContext`spaceprob], 1]; 
                    Internal`StuffBag[$CellContext`stateslist, \
$CellContext`ct + 1]; 
                    Internal`StuffBag[$CellContext`stateslist, \
$CellContext`ct + 1]; Internal`StuffBag[$CellContext`stateslist, 
                    Length[
                    Dimensions[{$CellContext`state}]]]; 
                    Internal`StuffBag[$CellContext`stateslist, 
                    Length[
                    Dimensions[{$CellContext`Ncell}]]]; 
                    Internal`StuffBag[$CellContext`stateslist, 
                    Length[
                    Dimensions[{$CellContext`ratesn}]]]; 
                    Internal`StuffBag[$CellContext`stateslist, 
                    Length[
                    Dimensions[{$CellContext`spaceprob}]]]; 
                    Internal`StuffBag[$CellContext`stateslist, 
                    Length[
                    Dimensions[{$CellContext`Ntot}]]]; 
                    Internal`StuffBag[$CellContext`stateslist, 
                    Length[
                    Dimensions[{$CellContext`t}]]]; 
                    Internal`StuffBag[$CellContext`stateslist, 0]; 
                    Internal`StuffBag[$CellContext`stateslist, 0]; 
                    Internal`StuffBag[$CellContext`stateslist, 8]; 
                    Internal`BagPart[$CellContext`stateslist, All]]]], 
                    Evaluate, 
                    LibraryFunction[
                    "/home/math/.Mathematica/ApplicationData/CCompilerDriver/\
BuildFolder/mycomputer-11374/compiledFunction0.so", 
                    "compiledFunction0", {{Integer, 0, "Constant"}, {
                    Integer, 0, "Constant"}, {Integer, 0, "Constant"}, {
                    Integer, 0, "Constant"}, {Integer, 0, "Constant"}, {
                    Integer, 0, "Constant"}, {Integer, 0, "Constant"}, {
                    Integer, 1, "Constant"}, {Integer, 1, "Constant"}, {
                    Real, 1, "Constant"}, {Real, 1, "Constant"}, {
                    Integer, 0, "Constant"}, {Integer, 0, "Constant"}, {
                    Integer, 0, "Constant"}, {Integer, 0, "Constant"}, {
                    Real, 1, "Constant"}, {Real, 1, "Constant"}, {
                    Real, 1, "Constant"}, {Real, 0, "Constant"}, {
                    Real, 0, "Constant"}, {Real, 0, "Constant"}, {
                    Real, 0, "Constant"}, {Real, 2, "Constant"}}, {Real, 1}]],
                    
                    Editable->False,
                    SelectWithContents->True,
                    Selectable->False], "[", 
                    RowBox[{
                    "Ntot2", ",", "Nmax2", ",", "scegli2", ",", "kmax2", ",", 
                    "imax2", ",", "maxsemidrivermut2", ",", 
                    "maxnondrivermut2", ",", "signature2", ",", 
                    "compkeystep2", ",", "expG2", ",", "cntG2", ",", "ctmax2",
                     ",", "tmax2", ",", "maxmjump2", ",", "maxtjump2", ",", 
                    "Aasym2", ",", "Asym2", ",", "Aapop2", ",", "Apass2", ",",
                     "cen2", ",", "wide2", ",", "slope2", ",", "ratio2"}], 
                    "]"}]}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"sims", ",", "rawresults", ",", "1"}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"simslen", ",", "1.`", ",", "1"}], "]"}], ";", 
                    RowBox[{"Internal`StuffBag", "[", 
                    RowBox[{"simslen", ",", 
                    RowBox[{"Dimensions", "[", "rawresults", "]"}], ",", 
                    "1"}], "]"}], ";"}]}], "]"}], ";", 
                  RowBox[{"Internal`StuffBag", "[", 
                   RowBox[{"sims", ",", 
                    RowBox[{"Internal`BagPart", "[", 
                    RowBox[{"simslen", ",", "All"}], "]"}], ",", "1"}], "]"}],
                   ";", 
                  RowBox[{"Internal`StuffBag", "[", 
                   RowBox[{"sims", ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{"1.`", ",", 
                    RowBox[{"{", "Nsims", "}"}]}], "]"}], ",", "1"}], "]"}], 
                  ";", 
                  RowBox[{"Internal`StuffBag", "[", 
                   RowBox[{"sims", ",", "Nsims"}], "]"}], ";", 
                  RowBox[{"Internal`BagPart", "[", 
                   RowBox[{"sims", ",", "All"}], "]"}]}]}], "]"}],
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0,
               ImageSize->{{1, 500}, Automatic},
               StripOnInput->True],
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  CompiledFunction[{10, 10.1, 7512}, {
    Blank[Integer]}, {{2, 0, 0}, {3, 1, 
   9}}, {{{0}, {2, 1, 18}}, {{1, -2, 1}, {2, 1, 46}}, {{-1, 1}, {2, 1, 48}}, {
    False, {1, 0, 1}}, {-10., {3, 0, 9}}, {{2, -1, 1}, {2, 1, 47}}, {
    0, {2, 0, 8}}, {{0.}, {3, 1, 14}}, {{1., 1., 1., 1., 1.2}, {3, 1, 2}}, {
    150, {2, 0, 13}}, {1., {3, 0, 18}}, {{4, -2, 1}, {2, 1, 
    33}}, {{1.}, {3, 1, 8}}, {{0, 0, 1}, {2, 1, 29}}, {
    100, {2, 0, 7}}, {{0, 0}, {2, 1, 19}}, {
    10, {2, 0, 12}}, {{0, 0, 0, 0, 0}, {2, 1, 17}}, {{{0., 0.}}, {3, 2, 
     15}}, {4, {2, 0, 23}}, {{-1}, {2, 1, 45}}, {{10}, {2, 1, 20}}, {
    8, {2, 0, 21}}, {-1., {3, 0, 14}}, {{1, 1, 1}, {2, 1, 0}}, {
    30, {2, 0, 14}}, {{1}, {2, 1, 13}}, {6, {2, 0, 11}}, {
    5, {2, 0, 3}}, {-0.5, {3, 0, 16}}, {{0, 0, 0}, {2, 1, 
    16}}, {-2, {2, 0, 46}}, {{{0}}, {2, 2, 12}}, {2, {2, 0, 18}}, {
    0.01, {3, 0, 1}}, {-1, {2, 0, 10}}, {-2., {3, 0, 12}}, {
    1, {2, 0, 1}}, {{1, -1, 1, 1, 0}, {2, 1, 7}}, {{4, -1, 1}, {2, 1, 32}}, {
    3, {2, 0, 4}}, {0.5, {3, 0, 0}}, {{1, 2, 4}, {2, 1, 6}}, {
    2.718281828459045, {3, 0, 6}}, {
    0., {3, 0, 5}}, {{-1, 2}, {2, 1, 44}}, {{0, 1}, {2, 1, 40}}, {
    20, {2, 0, 2}}, {0.1, {3, 0, 2}}}, {9, 69, 38, 0, 
   60}, {{6, 1, 15}, {6, 1, 24}, {6, 1, 44}, {6, 1, 43}, {6, 1, 56}, {6, 1, 
    49}, {6, 1, 17}, {6, 1, 20}, {6, 4, 27}, {6, 8, 32}, {35, 27, 2, 49}, {6, 
    8, 29}, {3, 2}, {36, 32, 7, 2, 49}, {4, 29, 27, -1}, {6, 4, 32}, {6, 10, 
    27}, {35, 32, 27, 3, 5}, {6, 8, 29}, {3, 2}, {36, 27, 2, 0, 5}, {4, 29, 
    32, -1}, {6, 1, 15}, {6, 1, 24}, {6, 1, 44}, {6, 1, 43}, {6, 1, 56}, {6, 
    1, 49}, {6, 1, 17}, {6, 1, 20}, {34, 1, 5, 15, 24, 44, 43, 1, 2, 4}, {34, 
    1, 5, 56, 49, 17, 20, 1, 2, 3}, {
    42, "Drop", 3, 1, 8, 2, 0, 8, 2, 0, 10, 3, 1, 1}, {
    42, "Bag", 2, 0, 4, 3, 0, 4}, {
    42, "StuffBag", 3, 0, 4, 3, 1, 1, 6, 0, 17}, {
    42, "Drop", 3, 1, 8, 2, 0, 8, 2, 0, 10, 3, 1, 1}, {
    42, "Bag", 2, 0, 4, 3, 0, 3}, {
    42, "StuffBag", 3, 0, 3, 3, 1, 1, 6, 0, 17}, {6, 8, 27}, {25, 27, 0, 0}, {
    2, 0, 1475}, {12, 27, 1, 29}, {6, 29, 27}, {
    42, "CopyTensor", 2, 1, 4, 2, 1, 1}, {
    42, "CopyTensor", 2, 1, 3, 2, 1, 10}, {
    42, "CopyTensor", 3, 2, 5, 3, 2, 9}, {6, 8, 28}, {
    42, "CopyTensor", 2, 2, 12, 2, 2, 38}, {
    42, "CopyTensor", 2, 1, 13, 2, 1, 42}, {
    42, "CopyTensor", 3, 1, 14, 3, 1, 43}, {
    42, "CopyTensor", 3, 2, 15, 3, 2, 37}, {
    42, "CopyTensor", 2, 1, 16, 2, 1, 39}, {7, 5, 23}, {6, 8, 31}, {
    42, "CopyTensor", 3, 1, 8, 3, 1, 23}, {
    42, "CopyTensor", 2, 1, 18, 2, 1, 31}, {
    42, "CopyTensor", 2, 1, 18, 2, 1, 26}, {6, 8, 30}, {6, 8, 32}, {6, 8, 
    41}, {7, 5, 19}, {12, 3, 10, 34}, {6, 3, 6}, {6, 8, 63}, {35, 6, 2, 34}, {
    6, 8, 57}, {3, 2}, {36, 63, 8, 2, 34}, {4, 57, 6, -1}, {
    42, "CopyTensor", 2, 1, 34, 2, 1, 31}, {12, 3, 4, 57}, {6, 8, 52}, {35, 
    57, 2, 34}, {6, 8, 9}, {3, 2}, {36, 52, 8, 2, 34}, {4, 9, 57, -1}, {6, 34,
     63}, {6, 8, 6}, {35, 63, 2, 41}, {6, 8, 52}, {3, 2}, {36, 6, 1, 2, 41}, {
    4, 52, 63, -1}, {34, 1, 1, 11, 2, 30}, {
    42, "Join", 2, 1, 41, 2, 1, 30, 2, 1, 35}, {
    42, "CoerceTensor", 2, 0, 4, 2, 1, 10, 3, 1, 30}, {40, 60, 3, 1, 30, 3, 1,
     36}, {42, "CoerceTensor", 2, 0, 4, 2, 1, 1, 3, 1, 41}, {45, 41, 36, 
    41}, {12, 4, 10, 52}, {6, 8, 57}, {35, 52, 2, 36}, {6, 8, 9}, {3, 2}, {36,
     57, 1, 2, 36}, {4, 9, 52, -1}, {
    42, "Join", 2, 1, 36, 2, 1, 18, 2, 1, 30}, {41, 259, 3, 0, 2, 2, 1, 30, 3,
     1, 36}, {42, "CopyTensor", 3, 1, 36, 3, 1, 23}, {6, 12, 6}, {18, 6, 
    63}, {18, 8, 57}, {12, 13, 63, 57, 52}, {6, 52, 28}, {34, 2, 1, 5, 6, 8, 
    8, 8, 8, 2, 36}, {12, 4, 10, 63}, {6, 10, 57}, {35, 63, 57, 2, 30}, {6, 8,
     9}, {3, 2}, {36, 57, 31, 0, 30}, {4, 9, 63, -1}, {
    42, "Join", 2, 2, 36, 2, 2, 30, 2, 2, 24}, {
    42, "CopyTensor", 2, 2, 24, 2, 2, 38}, {
    42, "CopyTensor", 2, 1, 31, 2, 1, 24}, {7, 5, 13}, {
    42, "CopyTensor", 3, 1, 14, 3, 1, 30}, {10, 10, 24}, {13, 6, 24, 8}, {40, 
    60, 3, 0, 8, 3, 0, 24}, {16, 6, 24, 8}, {38, 6, 0, 1, 0, 39}, {34, 1, 3, 
    1, 39, 1, 2, 25}, {38, 24, 3, 25, 1, 53}, {6, 8, 39}, {33, 53, 57}, {6, 8,
     26}, {3, 4}, {37, 53, 26, 2, 63}, {12, 39, 63, 45}, {6, 45, 39}, {4, 26, 
    57, -3}, {12, 39, 1, 39}, {41, 263, 2, 0, 8, 3, 0, 0, 3, 0, 24}, {10, 18, 
    33}, {40, 60, 3, 0, 33, 3, 0, 27}, {16, 24, 27, 24}, {40, 34, 3, 0, 24, 3,
     0, 27}, {10, 12, 24}, {16, 24, 27, 24}, {40, 60, 3, 0, 24, 3, 0, 27}, {
    10, 39, 24}, {16, 24, 27, 24}, {16, 9, 24, 27}, {40, 34, 3, 0, 27, 3, 0, 
    24}, {19, 24, 27}, {40, 34, 3, 0, 27, 3, 0, 24}, {10, 10, 27}, {40, 34, 3,
     0, 27, 3, 0, 33}, {19, 33, 27}, {13, 24, 27, 24}, {10, 18, 27}, {16, 27, 
    8, 24, 27}, {7, 27, 13}, {18, 2, 39}, {6, 39, 55}, {10, 18, 27}, {40, 60, 
    3, 0, 27, 3, 0, 8}, {7, 8, 20}, {10, 55, 8}, {16, 8, 20, 8}, {7, 8, 21}, {
    40, 34, 3, 0, 21, 3, 0, 8}, {7, 8, 17}, {38, 0, 0, 1, 0, 39}, {13, 13, 12,
     8}, {10, 55, 27}, {16, 27, 8, 27}, {40, 10, 3, 0, 27, 3, 0, 8}, {10, 10, 
    27}, {13, 8, 27, 8}, {16, 1, 17, 8, 27}, {19, 27, 8}, {40, 34, 3, 0, 8, 3,
     0, 27}, {10, 39, 8}, {16, 8, 27, 8}, {38, 0, 0, 1, 0, 39}, {13, 13, 14, 
    27}, {10, 55, 24}, {16, 24, 27, 24}, {40, 10, 3, 0, 24, 3, 0, 27}, {10, 
    10, 24}, {13, 27, 24, 27}, {16, 1, 17, 27, 24}, {19, 24, 27}, {40, 34, 3, 
    0, 27, 3, 0, 24}, {10, 39, 27}, {16, 27, 24, 27}, {38, 0, 0, 1, 0, 39}, {
    13, 13, 16, 24}, {10, 55, 33}, {16, 33, 24, 33}, {40, 10, 3, 0, 33, 3, 0, 
    24}, {10, 10, 33}, {13, 24, 33, 24}, {16, 1, 17, 24, 33}, {19, 33, 24}, {
    40, 34, 3, 0, 24, 3, 0, 33}, {10, 39, 24}, {16, 24, 33, 24}, {34, 1, 3, 8,
     27, 24, 3, 36}, {38, 23, 0, 1, 0, 8}, {45, 24, 7, 27}, {41, 263, 3, 1, 
    41, 2, 1, 27, 3, 1, 53}, {38, 6, 0, 1, 0, 9}, {34, 1, 3, 1, 9, 1, 2, 
    27}, {38, 53, 3, 27, 1, 25}, {7, 18, 24}, {33, 25, 26}, {6, 8, 52}, {3, 
    4}, {37, 25, 52, 3, 27}, {16, 24, 27, 33}, {7, 33, 24}, {4, 52, 26, -3}, {
    16, 8, 24, 8}, {34, 1, 1, 8, 3, 21}, {
    42, "Join", 3, 1, 36, 3, 1, 21, 3, 1, 25}, {
    42, "Accumulate", 3, 1, 25, 2, 0, 21, 3, 1, 36}, {
    42, "CopyTensor", 3, 1, 36, 3, 1, 30}, {12, 13, 18, 9}, {6, 10, 39}, {35, 
    9, 39, 3, 36}, {6, 8, 26}, {3, 4}, {
    42, "Join", 2, 1, 29, 2, 1, 31, 2, 1, 21}, {41, 259, 3, 0, 18, 2, 1, 21, 
    3, 1, 53}, {36, 39, 53, 0, 36}, {4, 26, 9, -3}, {12, 13, 18, 52}, {34, 1, 
    2, 52, 1, 2, 53}, {10, 8, 8}, {10, 1, 24}, {
    42, "RandomReals", 3, 0, 8, 3, 0, 24, 2, 1, 53, 3, 2, 21}, {40, 35, 3, 2, 
    21, 3, 2, 25}, {40, 43, 3, 2, 25, 3, 2, 21}, {38, 30, 0, 10, 0, 8}, {40, 
    60, 3, 0, 8, 3, 0, 24}, {41, 259, 3, 0, 24, 3, 2, 21, 3, 2, 25}, {41, 257,
     3, 0, 23, 3, 2, 25, 3, 2, 21}, {
    42, "JoinAtLevel", 3, 2, 36, 3, 2, 21, 2, 0, 18, 3, 2, 25}, {
    42, "CopyTensor", 3, 2, 25, 3, 2, 37}, {18, 6, 52}, {6, 52, 40}, {18, 28, 
    52}, {6, 52, 35}, {12, 13, 40, 35, 52}, {6, 52, 5}, {10, 18, 13}, {40, 60,
     3, 0, 13, 3, 0, 24}, {7, 24, 26}, {10, 5, 24}, {16, 24, 26, 24}, {7, 24, 
    10}, {40, 50, 3, 0, 10, 2, 0, 52}, {6, 52, 51}, {
    42, "MaxI", 2, 0, 8, 2, 0, 51, 2, 0, 52}, {6, 52, 25}, {12, 6, 28, 52}, {
    34, 1, 3, 52, 25, 25, 2, 25}, {42, "CopyTensor", 2, 1, 25, 2, 1, 39}, {
    42, "Transpose", 3, 2, 37, 3, 2, 25}, {38, 25, 0, 10, 1, 28}, {
    42, "CopyTensor", 3, 1, 28, 3, 1, 43}, {
    42, "Ordering", 3, 1, 43, 2, 1, 28}, {
    42, "CopyTensor", 2, 1, 28, 2, 1, 42}, {38, 37, 1, 42, 2, 28}, {
    42, "CopyTensor", 3, 2, 28, 3, 2, 37}, {12, 23, 3, 10, 52}, {34, 1, 3, 1, 
    52, 1, 2, 28}, {38, 37, 0, 1, 3, 28, 1, 25}, {40, 53, 3, 1, 25, 2, 1, 
    28}, {42, "CopyTensor", 2, 1, 28, 2, 1, 26}, {38, 26, 3, 32, 1, 24}, {38, 
    26, 0, 4, 0, 26}, {38, 6, 0, 26, 0, 52}, {34, 1, 3, 1, 52, 1, 2, 28}, {38,
     24, 3, 28, 1, 25}, {6, 8, 52}, {33, 25, 9}, {6, 8, 45}, {3, 4}, {37, 25, 
    45, 2, 57}, {12, 52, 57, 63}, {6, 63, 52}, {4, 45, 9, -3}, {10, 10, 24}, {
    13, 6, 24, 13}, {40, 60, 3, 0, 13, 3, 0, 24}, {16, 6, 24, 13}, {12, 52, 1,
     45}, {38, 26, 0, 18, 0, 26}, {41, 263, 2, 0, 26, 3, 0, 0, 3, 0, 24}, {10,
     18, 8}, {40, 60, 3, 0, 8, 3, 0, 33}, {16, 24, 33, 24}, {40, 34, 3, 0, 24,
     3, 0, 33}, {10, 12, 24}, {16, 24, 33, 24}, {40, 60, 3, 0, 24, 3, 0, 
    33}, {10, 45, 24}, {16, 24, 33, 24}, {16, 9, 24, 33}, {40, 34, 3, 0, 33, 
    3, 0, 24}, {19, 24, 33}, {40, 34, 3, 0, 33, 3, 0, 24}, {10, 10, 33}, {40, 
    34, 3, 0, 33, 3, 0, 8}, {19, 8, 33}, {13, 24, 33, 24}, {10, 18, 33}, {16, 
    33, 13, 24, 33}, {38, 26, 3, 32, 1, 28}, {45, 28, 7, 28}, {41, 263, 3, 1, 
    41, 2, 1, 28, 3, 1, 30}, {38, 26, 0, 4, 0, 9}, {38, 6, 0, 9, 0, 45}, {34, 
    1, 3, 1, 45, 1, 2, 28}, {38, 30, 3, 28, 1, 25}, {7, 18, 24}, {33, 25, 
    26}, {6, 8, 39}, {3, 4}, {37, 25, 39, 3, 13}, {16, 24, 13, 8}, {7, 8, 
    24}, {4, 39, 26, -3}, {18, 2, 39}, {6, 39, 19}, {38, 26, 0, 4, 0, 39}, {6,
     39, 42}, {10, 18, 8}, {40, 60, 3, 0, 8, 3, 0, 13}, {7, 13, 31}, {10, 19, 
    13}, {16, 13, 31, 13}, {7, 13, 25}, {40, 34, 3, 0, 25, 3, 0, 13}, {7, 13, 
    11}, {38, 0, 0, 42, 0, 39}, {13, 33, 12, 13}, {10, 19, 8}, {16, 8, 13, 
    8}, {40, 10, 3, 0, 8, 3, 0, 13}, {10, 10, 8}, {13, 13, 8, 13}, {16, 1, 11,
     13, 8}, {19, 8, 13}, {40, 34, 3, 0, 13, 3, 0, 8}, {10, 39, 13}, {16, 13, 
    8, 13}, {38, 0, 0, 42, 0, 39}, {13, 33, 14, 8}, {10, 19, 27}, {16, 27, 8, 
    27}, {40, 10, 3, 0, 27, 3, 0, 8}, {10, 10, 27}, {13, 8, 27, 8}, {16, 1, 
    11, 8, 27}, {19, 27, 8}, {40, 34, 3, 0, 8, 3, 0, 27}, {10, 39, 8}, {16, 8,
     27, 8}, {38, 0, 0, 42, 0, 39}, {13, 33, 16, 27}, {10, 19, 32}, {16, 32, 
    27, 32}, {40, 10, 3, 0, 32, 3, 0, 27}, {10, 10, 32}, {13, 27, 32, 27}, {
    16, 1, 11, 27, 32}, {19, 32, 27}, {40, 34, 3, 0, 27, 3, 0, 32}, {10, 39, 
    27}, {16, 27, 32, 27}, {34, 1, 3, 13, 8, 27, 3, 24}, {38, 23, 0, 42, 0, 
    13}, {16, 13, 24, 13}, {34, 1, 1, 13, 3, 25}, {
    42, "Join", 3, 1, 24, 3, 1, 25, 3, 1, 30}, {
    42, "Accumulate", 3, 1, 30, 2, 0, 21, 3, 1, 24}, {38, 24, 0, 10, 0, 13}, {
    40, 60, 3, 0, 13, 3, 0, 8}, {41, 259, 3, 0, 8, 3, 1, 30, 3, 1, 25}, {38, 
    26, 0, 18, 0, 39}, {18, 39, 45}, {12, 11, 45, 39}, {38, 26, 0, 10, 0, 
    45}, {18, 45, 9}, {12, 11, 9, 45}, {38, 26, 3, 33, 1, 28}, {
    42, "TotalAll", 2, 1, 28, 2, 0, 21, 2, 0, 9}, {18, 9, 26}, {12, 34, 26, 
    9}, {12, 39, 45, 9, 26}, {34, 1, 3, 9, 45, 39, 2, 28}, {10, 26, 8}, {40, 
    60, 3, 0, 8, 3, 0, 27}, {41, 259, 3, 0, 27, 2, 1, 28, 3, 1, 36}, {
    42, "Drop", 3, 1, 8, 2, 0, 8, 2, 0, 10, 3, 1, 28}, {
    42, "Bag", 2, 0, 4, 3, 0, 27}, {
    42, "StuffBag", 3, 0, 27, 3, 1, 28, 6, 0, 17}, {
    42, "Drop", 3, 1, 8, 2, 0, 8, 2, 0, 10, 3, 1, 28}, {
    42, "Bag", 2, 0, 4, 3, 0, 8}, {
    42, "StuffBag", 3, 0, 8, 3, 1, 28, 6, 0, 17}, {
    42, "Drop", 3, 1, 8, 2, 0, 8, 2, 0, 10, 3, 1, 28}, {
    42, "Bag", 2, 0, 4, 3, 0, 32}, {
    42, "StuffBag", 3, 0, 32, 3, 1, 28, 6, 0, 17}, {
    42, "Drop", 3, 1, 8, 2, 0, 8, 2, 0, 10, 3, 1, 28}, {
    42, "Bag", 2, 0, 4, 3, 0, 28}, {
    42, "StuffBag", 3, 0, 28, 3, 1, 28, 6, 0, 17}, {
    42, "Drop", 3, 1, 8, 2, 0, 8, 2, 0, 10, 3, 1, 28}, {
    42, "Bag", 2, 0, 4, 3, 0, 29}, {
    42, "StuffBag", 3, 0, 29, 3, 1, 28, 6, 0, 17}, {
    42, "Drop", 3, 1, 8, 2, 0, 8, 2, 0, 10, 3, 1, 28}, {
    42, "Bag", 2, 0, 4, 3, 0, 22}, {
    42, "StuffBag", 3, 0, 22, 3, 1, 28, 6, 0, 17}, {
    42, "StuffBag", 3, 0, 27, 3, 2, 37, 6, 0, 17}, {
    42, "CoerceTensor", 2, 0, 4, 2, 2, 38, 3, 2, 28}, {
    42, "StuffBag", 3, 0, 8, 3, 2, 28, 6, 0, 17}, {
    42, "StuffBag", 3, 0, 32, 3, 1, 25, 6, 0, 17}, {
    42, "StuffBag", 3, 0, 28, 3, 1, 36, 6, 0, 17}, {10, 6, 34}, {
    42, "StuffBagScalar", 3, 0, 29, 3, 0, 34, 6, 0, 17}, {
    42, "StuffBagScalar", 3, 0, 22, 3, 0, 23, 6, 0, 17}, {38, 37, 0, 1, 0, 10,
     0, 34}, {10, 14, 35}, {27, 3, 5, 34, 35, 3}, {2, 3, 9}, {25, 31, 7, 2}, {
    2, 2, 4}, {25, 8, 6, 5}, {5, 5, 4}, {3, 2}, {5, 1, 4}, {5, 4, 2}, {3, 
    2}, {5, 1, 2}, {2, 2, 989}, {12, 31, 1, 63}, {6, 63, 31}, {38, 37, 0, 1, 
    0, 10, 0, 34}, {7, 34, 23}, {
    42, "Accumulate", 3, 1, 25, 2, 0, 21, 3, 1, 28}, {10, 8, 34}, {10, 1, 
    35}, {42, "RandomReal", 3, 0, 34, 3, 0, 35, 3, 0, 36}, {38, 28, 0, 1, 0, 
    34}, {27, 3, 5, 36, 34, 3}, {2, 3, 325}, {
    42, "CopyTensor", 3, 1, 14, 3, 1, 51}, {
    42, "CopyTensor", 3, 1, 14, 3, 1, 58}, {
    42, "CopyTensor", 2, 1, 18, 2, 1, 52}, {38, 26, 0, 1, 0, 33}, {38, 26, 0, 
    18, 0, 63}, {38, 26, 0, 4, 0, 57}, {34, 1, 3, 33, 63, 57, 2, 54}, {12, 23,
     3, 10, 33}, {34, 1, 3, 23, 33, 1, 2, 21}, {38, 26, 3, 21, 1, 56}, {34, 1,
     1, 23, 3, 21}, {42, "CoerceTensor", 2, 0, 4, 2, 1, 54, 3, 1, 27}, {
    42, "CoerceTensor", 2, 0, 4, 2, 1, 56, 3, 1, 53}, {
    42, "Join", 3, 1, 27, 3, 1, 53, 3, 1, 21, 3, 1, 50}, {41, 259, 3, 0, 18, 
    3, 1, 50, 3, 1, 54}, {42, "CopyTensor", 3, 1, 54, 3, 1, 58}, {6, 8, 58}, {
    6, 8, 54}, {6, 8, 50}, {42, "CopyTensor", 2, 1, 18, 2, 1, 54}, {6, 8, 
    53}, {6, 8, 57}, {42, "CopyTensor", 2, 1, 31, 2, 1, 53}, {38, 26, 0, 18, 
    0, 65}, {18, 65, 62}, {12, 11, 62, 65}, {6, 65, 58}, {12, 23, 3, 10, 
    65}, {34, 1, 3, 23, 65, 1, 2, 56}, {38, 26, 3, 56, 1, 50}, {
    42, "TotalAll", 2, 1, 50, 2, 0, 21, 2, 0, 65}, {18, 65, 62}, {12, 11, 34, 
    62, 58, 65}, {6, 65, 54}, {42, "MinI", 2, 0, 1, 2, 0, 54, 2, 0, 65}, {
    42, "RandomInteger", 2, 0, 65, 2, 0, 54, 2, 0, 62}, {18, 58, 65}, {12, 62,
     65, 62}, {6, 62, 50}, {25, 8, 50, 4}, {2, 4, 56}, {6, 8, 36}, {6, 8, 
    59}, {6, 3, 63}, {6, 8, 64}, {35, 63, 2, 50}, {6, 8, 62}, {3, 2}, {36, 64,
     62, 2, 50}, {4, 62, 63, -1}, {33, 50, 62}, {6, 8, 65}, {35, 62, 2, 56}, {
    6, 8, 66}, {3, 16}, {37, 50, 66, 2, 48}, {6, 48, 61}, {12, 23, 3, 10, 
    67}, {34, 1, 3, 23, 67, 1, 2, 21}, {38, 26, 3, 21, 1, 59}, {38, 59, 0, 61,
     0, 67}, {38, 35, 0, 61, 0, 68}, {25, 67, 68, 5}, {2, 5, 5}, {12, 36, 1, 
    61}, {6, 61, 36}, {6, 66, 61}, {3, 2}, {6, 10, 61}, {36, 65, 61, 2, 56}, {
    4, 66, 62, -15}, {6, 36, 64}, {6, 8, 65}, {35, 64, 2, 59}, {6, 8, 63}, {3,
     11}, {12, 59, 1, 61}, {6, 61, 59}, {37, 56, 59, 2, 61}, {24, 61, 10, 
    5}, {2, 5, 4}, {12, 59, 1, 61}, {6, 61, 59}, {3, -5}, {37, 50, 59, 2, 
    61}, {36, 65, 61, 2, 59}, {4, 63, 64, -10}, {
    42, "CopyTensor", 2, 1, 59, 2, 1, 54}, {33, 54, 59}, {
    42, "MinI", 2, 0, 59, 2, 0, 50, 2, 0, 36}, {38, 54, 0, 36, 0, 59}, {6, 59,
     53}, {38, 53, 0, 53, 0, 59}, {12, 59, 1, 59}, {39, 53, 0, 53, 0, 59}, {3,
     3}, {42, "RandomInteger", 2, 0, 1, 2, 0, 3, 2, 0, 36}, {6, 36, 57}, {
    42, "Drop", 2, 1, 53, 2, 0, 8, 2, 0, 10, 2, 1, 59}, {
    42, "TotalAll", 2, 1, 59, 2, 0, 21, 2, 0, 59}, {
    42, "MinI", 2, 0, 57, 2, 0, 58, 2, 0, 36}, {34, 1, 3, 59, 36, 8, 2, 59}, {
    42, "Join", 2, 1, 59, 2, 1, 53, 2, 1, 55}, {
    42, "CopyTensor", 2, 1, 55, 2, 1, 52}, {
    42, "CopyTensor", 2, 2, 38, 2, 2, 55}, {38, 52, 0, 1, 0, 57}, {34, 1, 2, 
    8, 57, 2, 27}, {33, 40, 50}, {6, 8, 54}, {35, 50, 2, 53}, {6, 8, 58}, {3, 
    14}, {38, 26, 0, 4, 0, 59}, {38, 26, 0, 1, 0, 36}, {37, 27, 58, 2, 48}, {
    12, 36, 1, 48, 36}, {38, 26, 0, 4, 0, 48}, {38, 26, 0, 1, 0, 65}, {37, 27,
     58, 2, 61}, {12, 65, 1, 61, 65}, {38, 55, 0, 48, 0, 65, 0, 61}, {37, 40, 
    58, 2, 48}, {12, 61, 48, 61}, {39, 55, 0, 59, 0, 36, 0, 61}, {36, 54, 61, 
    2, 53}, {4, 58, 50, -13}, {38, 26, 0, 4, 0, 57}, {6, 57, 47}, {38, 39, 0, 
    47, 0, 57}, {38, 55, 0, 47, 1, 54}, {38, 9, 0, 47, 1, 59}, {
    42, "CoerceTensor", 2, 0, 4, 2, 1, 54, 3, 1, 50}, {
    42, "DotVV", 3, 1, 50, 3, 1, 59, 2, 0, 21, 3, 0, 36}, {19, 36, 34}, {10, 
    57, 36}, {13, 36, 34, 36}, {10, 8, 34}, {27, 6, 5, 36, 34, 4}, {2, 4, 
    123}, {42, "CopyTensor", 2, 2, 55, 2, 2, 38}, {10, 8, 36}, {10, 1, 34}, {
    42, "RandomReal", 3, 0, 36, 3, 0, 34, 3, 0, 35}, {40, 35, 3, 0, 35, 3, 0, 
    36}, {19, 36, 35}, {40, 60, 3, 0, 13, 3, 0, 36}, {16, 35, 36, 35}, {34, 1,
     1, 35, 3, 54}, {42, "CoerceTensor", 2, 0, 4, 2, 1, 16, 3, 1, 59}, {
    42, "CoerceTensor", 2, 0, 4, 2, 1, 31, 3, 1, 50}, {
    42, "Join", 3, 1, 59, 3, 1, 50, 3, 1, 54, 3, 1, 56}, {44, 58, 56, 54}, {
    42, "CopyTensor", 3, 1, 54, 3, 1, 51}, {10, 8, 35}, {10, 1, 36}, {
    42, "RandomReal", 3, 0, 35, 3, 0, 36, 3, 0, 34}, {40, 35, 3, 0, 34, 3, 0, 
    35}, {19, 35, 34}, {40, 60, 3, 0, 13, 3, 0, 35}, {16, 34, 35, 34}, {34, 1,
     1, 34, 3, 54}, {42, "CoerceTensor", 2, 0, 4, 2, 1, 52, 3, 1, 56}, {
    42, "Join", 3, 1, 56, 3, 1, 54, 3, 1, 59}, {44, 58, 59, 54}, {
    42, "CopyTensor", 3, 1, 54, 3, 1, 58}, {6, 1, 41}, {7, 18, 19}, {6, 18, 
    30}, {6, 6, 32}, {18, 30, 57}, {12, 32, 1, 57, 53}, {10, 53, 34}, {16, 34,
     0, 34}, {7, 34, 19}, {10, 1, 34}, {27, 6, 5, 19, 34, 5}, {2, 5, 14}, {40,
     53, 3, 0, 19, 2, 0, 53}, {12, 53, 30, 53}, {6, 53, 41}, {38, 37, 0, 41, 
    0, 10, 0, 34}, {38, 51, 0, 10, 0, 35}, {27, 7, 5, 34, 35, 6}, {2, 6, 4}, {
    12, 41, 10, 53}, {6, 53, 32}, {3, 3}, {12, 41, 1, 53}, {6, 53, 30}, {
    3, -20}, {10, 8, 34}, {27, 4, 5, 19, 34, 5}, {2, 5, 4}, {12, 32, 1, 53}, {
    6, 53, 32}, {3, 8}, {38, 37, 0, 32, 0, 10, 0, 34}, {38, 51, 0, 10, 0, 
    35}, {27, 3, 5, 34, 35, 6}, {2, 6, 4}, {12, 32, 1, 53}, {6, 53, 32}, {3, 
    1}, {25, 18, 32, 5}, {2, 5, 8}, {12, 32, 46, 53}, {34, 1, 3, 1, 53, 1, 2, 
    54}, {12, 32, 10, 53}, {34, 1, 3, 18, 53, 1, 2, 59}, {38, 37, 3, 59, 2, 
    56}, {39, 37, 3, 54, 2, 56}, {3, 1}, {12, 32, 10, 53}, {39, 37, 0, 53, 1, 
    51}, {6, 1, 41}, {7, 18, 19}, {6, 1, 30}, {6, 6, 32}, {18, 30, 53}, {12, 
    32, 1, 53, 57}, {10, 57, 34}, {16, 34, 0, 34}, {7, 34, 19}, {10, 1, 34}, {
    27, 6, 5, 19, 34, 5}, {2, 5, 14}, {40, 53, 3, 0, 19, 2, 0, 57}, {12, 57, 
    30, 57}, {6, 57, 41}, {38, 37, 0, 41, 0, 10, 0, 34}, {38, 58, 0, 10, 0, 
    35}, {27, 7, 5, 34, 35, 6}, {2, 6, 4}, {12, 41, 10, 57}, {6, 57, 32}, {3, 
    3}, {12, 41, 1, 57}, {6, 57, 30}, {3, -20}, {10, 8, 34}, {27, 4, 5, 19, 
    34, 5}, {2, 5, 4}, {12, 32, 1, 57}, {6, 57, 32}, {3, 8}, {38, 37, 0, 32, 
    0, 10, 0, 34}, {38, 58, 0, 10, 0, 35}, {27, 3, 5, 34, 35, 6}, {2, 6, 4}, {
    12, 32, 1, 57}, {6, 57, 32}, {3, 1}, {12, 32, 1, 57}, {34, 1, 3, 57, 10, 
    1, 2, 54}, {34, 1, 3, 32, 46, 1, 2, 56}, {38, 37, 3, 56, 2, 59}, {39, 37, 
    3, 54, 2, 59}, {39, 37, 0, 32, 1, 58}, {12, 6, 1, 57}, {6, 57, 6}, {3, 
    63}, {10, 8, 34}, {10, 1, 35}, {
    42, "RandomReal", 3, 0, 34, 3, 0, 35, 3, 0, 36}, {40, 35, 3, 0, 36, 3, 0, 
    34}, {19, 34, 36}, {40, 60, 3, 0, 13, 3, 0, 34}, {16, 36, 34, 36}, {34, 1,
     1, 36, 3, 59}, {42, "CoerceTensor", 2, 0, 4, 2, 1, 16, 3, 1, 54}, {
    42, "CoerceTensor", 2, 0, 4, 2, 1, 31, 3, 1, 56}, {
    42, "Join", 3, 1, 54, 3, 1, 56, 3, 1, 59, 3, 1, 50}, {44, 58, 50, 59}, {
    42, "CopyTensor", 3, 1, 59, 3, 1, 51}, {6, 1, 41}, {7, 18, 19}, {6, 18, 
    30}, {6, 6, 32}, {18, 30, 57}, {12, 32, 1, 57, 53}, {10, 53, 36}, {16, 36,
     0, 36}, {7, 36, 19}, {10, 1, 36}, {27, 6, 5, 19, 36, 5}, {2, 5, 14}, {40,
     53, 3, 0, 19, 2, 0, 53}, {12, 53, 30, 53}, {6, 53, 41}, {38, 37, 0, 41, 
    0, 10, 0, 36}, {38, 51, 0, 10, 0, 34}, {27, 7, 5, 36, 34, 6}, {2, 6, 4}, {
    12, 41, 10, 53}, {6, 53, 32}, {3, 3}, {12, 41, 1, 53}, {6, 53, 30}, {
    3, -20}, {10, 8, 36}, {27, 4, 5, 19, 36, 5}, {2, 5, 4}, {12, 32, 1, 53}, {
    6, 53, 32}, {3, 8}, {38, 37, 0, 32, 0, 10, 0, 36}, {38, 51, 0, 10, 0, 
    34}, {27, 3, 5, 36, 34, 6}, {2, 6, 4}, {12, 32, 1, 53}, {6, 53, 32}, {3, 
    1}, {25, 18, 32, 5}, {2, 5, 8}, {12, 32, 46, 53}, {34, 1, 3, 1, 53, 1, 2, 
    59}, {12, 32, 10, 53}, {34, 1, 3, 18, 53, 1, 2, 50}, {38, 37, 3, 50, 2, 
    54}, {39, 37, 3, 59, 2, 54}, {3, 1}, {12, 32, 10, 53}, {39, 37, 0, 53, 1, 
    51}, {3, 500}, {10, 8, 36}, {10, 1, 34}, {
    42, "RandomReal", 3, 0, 36, 3, 0, 34, 3, 0, 35}, {38, 28, 0, 18, 0, 36}, {
    27, 3, 5, 35, 36, 4}, {2, 4, 324}, {
    42, "CopyTensor", 3, 1, 14, 3, 1, 59}, {
    42, "CopyTensor", 3, 1, 14, 3, 1, 58}, {
    42, "CopyTensor", 2, 1, 18, 2, 1, 51}, {38, 26, 0, 1, 0, 61}, {38, 26, 0, 
    18, 0, 53}, {38, 26, 0, 4, 0, 57}, {34, 1, 3, 61, 53, 57, 2, 54}, {12, 23,
     3, 10, 61}, {34, 1, 3, 23, 61, 1, 2, 55}, {38, 26, 3, 55, 1, 52}, {34, 1,
     1, 23, 3, 55}, {42, "CoerceTensor", 2, 0, 4, 2, 1, 54, 3, 1, 53}, {
    42, "CoerceTensor", 2, 0, 4, 2, 1, 52, 3, 1, 27}, {
    42, "Join", 3, 1, 53, 3, 1, 27, 3, 1, 55, 3, 1, 50}, {41, 259, 3, 0, 18, 
    3, 1, 50, 3, 1, 54}, {42, "CopyTensor", 3, 1, 54, 3, 1, 58}, {6, 8, 36}, {
    6, 8, 50}, {6, 8, 63}, {42, "CopyTensor", 2, 1, 18, 2, 1, 54}, {6, 8, 
    58}, {6, 8, 57}, {42, "CopyTensor", 2, 1, 31, 2, 1, 27}, {38, 26, 0, 18, 
    0, 62}, {18, 62, 66}, {12, 11, 66, 62}, {6, 62, 36}, {12, 23, 3, 10, 
    62}, {34, 1, 3, 23, 62, 1, 2, 52}, {38, 26, 3, 52, 1, 50}, {
    42, "TotalAll", 2, 1, 50, 2, 0, 21, 2, 0, 62}, {18, 62, 66}, {12, 11, 34, 
    66, 36, 62}, {6, 62, 50}, {42, "MinI", 2, 0, 1, 2, 0, 50, 2, 0, 62}, {
    42, "RandomInteger", 2, 0, 62, 2, 0, 50, 2, 0, 66}, {18, 36, 62}, {12, 66,
     62, 66}, {6, 66, 63}, {25, 8, 63, 5}, {2, 5, 56}, {6, 8, 33}, {6, 8, 
    59}, {6, 3, 61}, {6, 8, 64}, {35, 61, 2, 50}, {6, 8, 66}, {3, 2}, {36, 64,
     66, 2, 50}, {4, 66, 61, -1}, {33, 50, 66}, {6, 8, 65}, {35, 66, 2, 52}, {
    6, 8, 62}, {3, 16}, {37, 50, 62, 2, 54}, {6, 54, 48}, {12, 23, 3, 10, 
    67}, {34, 1, 3, 23, 67, 1, 2, 55}, {38, 26, 3, 55, 1, 21}, {38, 21, 0, 48,
     0, 67}, {38, 35, 0, 48, 0, 68}, {25, 67, 68, 6}, {2, 6, 5}, {12, 33, 1, 
    48}, {6, 48, 33}, {6, 62, 48}, {3, 2}, {6, 10, 48}, {36, 65, 48, 2, 52}, {
    4, 62, 66, -15}, {6, 33, 64}, {6, 8, 65}, {35, 64, 2, 21}, {6, 8, 61}, {3,
     11}, {12, 59, 1, 48}, {6, 48, 59}, {37, 52, 59, 2, 48}, {24, 48, 10, 
    6}, {2, 6, 4}, {12, 59, 1, 48}, {6, 48, 59}, {3, -5}, {37, 50, 59, 2, 
    48}, {36, 65, 48, 2, 21}, {4, 61, 64, -10}, {
    42, "CopyTensor", 2, 1, 21, 2, 1, 54}, {33, 54, 59}, {
    42, "MinI", 2, 0, 59, 2, 0, 63, 2, 0, 33}, {38, 54, 0, 33, 0, 59}, {6, 59,
     58}, {38, 27, 0, 58, 0, 59}, {12, 59, 1, 59}, {39, 27, 0, 58, 0, 59}, {3,
     3}, {42, "RandomInteger", 2, 0, 1, 2, 0, 3, 2, 0, 33}, {6, 33, 57}, {
    42, "Drop", 2, 1, 27, 2, 0, 8, 2, 0, 10, 2, 1, 21}, {
    42, "TotalAll", 2, 1, 21, 2, 0, 21, 2, 0, 59}, {
    42, "MinI", 2, 0, 57, 2, 0, 36, 2, 0, 33}, {34, 1, 3, 59, 33, 8, 2, 21}, {
    42, "Join", 2, 1, 21, 2, 1, 27, 2, 1, 56}, {
    42, "CopyTensor", 2, 1, 56, 2, 1, 51}, {
    42, "CopyTensor", 2, 2, 38, 2, 2, 56}, {38, 51, 0, 1, 0, 57}, {34, 1, 2, 
    8, 57, 2, 53}, {33, 44, 63}, {6, 8, 50}, {35, 63, 2, 27}, {6, 8, 36}, {3, 
    14}, {38, 26, 0, 4, 0, 59}, {38, 26, 0, 1, 0, 33}, {37, 53, 36, 2, 54}, {
    12, 33, 1, 54, 33}, {38, 26, 0, 4, 0, 54}, {38, 26, 0, 1, 0, 65}, {37, 53,
     36, 2, 48}, {12, 65, 1, 48, 65}, {38, 56, 0, 54, 0, 65, 0, 48}, {37, 44, 
    36, 2, 54}, {12, 48, 54, 48}, {39, 56, 0, 59, 0, 33, 0, 48}, {36, 50, 48, 
    2, 27}, {4, 36, 63, -13}, {38, 26, 0, 4, 0, 57}, {6, 57, 37}, {38, 39, 0, 
    37, 0, 57}, {38, 56, 0, 37, 1, 54}, {38, 9, 0, 37, 1, 21}, {
    42, "CoerceTensor", 2, 0, 4, 2, 1, 54, 3, 1, 50}, {
    42, "DotVV", 3, 1, 50, 3, 1, 21, 2, 0, 21, 3, 0, 35}, {19, 35, 36}, {10, 
    57, 35}, {13, 35, 36, 35}, {10, 8, 36}, {27, 6, 5, 35, 36, 5}, {2, 5, 
    122}, {42, "CopyTensor", 2, 2, 56, 2, 2, 38}, {10, 8, 35}, {10, 1, 36}, {
    42, "RandomReal", 3, 0, 35, 3, 0, 36, 3, 0, 34}, {40, 35, 3, 0, 34, 3, 0, 
    35}, {19, 35, 34}, {40, 60, 3, 0, 13, 3, 0, 35}, {16, 34, 35, 34}, {34, 1,
     1, 34, 3, 54}, {42, "CoerceTensor", 2, 0, 4, 2, 1, 51, 3, 1, 21}, {
    42, "Join", 3, 1, 21, 3, 1, 54, 3, 1, 50}, {44, 58, 50, 54}, {
    42, "CopyTensor", 3, 1, 54, 3, 1, 59}, {10, 8, 34}, {10, 1, 35}, {
    42, "RandomReal", 3, 0, 34, 3, 0, 35, 3, 0, 36}, {40, 35, 3, 0, 36, 3, 0, 
    34}, {19, 34, 36}, {40, 60, 3, 0, 13, 3, 0, 34}, {16, 36, 34, 36}, {34, 1,
     1, 36, 3, 54}, {42, "CoerceTensor", 2, 0, 4, 2, 1, 51, 3, 1, 50}, {
    42, "Join", 3, 1, 50, 3, 1, 54, 3, 1, 21}, {44, 58, 21, 54}, {
    42, "CopyTensor", 3, 1, 54, 3, 1, 58}, {6, 1, 41}, {7, 18, 19}, {6, 18, 
    30}, {6, 6, 32}, {18, 30, 57}, {12, 32, 1, 57, 58}, {10, 58, 36}, {16, 36,
     0, 36}, {7, 36, 19}, {10, 1, 36}, {27, 6, 5, 19, 36, 6}, {2, 6, 14}, {40,
     53, 3, 0, 19, 2, 0, 58}, {12, 58, 30, 58}, {6, 58, 41}, {38, 37, 0, 41, 
    0, 10, 0, 36}, {38, 59, 0, 10, 0, 34}, {27, 7, 5, 36, 34, 7}, {2, 7, 4}, {
    12, 41, 10, 58}, {6, 58, 32}, {3, 3}, {12, 41, 1, 58}, {6, 58, 30}, {
    3, -20}, {10, 8, 36}, {27, 4, 5, 19, 36, 6}, {2, 6, 4}, {12, 32, 1, 58}, {
    6, 58, 32}, {3, 8}, {38, 37, 0, 32, 0, 10, 0, 36}, {38, 59, 0, 10, 0, 
    34}, {27, 3, 5, 36, 34, 7}, {2, 7, 4}, {12, 32, 1, 58}, {6, 58, 32}, {3, 
    1}, {25, 18, 32, 6}, {2, 6, 8}, {12, 32, 46, 58}, {34, 1, 3, 1, 58, 1, 2, 
    54}, {12, 32, 10, 58}, {34, 1, 3, 18, 58, 1, 2, 21}, {38, 37, 3, 21, 2, 
    50}, {39, 37, 3, 54, 2, 50}, {3, 1}, {12, 32, 10, 58}, {39, 37, 0, 58, 1, 
    59}, {6, 1, 41}, {7, 18, 19}, {6, 1, 30}, {6, 6, 32}, {18, 30, 58}, {12, 
    32, 1, 58, 57}, {10, 57, 36}, {16, 36, 0, 36}, {7, 36, 19}, {10, 1, 36}, {
    27, 6, 5, 19, 36, 6}, {2, 6, 14}, {40, 53, 3, 0, 19, 2, 0, 57}, {12, 57, 
    30, 57}, {6, 57, 41}, {38, 37, 0, 41, 0, 10, 0, 36}, {38, 58, 0, 10, 0, 
    34}, {27, 7, 5, 36, 34, 7}, {2, 7, 4}, {12, 41, 10, 57}, {6, 57, 32}, {3, 
    3}, {12, 41, 1, 57}, {6, 57, 30}, {3, -20}, {10, 8, 36}, {27, 4, 5, 19, 
    36, 6}, {2, 6, 4}, {12, 32, 1, 57}, {6, 57, 32}, {3, 8}, {38, 37, 0, 32, 
    0, 10, 0, 36}, {38, 58, 0, 10, 0, 34}, {27, 3, 5, 36, 34, 7}, {2, 7, 4}, {
    12, 32, 1, 57}, {6, 57, 32}, {3, 1}, {12, 32, 1, 57}, {34, 1, 3, 57, 10, 
    1, 2, 54}, {34, 1, 3, 32, 46, 1, 2, 50}, {38, 37, 3, 50, 2, 21}, {39, 37, 
    3, 54, 2, 21}, {39, 37, 0, 32, 1, 58}, {12, 6, 1, 57}, {6, 57, 6}, {3, 
    63}, {10, 8, 36}, {10, 1, 34}, {
    42, "RandomReal", 3, 0, 36, 3, 0, 34, 3, 0, 35}, {40, 35, 3, 0, 35, 3, 0, 
    36}, {19, 36, 35}, {40, 60, 3, 0, 13, 3, 0, 36}, {16, 35, 36, 35}, {34, 1,
     1, 35, 3, 21}, {42, "CoerceTensor", 2, 0, 4, 2, 1, 16, 3, 1, 54}, {
    42, "CoerceTensor", 2, 0, 4, 2, 1, 31, 3, 1, 50}, {
    42, "Join", 3, 1, 54, 3, 1, 50, 3, 1, 21, 3, 1, 52}, {44, 58, 52, 21}, {
    42, "CopyTensor", 3, 1, 21, 3, 1, 59}, {6, 1, 41}, {7, 18, 19}, {6, 18, 
    30}, {6, 6, 32}, {18, 30, 57}, {12, 32, 1, 57, 58}, {10, 58, 35}, {16, 35,
     0, 35}, {7, 35, 19}, {10, 1, 35}, {27, 6, 5, 19, 35, 6}, {2, 6, 14}, {40,
     53, 3, 0, 19, 2, 0, 58}, {12, 58, 30, 58}, {6, 58, 41}, {38, 37, 0, 41, 
    0, 10, 0, 35}, {38, 59, 0, 10, 0, 36}, {27, 7, 5, 35, 36, 7}, {2, 7, 4}, {
    12, 41, 10, 58}, {6, 58, 32}, {3, 3}, {12, 41, 1, 58}, {6, 58, 30}, {
    3, -20}, {10, 8, 35}, {27, 4, 5, 19, 35, 6}, {2, 6, 4}, {12, 32, 1, 58}, {
    6, 58, 32}, {3, 8}, {38, 37, 0, 32, 0, 10, 0, 35}, {38, 59, 0, 10, 0, 
    36}, {27, 3, 5, 35, 36, 7}, {2, 7, 4}, {12, 32, 1, 58}, {6, 58, 32}, {3, 
    1}, {25, 18, 32, 6}, {2, 6, 8}, {12, 32, 46, 58}, {34, 1, 3, 1, 58, 1, 2, 
    21}, {12, 32, 10, 58}, {34, 1, 3, 18, 58, 1, 2, 52}, {38, 37, 3, 52, 2, 
    54}, {39, 37, 3, 21, 2, 54}, {3, 1}, {12, 32, 10, 58}, {39, 37, 0, 58, 1, 
    59}, {3, 171}, {10, 8, 35}, {10, 1, 36}, {
    42, "RandomReal", 3, 0, 35, 3, 0, 36, 3, 0, 34}, {38, 28, 0, 4, 0, 35}, {
    27, 3, 5, 34, 35, 5}, {2, 5, 18}, {38, 26, 0, 4, 0, 58}, {38, 26, 0, 1, 0,
     57}, {38, 18, 0, 1, 0, 53}, {12, 57, 1, 53, 57}, {38, 26, 0, 4, 0, 53}, {
    38, 26, 0, 1, 0, 50}, {38, 18, 0, 1, 0, 48}, {12, 50, 1, 48, 50}, {38, 38,
     0, 53, 0, 50, 0, 48}, {38, 45, 0, 1, 0, 53}, {12, 48, 53, 48}, {39, 38, 
    0, 58, 0, 57, 0, 48}, {38, 37, 3, 47, 2, 56}, {39, 37, 3, 46, 2, 56}, {41,
     258, 2, 0, 6, 2, 0, 1, 2, 0, 58}, {6, 58, 6}, {3, 148}, {
    42, "CopyTensor", 3, 1, 14, 3, 1, 56}, {5, 1, 6}, {38, 26, 0, 1, 0, 63}, {
    38, 26, 0, 18, 0, 50}, {38, 26, 0, 4, 0, 48}, {34, 1, 3, 63, 50, 48, 2, 
    27}, {12, 23, 3, 10, 63}, {34, 1, 3, 23, 63, 1, 2, 53}, {38, 26, 3, 53, 1,
     51}, {34, 1, 1, 23, 3, 53}, {
    42, "CoerceTensor", 2, 0, 4, 2, 1, 27, 3, 1, 58}, {
    42, "CoerceTensor", 2, 0, 4, 2, 1, 51, 3, 1, 59}, {
    42, "Join", 3, 1, 58, 3, 1, 59, 3, 1, 53, 3, 1, 21}, {41, 259, 3, 0, 18, 
    3, 1, 21, 3, 1, 27}, {42, "CopyTensor", 3, 1, 27, 3, 1, 56}, {
    42, "CopyTensor", 2, 2, 38, 2, 2, 27}, {38, 26, 0, 4, 0, 63}, {25, 63, 4, 
    7}, {2, 7, 51}, {38, 26, 0, 4, 0, 63}, {38, 40, 0, 1, 0, 50}, {12, 63, 50,
     63}, {38, 26, 0, 1, 0, 50}, {38, 19, 0, 1, 0, 48}, {12, 50, 1, 48, 50}, {
    38, 26, 0, 4, 0, 48}, {38, 40, 0, 1, 0, 58}, {12, 48, 58, 48}, {38, 26, 0,
     1, 0, 58}, {38, 19, 0, 1, 0, 57}, {12, 58, 1, 57, 58}, {38, 27, 0, 48, 0,
     58, 0, 57}, {38, 48, 0, 1, 0, 48}, {12, 57, 48, 57}, {39, 27, 0, 63, 0, 
    50, 0, 57}, {38, 26, 0, 4, 0, 63}, {38, 40, 0, 18, 0, 50}, {12, 63, 50, 
    63}, {38, 26, 0, 1, 0, 50}, {38, 19, 0, 18, 0, 48}, {12, 50, 1, 48, 50}, {
    38, 26, 0, 4, 0, 48}, {38, 40, 0, 18, 0, 58}, {12, 48, 58, 48}, {38, 26, 
    0, 1, 0, 58}, {38, 19, 0, 18, 0, 53}, {12, 58, 1, 53, 58}, {38, 27, 0, 48,
     0, 58, 0, 53}, {38, 48, 0, 18, 0, 48}, {12, 53, 48, 53}, {39, 27, 0, 63, 
    0, 50, 0, 53}, {38, 26, 0, 4, 0, 63}, {6, 63, 60}, {38, 40, 0, 10, 0, 
    63}, {6, 63, 22}, {12, 60, 22, 63}, {6, 63, 16}, {38, 39, 0, 16, 0, 63}, {
    38, 27, 0, 16, 1, 21}, {38, 9, 0, 16, 1, 51}, {
    42, "CoerceTensor", 2, 0, 4, 2, 1, 21, 3, 1, 53}, {
    42, "DotVV", 3, 1, 53, 3, 1, 51, 2, 0, 21, 3, 0, 35}, {19, 35, 36}, {10, 
    63, 35}, {13, 35, 36, 35}, {10, 8, 36}, {27, 6, 5, 35, 36, 8}, {5, 8, 
    6}, {3, 1}, {2, 6, 16}, {42, "CopyTensor", 2, 2, 27, 2, 2, 38}, {10, 8, 
    35}, {10, 1, 36}, {42, "RandomReal", 3, 0, 35, 3, 0, 36, 3, 0, 34}, {40, 
    35, 3, 0, 34, 3, 0, 35}, {19, 35, 34}, {40, 60, 3, 0, 13, 3, 0, 35}, {16, 
    34, 35, 34}, {34, 1, 1, 34, 3, 21}, {
    42, "CoerceTensor", 2, 0, 4, 2, 1, 29, 3, 1, 51}, {
    42, "CoerceTensor", 2, 0, 4, 2, 1, 31, 3, 1, 53}, {
    42, "Join", 3, 1, 51, 3, 1, 53, 3, 1, 21, 3, 1, 58}, {44, 56, 58, 21}, {
    42, "CopyTensor", 3, 1, 21, 3, 1, 56}, {3, 14}, {10, 8, 34}, {10, 1, 
    35}, {42, "RandomReal", 3, 0, 34, 3, 0, 35, 3, 0, 36}, {40, 35, 3, 0, 36, 
    3, 0, 34}, {19, 34, 36}, {40, 60, 3, 0, 13, 3, 0, 34}, {16, 36, 34, 36}, {
    34, 1, 1, 36, 3, 21}, {42, "CoerceTensor", 2, 0, 4, 2, 1, 16, 3, 1, 58}, {
    42, "CoerceTensor", 2, 0, 4, 2, 1, 31, 3, 1, 51}, {
    42, "Join", 3, 1, 58, 3, 1, 51, 3, 1, 21, 3, 1, 53}, {44, 56, 53, 21}, {
    42, "CopyTensor", 3, 1, 21, 3, 1, 56}, {6, 1, 41}, {7, 18, 19}, {6, 18, 
    30}, {6, 6, 32}, {18, 30, 57}, {12, 32, 1, 57, 53}, {10, 53, 36}, {16, 36,
     0, 36}, {7, 36, 19}, {10, 1, 36}, {27, 6, 5, 19, 36, 7}, {2, 7, 14}, {40,
     53, 3, 0, 19, 2, 0, 53}, {12, 53, 30, 53}, {6, 53, 41}, {38, 37, 0, 41, 
    0, 10, 0, 36}, {38, 56, 0, 10, 0, 34}, {27, 7, 5, 36, 34, 8}, {2, 8, 4}, {
    12, 41, 10, 53}, {6, 53, 32}, {3, 3}, {12, 41, 1, 53}, {6, 53, 30}, {
    3, -20}, {10, 8, 36}, {27, 4, 5, 19, 36, 7}, {2, 7, 4}, {12, 32, 1, 53}, {
    6, 53, 32}, {3, 8}, {38, 37, 0, 32, 0, 10, 0, 36}, {38, 56, 0, 10, 0, 
    34}, {27, 3, 5, 36, 34, 8}, {2, 8, 4}, {12, 32, 1, 53}, {6, 53, 32}, {3, 
    1}, {25, 18, 32, 7}, {2, 7, 8}, {12, 32, 46, 53}, {34, 1, 3, 1, 53, 1, 2, 
    53}, {12, 32, 10, 53}, {34, 1, 3, 18, 53, 1, 2, 58}, {38, 37, 3, 58, 2, 
    51}, {39, 37, 3, 53, 2, 51}, {3, 1}, {12, 32, 10, 53}, {39, 37, 0, 53, 1, 
    56}, {12, 23, 3, 10, 53}, {34, 1, 3, 1, 53, 1, 2, 28}, {38, 37, 0, 1, 3, 
    28, 1, 27}, {40, 53, 3, 1, 27, 2, 1, 28}, {
    42, "CopyTensor", 2, 1, 28, 2, 1, 26}, {12, 23, 3, 10, 50}, {34, 1, 3, 23,
     50, 1, 2, 21}, {38, 26, 3, 21, 1, 28}, {38, 26, 0, 4, 0, 50}, {38, 6, 0, 
    50, 0, 53}, {34, 1, 3, 1, 53, 1, 2, 21}, {38, 28, 3, 21, 1, 27}, {6, 8, 
    53}, {33, 27, 63}, {6, 8, 58}, {3, 4}, {37, 27, 58, 2, 48}, {12, 53, 48, 
    36}, {6, 36, 53}, {4, 58, 63, -3}, {6, 53, 52}, {10, 10, 36}, {13, 6, 36, 
    34}, {40, 60, 3, 0, 34, 3, 0, 36}, {16, 6, 36, 34}, {12, 52, 1, 53}, {38, 
    26, 0, 18, 0, 58}, {41, 263, 2, 0, 58, 3, 0, 0, 3, 0, 36}, {10, 18, 35}, {
    40, 60, 3, 0, 35, 3, 0, 37}, {16, 36, 37, 36}, {40, 34, 3, 0, 36, 3, 0, 
    37}, {10, 12, 36}, {16, 36, 37, 36}, {40, 60, 3, 0, 36, 3, 0, 37}, {10, 
    53, 36}, {16, 36, 37, 36}, {16, 9, 36, 37}, {40, 34, 3, 0, 37, 3, 0, 
    36}, {19, 36, 37}, {40, 34, 3, 0, 37, 3, 0, 36}, {10, 10, 37}, {40, 34, 3,
     0, 37, 3, 0, 35}, {19, 35, 37}, {13, 36, 37, 36}, {10, 18, 37}, {16, 37, 
    34, 36, 37}, {7, 37, 33}, {38, 26, 3, 32, 1, 21}, {45, 21, 7, 21}, {41, 
    263, 3, 1, 41, 2, 1, 21, 3, 1, 56}, {38, 26, 0, 4, 0, 57}, {38, 6, 0, 57, 
    0, 53}, {34, 1, 3, 1, 53, 1, 2, 21}, {38, 56, 3, 21, 1, 27}, {7, 18, 
    34}, {33, 27, 58}, {6, 8, 50}, {3, 4}, {37, 27, 50, 3, 37}, {16, 34, 37, 
    36}, {7, 36, 34}, {4, 50, 58, -3}, {7, 34, 24}, {18, 2, 50}, {6, 50, 
    29}, {38, 26, 0, 4, 0, 50}, {6, 50, 38}, {10, 18, 34}, {40, 60, 3, 0, 34, 
    3, 0, 36}, {7, 36, 30}, {10, 29, 36}, {16, 36, 30, 36}, {7, 36, 7}, {40, 
    34, 3, 0, 7, 3, 0, 36}, {7, 36, 15}, {38, 0, 0, 38, 0, 50}, {13, 33, 12, 
    36}, {10, 29, 34}, {16, 34, 36, 34}, {40, 10, 3, 0, 34, 3, 0, 36}, {10, 
    10, 34}, {13, 36, 34, 36}, {16, 1, 15, 36, 34}, {19, 34, 36}, {40, 34, 3, 
    0, 36, 3, 0, 34}, {10, 50, 36}, {16, 36, 34, 36}, {38, 0, 0, 38, 0, 50}, {
    13, 33, 14, 34}, {10, 29, 37}, {16, 37, 34, 37}, {40, 10, 3, 0, 37, 3, 0, 
    34}, {10, 10, 37}, {13, 34, 37, 34}, {16, 1, 15, 34, 37}, {19, 37, 34}, {
    40, 34, 3, 0, 34, 3, 0, 37}, {10, 50, 34}, {16, 34, 37, 34}, {38, 0, 0, 
    38, 0, 50}, {13, 33, 16, 37}, {10, 29, 35}, {16, 35, 37, 35}, {40, 10, 3, 
    0, 35, 3, 0, 37}, {10, 10, 35}, {13, 37, 35, 37}, {16, 1, 15, 37, 35}, {
    19, 35, 37}, {40, 34, 3, 0, 37, 3, 0, 35}, {10, 50, 37}, {16, 37, 35, 
    37}, {34, 1, 3, 36, 34, 37, 3, 28}, {38, 23, 0, 38, 0, 36}, {16, 36, 24, 
    36}, {34, 1, 1, 36, 3, 27}, {42, "Join", 3, 1, 28, 3, 1, 27, 3, 1, 56}, {
    42, "CopyTensor", 3, 1, 56, 3, 1, 30}, {
    42, "Accumulate", 3, 1, 30, 2, 0, 21, 3, 1, 56}, {
    42, "CopyTensor", 3, 1, 56, 3, 1, 24}, {38, 24, 0, 10, 0, 36}, {7, 36, 
    13}, {40, 60, 3, 0, 13, 3, 0, 36}, {41, 259, 3, 0, 36, 3, 1, 30, 3, 1, 
    56}, {42, "CopyTensor", 3, 1, 56, 3, 1, 25}, {38, 26, 0, 18, 0, 50}, {18, 
    50, 53}, {12, 11, 53, 50}, {6, 50, 39}, {38, 26, 0, 10, 0, 50}, {18, 50, 
    53}, {12, 11, 53, 50}, {6, 50, 45}, {38, 26, 3, 33, 1, 56}, {
    42, "TotalAll", 2, 1, 56, 2, 0, 21, 2, 0, 50}, {18, 50, 53}, {12, 34, 53, 
    50}, {6, 50, 9}, {12, 39, 45, 9, 50}, {6, 50, 26}, {34, 1, 3, 9, 45, 39, 
    2, 56}, {10, 26, 36}, {40, 60, 3, 0, 36, 3, 0, 34}, {41, 259, 3, 0, 34, 2,
     1, 56, 3, 1, 28}, {42, "CopyTensor", 3, 1, 28, 3, 1, 36}, {
    42, "StuffBag", 3, 0, 27, 3, 2, 37, 6, 0, 17}, {
    42, "CoerceTensor", 2, 0, 4, 2, 2, 38, 3, 2, 28}, {
    42, "StuffBag", 3, 0, 8, 3, 2, 28, 6, 0, 17}, {
    42, "StuffBag", 3, 0, 32, 3, 1, 25, 6, 0, 17}, {
    42, "StuffBag", 3, 0, 28, 3, 1, 36, 6, 0, 17}, {10, 6, 34}, {
    42, "StuffBagScalar", 3, 0, 29, 3, 0, 34, 6, 0, 17}, {
    42, "StuffBagScalar", 3, 0, 22, 3, 0, 23, 6, 0, 17}, {3, -1001}, {
    42, "BagPart", 3, 0, 8, 2, 0, 18, 3, 1, 28}, {
    42, "StuffBag", 3, 0, 27, 3, 1, 28, 6, 0, 17}, {
    42, "BagPart", 3, 0, 32, 2, 0, 18, 3, 1, 28}, {
    42, "StuffBag", 3, 0, 27, 3, 1, 28, 6, 0, 17}, {
    42, "BagPart", 3, 0, 28, 2, 0, 18, 3, 1, 28}, {
    42, "StuffBag", 3, 0, 27, 3, 1, 28, 6, 0, 17}, {
    42, "BagPart", 3, 0, 29, 2, 0, 18, 3, 1, 28}, {
    42, "StuffBag", 3, 0, 27, 3, 1, 28, 6, 0, 17}, {
    42, "BagPart", 3, 0, 22, 2, 0, 18, 3, 1, 28}, {
    42, "StuffBag", 3, 0, 27, 3, 1, 28, 6, 0, 17}, {10, 13, 34}, {
    42, "StuffBagScalar", 3, 0, 27, 3, 0, 34, 6, 0, 17}, {10, 3, 34}, {
    42, "StuffBagScalar", 3, 0, 27, 3, 0, 34, 6, 0, 17}, {12, 31, 1, 50}, {10,
     50, 34}, {42, "StuffBagScalar", 3, 0, 27, 3, 0, 34, 6, 0, 17}, {
    42, "Dimensions", 3, 2, 37, 2, 1, 28}, {
    42, "CoerceTensor", 2, 0, 4, 2, 1, 28, 3, 1, 56}, {
    42, "StuffBag", 3, 0, 27, 3, 1, 56, 6, 0, 17}, {12, 31, 1, 50}, {10, 50, 
    34}, {42, "StuffBagScalar", 3, 0, 27, 3, 0, 34, 6, 0, 17}, {
    42, "Dimensions", 2, 2, 38, 2, 1, 28}, {
    42, "CoerceTensor", 2, 0, 4, 2, 1, 28, 3, 1, 56}, {
    42, "StuffBag", 3, 0, 27, 3, 1, 56, 6, 0, 17}, {12, 31, 1, 50}, {10, 50, 
    34}, {42, "StuffBagScalar", 3, 0, 27, 3, 0, 34, 6, 0, 17}, {
    42, "Dimensions", 3, 1, 25, 2, 1, 28}, {
    42, "CoerceTensor", 2, 0, 4, 2, 1, 28, 3, 1, 56}, {
    42, "StuffBag", 3, 0, 27, 3, 1, 56, 6, 0, 17}, {12, 31, 1, 50}, {10, 50, 
    34}, {42, "StuffBagScalar", 3, 0, 27, 3, 0, 34, 6, 0, 17}, {
    42, "Dimensions", 3, 1, 36, 2, 1, 28}, {
    42, "CoerceTensor", 2, 0, 4, 2, 1, 28, 3, 1, 56}, {
    42, "StuffBag", 3, 0, 27, 3, 1, 56, 6, 0, 17}, {12, 31, 1, 50}, {10, 50, 
    34}, {42, "StuffBagScalar", 3, 0, 27, 3, 0, 34, 6, 0, 17}, {12, 31, 1, 
    50}, {10, 50, 34}, {42, "StuffBagScalar", 3, 0, 27, 3, 0, 34, 6, 0, 17}, {
    34, 1, 1, 37, 0, 28}, {42, "Dimensions", 3, 3, 28, 2, 1, 56}, {33, 56, 
    50}, {10, 50, 34}, {42, "StuffBagScalar", 3, 0, 27, 3, 0, 34, 6, 0, 17}, {
    34, 1, 1, 38, 0, 56}, {42, "Dimensions", 2, 3, 56, 2, 1, 28}, {33, 28, 
    50}, {10, 50, 34}, {42, "StuffBagScalar", 3, 0, 27, 3, 0, 34, 6, 0, 17}, {
    34, 1, 1, 25, 0, 28}, {42, "Dimensions", 3, 2, 28, 2, 1, 56}, {33, 56, 
    50}, {10, 50, 34}, {42, "StuffBagScalar", 3, 0, 27, 3, 0, 34, 6, 0, 17}, {
    34, 1, 1, 36, 0, 56}, {42, "Dimensions", 3, 2, 56, 2, 1, 28}, {33, 28, 
    50}, {10, 50, 34}, {42, "StuffBagScalar", 3, 0, 27, 3, 0, 34, 6, 0, 17}, {
    34, 1, 1, 6, 2, 28}, {42, "Dimensions", 2, 1, 28, 2, 1, 56}, {33, 56, 
    50}, {10, 50, 34}, {42, "StuffBagScalar", 3, 0, 27, 3, 0, 34, 6, 0, 17}, {
    34, 1, 1, 23, 3, 56}, {42, "Dimensions", 3, 1, 56, 2, 1, 28}, {33, 28, 
    50}, {10, 50, 34}, {42, "StuffBagScalar", 3, 0, 27, 3, 0, 34, 6, 0, 17}, {
    10, 8, 34}, {42, "StuffBagScalar", 3, 0, 27, 3, 0, 34, 6, 0, 17}, {10, 8, 
    34}, {42, "StuffBagScalar", 3, 0, 27, 3, 0, 34, 6, 0, 17}, {10, 21, 34}, {
    42, "StuffBagScalar", 3, 0, 27, 3, 0, 34, 6, 0, 17}, {
    42, "BagPart", 3, 0, 27, 2, 0, 18, 3, 1, 28}, {
    42, "StuffBag", 3, 0, 4, 3, 1, 28, 6, 0, 17}, {
    42, "StuffBagScalar", 3, 0, 3, 3, 0, 18, 6, 0, 17}, {
    42, "Dimensions", 3, 1, 28, 2, 1, 9}, {
    42, "CoerceTensor", 2, 0, 4, 2, 1, 9, 3, 1, 10}, {
    42, "StuffBag", 3, 0, 3, 3, 1, 10, 6, 0, 17}, {3, -1475}, {
    42, "BagPart", 3, 0, 3, 2, 0, 18, 3, 1, 9}, {
    42, "StuffBag", 3, 0, 4, 3, 1, 9, 6, 0, 17}, {6, 0, 38}, {6, 8, 16}, {35, 
    38, 3, 9}, {6, 8, 29}, {3, 2}, {36, 16, 18, 3, 9}, {4, 29, 38, -1}, {
    42, "StuffBag", 3, 0, 4, 3, 1, 9, 6, 0, 17}, {10, 0, 15}, {
    42, "StuffBagScalar", 3, 0, 4, 3, 0, 15, 6, 0, 17}, {
    42, "BagPart", 3, 0, 4, 2, 0, 18, 3, 1, 9}, {1}}, 
   Function[{$CellContext`Nsims}, 
    Block[{$CellContext`cen2, $CellContext`wide2, $CellContext`slope2, \
$CellContext`Aasym2, $CellContext`Asym2, $CellContext`Aapop2, \
$CellContext`Apass2, $CellContext`imax2, $CellContext`kmax2, \
$CellContext`Ccell2, $CellContext`ratio2, $CellContext`EPCAMexp = 
      1, $CellContext`CD47exp = 1, $CellContext`CD44exp = 
      1, $CellContext`METexp = 1, $CellContext`EPCAMcnt = 
      1, $CellContext`CD47cnt = 1, $CellContext`CD44cnt = 
      1, $CellContext`METcnt = 
      1, $CellContext`expG2, $CellContext`cntG2, $CellContext`compkeystep2, \
$CellContext`signature2, $CellContext`maxsemidrivermut2, \
$CellContext`maxnondrivermut2, $CellContext`maxmjump2, \
$CellContext`maxtjump2, $CellContext`Ntot2, $CellContext`Nmax2, \
$CellContext`scegli2, $CellContext`ctmax2, $CellContext`tmax2, \
$CellContext`sims, $CellContext`ctsims, $CellContext`simslen, \
$CellContext`rawresults}, $CellContext`cen2 = 0.5; $CellContext`wide2 = 
      20; $CellContext`slope2 = 
      0.01; $CellContext`Aasym2 = {1, 1, 1}; $CellContext`Asym2 = {1, 1, 
       1}; $CellContext`Aapop2 = {1, 1, 1}; $CellContext`Apass2 = 
      0.1; $CellContext`imax2 = 5; $CellContext`kmax2 = 
      3; $CellContext`Ccell2 = 
      Table[100, {$CellContext`kmax2}]; $CellContext`ratio2 = 
      Table[{1, 1, 1, 1, 1.2}, {$CellContext`kmax2}]; $CellContext`EPCAMexp = 
      1; $CellContext`CD47exp = 1; $CellContext`CD44exp = 
      1; $CellContext`METexp = 1; $CellContext`EPCAMcnt = 
      1; $CellContext`CD47cnt = 1; $CellContext`CD44cnt = 
      1; $CellContext`METcnt = 
      1; $CellContext`expG2 = {$CellContext`EPCAMexp, $CellContext`CD47exp, \
$CellContext`CD44exp, $CellContext`METexp, 
        1}; $CellContext`cntG2 = {$CellContext`EPCAMcnt, \
$CellContext`CD47cnt, $CellContext`CD44cnt, $CellContext`METcnt, 
        1}; $CellContext`compkeystep2 = {1, 2, 4}; $CellContext`signature2 = {
       1, -1, 1, 1, 0}; $CellContext`maxsemidrivermut2 = 
      6; $CellContext`maxnondrivermut2 = 6; $CellContext`maxmjump2 = 
      5; $CellContext`maxtjump2 = 10; $CellContext`Ntot2 = 
      10; $CellContext`Nmax2 = 150; $CellContext`scegli2 = 
      0; $CellContext`ctmax2 = 100; $CellContext`tmax2 = 
      30; $CellContext`sims = Internal`Bag[
        Most[{1.}]]; $CellContext`simslen = Internal`Bag[
        Most[{1.}]]; $CellContext`ctsims = 0; 
     While[$CellContext`ctsims < $CellContext`Nsims, $CellContext`ctsims = \
$CellContext`ctsims + 1; $CellContext`rawresults = 
        CompiledFunction[{10, 10.1, 5464}, {
           Blank[Integer], 
           Blank[Integer], 
           Blank[Integer], 
           Blank[Integer], 
           Blank[Integer], 
           Blank[Integer], 
           Blank[Integer], {
            Blank[Integer], 1}, {
            Blank[Integer], 1}, {
            Blank[Real], 1}, {
            Blank[Real], 1}, 
           Blank[Integer], 
           Blank[Integer], 
           Blank[Integer], 
           Blank[Integer], {
            Blank[Real], 1}, {
            Blank[Real], 1}, {
            Blank[Real], 1}, 
           Blank[Real], 
           Blank[Real], 
           Blank[Real], 
           Blank[Real], {
            Blank[Real], 2}}, {{2, 0, 0}, {2, 0, 1}, {2, 0, 2}, {2, 0, 3}, {2,
           0, 4}, {2, 0, 5}, {2, 0, 6}, {2, 1, 0}, {2, 1, 1}, {3, 1, 2}, {3, 
          1, 3}, {2, 0, 7}, {2, 0, 8}, {2, 0, 9}, {2, 0, 10}, {3, 1, 4}, {3, 
          1, 5}, {3, 1, 6}, {3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 3}, {3, 2,
           7}, {3, 1, 
          46}}, {{{0}, {2, 1, 15}}, {{1, -2, 1}, {2, 1, 
           43}}, {{-1, 1}, {2, 1, 45}}, {
           False, {1, 0, 0}}, {-10., {3, 0, 9}}, {{2, -1, 1}, {2, 1, 44}}, {
           0, {2, 0, 11}}, {{0.}, {3, 1, 10}}, {1., {3, 0, 21}}, {{4, -2, 
           1}, {2, 1, 30}}, {{1.}, {3, 1, 13}}, {{0, 0, 1}, {2, 1, 
           26}}, {{0, 0}, {2, 1, 16}}, {{0, 0, 0, 0, 0}, {2, 1, 14}}, {
           10, {2, 0, 25}}, {{{0., 0.}}, {3, 2, 11}}, {
           4, {2, 0, 27}}, {{-1}, {2, 1, 42}}, {{10}, {2, 1, 17}}, {
           8, {2, 0, 26}}, {-1., {3, 0, 17}}, {{1}, {2, 1, 9}}, {-0.5, {3, 0, 
            19}}, {{0, 0, 0}, {2, 1, 
           12}}, {-2, {2, 0, 49}}, {{{0}}, {2, 2, 8}}, {
           2, {2, 0, 21}}, {-1, {2, 0, 12}}, {-2., {3, 0, 14}}, {
           1, {2, 0, 15}}, {{4, -1, 1}, {2, 1, 29}}, {3, {2, 0, 18}}, {
           2.718281828459045, {3, 0, 6}}, {0.5, {3, 0, 10}}, {
           0., {3, 0, 4}}, {{-1, 2}, {2, 1, 41}}, {{0, 1}, {2, 1, 37}}, {
           0.1, {3, 0, 5}}}, {8, 61, 43, 0, 
          56}, {{6, 11, 37}, {42, "CopyTensor", 2, 2, 8, 2, 2, 32}, {
           42, "CopyTensor", 2, 1, 9, 2, 1, 24}, {
           42, "CopyTensor", 3, 1, 10, 3, 1, 21}, {
           42, "CopyTensor", 3, 2, 11, 3, 2, 34}, {
           42, "CopyTensor", 2, 1, 12, 2, 1, 35}, {7, 4, 7}, {6, 11, 24}, {
           42, "CopyTensor", 3, 1, 13, 3, 1, 33}, {
           42, "CopyTensor", 2, 1, 15, 2, 1, 23}, {
           42, "CopyTensor", 2, 1, 15, 2, 1, 22}, {6, 11, 16}, {6, 11, 35}, {
           6, 11, 14}, {7, 4, 20}, {12, 4, 12, 45}, {6, 4, 42}, {6, 11, 22}, {
           35, 42, 2, 31}, {6, 11, 29}, {3, 2}, {36, 22, 11, 2, 31}, {4, 29, 
           42, -1}, {42, "CopyTensor", 2, 1, 31, 2, 1, 23}, {12, 4, 18, 29}, {
           6, 11, 44}, {35, 29, 2, 31}, {6, 11, 54}, {3, 2}, {36, 44, 11, 2, 
           31}, {4, 54, 29, -1}, {6, 45, 22}, {6, 11, 42}, {35, 22, 2, 27}, {
           6, 11, 44}, {3, 2}, {36, 42, 15, 2, 27}, {4, 44, 22, -1}, {34, 1, 
           1, 5, 2, 40}, {42, "Join", 2, 1, 27, 2, 1, 40, 2, 1, 20}, {40, 60, 
           3, 1, 3, 3, 1, 27}, {45, 2, 27, 40}, {12, 3, 12, 44}, {6, 11, 
           29}, {35, 44, 2, 27}, {6, 11, 54}, {3, 2}, {36, 29, 15, 2, 27}, {4,
            54, 44, -1}, {42, "Join", 2, 1, 27, 2, 1, 15, 2, 1, 28}, {41, 259,
            3, 0, 0, 2, 1, 28, 3, 1, 27}, {
           42, "CopyTensor", 3, 1, 27, 3, 1, 33}, {6, 0, 42}, {18, 42, 22}, {
           18, 2, 29}, {12, 1, 22, 29, 44}, {6, 44, 37}, {34, 2, 1, 5, 42, 11,
            11, 11, 11, 2, 27}, {12, 3, 12, 22}, {6, 12, 29}, {35, 22, 29, 2, 
           28}, {6, 11, 54}, {3, 2}, {36, 29, 23, 0, 28}, {4, 54, 22, -1}, {
           42, "Join", 2, 2, 27, 2, 2, 28, 2, 2, 38}, {
           42, "CopyTensor", 2, 2, 38, 2, 2, 32}, {
           42, "CopyTensor", 2, 1, 23, 2, 1, 38}, {7, 4, 36}, {
           42, "CopyTensor", 3, 1, 10, 3, 1, 28}, {10, 12, 38}, {13, 6, 38, 
           27}, {40, 60, 3, 0, 27, 3, 0, 38}, {16, 6, 38, 27}, {38, 1, 0, 15, 
           0, 17}, {34, 1, 3, 15, 17, 15, 2, 18}, {38, 38, 3, 18, 1, 49}, {6, 
           11, 17}, {33, 49, 29}, {6, 11, 41}, {3, 4}, {37, 49, 41, 2, 22}, {
           12, 17, 22, 32}, {6, 32, 17}, {4, 41, 29, -3}, {12, 17, 15, 17}, {
           41, 263, 2, 0, 11, 3, 0, 10, 3, 0, 38}, {10, 21, 22}, {40, 60, 3, 
           0, 22, 3, 0, 12}, {16, 38, 12, 38}, {40, 34, 3, 0, 38, 3, 0, 12}, {
           10, 25, 38}, {16, 38, 12, 38}, {40, 60, 3, 0, 38, 3, 0, 12}, {10, 
           17, 38}, {16, 38, 12, 38}, {16, 9, 38, 12}, {40, 34, 3, 0, 12, 3, 
           0, 38}, {19, 38, 12}, {40, 34, 3, 0, 12, 3, 0, 38}, {10, 12, 12}, {
           40, 34, 3, 0, 12, 3, 0, 22}, {19, 22, 12}, {13, 38, 12, 38}, {10, 
           21, 12}, {16, 12, 27, 38, 12}, {7, 12, 36}, {19, 2, 12}, {7, 12, 
           32}, {10, 21, 12}, {40, 60, 3, 0, 12, 3, 0, 27}, {7, 27, 33}, {16, 
           32, 33, 27}, {7, 27, 34}, {40, 34, 3, 0, 34, 3, 0, 27}, {7, 27, 
           35}, {38, 4, 0, 15, 0, 27}, {13, 36, 14, 12}, {16, 32, 12, 38}, {
           40, 10, 3, 0, 38, 3, 0, 12}, {10, 12, 38}, {13, 12, 38, 12}, {16, 
           3, 35, 12, 38}, {19, 38, 12}, {40, 34, 3, 0, 12, 3, 0, 38}, {16, 
           27, 38, 27}, {38, 5, 0, 15, 0, 38}, {13, 36, 17, 12}, {16, 32, 12, 
           22}, {40, 10, 3, 0, 22, 3, 0, 12}, {10, 12, 22}, {13, 12, 22, 
           12}, {16, 3, 35, 12, 22}, {19, 22, 12}, {40, 34, 3, 0, 12, 3, 0, 
           22}, {16, 38, 22, 38}, {38, 6, 0, 15, 0, 22}, {13, 36, 19, 12}, {
           16, 32, 12, 30}, {40, 10, 3, 0, 30, 3, 0, 12}, {10, 12, 30}, {13, 
           12, 30, 12}, {16, 3, 35, 12, 30}, {19, 30, 12}, {40, 34, 3, 0, 12, 
           3, 0, 30}, {16, 22, 30, 22}, {34, 1, 3, 27, 38, 22, 3, 27}, {38, 
           33, 0, 15, 0, 27}, {45, 38, 0, 39}, {41, 263, 3, 1, 40, 2, 1, 39, 
           3, 1, 49}, {38, 1, 0, 15, 0, 54}, {34, 1, 3, 15, 54, 15, 2, 39}, {
           38, 49, 3, 39, 1, 18}, {7, 21, 22}, {33, 18, 41}, {6, 11, 44}, {3, 
           4}, {37, 18, 44, 3, 38}, {16, 22, 38, 30}, {7, 30, 22}, {4, 44, 
           41, -3}, {16, 27, 22, 27}, {34, 1, 1, 27, 3, 25}, {
           42, "Join", 3, 1, 27, 3, 1, 25, 3, 1, 18}, {
           42, "Accumulate", 3, 1, 18, 2, 0, 26, 3, 1, 27}, {
           42, "CopyTensor", 3, 1, 27, 3, 1, 28}, {12, 1, 21, 54}, {6, 12, 
           17}, {35, 54, 17, 3, 27}, {6, 11, 41}, {3, 4}, {
           42, "Join", 2, 1, 26, 2, 1, 23, 2, 1, 25}, {41, 259, 3, 0, 21, 2, 
           1, 25, 3, 1, 49}, {36, 17, 49, 0, 27}, {4, 41, 54, -3}, {12, 1, 21,
            44}, {34, 1, 2, 44, 15, 2, 49}, {10, 11, 27}, {10, 15, 22}, {
           42, "RandomReals", 3, 0, 27, 3, 0, 22, 2, 1, 49, 3, 2, 25}, {40, 
           35, 3, 2, 25, 3, 2, 18}, {40, 43, 3, 2, 18, 3, 2, 25}, {38, 28, 0, 
           12, 0, 27}, {40, 60, 3, 0, 27, 3, 0, 22}, {41, 259, 3, 0, 22, 3, 2,
            25, 3, 2, 18}, {41, 257, 3, 0, 7, 3, 2, 18, 3, 2, 25}, {
           42, "JoinAtLevel", 3, 2, 27, 3, 2, 25, 2, 0, 21, 3, 2, 18}, {
           42, "CopyTensor", 3, 2, 18, 3, 2, 34}, {18, 42, 44}, {6, 44, 38}, {
           18, 37, 44}, {6, 44, 19}, {12, 1, 38, 19, 44}, {6, 44, 34}, {10, 
           21, 36}, {40, 60, 3, 0, 36, 3, 0, 22}, {7, 22, 23}, {10, 34, 22}, {
           16, 22, 23, 22}, {7, 22, 13}, {40, 50, 3, 0, 13, 2, 0, 44}, {6, 44,
            23}, {42, "MaxI", 2, 0, 11, 2, 0, 23, 2, 0, 44}, {6, 44, 30}, {12,
            42, 37, 44}, {34, 1, 3, 44, 30, 30, 2, 18}, {
           42, "CopyTensor", 2, 1, 18, 2, 1, 35}, {
           42, "Transpose", 3, 2, 34, 3, 2, 18}, {38, 18, 0, 12, 1, 46}, {
           42, "CopyTensor", 3, 1, 46, 3, 1, 21}, {
           42, "Ordering", 3, 1, 21, 2, 1, 46}, {
           42, "CopyTensor", 2, 1, 46, 2, 1, 24}, {38, 34, 1, 24, 2, 46}, {
           42, "CopyTensor", 3, 2, 46, 3, 2, 34}, {12, 27, 4, 12, 44}, {34, 1,
            3, 15, 44, 15, 2, 46}, {38, 34, 0, 15, 3, 46, 1, 18}, {40, 53, 3, 
           1, 18, 2, 1, 46}, {42, "CopyTensor", 2, 1, 46, 2, 1, 22}, {38, 22, 
           3, 29, 1, 38}, {38, 22, 0, 18, 0, 41}, {38, 1, 0, 41, 0, 44}, {34, 
           1, 3, 15, 44, 15, 2, 46}, {38, 38, 3, 46, 1, 18}, {6, 11, 44}, {33,
            18, 54}, {6, 11, 32}, {3, 4}, {37, 18, 32, 2, 29}, {12, 44, 29, 
           22}, {6, 22, 44}, {4, 32, 54, -3}, {10, 12, 22}, {13, 6, 22, 36}, {
           40, 60, 3, 0, 36, 3, 0, 22}, {16, 6, 22, 36}, {12, 44, 15, 32}, {
           38, 22, 0, 21, 0, 41}, {41, 263, 2, 0, 41, 3, 0, 10, 3, 0, 22}, {
           10, 21, 27}, {40, 60, 3, 0, 27, 3, 0, 30}, {16, 22, 30, 22}, {40, 
           34, 3, 0, 22, 3, 0, 30}, {10, 25, 22}, {16, 22, 30, 22}, {40, 60, 
           3, 0, 22, 3, 0, 30}, {10, 32, 22}, {16, 22, 30, 22}, {16, 9, 22, 
           30}, {40, 34, 3, 0, 30, 3, 0, 22}, {19, 22, 30}, {40, 34, 3, 0, 30,
            3, 0, 22}, {10, 12, 30}, {40, 34, 3, 0, 30, 3, 0, 27}, {19, 27, 
           30}, {13, 22, 30, 22}, {10, 21, 30}, {16, 30, 36, 22, 30}, {38, 22,
            3, 29, 1, 46}, {45, 46, 0, 46}, {41, 263, 3, 1, 40, 2, 1, 46, 3, 
           1, 28}, {38, 22, 0, 18, 0, 54}, {38, 1, 0, 54, 0, 32}, {34, 1, 3, 
           15, 32, 15, 2, 46}, {38, 28, 3, 46, 1, 18}, {7, 21, 22}, {33, 18, 
           41}, {6, 11, 17}, {3, 4}, {37, 18, 17, 3, 36}, {16, 22, 36, 27}, {
           7, 27, 22}, {4, 17, 41, -3}, {19, 2, 27}, {7, 27, 24}, {38, 22, 0, 
           18, 0, 17}, {6, 17, 33}, {10, 21, 27}, {40, 60, 3, 0, 27, 3, 0, 
           36}, {7, 36, 11}, {16, 24, 11, 36}, {7, 36, 18}, {40, 34, 3, 0, 18,
            3, 0, 36}, {7, 36, 8}, {38, 4, 0, 33, 0, 36}, {13, 30, 14, 27}, {
           16, 24, 27, 38}, {40, 10, 3, 0, 38, 3, 0, 27}, {10, 12, 38}, {13, 
           27, 38, 27}, {16, 3, 8, 27, 38}, {19, 38, 27}, {40, 34, 3, 0, 27, 
           3, 0, 38}, {16, 36, 38, 36}, {38, 5, 0, 33, 0, 38}, {13, 30, 17, 
           27}, {16, 24, 27, 12}, {40, 10, 3, 0, 12, 3, 0, 27}, {10, 12, 
           12}, {13, 27, 12, 27}, {16, 3, 8, 27, 12}, {19, 12, 27}, {40, 34, 
           3, 0, 27, 3, 0, 12}, {16, 38, 12, 38}, {38, 6, 0, 33, 0, 12}, {13, 
           30, 19, 27}, {16, 24, 27, 16}, {40, 10, 3, 0, 16, 3, 0, 27}, {10, 
           12, 16}, {13, 27, 16, 27}, {16, 3, 8, 27, 16}, {19, 16, 27}, {40, 
           34, 3, 0, 27, 3, 0, 16}, {16, 12, 16, 12}, {34, 1, 3, 36, 38, 12, 
           3, 38}, {38, 33, 0, 33, 0, 36}, {16, 36, 22, 36}, {34, 1, 1, 36, 3,
            18}, {42, "Join", 3, 1, 38, 3, 1, 18, 3, 1, 28}, {
           42, "Accumulate", 3, 1, 28, 2, 0, 26, 3, 1, 38}, {38, 38, 0, 12, 0,
            36}, {40, 60, 3, 0, 36, 3, 0, 38}, {41, 259, 3, 0, 38, 3, 1, 28, 
           3, 1, 18}, {38, 22, 0, 21, 0, 17}, {18, 17, 32}, {12, 6, 32, 17}, {
           38, 22, 0, 12, 0, 32}, {18, 32, 54}, {12, 5, 54, 32}, {38, 22, 3, 
           30, 1, 46}, {42, "TotalAll", 2, 1, 46, 2, 0, 26, 2, 0, 54}, {18, 
           54, 41}, {12, 45, 41, 54}, {12, 17, 32, 54, 41}, {34, 1, 3, 54, 32,
            17, 2, 46}, {10, 41, 38}, {40, 60, 3, 0, 38, 3, 0, 12}, {41, 259, 
           3, 0, 12, 2, 1, 46, 3, 1, 27}, {
           42, "Drop", 3, 1, 13, 2, 0, 11, 2, 0, 12, 3, 1, 46}, {
           42, "Bag", 2, 0, 18, 3, 0, 12}, {
           42, "StuffBag", 3, 0, 12, 3, 1, 46, 6, 0, 17}, {
           42, "Drop", 3, 1, 13, 2, 0, 11, 2, 0, 12, 3, 1, 46}, {
           42, "Bag", 2, 0, 18, 3, 0, 38}, {
           42, "StuffBag", 3, 0, 38, 3, 1, 46, 6, 0, 17}, {
           42, "Drop", 3, 1, 13, 2, 0, 11, 2, 0, 12, 3, 1, 46}, {
           42, "Bag", 2, 0, 18, 3, 0, 16}, {
           42, "StuffBag", 3, 0, 16, 3, 1, 46, 6, 0, 17}, {
           42, "Drop", 3, 1, 13, 2, 0, 11, 2, 0, 12, 3, 1, 46}, {
           42, "Bag", 2, 0, 18, 3, 0, 27}, {
           42, "StuffBag", 3, 0, 27, 3, 1, 46, 6, 0, 17}, {
           42, "Drop", 3, 1, 13, 2, 0, 11, 2, 0, 12, 3, 1, 46}, {
           42, "Bag", 2, 0, 18, 3, 0, 41}, {
           42, "StuffBag", 3, 0, 41, 3, 1, 46, 6, 0, 17}, {
           42, "Drop", 3, 1, 13, 2, 0, 11, 2, 0, 12, 3, 1, 46}, {
           42, "Bag", 2, 0, 18, 3, 0, 15}, {
           42, "StuffBag", 3, 0, 15, 3, 1, 46, 6, 0, 17}, {
           42, "StuffBag", 3, 0, 12, 3, 2, 34, 6, 0, 17}, {
           42, "CoerceTensor", 2, 0, 18, 2, 2, 32, 3, 2, 46}, {
           42, "StuffBag", 3, 0, 38, 3, 2, 46, 6, 0, 17}, {
           42, "StuffBag", 3, 0, 16, 3, 1, 18, 6, 0, 17}, {
           42, "StuffBag", 3, 0, 27, 3, 1, 27, 6, 0, 17}, {10, 42, 37}, {
           42, "StuffBagScalar", 3, 0, 41, 3, 0, 37, 6, 0, 17}, {
           42, "StuffBagScalar", 3, 0, 15, 3, 0, 7, 6, 0, 17}, {38, 34, 0, 15,
            0, 12, 0, 37}, {10, 8, 40}, {27, 3, 4, 37, 40, 2}, {2, 2, 9}, {25,
            24, 7, 1}, {2, 1, 4}, {25, 11, 42, 4}, {5, 4, 3}, {3, 2}, {5, 0, 
           3}, {5, 3, 1}, {3, 2}, {5, 0, 1}, {2, 1, 982}, {12, 24, 15, 22}, {
           6, 22, 24}, {38, 34, 0, 15, 0, 12, 0, 37}, {7, 37, 7}, {
           42, "Accumulate", 3, 1, 18, 2, 0, 26, 3, 1, 46}, {10, 11, 37}, {10,
            15, 40}, {42, "RandomReal", 3, 0, 37, 3, 0, 40, 3, 0, 25}, {38, 
           46, 0, 15, 0, 37}, {27, 3, 4, 25, 37, 2}, {2, 2, 325}, {
           42, "CopyTensor", 3, 1, 10, 3, 1, 51}, {
           42, "CopyTensor", 3, 1, 10, 3, 1, 50}, {
           42, "CopyTensor", 2, 1, 15, 2, 1, 47}, {38, 22, 0, 15, 0, 46}, {38,
            22, 0, 21, 0, 47}, {38, 22, 0, 18, 0, 22}, {34, 1, 3, 46, 47, 22, 
           2, 48}, {12, 27, 4, 12, 46}, {34, 1, 3, 27, 46, 15, 2, 25}, {38, 
           22, 3, 25, 1, 54}, {34, 1, 1, 7, 3, 25}, {
           42, "CoerceTensor", 2, 0, 18, 2, 1, 48, 3, 1, 39}, {
           42, "CoerceTensor", 2, 0, 18, 2, 1, 54, 3, 1, 49}, {
           42, "Join", 3, 1, 39, 3, 1, 49, 3, 1, 25, 3, 1, 52}, {41, 259, 3, 
           0, 21, 3, 1, 52, 3, 1, 48}, {
           42, "CopyTensor", 3, 1, 48, 3, 1, 50}, {6, 11, 48}, {6, 11, 20}, {
           6, 11, 40}, {42, "CopyTensor", 2, 1, 15, 2, 1, 48}, {6, 11, 51}, {
           6, 11, 22}, {42, "CopyTensor", 2, 1, 23, 2, 1, 49}, {38, 22, 0, 21,
            0, 52}, {18, 52, 57}, {12, 6, 57, 52}, {6, 52, 48}, {12, 27, 4, 
           12, 52}, {34, 1, 3, 27, 52, 15, 2, 54}, {38, 22, 3, 54, 1, 52}, {
           42, "TotalAll", 2, 1, 52, 2, 0, 26, 2, 0, 52}, {18, 52, 57}, {12, 
           5, 45, 57, 48, 52}, {6, 52, 20}, {
           42, "MinI", 2, 0, 15, 2, 0, 20, 2, 0, 52}, {
           42, "RandomInteger", 2, 0, 52, 2, 0, 20, 2, 0, 57}, {18, 48, 52}, {
           12, 57, 52, 57}, {6, 57, 40}, {25, 11, 40, 3}, {2, 3, 56}, {6, 11, 
           29}, {6, 11, 53}, {6, 4, 47}, {6, 11, 56}, {35, 47, 2, 52}, {6, 11,
            57}, {3, 2}, {36, 56, 57, 2, 52}, {4, 57, 47, -1}, {33, 52, 57}, {
           6, 11, 52}, {35, 57, 2, 54}, {6, 11, 50}, {3, 16}, {37, 52, 50, 2, 
           58}, {6, 58, 36}, {12, 27, 4, 12, 59}, {34, 1, 3, 27, 59, 15, 2, 
           25}, {38, 22, 3, 25, 1, 55}, {38, 55, 0, 36, 0, 59}, {38, 20, 0, 
           36, 0, 60}, {25, 59, 60, 4}, {2, 4, 5}, {12, 29, 15, 36}, {6, 36, 
           29}, {6, 50, 36}, {3, 2}, {6, 12, 36}, {36, 52, 36, 2, 54}, {4, 50,
            57, -15}, {6, 29, 56}, {6, 11, 52}, {35, 56, 2, 55}, {6, 11, 
           47}, {3, 11}, {12, 53, 15, 36}, {6, 36, 53}, {37, 54, 53, 2, 36}, {
           24, 36, 12, 4}, {2, 4, 4}, {12, 53, 15, 36}, {6, 36, 53}, {
           3, -5}, {37, 52, 53, 2, 36}, {36, 52, 36, 2, 55}, {4, 47, 
           56, -10}, {42, "CopyTensor", 2, 1, 55, 2, 1, 48}, {33, 48, 53}, {
           42, "MinI", 2, 0, 53, 2, 0, 40, 2, 0, 29}, {38, 48, 0, 29, 0, 
           53}, {6, 53, 51}, {38, 49, 0, 51, 0, 53}, {12, 53, 15, 53}, {39, 
           49, 0, 51, 0, 53}, {3, 3}, {
           42, "RandomInteger", 2, 0, 15, 2, 0, 9, 2, 0, 29}, {6, 29, 22}, {
           42, "Drop", 2, 1, 49, 2, 0, 11, 2, 0, 12, 2, 1, 55}, {
           42, "TotalAll", 2, 1, 55, 2, 0, 26, 2, 0, 53}, {
           42, "MinI", 2, 0, 22, 2, 0, 48, 2, 0, 29}, {34, 1, 3, 53, 29, 11, 
           2, 55}, {42, "Join", 2, 1, 55, 2, 1, 49, 2, 1, 53}, {
           42, "CopyTensor", 2, 1, 53, 2, 1, 47}, {
           42, "CopyTensor", 2, 2, 32, 2, 2, 53}, {38, 47, 0, 15, 0, 22}, {34,
            1, 2, 11, 22, 2, 39}, {33, 37, 40}, {6, 11, 20}, {35, 40, 2, 
           49}, {6, 11, 48}, {3, 14}, {38, 22, 0, 18, 0, 53}, {38, 22, 0, 15, 
           0, 29}, {37, 39, 48, 2, 58}, {12, 29, 15, 58, 29}, {38, 22, 0, 18, 
           0, 58}, {38, 22, 0, 15, 0, 52}, {37, 39, 48, 2, 36}, {12, 52, 15, 
           36, 52}, {38, 53, 0, 58, 0, 52, 0, 36}, {37, 37, 48, 2, 58}, {12, 
           36, 58, 36}, {39, 53, 0, 53, 0, 29, 0, 36}, {36, 20, 36, 2, 49}, {
           4, 48, 40, -13}, {38, 22, 0, 18, 0, 22}, {6, 22, 43}, {38, 35, 0, 
           43, 0, 22}, {38, 53, 0, 43, 1, 48}, {38, 7, 0, 43, 1, 55}, {
           42, "CoerceTensor", 2, 0, 18, 2, 1, 48, 3, 1, 52}, {
           42, "DotVV", 3, 1, 52, 3, 1, 55, 2, 0, 26, 3, 0, 25}, {19, 25, 
           37}, {10, 22, 25}, {13, 25, 37, 25}, {10, 11, 37}, {27, 6, 4, 25, 
           37, 3}, {2, 3, 123}, {42, "CopyTensor", 2, 2, 53, 2, 2, 32}, {10, 
           11, 25}, {10, 15, 37}, {
           42, "RandomReal", 3, 0, 25, 3, 0, 37, 3, 0, 40}, {40, 35, 3, 0, 40,
            3, 0, 25}, {19, 25, 40}, {40, 60, 3, 0, 36, 3, 0, 25}, {16, 40, 
           25, 40}, {34, 1, 1, 40, 3, 48}, {
           42, "CoerceTensor", 2, 0, 18, 2, 1, 12, 3, 1, 55}, {
           42, "CoerceTensor", 2, 0, 18, 2, 1, 23, 3, 1, 52}, {
           42, "Join", 3, 1, 55, 3, 1, 52, 3, 1, 48, 3, 1, 54}, {44, 50, 54, 
           48}, {42, "CopyTensor", 3, 1, 48, 3, 1, 51}, {10, 11, 40}, {10, 15,
            25}, {42, "RandomReal", 3, 0, 40, 3, 0, 25, 3, 0, 37}, {40, 35, 3,
            0, 37, 3, 0, 40}, {19, 40, 37}, {40, 60, 3, 0, 36, 3, 0, 40}, {16,
            37, 40, 37}, {34, 1, 1, 37, 3, 48}, {
           42, "CoerceTensor", 2, 0, 18, 2, 1, 47, 3, 1, 54}, {
           42, "Join", 3, 1, 54, 3, 1, 48, 3, 1, 55}, {44, 50, 55, 48}, {
           42, "CopyTensor", 3, 1, 48, 3, 1, 50}, {6, 15, 14}, {7, 21, 20}, {
           6, 21, 16}, {6, 42, 35}, {18, 16, 22}, {12, 35, 15, 22, 51}, {10, 
           51, 37}, {16, 37, 10, 37}, {7, 37, 20}, {10, 15, 37}, {27, 6, 4, 
           20, 37, 4}, {2, 4, 14}, {40, 53, 3, 0, 20, 2, 0, 51}, {12, 51, 16, 
           51}, {6, 51, 14}, {38, 34, 0, 14, 0, 12, 0, 37}, {38, 51, 0, 12, 0,
            40}, {27, 7, 4, 37, 40, 5}, {2, 5, 4}, {12, 14, 12, 51}, {6, 51, 
           35}, {3, 3}, {12, 14, 15, 51}, {6, 51, 16}, {3, -20}, {10, 11, 
           37}, {27, 4, 4, 20, 37, 4}, {2, 4, 4}, {12, 35, 15, 51}, {6, 51, 
           35}, {3, 8}, {38, 34, 0, 35, 0, 12, 0, 37}, {38, 51, 0, 12, 0, 
           40}, {27, 3, 4, 37, 40, 5}, {2, 5, 4}, {12, 35, 15, 51}, {6, 51, 
           35}, {3, 1}, {25, 21, 35, 4}, {2, 4, 8}, {12, 35, 49, 51}, {34, 1, 
           3, 15, 51, 15, 2, 48}, {12, 35, 12, 51}, {34, 1, 3, 21, 51, 15, 2, 
           55}, {38, 34, 3, 55, 2, 54}, {39, 34, 3, 48, 2, 54}, {3, 1}, {12, 
           35, 12, 51}, {39, 34, 0, 51, 1, 51}, {6, 15, 14}, {7, 21, 20}, {6, 
           15, 16}, {6, 42, 35}, {18, 16, 51}, {12, 35, 15, 51, 22}, {10, 22, 
           37}, {16, 37, 10, 37}, {7, 37, 20}, {10, 15, 37}, {27, 6, 4, 20, 
           37, 4}, {2, 4, 14}, {40, 53, 3, 0, 20, 2, 0, 22}, {12, 22, 16, 
           22}, {6, 22, 14}, {38, 34, 0, 14, 0, 12, 0, 37}, {38, 50, 0, 12, 0,
            40}, {27, 7, 4, 37, 40, 5}, {2, 5, 4}, {12, 14, 12, 22}, {6, 22, 
           35}, {3, 3}, {12, 14, 15, 22}, {6, 22, 16}, {3, -20}, {10, 11, 
           37}, {27, 4, 4, 20, 37, 4}, {2, 4, 4}, {12, 35, 15, 22}, {6, 22, 
           35}, {3, 8}, {38, 34, 0, 35, 0, 12, 0, 37}, {38, 50, 0, 12, 0, 
           40}, {27, 3, 4, 37, 40, 5}, {2, 5, 4}, {12, 35, 15, 22}, {6, 22, 
           35}, {3, 1}, {12, 35, 15, 22}, {34, 1, 3, 22, 12, 15, 2, 48}, {34, 
           1, 3, 35, 49, 15, 2, 54}, {38, 34, 3, 54, 2, 55}, {39, 34, 3, 48, 
           2, 55}, {39, 34, 0, 35, 1, 50}, {12, 42, 15, 22}, {6, 22, 42}, {3, 
           63}, {10, 11, 37}, {10, 15, 40}, {
           42, "RandomReal", 3, 0, 37, 3, 0, 40, 3, 0, 25}, {40, 35, 3, 0, 25,
            3, 0, 37}, {19, 37, 25}, {40, 60, 3, 0, 36, 3, 0, 37}, {16, 25, 
           37, 25}, {34, 1, 1, 25, 3, 55}, {
           42, "CoerceTensor", 2, 0, 18, 2, 1, 12, 3, 1, 48}, {
           42, "CoerceTensor", 2, 0, 18, 2, 1, 23, 3, 1, 54}, {
           42, "Join", 3, 1, 48, 3, 1, 54, 3, 1, 55, 3, 1, 52}, {44, 50, 52, 
           55}, {42, "CopyTensor", 3, 1, 55, 3, 1, 51}, {6, 15, 14}, {7, 21, 
           20}, {6, 21, 16}, {6, 42, 35}, {18, 16, 22}, {12, 35, 15, 22, 
           51}, {10, 51, 25}, {16, 25, 10, 25}, {7, 25, 20}, {10, 15, 25}, {
           27, 6, 4, 20, 25, 4}, {2, 4, 14}, {40, 53, 3, 0, 20, 2, 0, 51}, {
           12, 51, 16, 51}, {6, 51, 14}, {38, 34, 0, 14, 0, 12, 0, 25}, {38, 
           51, 0, 12, 0, 37}, {27, 7, 4, 25, 37, 5}, {2, 5, 4}, {12, 14, 12, 
           51}, {6, 51, 35}, {3, 3}, {12, 14, 15, 51}, {6, 51, 16}, {
           3, -20}, {10, 11, 25}, {27, 4, 4, 20, 25, 4}, {2, 4, 4}, {12, 35, 
           15, 51}, {6, 51, 35}, {3, 8}, {38, 34, 0, 35, 0, 12, 0, 25}, {38, 
           51, 0, 12, 0, 37}, {27, 3, 4, 25, 37, 5}, {2, 5, 4}, {12, 35, 15, 
           51}, {6, 51, 35}, {3, 1}, {25, 21, 35, 4}, {2, 4, 8}, {12, 35, 49, 
           51}, {34, 1, 3, 15, 51, 15, 2, 55}, {12, 35, 12, 51}, {34, 1, 3, 
           21, 51, 15, 2, 52}, {38, 34, 3, 52, 2, 48}, {39, 34, 3, 55, 2, 
           48}, {3, 1}, {12, 35, 12, 51}, {39, 34, 0, 51, 1, 51}, {3, 500}, {
           10, 11, 25}, {10, 15, 37}, {
           42, "RandomReal", 3, 0, 25, 3, 0, 37, 3, 0, 40}, {38, 46, 0, 21, 0,
            25}, {27, 3, 4, 40, 25, 3}, {2, 3, 324}, {
           42, "CopyTensor", 3, 1, 10, 3, 1, 55}, {
           42, "CopyTensor", 3, 1, 10, 3, 1, 50}, {
           42, "CopyTensor", 2, 1, 15, 2, 1, 51}, {38, 22, 0, 15, 0, 20}, {38,
            22, 0, 21, 0, 46}, {38, 22, 0, 18, 0, 51}, {34, 1, 3, 20, 46, 51, 
           2, 48}, {12, 27, 4, 12, 20}, {34, 1, 3, 27, 20, 15, 2, 53}, {38, 
           22, 3, 53, 1, 47}, {34, 1, 1, 7, 3, 53}, {
           42, "CoerceTensor", 2, 0, 18, 2, 1, 48, 3, 1, 49}, {
           42, "CoerceTensor", 2, 0, 18, 2, 1, 47, 3, 1, 39}, {
           42, "Join", 3, 1, 49, 3, 1, 39, 3, 1, 53, 3, 1, 52}, {41, 259, 3, 
           0, 21, 3, 1, 52, 3, 1, 48}, {
           42, "CopyTensor", 3, 1, 48, 3, 1, 50}, {6, 11, 29}, {6, 11, 40}, {
           6, 11, 47}, {42, "CopyTensor", 2, 1, 15, 2, 1, 48}, {6, 11, 50}, {
           6, 11, 20}, {42, "CopyTensor", 2, 1, 23, 2, 1, 39}, {38, 22, 0, 21,
            0, 57}, {18, 57, 48}, {12, 6, 48, 57}, {6, 57, 29}, {12, 27, 4, 
           12, 57}, {34, 1, 3, 27, 57, 15, 2, 47}, {38, 22, 3, 47, 1, 52}, {
           42, "TotalAll", 2, 1, 52, 2, 0, 26, 2, 0, 57}, {18, 57, 48}, {12, 
           5, 45, 48, 29, 57}, {6, 57, 40}, {
           42, "MinI", 2, 0, 15, 2, 0, 40, 2, 0, 57}, {
           42, "RandomInteger", 2, 0, 57, 2, 0, 40, 2, 0, 48}, {18, 29, 57}, {
           12, 48, 57, 48}, {6, 48, 47}, {25, 11, 47, 4}, {2, 4, 56}, {6, 11, 
           22}, {6, 11, 58}, {6, 4, 51}, {6, 11, 56}, {35, 51, 2, 52}, {6, 11,
            48}, {3, 2}, {36, 56, 48, 2, 52}, {4, 48, 51, -1}, {33, 52, 48}, {
           6, 11, 52}, {35, 48, 2, 47}, {6, 11, 57}, {3, 16}, {37, 52, 57, 2, 
           36}, {6, 36, 53}, {12, 27, 4, 12, 59}, {34, 1, 3, 27, 59, 15, 2, 
           53}, {38, 22, 3, 53, 1, 25}, {38, 25, 0, 53, 0, 59}, {38, 20, 0, 
           53, 0, 60}, {25, 59, 60, 5}, {2, 5, 5}, {12, 22, 15, 53}, {6, 53, 
           22}, {6, 57, 53}, {3, 2}, {6, 12, 53}, {36, 52, 53, 2, 47}, {4, 57,
            48, -15}, {6, 22, 56}, {6, 11, 52}, {35, 56, 2, 25}, {6, 11, 
           51}, {3, 11}, {12, 58, 15, 53}, {6, 53, 58}, {37, 47, 58, 2, 53}, {
           24, 53, 12, 5}, {2, 5, 4}, {12, 58, 15, 53}, {6, 53, 58}, {
           3, -5}, {37, 52, 58, 2, 53}, {36, 52, 53, 2, 25}, {4, 51, 
           56, -10}, {42, "CopyTensor", 2, 1, 25, 2, 1, 48}, {33, 48, 58}, {
           42, "MinI", 2, 0, 58, 2, 0, 47, 2, 0, 22}, {38, 48, 0, 22, 0, 
           58}, {6, 58, 50}, {38, 39, 0, 50, 0, 58}, {12, 58, 15, 58}, {39, 
           39, 0, 50, 0, 58}, {3, 3}, {
           42, "RandomInteger", 2, 0, 15, 2, 0, 9, 2, 0, 22}, {6, 22, 20}, {
           42, "Drop", 2, 1, 39, 2, 0, 11, 2, 0, 12, 2, 1, 25}, {
           42, "TotalAll", 2, 1, 25, 2, 0, 26, 2, 0, 58}, {
           42, "MinI", 2, 0, 20, 2, 0, 29, 2, 0, 22}, {34, 1, 3, 58, 22, 11, 
           2, 25}, {42, "Join", 2, 1, 25, 2, 1, 39, 2, 1, 54}, {
           42, "CopyTensor", 2, 1, 54, 2, 1, 51}, {
           42, "CopyTensor", 2, 2, 32, 2, 2, 54}, {38, 51, 0, 15, 0, 20}, {34,
            1, 2, 11, 20, 2, 49}, {33, 41, 47}, {6, 11, 40}, {35, 47, 2, 
           39}, {6, 11, 29}, {3, 14}, {38, 22, 0, 18, 0, 58}, {38, 22, 0, 15, 
           0, 22}, {37, 49, 29, 2, 36}, {12, 22, 15, 36, 22}, {38, 22, 0, 18, 
           0, 36}, {38, 22, 0, 15, 0, 52}, {37, 49, 29, 2, 53}, {12, 52, 15, 
           53, 52}, {38, 54, 0, 36, 0, 52, 0, 53}, {37, 41, 29, 2, 36}, {12, 
           53, 36, 53}, {39, 54, 0, 58, 0, 22, 0, 53}, {36, 40, 53, 2, 39}, {
           4, 29, 47, -13}, {38, 22, 0, 18, 0, 20}, {6, 20, 28}, {38, 35, 0, 
           28, 0, 20}, {38, 54, 0, 28, 1, 48}, {38, 7, 0, 28, 1, 25}, {
           42, "CoerceTensor", 2, 0, 18, 2, 1, 48, 3, 1, 52}, {
           42, "DotVV", 3, 1, 52, 3, 1, 25, 2, 0, 26, 3, 0, 40}, {19, 40, 
           25}, {10, 20, 40}, {13, 40, 25, 40}, {10, 11, 25}, {27, 6, 4, 40, 
           25, 4}, {2, 4, 122}, {42, "CopyTensor", 2, 2, 54, 2, 2, 32}, {10, 
           11, 40}, {10, 15, 25}, {
           42, "RandomReal", 3, 0, 40, 3, 0, 25, 3, 0, 37}, {40, 35, 3, 0, 37,
            3, 0, 40}, {19, 40, 37}, {40, 60, 3, 0, 36, 3, 0, 40}, {16, 37, 
           40, 37}, {34, 1, 1, 37, 3, 48}, {
           42, "CoerceTensor", 2, 0, 18, 2, 1, 51, 3, 1, 25}, {
           42, "Join", 3, 1, 25, 3, 1, 48, 3, 1, 52}, {44, 50, 52, 48}, {
           42, "CopyTensor", 3, 1, 48, 3, 1, 55}, {10, 11, 37}, {10, 15, 
           40}, {42, "RandomReal", 3, 0, 37, 3, 0, 40, 3, 0, 25}, {40, 35, 3, 
           0, 25, 3, 0, 37}, {19, 37, 25}, {40, 60, 3, 0, 36, 3, 0, 37}, {16, 
           25, 37, 25}, {34, 1, 1, 25, 3, 48}, {
           42, "CoerceTensor", 2, 0, 18, 2, 1, 51, 3, 1, 52}, {
           42, "Join", 3, 1, 52, 3, 1, 48, 3, 1, 25}, {44, 50, 25, 48}, {
           42, "CopyTensor", 3, 1, 48, 3, 1, 50}, {6, 15, 14}, {7, 21, 20}, {
           6, 21, 16}, {6, 42, 35}, {18, 16, 20}, {12, 35, 15, 20, 50}, {10, 
           50, 25}, {16, 25, 10, 25}, {7, 25, 20}, {10, 15, 25}, {27, 6, 4, 
           20, 25, 5}, {2, 5, 14}, {40, 53, 3, 0, 20, 2, 0, 50}, {12, 50, 16, 
           50}, {6, 50, 14}, {38, 34, 0, 14, 0, 12, 0, 25}, {38, 55, 0, 12, 0,
            37}, {27, 7, 4, 25, 37, 6}, {2, 6, 4}, {12, 14, 12, 50}, {6, 50, 
           35}, {3, 3}, {12, 14, 15, 50}, {6, 50, 16}, {3, -20}, {10, 11, 
           25}, {27, 4, 4, 20, 25, 5}, {2, 5, 4}, {12, 35, 15, 50}, {6, 50, 
           35}, {3, 8}, {38, 34, 0, 35, 0, 12, 0, 25}, {38, 55, 0, 12, 0, 
           37}, {27, 3, 4, 25, 37, 6}, {2, 6, 4}, {12, 35, 15, 50}, {6, 50, 
           35}, {3, 1}, {25, 21, 35, 5}, {2, 5, 8}, {12, 35, 49, 50}, {34, 1, 
           3, 15, 50, 15, 2, 48}, {12, 35, 12, 50}, {34, 1, 3, 21, 50, 15, 2, 
           25}, {38, 34, 3, 25, 2, 52}, {39, 34, 3, 48, 2, 52}, {3, 1}, {12, 
           35, 12, 50}, {39, 34, 0, 50, 1, 55}, {6, 15, 14}, {7, 21, 20}, {6, 
           15, 16}, {6, 42, 35}, {18, 16, 50}, {12, 35, 15, 50, 20}, {10, 20, 
           25}, {16, 25, 10, 25}, {7, 25, 20}, {10, 15, 25}, {27, 6, 4, 20, 
           25, 5}, {2, 5, 14}, {40, 53, 3, 0, 20, 2, 0, 20}, {12, 20, 16, 
           20}, {6, 20, 14}, {38, 34, 0, 14, 0, 12, 0, 25}, {38, 50, 0, 12, 0,
            37}, {27, 7, 4, 25, 37, 6}, {2, 6, 4}, {12, 14, 12, 20}, {6, 20, 
           35}, {3, 3}, {12, 14, 15, 20}, {6, 20, 16}, {3, -20}, {10, 11, 
           25}, {27, 4, 4, 20, 25, 5}, {2, 5, 4}, {12, 35, 15, 20}, {6, 20, 
           35}, {3, 8}, {38, 34, 0, 35, 0, 12, 0, 25}, {38, 50, 0, 12, 0, 
           37}, {27, 3, 4, 25, 37, 6}, {2, 6, 4}, {12, 35, 15, 20}, {6, 20, 
           35}, {3, 1}, {12, 35, 15, 20}, {34, 1, 3, 20, 12, 15, 2, 48}, {34, 
           1, 3, 35, 49, 15, 2, 52}, {38, 34, 3, 52, 2, 25}, {39, 34, 3, 48, 
           2, 25}, {39, 34, 0, 35, 1, 50}, {12, 42, 15, 20}, {6, 20, 42}, {3, 
           63}, {10, 11, 25}, {10, 15, 37}, {
           42, "RandomReal", 3, 0, 25, 3, 0, 37, 3, 0, 40}, {40, 35, 3, 0, 40,
            3, 0, 25}, {19, 25, 40}, {40, 60, 3, 0, 36, 3, 0, 25}, {16, 40, 
           25, 40}, {34, 1, 1, 40, 3, 25}, {
           42, "CoerceTensor", 2, 0, 18, 2, 1, 12, 3, 1, 48}, {
           42, "CoerceTensor", 2, 0, 18, 2, 1, 23, 3, 1, 52}, {
           42, "Join", 3, 1, 48, 3, 1, 52, 3, 1, 25, 3, 1, 47}, {44, 50, 47, 
           25}, {42, "CopyTensor", 3, 1, 25, 3, 1, 55}, {6, 15, 14}, {7, 21, 
           20}, {6, 21, 16}, {6, 42, 35}, {18, 16, 20}, {12, 35, 15, 20, 
           50}, {10, 50, 40}, {16, 40, 10, 40}, {7, 40, 20}, {10, 15, 40}, {
           27, 6, 4, 20, 40, 5}, {2, 5, 14}, {40, 53, 3, 0, 20, 2, 0, 50}, {
           12, 50, 16, 50}, {6, 50, 14}, {38, 34, 0, 14, 0, 12, 0, 40}, {38, 
           55, 0, 12, 0, 25}, {27, 7, 4, 40, 25, 6}, {2, 6, 4}, {12, 14, 12, 
           50}, {6, 50, 35}, {3, 3}, {12, 14, 15, 50}, {6, 50, 16}, {
           3, -20}, {10, 11, 40}, {27, 4, 4, 20, 40, 5}, {2, 5, 4}, {12, 35, 
           15, 50}, {6, 50, 35}, {3, 8}, {38, 34, 0, 35, 0, 12, 0, 40}, {38, 
           55, 0, 12, 0, 25}, {27, 3, 4, 40, 25, 6}, {2, 6, 4}, {12, 35, 15, 
           50}, {6, 50, 35}, {3, 1}, {25, 21, 35, 5}, {2, 5, 8}, {12, 35, 49, 
           50}, {34, 1, 3, 15, 50, 15, 2, 25}, {12, 35, 12, 50}, {34, 1, 3, 
           21, 50, 15, 2, 47}, {38, 34, 3, 47, 2, 48}, {39, 34, 3, 25, 2, 
           48}, {3, 1}, {12, 35, 12, 50}, {39, 34, 0, 50, 1, 55}, {3, 171}, {
           10, 11, 40}, {10, 15, 25}, {
           42, "RandomReal", 3, 0, 40, 3, 0, 25, 3, 0, 37}, {38, 46, 0, 18, 0,
            40}, {27, 3, 4, 37, 40, 4}, {2, 4, 18}, {38, 22, 0, 18, 0, 50}, {
           38, 22, 0, 15, 0, 20}, {38, 15, 0, 15, 0, 46}, {12, 20, 15, 46, 
           20}, {38, 22, 0, 18, 0, 46}, {38, 22, 0, 15, 0, 40}, {38, 15, 0, 
           15, 0, 53}, {12, 40, 15, 53, 40}, {38, 32, 0, 46, 0, 40, 0, 53}, {
           38, 42, 0, 15, 0, 46}, {12, 53, 46, 53}, {39, 32, 0, 50, 0, 20, 0, 
           53}, {38, 34, 3, 44, 2, 54}, {39, 34, 3, 43, 2, 54}, {41, 258, 2, 
           0, 42, 2, 0, 15, 2, 0, 50}, {6, 50, 42}, {3, 148}, {
           42, "CopyTensor", 3, 1, 10, 3, 1, 54}, {5, 0, 5}, {38, 22, 0, 15, 
           0, 47}, {38, 22, 0, 21, 0, 40}, {38, 22, 0, 18, 0, 53}, {34, 1, 3, 
           47, 40, 53, 2, 39}, {12, 27, 4, 12, 47}, {34, 1, 3, 27, 47, 15, 2, 
           49}, {38, 22, 3, 49, 1, 51}, {34, 1, 1, 7, 3, 49}, {
           42, "CoerceTensor", 2, 0, 18, 2, 1, 39, 3, 1, 50}, {
           42, "CoerceTensor", 2, 0, 18, 2, 1, 51, 3, 1, 55}, {
           42, "Join", 3, 1, 50, 3, 1, 55, 3, 1, 49, 3, 1, 25}, {41, 259, 3, 
           0, 21, 3, 1, 25, 3, 1, 39}, {
           42, "CopyTensor", 3, 1, 39, 3, 1, 54}, {
           42, "CopyTensor", 2, 2, 32, 2, 2, 39}, {38, 22, 0, 18, 0, 47}, {25,
            47, 3, 6}, {2, 6, 51}, {38, 22, 0, 18, 0, 47}, {38, 37, 0, 15, 0, 
           40}, {12, 47, 40, 47}, {38, 22, 0, 15, 0, 40}, {38, 16, 0, 15, 0, 
           53}, {12, 40, 15, 53, 40}, {38, 22, 0, 18, 0, 53}, {38, 37, 0, 15, 
           0, 50}, {12, 53, 50, 53}, {38, 22, 0, 15, 0, 50}, {38, 16, 0, 15, 
           0, 20}, {12, 50, 15, 20, 50}, {38, 39, 0, 53, 0, 50, 0, 20}, {38, 
           45, 0, 15, 0, 53}, {12, 20, 53, 20}, {39, 39, 0, 47, 0, 40, 0, 
           20}, {38, 22, 0, 18, 0, 47}, {38, 37, 0, 21, 0, 40}, {12, 47, 40, 
           47}, {38, 22, 0, 15, 0, 40}, {38, 16, 0, 21, 0, 53}, {12, 40, 15, 
           53, 40}, {38, 22, 0, 18, 0, 53}, {38, 37, 0, 21, 0, 50}, {12, 53, 
           50, 53}, {38, 22, 0, 15, 0, 50}, {38, 16, 0, 21, 0, 46}, {12, 50, 
           15, 46, 50}, {38, 39, 0, 53, 0, 50, 0, 46}, {38, 45, 0, 21, 0, 
           53}, {12, 46, 53, 46}, {39, 39, 0, 47, 0, 40, 0, 46}, {38, 22, 0, 
           18, 0, 47}, {6, 47, 39}, {38, 37, 0, 12, 0, 47}, {6, 47, 55}, {12, 
           39, 55, 47}, {6, 47, 31}, {38, 35, 0, 31, 0, 47}, {38, 39, 0, 31, 
           1, 25}, {38, 7, 0, 31, 1, 51}, {
           42, "CoerceTensor", 2, 0, 18, 2, 1, 25, 3, 1, 49}, {
           42, "DotVV", 3, 1, 49, 3, 1, 51, 2, 0, 26, 3, 0, 40}, {19, 40, 
           25}, {10, 47, 40}, {13, 40, 25, 40}, {10, 11, 25}, {27, 6, 4, 40, 
           25, 7}, {5, 7, 5}, {3, 1}, {2, 5, 16}, {
           42, "CopyTensor", 2, 2, 39, 2, 2, 32}, {10, 11, 40}, {10, 15, 
           25}, {42, "RandomReal", 3, 0, 40, 3, 0, 25, 3, 0, 37}, {40, 35, 3, 
           0, 37, 3, 0, 40}, {19, 40, 37}, {40, 60, 3, 0, 36, 3, 0, 40}, {16, 
           37, 40, 37}, {34, 1, 1, 37, 3, 25}, {
           42, "CoerceTensor", 2, 0, 18, 2, 1, 26, 3, 1, 51}, {
           42, "CoerceTensor", 2, 0, 18, 2, 1, 23, 3, 1, 49}, {
           42, "Join", 3, 1, 51, 3, 1, 49, 3, 1, 25, 3, 1, 50}, {44, 54, 50, 
           25}, {42, "CopyTensor", 3, 1, 25, 3, 1, 54}, {3, 14}, {10, 11, 
           37}, {10, 15, 40}, {
           42, "RandomReal", 3, 0, 37, 3, 0, 40, 3, 0, 25}, {40, 35, 3, 0, 25,
            3, 0, 37}, {19, 37, 25}, {40, 60, 3, 0, 36, 3, 0, 37}, {16, 25, 
           37, 25}, {34, 1, 1, 25, 3, 25}, {
           42, "CoerceTensor", 2, 0, 18, 2, 1, 12, 3, 1, 50}, {
           42, "CoerceTensor", 2, 0, 18, 2, 1, 23, 3, 1, 51}, {
           42, "Join", 3, 1, 50, 3, 1, 51, 3, 1, 25, 3, 1, 49}, {44, 54, 49, 
           25}, {42, "CopyTensor", 3, 1, 25, 3, 1, 54}, {6, 15, 14}, {7, 21, 
           20}, {6, 21, 16}, {6, 42, 35}, {18, 16, 20}, {12, 35, 15, 20, 
           46}, {10, 46, 25}, {16, 25, 10, 25}, {7, 25, 20}, {10, 15, 25}, {
           27, 6, 4, 20, 25, 6}, {2, 6, 14}, {40, 53, 3, 0, 20, 2, 0, 46}, {
           12, 46, 16, 46}, {6, 46, 14}, {38, 34, 0, 14, 0, 12, 0, 25}, {38, 
           54, 0, 12, 0, 37}, {27, 7, 4, 25, 37, 7}, {2, 7, 4}, {12, 14, 12, 
           46}, {6, 46, 35}, {3, 3}, {12, 14, 15, 46}, {6, 46, 16}, {
           3, -20}, {10, 11, 25}, {27, 4, 4, 20, 25, 6}, {2, 6, 4}, {12, 35, 
           15, 46}, {6, 46, 35}, {3, 8}, {38, 34, 0, 35, 0, 12, 0, 25}, {38, 
           54, 0, 12, 0, 37}, {27, 3, 4, 25, 37, 7}, {2, 7, 4}, {12, 35, 15, 
           46}, {6, 46, 35}, {3, 1}, {25, 21, 35, 6}, {2, 6, 8}, {12, 35, 49, 
           46}, {34, 1, 3, 15, 46, 15, 2, 49}, {12, 35, 12, 46}, {34, 1, 3, 
           21, 46, 15, 2, 50}, {38, 34, 3, 50, 2, 51}, {39, 34, 3, 49, 2, 
           51}, {3, 1}, {12, 35, 12, 46}, {39, 34, 0, 46, 1, 54}, {12, 27, 4, 
           12, 46}, {34, 1, 3, 15, 46, 15, 2, 46}, {38, 34, 0, 15, 3, 46, 1, 
           39}, {40, 53, 3, 1, 39, 2, 1, 46}, {
           42, "CopyTensor", 2, 1, 46, 2, 1, 22}, {12, 27, 4, 12, 40}, {34, 1,
            3, 27, 40, 15, 2, 25}, {38, 22, 3, 25, 1, 46}, {38, 22, 0, 18, 0, 
           40}, {38, 1, 0, 40, 0, 46}, {34, 1, 3, 15, 46, 15, 2, 25}, {38, 46,
            3, 25, 1, 39}, {6, 11, 46}, {33, 39, 47}, {6, 11, 50}, {3, 4}, {
           37, 39, 50, 2, 53}, {12, 46, 53, 29}, {6, 29, 46}, {4, 50, 
           47, -3}, {6, 46, 44}, {10, 12, 25}, {13, 6, 25, 37}, {40, 60, 3, 0,
            37, 3, 0, 25}, {16, 6, 25, 37}, {12, 44, 15, 46}, {38, 22, 0, 21, 
           0, 50}, {41, 263, 2, 0, 50, 3, 0, 10, 3, 0, 25}, {10, 21, 40}, {40,
            60, 3, 0, 40, 3, 0, 42}, {16, 25, 42, 25}, {40, 34, 3, 0, 25, 3, 
           0, 42}, {10, 25, 25}, {16, 25, 42, 25}, {40, 60, 3, 0, 25, 3, 0, 
           42}, {10, 46, 25}, {16, 25, 42, 25}, {16, 9, 25, 42}, {40, 34, 3, 
           0, 42, 3, 0, 25}, {19, 25, 42}, {40, 34, 3, 0, 42, 3, 0, 25}, {10, 
           12, 42}, {40, 34, 3, 0, 42, 3, 0, 40}, {19, 40, 42}, {13, 25, 42, 
           25}, {10, 21, 42}, {16, 42, 37, 25, 42}, {7, 42, 30}, {38, 22, 3, 
           29, 1, 25}, {45, 25, 0, 25}, {41, 263, 3, 1, 40, 2, 1, 25, 3, 1, 
           54}, {38, 22, 0, 18, 0, 20}, {38, 1, 0, 20, 0, 46}, {34, 1, 3, 15, 
           46, 15, 2, 25}, {38, 54, 3, 25, 1, 39}, {7, 21, 37}, {33, 39, 
           50}, {6, 11, 40}, {3, 4}, {37, 39, 40, 3, 42}, {16, 37, 42, 25}, {
           7, 25, 37}, {4, 40, 50, -3}, {7, 37, 22}, {19, 2, 37}, {7, 37, 
           29}, {38, 22, 0, 18, 0, 40}, {6, 40, 13}, {10, 21, 37}, {40, 60, 3,
            0, 37, 3, 0, 25}, {7, 25, 26}, {16, 29, 26, 25}, {7, 25, 31}, {40,
            34, 3, 0, 31, 3, 0, 25}, {7, 25, 28}, {38, 4, 0, 13, 0, 25}, {13, 
           30, 14, 37}, {16, 29, 37, 42}, {40, 10, 3, 0, 42, 3, 0, 37}, {10, 
           12, 42}, {13, 37, 42, 37}, {16, 3, 28, 37, 42}, {19, 42, 37}, {40, 
           34, 3, 0, 37, 3, 0, 42}, {16, 25, 42, 25}, {38, 5, 0, 13, 0, 42}, {
           13, 30, 17, 37}, {16, 29, 37, 40}, {40, 10, 3, 0, 40, 3, 0, 37}, {
           10, 12, 40}, {13, 37, 40, 37}, {16, 3, 28, 37, 40}, {19, 40, 37}, {
           40, 34, 3, 0, 37, 3, 0, 40}, {16, 42, 40, 42}, {38, 6, 0, 13, 0, 
           40}, {13, 30, 19, 37}, {16, 29, 37, 39}, {40, 10, 3, 0, 39, 3, 0, 
           37}, {10, 12, 39}, {13, 37, 39, 37}, {16, 3, 28, 37, 39}, {19, 39, 
           37}, {40, 34, 3, 0, 37, 3, 0, 39}, {16, 40, 39, 40}, {34, 1, 3, 25,
            42, 40, 3, 46}, {38, 33, 0, 13, 0, 25}, {16, 25, 22, 25}, {34, 1, 
           1, 25, 3, 39}, {42, "Join", 3, 1, 46, 3, 1, 39, 3, 1, 54}, {
           42, "CopyTensor", 3, 1, 54, 3, 1, 28}, {
           42, "Accumulate", 3, 1, 28, 2, 0, 26, 3, 1, 54}, {
           42, "CopyTensor", 3, 1, 54, 3, 1, 38}, {38, 38, 0, 12, 0, 25}, {7, 
           25, 36}, {40, 60, 3, 0, 36, 3, 0, 25}, {41, 259, 3, 0, 25, 3, 1, 
           28, 3, 1, 54}, {42, "CopyTensor", 3, 1, 54, 3, 1, 18}, {38, 22, 0, 
           21, 0, 40}, {18, 40, 46}, {12, 6, 46, 40}, {6, 40, 17}, {38, 22, 0,
            12, 0, 40}, {18, 40, 46}, {12, 5, 46, 40}, {6, 40, 32}, {38, 22, 
           3, 30, 1, 54}, {42, "TotalAll", 2, 1, 54, 2, 0, 26, 2, 0, 40}, {18,
            40, 46}, {12, 45, 46, 40}, {6, 40, 54}, {12, 17, 32, 54, 40}, {6, 
           40, 41}, {34, 1, 3, 54, 32, 17, 2, 54}, {10, 41, 25}, {40, 60, 3, 
           0, 25, 3, 0, 42}, {41, 259, 3, 0, 42, 2, 1, 54, 3, 1, 46}, {
           42, "CopyTensor", 3, 1, 46, 3, 1, 27}, {
           42, "StuffBag", 3, 0, 12, 3, 2, 34, 6, 0, 17}, {
           42, "CoerceTensor", 2, 0, 18, 2, 2, 32, 3, 2, 46}, {
           42, "StuffBag", 3, 0, 38, 3, 2, 46, 6, 0, 17}, {
           42, "StuffBag", 3, 0, 16, 3, 1, 18, 6, 0, 17}, {
           42, "StuffBag", 3, 0, 27, 3, 1, 27, 6, 0, 17}, {10, 42, 42}, {
           42, "StuffBagScalar", 3, 0, 41, 3, 0, 42, 6, 0, 17}, {
           42, "StuffBagScalar", 3, 0, 15, 3, 0, 7, 6, 0, 17}, {3, -994}, {
           42, "BagPart", 3, 0, 38, 2, 0, 21, 3, 1, 46}, {
           42, "StuffBag", 3, 0, 12, 3, 1, 46, 6, 0, 17}, {
           42, "BagPart", 3, 0, 16, 2, 0, 21, 3, 1, 46}, {
           42, "StuffBag", 3, 0, 12, 3, 1, 46, 6, 0, 17}, {
           42, "BagPart", 3, 0, 27, 2, 0, 21, 3, 1, 46}, {
           42, "StuffBag", 3, 0, 12, 3, 1, 46, 6, 0, 17}, {
           42, "BagPart", 3, 0, 41, 2, 0, 21, 3, 1, 46}, {
           42, "StuffBag", 3, 0, 12, 3, 1, 46, 6, 0, 17}, {
           42, "BagPart", 3, 0, 15, 2, 0, 21, 3, 1, 46}, {
           42, "StuffBag", 3, 0, 12, 3, 1, 46, 6, 0, 17}, {10, 1, 42}, {
           42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {10, 4, 42}, {
           42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {12, 24, 15, 
           40}, {10, 40, 42}, {
           42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {
           42, "Dimensions", 3, 2, 34, 2, 1, 46}, {
           42, "CoerceTensor", 2, 0, 18, 2, 1, 46, 3, 1, 54}, {
           42, "StuffBag", 3, 0, 12, 3, 1, 54, 6, 0, 17}, {12, 24, 15, 40}, {
           10, 40, 42}, {
           42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {
           42, "Dimensions", 2, 2, 32, 2, 1, 46}, {
           42, "CoerceTensor", 2, 0, 18, 2, 1, 46, 3, 1, 54}, {
           42, "StuffBag", 3, 0, 12, 3, 1, 54, 6, 0, 17}, {12, 24, 15, 40}, {
           10, 40, 42}, {
           42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {
           42, "Dimensions", 3, 1, 18, 2, 1, 46}, {
           42, "CoerceTensor", 2, 0, 18, 2, 1, 46, 3, 1, 54}, {
           42, "StuffBag", 3, 0, 12, 3, 1, 54, 6, 0, 17}, {12, 24, 15, 40}, {
           10, 40, 42}, {
           42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {
           42, "Dimensions", 3, 1, 27, 2, 1, 46}, {
           42, "CoerceTensor", 2, 0, 18, 2, 1, 46, 3, 1, 54}, {
           42, "StuffBag", 3, 0, 12, 3, 1, 54, 6, 0, 17}, {12, 24, 15, 40}, {
           10, 40, 42}, {
           42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {12, 24, 15, 
           40}, {10, 40, 42}, {
           42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {34, 1, 1, 34,
            0, 46}, {42, "Dimensions", 3, 3, 46, 2, 1, 54}, {33, 54, 40}, {10,
            40, 42}, {42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {
           34, 1, 1, 32, 0, 54}, {42, "Dimensions", 2, 3, 54, 2, 1, 46}, {33, 
           46, 40}, {10, 40, 42}, {
           42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {34, 1, 1, 18,
            0, 46}, {42, "Dimensions", 3, 2, 46, 2, 1, 54}, {33, 54, 40}, {10,
            40, 42}, {42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {
           34, 1, 1, 27, 0, 54}, {42, "Dimensions", 3, 2, 54, 2, 1, 46}, {33, 
           46, 40}, {10, 40, 42}, {
           42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {34, 1, 1, 42,
            2, 46}, {42, "Dimensions", 2, 1, 46, 2, 1, 54}, {33, 54, 40}, {10,
            40, 42}, {42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {
           34, 1, 1, 7, 3, 54}, {42, "Dimensions", 3, 1, 54, 2, 1, 46}, {33, 
           46, 40}, {10, 40, 42}, {
           42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {10, 11, 
           42}, {42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {10, 11,
            42}, {42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {10, 
           26, 42}, {42, "StuffBagScalar", 3, 0, 12, 3, 0, 42, 6, 0, 17}, {
           42, "BagPart", 3, 0, 12, 2, 0, 21, 3, 1, 46}, {1}}, 
          
          Function[{$CellContext`NtotE, $CellContext`Nmax, \
$CellContext`scegli, $CellContext`kmax, $CellContext`imax, \
$CellContext`maxsemidrivermut, $CellContext`maxnondrivermut, \
$CellContext`signature, $CellContext`compkeystep, $CellContext`expG, \
$CellContext`cntG, $CellContext`ctmax, $CellContext`tmax, \
$CellContext`maxmjump, $CellContext`maxtjump, $CellContext`Aasym, \
$CellContext`Asym, $CellContext`Aapop, $CellContext`Apass, $CellContext`cen, \
$CellContext`wide, $CellContext`slope, $CellContext`ratio}, 
           
           Block[{Compile`$35, Compile`$36, Compile`$37, Compile`$38, 
             Compile`$88, Compile`$89, Compile`$90, Compile`$91, Compile`$92, 
             Compile`$93, Compile`$94, Compile`$137, Compile`$135, 
             Compile`$138, Compile`$139, Compile`$140, Compile`$252, 
             Compile`$392, Compile`$522, Compile`$523, Compile`$524, 
             Compile`$611, Compile`$609, Compile`$612, Compile`$613, 
             Compile`$614}, 
            
            Block[{$CellContext`Ntot, Empty = 
              0, $CellContext`Ncell = {{0}}, $CellContext`ord = {
               1}, $CellContext`times = {
               0.}, $CellContext`state = {{0, 0.}}, $CellContext`Ccell = {0, 
               0, 0}, $CellContext`t = 0., $CellContext`ct = 
              0, $CellContext`maxdrivermut, $CellContext`smv0, \
$CellContext`state0, $CellContext`sstate0, $CellContext`Cmut, \
$CellContext`genes, $CellContext`krates = {1.}, $CellContext`i = 
              0, $CellContext`m = 
              0, $CellContext`mv = {0, 0, 0, 0, 0}, $CellContext`p = 
              0.1, $CellContext`r = 
              0.1, $CellContext`mv0 = {0}, $CellContext`imkmv = {
               0}, $CellContext`in = 0, $CellContext`fn = 0, $CellContext`mid = 
              0, $CellContext`midr = 0., $CellContext`CT = 
              False, $CellContext`statetmp1, $CellContext`statetmp2, \
$CellContext`NewNcell, $CellContext`\[CapitalDelta]i = {0, 
               0}, $CellContext`\[CapitalDelta]Nc = {0, 
               0}, $CellContext`\[CapitalDelta]Nc2 = {0, 
               0}, $CellContext`\[CapitalDelta]k = {0, 
               0}, $CellContext`chooseiorm = {
               10}, $CellContext`ratescum, $CellContext`ratesn, \
$CellContext`stateslist, $CellContext`Ncslist, $CellContext`probslist, \
$CellContext`spprobslist, $CellContext`Ntslist, $CellContext`tslist, \
$CellContext`key, $CellContext`ss, $CellContext`keyg, $CellContext`rates, \
$CellContext`rcum1, $CellContext`nondriverspace, \
$CellContext`semidriverspace, $CellContext`driverspace, $CellContext`space, \
$CellContext`spaceprob}, $CellContext`maxdrivermut = $CellContext`imax - 
               1; $CellContext`mv0 = 
              Table[0, {$CellContext`i, $CellContext`imax}]; \
$CellContext`state0 = 
              Table[0, {$CellContext`i, $CellContext`imax + 
                 3}]; $CellContext`Cmut = Join[
                Table[
                1, {$CellContext`i, $CellContext`maxdrivermut}], \
{$CellContext`maxsemidrivermut}]; $CellContext`genes = \
$CellContext`expG/$CellContext`cntG; $CellContext`krates = $CellContext`Apass 
               Join[
                 Table[1, {$CellContext`i, $CellContext`kmax - 1}], {
                 0}]; $CellContext`Ntot = $CellContext`NtotE; 
             Empty = $CellContext`Nmax - $CellContext`Ntot - \
$CellContext`scegli; $CellContext`Ncell = 
              Join[{{$CellContext`Ntot, 0, 0, 0, 0}}, 
                
                Table[$CellContext`mv0, {$CellContext`l, 1, $CellContext`kmax - 
                  1}]]; $CellContext`state = 
              Block[{$CellContext`m = 0, $CellContext`k = 
                 1, $CellContext`mv = $CellContext`mv0, $CellContext`s = 
                 0., $CellContext`rnn = {0.}}, $CellContext`s = 
                 2 (E/(E - 1)) (Exp[-Exp[(-10.) ((Apply[Plus, 
                    Part[$CellContext`mv, 
                    Span[1, 
                    Part[$CellContext`compkeystep, $CellContext`k]]]] + 1)/(
                    10 Exp[$CellContext`m^0.5/2]))]] - 1/
                   E); $CellContext`rnn = (Compile`$35 = -$CellContext`wide; 
                  Compile`$36 = 2^(-1); Compile`$37 = Compile`$35 Compile`$36; 
                  Compile`$38 = E^Compile`$37; Accumulate[
                    
                    Join[{Part[$CellContext`Aasym, $CellContext`k] 
                    Exp[-($CellContext`slope 
                    Compile`$38 (Cosh[Compile`$35 ($CellContext`s - 2.)] - 
                    1))], Part[$CellContext`Asym, $CellContext`k] 
                    Exp[-($CellContext`slope 
                    Compile`$38 (Cosh[Compile`$35 ($CellContext`s - 1.)] - 
                    1))], Part[$CellContext`Aapop, $CellContext`k] 
                    Exp[-($CellContext`slope 
                    Compile`$38 (Cosh[Compile`$35 ($CellContext`s - 0.5)] - 
                    1))]}, {
                    Part[$CellContext`krates, $CellContext`k] Apply[Times, 
                    
                    Part[$CellContext`genes^($CellContext`mv \
$CellContext`signature), 
                    Span[1, 
                    Part[$CellContext`compkeystep, $CellContext`k]]]]}]]); 
                Join[
                  Table[
                  1. Join[{0, 0, 1}, $CellContext`mv0], {$CellContext`k, 
                    1, $CellContext`Nmax + 2}], (-Log[
                    RandomReal[{0, 1}, {$CellContext`Nmax + 2, 1}]])/
                   Part[$CellContext`rnn, -1] + $CellContext`t, 
                  2]]; $CellContext`Ccell = (Compile`$88 = -$CellContext`Ntot; 
               Compile`$89 = -Empty; 
               Compile`$90 = $CellContext`Nmax + Compile`$88 + Compile`$89; 
               Compile`$91 = 2^(-1); Compile`$92 = Compile`$90 Compile`$91; 
               Compile`$93 = Floor[Compile`$92]; 
               Compile`$94 = Max[0, Compile`$93]; {
                 Floor[$CellContext`Ntot + Empty], Compile`$94, 
                 Compile`$94}); $CellContext`times = Part[
                Transpose[$CellContext`state], -1]; $CellContext`ord = 
              Ordering[$CellContext`times]; $CellContext`state = 
              Part[$CellContext`state, $CellContext`ord]; $CellContext`imkmv = 
              IntegerPart[
                Part[$CellContext`state, 1, 
                 Span[1, 4 + $CellContext`imax - 1]]]; $CellContext`key = 
              Apply[Plus, 
                Part[
                 Part[$CellContext`imkmv, 
                  Span[4, -1]], 
                 Span[1, 
                  Part[$CellContext`compkeystep, 
                   Part[$CellContext`imkmv, 3]]]]]; $CellContext`ss = 
              2 (E/(E - 1)) (
                Exp[-Exp[(-10.) (($CellContext`key + 1)/(10 
                    Exp[Part[$CellContext`imkmv, 2]^0.5/2]))]] - 1/
                E); $CellContext`keyg = Apply[Times, 
                Part[$CellContext`genes^(Part[$CellContext`imkmv, 
                    Span[4, -1]] $CellContext`signature), 
                 Span[1, 
                  Part[$CellContext`compkeystep, 
                   Part[$CellContext`imkmv, 3]]]]]; $CellContext`rates = (
               Compile`$137 = -$CellContext`wide; 
               Compile`$135 = Part[$CellContext`imkmv, 3]; 
               Compile`$138 = 2^(-1); 
               Compile`$139 = Compile`$137 Compile`$138; 
               Compile`$140 = E^Compile`$139; 
               Join[{Part[$CellContext`Aasym, Compile`$135] 
                  Exp[-($CellContext`slope 
                    Compile`$140 (Cosh[Compile`$137 ($CellContext`ss - 2.)] - 
                    1))], Part[$CellContext`Asym, Compile`$135] 
                  Exp[-($CellContext`slope 
                    Compile`$140 (Cosh[Compile`$137 ($CellContext`ss - 1.)] - 
                    1))], Part[$CellContext`Aapop, Compile`$135] 
                  Exp[-($CellContext`slope 
                    Compile`$140 (Cosh[Compile`$137 ($CellContext`ss - 0.5)] - 
                    1))]}, {
                 Part[$CellContext`krates, 
                    Compile`$135] $CellContext`keyg}]); $CellContext`ratescum = 
              Accumulate[$CellContext`rates]; $CellContext`rcum1 = 
              Part[$CellContext`ratescum, -1]; $CellContext`ratesn = \
$CellContext`rates/$CellContext`rcum1; $CellContext`nondriverspace = \
$CellContext`maxnondrivermut - 
               Part[$CellContext`imkmv, 
                2]; $CellContext`semidriverspace = \
$CellContext`maxsemidrivermut - 
               Part[$CellContext`imkmv, -1]; $CellContext`driverspace = \
$CellContext`maxdrivermut - Total[
                Part[$CellContext`imkmv, 
                 Span[
                 4, -2]]]; $CellContext`space = $CellContext`nondriverspace + \
$CellContext`semidriverspace + $CellContext`driverspace; \
$CellContext`spaceprob = {$CellContext`driverspace, \
$CellContext`semidriverspace, $CellContext`nondriverspace}/$CellContext`space; \
$CellContext`stateslist = Internal`Bag[
                Most[{1.}]]; $CellContext`Ncslist = Internal`Bag[
                Most[{1.}]]; $CellContext`probslist = Internal`Bag[
                Most[{1.}]]; $CellContext`spprobslist = Internal`Bag[
                Most[{1.}]]; $CellContext`Ntslist = Internal`Bag[
                Most[{1.}]]; $CellContext`tslist = Internal`Bag[
                Most[{1.}]]; 
             Internal`StuffBag[$CellContext`stateslist, $CellContext`state, 
               2]; Internal`StuffBag[$CellContext`Ncslist, $CellContext`Ncell,
                2]; Internal`StuffBag[$CellContext`probslist, \
$CellContext`ratesn, 2]; 
             Internal`StuffBag[$CellContext`spprobslist, \
$CellContext`spaceprob, 2]; 
             Internal`StuffBag[$CellContext`Ntslist, $CellContext`Ntot]; 
             Internal`StuffBag[$CellContext`tslist, $CellContext`t]; While[
               And[
               Part[$CellContext`state, 
                  1, -1] < $CellContext`tmax, $CellContext`ct < \
$CellContext`ctmax, $CellContext`Ntot > 0], 
               AddTo[$CellContext`ct, 1]; $CellContext`t = 
                Part[$CellContext`state, 1, -1]; 
               Block[{$CellContext`probc}, $CellContext`probc = 
                  Accumulate[$CellContext`ratesn]; 
                 Which[RandomReal[{0, 1}] < Part[$CellContext`probc, 1], 
                   
                   Block[{$CellContext`statetmp1 = {
                    0.}, $CellContext`statetmp2 = {
                    0.}, $CellContext`chooseiorm = {
                    0}, $CellContext`\[CapitalDelta]i, $CellContext`\
\[CapitalDelta]Nc, $CellContext`NewNcell, $CellContext`CT}, \
$CellContext`statetmp2 = 1. Join[{
                    Part[$CellContext`imkmv, 1], 
                    Part[$CellContext`imkmv, 2], 
                    Part[$CellContext`imkmv, 3]}, 
                    Part[$CellContext`imkmv, 
                    Span[
                    4, 4 + $CellContext`imax - 
                    1]], {$CellContext`t}]; $CellContext`chooseiorm = 
                    Block[{$CellContext`nondriverspace = 
                    0, $CellContext`space = 0, $CellContext`currentmut = 
                    0, $CellContext`range = {0}, $CellContext`mut = 
                    0, $CellContext`gm = 
                    0, $CellContext`dmv = $CellContext`mv0}, \
$CellContext`nondriverspace = $CellContext`maxnondrivermut - 
                    Part[$CellContext`imkmv, 
                    2]; $CellContext`space = $CellContext`maxsemidrivermut + \
$CellContext`maxdrivermut - Total[
                    Part[$CellContext`imkmv, 
                    Span[
                    4, 4 + $CellContext`imax - 
                    1]]] + $CellContext`nondriverspace; \
$CellContext`currentmut = RandomInteger[{
                    Min[
                    1, $CellContext`space], $CellContext`space}] - \
$CellContext`nondriverspace; 
                    If[$CellContext`currentmut > 
                    0, $CellContext`range = Select[
                    Range[$CellContext`imax], Part[
                    Part[$CellContext`imkmv, 
                    Span[4, 4 + $CellContext`imax - 1]], #] < 
                    Part[$CellContext`Cmut, #]& ]; $CellContext`mut = 
                    Part[$CellContext`range, 
                    Min[
                    Length[$CellContext`range], $CellContext`currentmut]]; 
                    AddTo[
                    Part[$CellContext`dmv, $CellContext`mut], 
                    1], $CellContext`gm = IntegerPart[
                    RandomInteger[{1, $CellContext`maxmjump}]]]; Join[{
                    Total[
                    Most[$CellContext`dmv]], 
                    Min[$CellContext`gm, $CellContext`nondriverspace], 
                    0}, $CellContext`dmv]]; $CellContext`NewNcell = \
$CellContext`Ncell; $CellContext`\[CapitalDelta]i = {0, 
                    
                    First[$CellContext`chooseiorm]}; $CellContext`\
\[CapitalDelta]Nc = {0, 1}; MapThread[(Part[$CellContext`NewNcell, 
                    Part[$CellContext`imkmv, 3], Part[$CellContext`imkmv, 1] + 
                    1 + #] = Part[$CellContext`NewNcell, 
                    Part[$CellContext`imkmv, 3], Part[$CellContext`imkmv, 1] + 
                    1 + #] + #2)& , {$CellContext`\[CapitalDelta]i, \
$CellContext`\[CapitalDelta]Nc}]; $CellContext`CT = (
                    Compile`$252 = Part[$CellContext`imkmv, 3]; 
                    Part[$CellContext`Ccell, Compile`$252] - Dot[
                    Part[$CellContext`NewNcell, Compile`$252], 
                    Part[$CellContext`ratio, Compile`$252]] >= 0); 
                    If[$CellContext`CT, $CellContext`Ncell = \
$CellContext`NewNcell; $CellContext`statetmp1 = $CellContext`statetmp2 + 
                    Join[{0, 0, 0}, $CellContext`mv0, {(-Log[
                    
                    RandomReal[{0, 
                    1}]])/$CellContext`rcum1}]; $CellContext`statetmp2 = \
$CellContext`statetmp2 + Join[$CellContext`chooseiorm, {(-Log[
                    RandomReal[{0, 
                    1}]])/$CellContext`rcum1}]; ($CellContext`mid = 
                    1; $CellContext`midr = 1.; $CellContext`in = 
                    2; $CellContext`fn = $CellContext`Ntot; 
                    While[$CellContext`midr = ($CellContext`fn + 
                    1 - $CellContext`in) 0.5; $CellContext`midr >= 
                    1, $CellContext`mid = 
                    IntegerPart[$CellContext`midr] + $CellContext`in; 
                    If[Part[$CellContext`state, $CellContext`mid, -1] > 
                    Part[$CellContext`statetmp1, -1], $CellContext`fn = \
$CellContext`mid - 1, $CellContext`in = $CellContext`mid + 1]]; 
                    If[$CellContext`midr <= 0, 
                    AddTo[$CellContext`fn, 1], 
                    If[
                    Part[$CellContext`state, $CellContext`fn, -1] < 
                    Part[$CellContext`statetmp1, -1], 
                    AddTo[$CellContext`fn, 1]]]; (
                    If[$CellContext`fn > 2, Part[$CellContext`state, 
                    Span[1, $CellContext`fn - 2]] = Part[$CellContext`state, 
                    Span[2, $CellContext`fn - 1]]]; 
                    Part[$CellContext`state, $CellContext`fn - 
                    1] = $CellContext`statetmp1)); ($CellContext`mid = 
                    1; $CellContext`midr = 1.; $CellContext`in = 
                    1; $CellContext`fn = $CellContext`Ntot; 
                    While[$CellContext`midr = ($CellContext`fn + 
                    1 - $CellContext`in) 0.5; $CellContext`midr >= 
                    1, $CellContext`mid = 
                    IntegerPart[$CellContext`midr] + $CellContext`in; 
                    If[Part[$CellContext`state, $CellContext`mid, -1] > 
                    Part[$CellContext`statetmp2, -1], $CellContext`fn = \
$CellContext`mid - 1, $CellContext`in = $CellContext`mid + 1]]; 
                    If[$CellContext`midr <= 0, 
                    AddTo[$CellContext`fn, 1], 
                    If[
                    Part[$CellContext`state, $CellContext`fn, -1] < 
                    Part[$CellContext`statetmp2, -1], 
                    AddTo[$CellContext`fn, 1]]]; (Part[$CellContext`state, 
                    Span[$CellContext`fn + 1, -1]] = 
                    Part[$CellContext`state, 
                    Span[$CellContext`fn, -2]]; 
                    Part[$CellContext`state, $CellContext`fn] = \
$CellContext`statetmp2)); AddTo[$CellContext`Ntot, 1]; 
                    Null, $CellContext`statetmp1 = $CellContext`statetmp2 + 
                    Join[{0, 0, 0}, $CellContext`mv0, {(-Log[
                    
                    RandomReal[{0, 
                    1}]])/$CellContext`rcum1}]; ($CellContext`mid = 
                    1; $CellContext`midr = 1.; $CellContext`in = 
                    2; $CellContext`fn = $CellContext`Ntot; 
                    While[$CellContext`midr = ($CellContext`fn + 
                    1 - $CellContext`in) 0.5; $CellContext`midr >= 
                    1, $CellContext`mid = 
                    IntegerPart[$CellContext`midr] + $CellContext`in; 
                    If[Part[$CellContext`state, $CellContext`mid, -1] > 
                    Part[$CellContext`statetmp1, -1], $CellContext`fn = \
$CellContext`mid - 1, $CellContext`in = $CellContext`mid + 1]]; 
                    If[$CellContext`midr <= 0, 
                    AddTo[$CellContext`fn, 1], 
                    If[
                    Part[$CellContext`state, $CellContext`fn, -1] < 
                    Part[$CellContext`statetmp1, -1], 
                    AddTo[$CellContext`fn, 1]]]; (
                    If[$CellContext`fn > 2, Part[$CellContext`state, 
                    Span[1, $CellContext`fn - 2]] = Part[$CellContext`state, 
                    Span[2, $CellContext`fn - 1]]]; 
                    Part[$CellContext`state, $CellContext`fn - 
                    1] = $CellContext`statetmp1)); Null]; Null], 
                   RandomReal[{0, 1}] < Part[$CellContext`probc, 2], 
                   
                   Block[{$CellContext`statetmp1 = {
                    0.}, $CellContext`statetmp2 = {
                    0.}, $CellContext`chooseiorm = {
                    0}, $CellContext`\[CapitalDelta]i, $CellContext`\
\[CapitalDelta]Nc, $CellContext`NewNcell, $CellContext`CT}, \
$CellContext`statetmp2 = 1. Join[{
                    Part[$CellContext`imkmv, 1], 
                    Part[$CellContext`imkmv, 2], 
                    Part[$CellContext`imkmv, 3]}, 
                    Part[$CellContext`imkmv, 
                    Span[
                    4, 4 + $CellContext`imax - 
                    1]], {$CellContext`t}]; $CellContext`chooseiorm = 
                    Block[{$CellContext`nondriverspace = 
                    0, $CellContext`space = 0, $CellContext`currentmut = 
                    0, $CellContext`range = {0}, $CellContext`mut = 
                    0, $CellContext`gm = 
                    0, $CellContext`dmv = $CellContext`mv0}, \
$CellContext`nondriverspace = $CellContext`maxnondrivermut - 
                    Part[$CellContext`imkmv, 
                    2]; $CellContext`space = $CellContext`maxsemidrivermut + \
$CellContext`maxdrivermut - Total[
                    Part[$CellContext`imkmv, 
                    Span[
                    4, 4 + $CellContext`imax - 
                    1]]] + $CellContext`nondriverspace; \
$CellContext`currentmut = RandomInteger[{
                    Min[
                    1, $CellContext`space], $CellContext`space}] - \
$CellContext`nondriverspace; 
                    If[$CellContext`currentmut > 
                    0, $CellContext`range = Select[
                    Range[$CellContext`imax], Part[
                    Part[$CellContext`imkmv, 
                    Span[4, 4 + $CellContext`imax - 1]], #] < 
                    Part[$CellContext`Cmut, #]& ]; $CellContext`mut = 
                    Part[$CellContext`range, 
                    Min[
                    Length[$CellContext`range], $CellContext`currentmut]]; 
                    AddTo[
                    Part[$CellContext`dmv, $CellContext`mut], 
                    1], $CellContext`gm = IntegerPart[
                    RandomInteger[{1, $CellContext`maxmjump}]]]; Join[{
                    Total[
                    Most[$CellContext`dmv]], 
                    Min[$CellContext`gm, $CellContext`nondriverspace], 
                    0}, $CellContext`dmv]]; $CellContext`NewNcell = \
$CellContext`Ncell; $CellContext`\[CapitalDelta]i = {0, 
                    
                    First[$CellContext`chooseiorm]}; $CellContext`\
\[CapitalDelta]Nc = {-1, 2}; MapThread[(Part[$CellContext`NewNcell, 
                    Part[$CellContext`imkmv, 3], Part[$CellContext`imkmv, 1] + 
                    1 + #] = Part[$CellContext`NewNcell, 
                    Part[$CellContext`imkmv, 3], Part[$CellContext`imkmv, 1] + 
                    1 + #] + #2)& , {$CellContext`\[CapitalDelta]i, \
$CellContext`\[CapitalDelta]Nc}]; $CellContext`CT = (
                    Compile`$392 = Part[$CellContext`imkmv, 3]; 
                    Part[$CellContext`Ccell, Compile`$392] - Dot[
                    Part[$CellContext`NewNcell, Compile`$392], 
                    Part[$CellContext`ratio, Compile`$392]] >= 0); 
                    If[$CellContext`CT, $CellContext`Ncell = \
$CellContext`NewNcell; $CellContext`statetmp1 = $CellContext`statetmp2 + 
                    Join[$CellContext`chooseiorm, {(-Log[
                    
                    RandomReal[{0, 
                    1}]])/$CellContext`rcum1}]; $CellContext`statetmp2 = \
$CellContext`statetmp2 + Join[$CellContext`chooseiorm, {(-Log[
                    
                    RandomReal[{0, 
                    1}]])/$CellContext`rcum1}]; ($CellContext`mid = 
                    1; $CellContext`midr = 1.; $CellContext`in = 
                    2; $CellContext`fn = $CellContext`Ntot; 
                    While[$CellContext`midr = ($CellContext`fn + 
                    1 - $CellContext`in) 0.5; $CellContext`midr >= 
                    1, $CellContext`mid = 
                    IntegerPart[$CellContext`midr] + $CellContext`in; 
                    If[Part[$CellContext`state, $CellContext`mid, -1] > 
                    Part[$CellContext`statetmp1, -1], $CellContext`fn = \
$CellContext`mid - 1, $CellContext`in = $CellContext`mid + 1]]; 
                    If[$CellContext`midr <= 0, 
                    AddTo[$CellContext`fn, 1], 
                    If[
                    Part[$CellContext`state, $CellContext`fn, -1] < 
                    Part[$CellContext`statetmp1, -1], 
                    AddTo[$CellContext`fn, 1]]]; (
                    If[$CellContext`fn > 2, Part[$CellContext`state, 
                    Span[1, $CellContext`fn - 2]] = Part[$CellContext`state, 
                    Span[2, $CellContext`fn - 1]]]; 
                    Part[$CellContext`state, $CellContext`fn - 
                    1] = $CellContext`statetmp1)); ($CellContext`mid = 
                    1; $CellContext`midr = 1.; $CellContext`in = 
                    1; $CellContext`fn = $CellContext`Ntot; 
                    While[$CellContext`midr = ($CellContext`fn + 
                    1 - $CellContext`in) 0.5; $CellContext`midr >= 
                    1, $CellContext`mid = 
                    IntegerPart[$CellContext`midr] + $CellContext`in; 
                    If[Part[$CellContext`state, $CellContext`mid, -1] > 
                    Part[$CellContext`statetmp2, -1], $CellContext`fn = \
$CellContext`mid - 1, $CellContext`in = $CellContext`mid + 1]]; 
                    If[$CellContext`midr <= 0, 
                    AddTo[$CellContext`fn, 1], 
                    If[
                    Part[$CellContext`state, $CellContext`fn, -1] < 
                    Part[$CellContext`statetmp2, -1], 
                    AddTo[$CellContext`fn, 1]]]; (Part[$CellContext`state, 
                    Span[$CellContext`fn + 1, -1]] = 
                    Part[$CellContext`state, 
                    Span[$CellContext`fn, -2]]; 
                    Part[$CellContext`state, $CellContext`fn] = \
$CellContext`statetmp2)); AddTo[$CellContext`Ntot, 1]; 
                    Null, $CellContext`statetmp1 = $CellContext`statetmp2 + 
                    Join[{0, 0, 0}, $CellContext`mv0, {(-Log[
                    
                    RandomReal[{0, 
                    1}]])/$CellContext`rcum1}]; ($CellContext`mid = 
                    1; $CellContext`midr = 1.; $CellContext`in = 
                    2; $CellContext`fn = $CellContext`Ntot; 
                    While[$CellContext`midr = ($CellContext`fn + 
                    1 - $CellContext`in) 0.5; $CellContext`midr >= 
                    1, $CellContext`mid = 
                    IntegerPart[$CellContext`midr] + $CellContext`in; 
                    If[Part[$CellContext`state, $CellContext`mid, -1] > 
                    Part[$CellContext`statetmp1, -1], $CellContext`fn = \
$CellContext`mid - 1, $CellContext`in = $CellContext`mid + 1]]; 
                    If[$CellContext`midr <= 0, 
                    AddTo[$CellContext`fn, 1], 
                    If[
                    Part[$CellContext`state, $CellContext`fn, -1] < 
                    Part[$CellContext`statetmp1, -1], 
                    AddTo[$CellContext`fn, 1]]]; (
                    If[$CellContext`fn > 2, Part[$CellContext`state, 
                    Span[1, $CellContext`fn - 2]] = Part[$CellContext`state, 
                    Span[2, $CellContext`fn - 1]]]; 
                    Part[$CellContext`state, $CellContext`fn - 
                    1] = $CellContext`statetmp1)); Null]; Null], 
                   RandomReal[{0, 1}] < Part[$CellContext`probc, 3], 
                   
                   Block[{$CellContext`\[CapitalDelta]i, $CellContext`\
\[CapitalDelta]Nc}, $CellContext`\[CapitalDelta]i = {
                    0}; $CellContext`\[CapitalDelta]Nc = {-1}; 
                    Part[$CellContext`Ncell, 
                    Part[$CellContext`imkmv, 3], Part[$CellContext`imkmv, 1] + 
                    1 + Part[$CellContext`\[CapitalDelta]i, 1]] = 
                    Part[$CellContext`Ncell, 
                    Part[$CellContext`imkmv, 3], Part[$CellContext`imkmv, 1] + 
                    1 + Part[$CellContext`\[CapitalDelta]i, 1]] + 
                    Part[$CellContext`\[CapitalDelta]Nc, 1]; (
                    Part[$CellContext`state, 
                    Span[1, -2]] = Part[$CellContext`state, 
                    Span[2, -1]]; Null); SubtractFrom[$CellContext`Ntot, 1]; 
                    Null], True, 
                   
                   Block[{$CellContext`statetmp1 = {
                    0.}, $CellContext`statetmp2 = {
                    0.}, $CellContext`chooseiorm, \
$CellContext`\[CapitalDelta]i, $CellContext`\[CapitalDelta]Nc, $CellContext`\
\[CapitalDelta]k, $CellContext`NewNcell, $CellContext`CT}, $CellContext`CT = 
                    False; $CellContext`statetmp1 = 1. Join[{
                    Part[$CellContext`imkmv, 1], 
                    Part[$CellContext`imkmv, 2], 
                    Part[$CellContext`imkmv, 3]}, 
                    Part[$CellContext`imkmv, 
                    Span[
                    4, 4 + $CellContext`imax - 
                    1]], {$CellContext`t}]; $CellContext`NewNcell = \
$CellContext`Ncell; If[
                    Part[$CellContext`imkmv, 
                    3] < $CellContext`kmax, $CellContext`\[CapitalDelta]i = {
                    0, 0}; $CellContext`\[CapitalDelta]Nc = {-1, 
                    1}; $CellContext`\[CapitalDelta]k = {0, 1}; 
                    Part[$CellContext`NewNcell, Part[$CellContext`imkmv, 3] + 
                    Part[$CellContext`\[CapitalDelta]k, 1], 
                    Part[$CellContext`imkmv, 1] + 1 + 
                    Part[$CellContext`\[CapitalDelta]i, 1]] = 
                    Part[$CellContext`NewNcell, Part[$CellContext`imkmv, 3] + 
                    Part[$CellContext`\[CapitalDelta]k, 1], 
                    Part[$CellContext`imkmv, 1] + 1 + 
                    Part[$CellContext`\[CapitalDelta]i, 1]] + 
                    Part[$CellContext`\[CapitalDelta]Nc, 1]; 
                    Part[$CellContext`NewNcell, Part[$CellContext`imkmv, 3] + 
                    Part[$CellContext`\[CapitalDelta]k, 2], 
                    Part[$CellContext`imkmv, 1] + 1 + 
                    Part[$CellContext`\[CapitalDelta]i, 2]] = 
                    Part[$CellContext`NewNcell, Part[$CellContext`imkmv, 3] + 
                    Part[$CellContext`\[CapitalDelta]k, 2], 
                    Part[$CellContext`imkmv, 1] + 1 + 
                    Part[$CellContext`\[CapitalDelta]i, 2]] + 
                    Part[$CellContext`\[CapitalDelta]Nc, 
                    2]; $CellContext`CT = (
                    Compile`$522 = Part[$CellContext`imkmv, 3]; 
                    Compile`$523 = Last[$CellContext`\[CapitalDelta]k]; 
                    Compile`$524 = Compile`$522 + Compile`$523; 
                    Part[$CellContext`Ccell, Compile`$524] - Dot[
                    Part[$CellContext`NewNcell, Compile`$524], 
                    Part[$CellContext`ratio, Compile`$524]] >= 0)]; 
                    If[$CellContext`CT, $CellContext`Ncell = \
$CellContext`NewNcell; $CellContext`statetmp1 = $CellContext`statetmp1 + 
                    Join[{0, 0, 1}, $CellContext`mv0, {(-Log[
                    
                    RandomReal[{0, 
                    1}]])/$CellContext`rcum1}], $CellContext`statetmp1 = \
$CellContext`statetmp1 + Join[{0, 0, 0}, $CellContext`mv0, {(-Log[
                    
                    RandomReal[{0, 
                    1}]])/$CellContext`rcum1}]]; ($CellContext`mid = 
                    1; $CellContext`midr = 1.; $CellContext`in = 
                    2; $CellContext`fn = $CellContext`Ntot; 
                    While[$CellContext`midr = ($CellContext`fn + 
                    1 - $CellContext`in) 0.5; $CellContext`midr >= 
                    1, $CellContext`mid = 
                    IntegerPart[$CellContext`midr] + $CellContext`in; 
                    If[Part[$CellContext`state, $CellContext`mid, -1] > 
                    Part[$CellContext`statetmp1, -1], $CellContext`fn = \
$CellContext`mid - 1, $CellContext`in = $CellContext`mid + 1]]; 
                    If[$CellContext`midr <= 0, 
                    AddTo[$CellContext`fn, 1], 
                    If[
                    Part[$CellContext`state, $CellContext`fn, -1] < 
                    Part[$CellContext`statetmp1, -1], 
                    AddTo[$CellContext`fn, 1]]]; (
                    If[$CellContext`fn > 2, Part[$CellContext`state, 
                    Span[1, $CellContext`fn - 2]] = Part[$CellContext`state, 
                    Span[2, $CellContext`fn - 1]]]; 
                    Part[$CellContext`state, $CellContext`fn - 
                    1] = $CellContext`statetmp1)); 
                    Null]]]; $CellContext`imkmv = IntegerPart[
                  Part[$CellContext`state, 1, 
                   Span[1, 4 + $CellContext`imax - 1]]]; $CellContext`key = 
                Apply[Plus, 
                  Part[
                   Part[$CellContext`imkmv, 
                    Span[4, 4 + $CellContext`imax - 1]], 
                   Span[1, 
                    Part[$CellContext`compkeystep, 
                    Part[$CellContext`imkmv, 3]]]]]; $CellContext`ss = 
                2 (E/(E - 1)) (
                  Exp[-Exp[(-10.) (($CellContext`key + 1)/(10 
                    Exp[Part[$CellContext`imkmv, 2]^0.5/2]))]] - 1/
                  E); $CellContext`keyg = Apply[Times, 
                  Part[$CellContext`genes^(Part[$CellContext`imkmv, 
                    Span[4, -1]] $CellContext`signature), 
                   Span[1, 
                    Part[$CellContext`compkeystep, 
                    Part[$CellContext`imkmv, 3]]]]]; $CellContext`rates = (
                 Compile`$611 = -$CellContext`wide; 
                 Compile`$609 = Part[$CellContext`imkmv, 3]; 
                 Compile`$612 = 2^(-1); 
                 Compile`$613 = Compile`$611 Compile`$612; 
                 Compile`$614 = E^Compile`$613; 
                 Join[{Part[$CellContext`Aasym, Compile`$609] 
                    Exp[-($CellContext`slope 
                    Compile`$614 (Cosh[Compile`$611 ($CellContext`ss - 2.)] - 
                    1))], Part[$CellContext`Asym, Compile`$609] 
                    Exp[-($CellContext`slope 
                    Compile`$614 (Cosh[Compile`$611 ($CellContext`ss - 1.)] - 
                    1))], Part[$CellContext`Aapop, Compile`$609] 
                    Exp[-($CellContext`slope 
                    Compile`$614 (Cosh[Compile`$611 ($CellContext`ss - 0.5)] - 
                    1))]}, {
                   Part[$CellContext`krates, 
                    Compile`$609] $CellContext`keyg}]); $CellContext`ratescum = 
                Accumulate[$CellContext`rates]; $CellContext`rcum1 = 
                Part[$CellContext`ratescum, -1]; $CellContext`ratesn = \
$CellContext`rates/$CellContext`rcum1; $CellContext`nondriverspace = \
$CellContext`maxnondrivermut - 
                 Part[$CellContext`imkmv, 
                  2]; $CellContext`semidriverspace = \
$CellContext`maxsemidrivermut - 
                 Part[$CellContext`imkmv, -1]; $CellContext`driverspace = \
$CellContext`maxdrivermut - Total[
                  Part[$CellContext`imkmv, 
                   Span[
                   4, -2]]]; $CellContext`space = $CellContext`nondriverspace + \
$CellContext`semidriverspace + $CellContext`driverspace; \
$CellContext`spaceprob = {$CellContext`driverspace, \
$CellContext`semidriverspace, $CellContext`nondriverspace}/$CellContext`space; 
               Internal`StuffBag[$CellContext`stateslist, $CellContext`state, 
                 2]; Internal`StuffBag[$CellContext`Ncslist, \
$CellContext`Ncell, 2]; 
               Internal`StuffBag[$CellContext`probslist, $CellContext`ratesn, 
                 2]; Internal`StuffBag[$CellContext`spprobslist, \
$CellContext`spaceprob, 2]; 
               Internal`StuffBag[$CellContext`Ntslist, $CellContext`Ntot]; 
               Internal`StuffBag[$CellContext`tslist, $CellContext`t]; Null]; 
             Internal`StuffBag[$CellContext`stateslist, 
               Internal`BagPart[$CellContext`Ncslist, All], 1]; 
             Internal`StuffBag[$CellContext`stateslist, 
               Internal`BagPart[$CellContext`probslist, All], 1]; 
             Internal`StuffBag[$CellContext`stateslist, 
               Internal`BagPart[$CellContext`spprobslist, All], 1]; 
             Internal`StuffBag[$CellContext`stateslist, 
               Internal`BagPart[$CellContext`Ntslist, All], 1]; 
             Internal`StuffBag[$CellContext`stateslist, 
               Internal`BagPart[$CellContext`tslist, All], 1]; 
             Internal`StuffBag[$CellContext`stateslist, $CellContext`Nmax]; 
             Internal`StuffBag[$CellContext`stateslist, $CellContext`imax]; 
             Internal`StuffBag[$CellContext`stateslist, $CellContext`ct + 1]; 
             Internal`StuffBag[$CellContext`stateslist, 
               Dimensions[$CellContext`state], 1]; 
             Internal`StuffBag[$CellContext`stateslist, $CellContext`ct + 1]; 
             Internal`StuffBag[$CellContext`stateslist, 
               Dimensions[$CellContext`Ncell], 1]; 
             Internal`StuffBag[$CellContext`stateslist, $CellContext`ct + 1]; 
             Internal`StuffBag[$CellContext`stateslist, 
               Dimensions[$CellContext`ratesn], 1]; 
             Internal`StuffBag[$CellContext`stateslist, $CellContext`ct + 1]; 
             Internal`StuffBag[$CellContext`stateslist, 
               Dimensions[$CellContext`spaceprob], 1]; 
             Internal`StuffBag[$CellContext`stateslist, $CellContext`ct + 1]; 
             Internal`StuffBag[$CellContext`stateslist, $CellContext`ct + 1]; 
             Internal`StuffBag[$CellContext`stateslist, 
               Length[
                Dimensions[{$CellContext`state}]]]; 
             Internal`StuffBag[$CellContext`stateslist, 
               Length[
                Dimensions[{$CellContext`Ncell}]]]; 
             Internal`StuffBag[$CellContext`stateslist, 
               Length[
                Dimensions[{$CellContext`ratesn}]]]; 
             Internal`StuffBag[$CellContext`stateslist, 
               Length[
                Dimensions[{$CellContext`spaceprob}]]]; 
             Internal`StuffBag[$CellContext`stateslist, 
               Length[
                Dimensions[{$CellContext`Ntot}]]]; 
             Internal`StuffBag[$CellContext`stateslist, 
               Length[
                Dimensions[{$CellContext`t}]]]; 
             Internal`StuffBag[$CellContext`stateslist, 0]; 
             Internal`StuffBag[$CellContext`stateslist, 0]; 
             Internal`StuffBag[$CellContext`stateslist, 8]; 
             Internal`BagPart[$CellContext`stateslist, All]]]], Evaluate, 
          LibraryFunction[
          "/home/math/.Mathematica/ApplicationData/CCompilerDriver/\
BuildFolder/mycomputer-11374/compiledFunction0.so", 
           "compiledFunction0", {{Integer, 0, "Constant"}, {
            Integer, 0, "Constant"}, {Integer, 0, "Constant"}, {
            Integer, 0, "Constant"}, {Integer, 0, "Constant"}, {
            Integer, 0, "Constant"}, {Integer, 0, "Constant"}, {
            Integer, 1, "Constant"}, {Integer, 1, "Constant"}, {
            Real, 1, "Constant"}, {Real, 1, "Constant"}, {
            Integer, 0, "Constant"}, {Integer, 0, "Constant"}, {
            Integer, 0, "Constant"}, {Integer, 0, "Constant"}, {
            Real, 1, "Constant"}, {Real, 1, "Constant"}, {
            Real, 1, "Constant"}, {Real, 0, "Constant"}, {
            Real, 0, "Constant"}, {Real, 0, "Constant"}, {
            Real, 0, "Constant"}, {Real, 2, "Constant"}}, {
           Real, 
            1}]][$CellContext`Ntot2, $CellContext`Nmax2, \
$CellContext`scegli2, $CellContext`kmax2, $CellContext`imax2, \
$CellContext`maxsemidrivermut2, $CellContext`maxnondrivermut2, \
$CellContext`signature2, $CellContext`compkeystep2, $CellContext`expG2, \
$CellContext`cntG2, $CellContext`ctmax2, $CellContext`tmax2, \
$CellContext`maxmjump2, $CellContext`maxtjump2, $CellContext`Aasym2, \
$CellContext`Asym2, $CellContext`Aapop2, $CellContext`Apass2, \
$CellContext`cen2, $CellContext`wide2, $CellContext`slope2, \
$CellContext`ratio2]; 
       Internal`StuffBag[$CellContext`sims, $CellContext`rawresults, 1]; 
       Internal`StuffBag[$CellContext`simslen, 1., 1]; 
       Internal`StuffBag[$CellContext`simslen, 
         Dimensions[$CellContext`rawresults], 1]; Null]; 
     Internal`StuffBag[$CellContext`sims, 
       Internal`BagPart[$CellContext`simslen, All], 1]; 
     Internal`StuffBag[$CellContext`sims, 
       Table[1., {$CellContext`Nsims}], 1]; 
     Internal`StuffBag[$CellContext`sims, $CellContext`Nsims]; 
     Internal`BagPart[$CellContext`sims, All]]], Evaluate, 
   LibraryFunction[
   "/home/math/.Mathematica/ApplicationData/CCompilerDriver/BuildFolder/\
mycomputer-11374/compiledFunction1.so", 
    "compiledFunction1", {{Integer, 0, "Constant"}}, {Real, 1}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.672998200457439*^9, 3.672998347985393*^9, {3.672998385237965*^9, 
   3.672998461535953*^9}, {3.672998516677601*^9, 3.672998547494472*^9}, {
   3.672998586781486*^9, 3.6729986364613247`*^9}, 3.6729993346074343`*^9, 
   3.672999553525927*^9, 3.6729996044705677`*^9, 3.6729997602526913`*^9, {
   3.672999803532498*^9, 3.6729998292712917`*^9}, 3.673007065753619*^9, 
   3.673007265024754*^9, 3.673007309607195*^9, 3.6730073437349243`*^9, 
   3.673007410700844*^9, 3.673007462990986*^9, {3.673007506917448*^9, 
   3.6730075464774103`*^9}, 3.673014126440564*^9, 3.756567139472229*^9, 
   3.7565672726856537`*^9, 3.7565673516586*^9}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{
  3.672998200457439*^9, 3.672998347985393*^9, {3.672998385237965*^9, 
   3.672998461535953*^9}, {3.672998516677601*^9, 3.672998547494472*^9}, {
   3.672998586781486*^9, 3.6729986364613247`*^9}, 3.6729993346074343`*^9, 
   3.672999553525927*^9, 3.6729996044705677`*^9, 3.6729997602526913`*^9, {
   3.672999803532498*^9, 3.6729998292712917`*^9}, 3.673007065753619*^9, 
   3.673007265024754*^9, 3.673007309607195*^9, 3.6730073437349243`*^9, 
   3.673007410700844*^9, 3.673007462990986*^9, {3.673007506917448*^9, 
   3.6730075464774103`*^9}, 3.673014126440564*^9, 3.756567139472229*^9, 
   3.7565672726856537`*^9, 3.756567352297514*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[TextData[{
 "go2NC  ",
 Cell[BoxData[
  RowBox[{
   DynamicBox[ToBoxes[Refresh[
       If[
        Not[
         ValueQ[$CellContext`Nsimsdyn]], $CellContext`Nsimsdyn = 
        1, $CellContext`Nsimsdyn], UpdateInterval -> 1]; " ", StandardForm],
    ImageSizeCache->{10., {0., 6.}}], "   ", 
   RowBox[{
    RowBox[{"Number", " ", "of", " ", "simulations"}], "="}], 
   InputFieldBox[Dynamic[$CellContext`Nsimsdyn], Number,
    ContinuousAction->True,
    FieldSize->3], " ", 
   ButtonBox["\<\"RUN\"\>",
    Appearance->Automatic,
    ButtonFunction:>($CellContext`rawsimulations = 
     Global`RunMain2NC[$CellContext`Nsimsdyn]),
    Evaluator->Automatic,
    Method->"Queued"]}]], "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False]
}], "Subsection",
 CellChangeTimes->{
  3.6252904677946167`*^9, 3.626670633881194*^9, 3.6519101150134897`*^9, {
   3.672997946489902*^9, 3.672997960125955*^9}, {3.673001944978073*^9, 
   3.673001953011053*^9}, {3.6730042520344257`*^9, 3.673004253018209*^9}, {
   3.67300576506721*^9, 3.673005765069254*^9}, {3.673013696877109*^9, 
   3.673013697217393*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "go2  ",
 Cell[BoxData[
  RowBox[{
   DynamicBox[ToBoxes[Refresh[
       If[
        Not[
         ValueQ[$CellContext`Nsimsdyn]], $CellContext`Nsimsdyn = 
        1, $CellContext`Nsimsdyn], UpdateInterval -> 1]; " ", StandardForm],
    ImageSizeCache->{10., {0., 6.}}], "   ", 
   RowBox[{
    RowBox[{"Number", " ", "of", " ", "simulations"}], "="}], 
   InputFieldBox[Dynamic[$CellContext`Nsimsdyn], Number,
    ContinuousAction->True,
    FieldSize->3], " ", 
   ButtonBox["\<\"RUN\"\>",
    Appearance->Automatic,
    ButtonFunction:>($CellContext`rawsimulations = 
     Global`RunMain2[$CellContext`Nsimsdyn]),
    Evaluator->Automatic,
    Method->"Queued"]}]], "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False]
}], "Subsection",
 CellChangeTimes->{
  3.6252904677946167`*^9, 3.626670633881194*^9, 3.6519101150134897`*^9, {
   3.672997946489902*^9, 3.672997960125955*^9}, {3.673001944978073*^9, 
   3.673001953011053*^9}, {3.6730042520344257`*^9, 3.673004253018209*^9}, {
   3.67300576506721*^9, 3.673005765069254*^9}}],

Cell[BoxData[
 RowBox[{"Remove", "[", "rawsimulations", "]"}]], "Input",
 CellChangeTimes->{{3.6730066238128777`*^9, 3.673006631073369*^9}}],

Cell[CellGroupData[{

Cell[BoxData["Nsimsdyn"], "Input"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.6730143521986713`*^9, 3.756567368517749*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RunMain2NC", "[", "Nsimsdyn", "]"}]], "Input",
 CellChangeTimes->{{3.6730071296875887`*^9, 3.673007166073333*^9}, 
   3.673007514149838*^9, {3.673007698619811*^9, 3.673007698919997*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
          "0.`", ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", 
           ",", "0.`", ",", "0.`", ",", "0.002916926387999764`", ",", "0.`", 
           ",", "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
           "0.`", ",", "0.`", ",", "0.003900482641908441`", ",", "0.`", ",", 
           "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
           ",", "0.`", ",", "0.007309475320343725`", ",", "0.`", ",", "0.`", 
           ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
           "0.`", ",", 
           TemplateBox[{"140549"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
              GrayLevel[0.75], RoundingRadius -> 7]& )], ",", 
           "5.121310335744753`", ",", "5.128594852926843`", ",", 
           "5.138389352032262`", ",", "5.164504605572933`", ",", 
           "5.192401762150978`", ",", "5.251570929559032`", ",", 
           "5.2852961285211615`", ",", "5.34473851977067`", ",", "150", ",", 
           "5", ",", "101", ",", "152", ",", "9", ",", "101", ",", "3", ",", 
           "5", ",", "101", ",", "4", ",", "101", ",", "3", ",", "101", ",", 
           "101", ",", "3", ",", "3", ",", "2", ",", "2", ",", "1", ",", "1", 
           ",", "0", ",", "0", ",", "8", ",", "1.`", ",", "140615", ",", 
           "1.`", ",", "1"}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{74., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{67., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 63, 33786627683188023164, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{73., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 63, 33786627683188023164, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 63, 33786627683188023164, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{100., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[63]]], "Output",
 CellChangeTimes->{
  3.673014318691846*^9, 3.6730146497463017`*^9, {3.673028846921464*^9, 
   3.673028909653413*^9}, 3.6730292394126387`*^9, {3.673029313504223*^9, 
   3.673029345750609*^9}, 3.6730294725038147`*^9, {3.673029566642454*^9, 
   3.673029648373466*^9}, 3.673029688098269*^9, {3.673029734745907*^9, 
   3.673029742553244*^9}, 3.673029881802149*^9, 3.673029937977399*^9, {
   3.673029970992908*^9, 3.67303009810246*^9}, 3.673030201886346*^9, {
   3.6730304505190487`*^9, 3.673030480539509*^9}, 3.756567369681326*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Results", "Subsection",
 CellChangeTimes->{{3.657006576744567*^9, 3.6570065805686617`*^9}, 
   3.657007431809258*^9, 3.66289321186264*^9, {3.663222823984118*^9, 
   3.663222825527197*^9}, {3.670149564636858*^9, 3.670149566812821*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "PreFormat Results ",
 Cell[BoxData[
  ButtonBox["\<\"Evaluate\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
       EvaluationNotebook[], All, ButtonCell] SelectionMove[
       EvaluationNotebook[], All, CellGroup]) SelectionEvaluateCreateCell[
      EvaluationNotebook[]],
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False,
  CellChangeTimes->{3.6252904677946167`*^9, 3.626670633881194*^9, 
   3.6519101150134897`*^9}]
}], "Subsubsection",
 CellChangeTimes->{{3.651910339748372*^9, 3.651910345476472*^9}, {
  3.6519103897649527`*^9, 3.651910391384837*^9}, {3.651910480974146*^9, 
  3.651910484694303*^9}, {3.6642583962201366`*^9, 3.66425839871624*^9}, {
  3.6642584530768423`*^9, 3.664258457491781*^9}, {3.672986660629751*^9, 
  3.672986661469694*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"simulations", "=", 
   RowBox[{"myfuckup", "[", "rawsimulations", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawresults", "=", 
   RowBox[{"simulations", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.672986672697227*^9, 3.672986719847974*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Format Results ",
 Cell[BoxData[
  ButtonBox["\<\"Evaluate\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
       EvaluationNotebook[], All, ButtonCell] SelectionMove[
       EvaluationNotebook[], All, CellGroup]) SelectionEvaluateCreateCell[
      EvaluationNotebook[]],
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False,
  CellChangeTimes->{3.6252904677946167`*^9, 3.626670633881194*^9, 
   3.6519101150134897`*^9}]
}], "Subsubsection",
 CellChangeTimes->{{3.651910339748372*^9, 3.651910345476472*^9}, {
  3.6519103897649527`*^9, 3.651910391384837*^9}, {3.651910480974146*^9, 
  3.651910484694303*^9}, {3.6642583962201366`*^9, 3.66425839871624*^9}, {
  3.6642584530768423`*^9, 3.664258457491781*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"formattedresults", "=", 
   RowBox[{"myfuckup", "[", "rawresults", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "states", ",", "populations", ",", "probabilities", ",", 
     "geneprobabilities", ",", "totalcells", ",", "eventtimes", ",", "NmaxE", 
     ",", "imaxE"}], "}"}], "=", "formattedresults"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"totalcells", "=", 
  RowBox[{"IntegerPart", "@", "totalcells"}]}], "\[IndentingNewLine]", 
 RowBox[{"NmaxE", "=", 
  RowBox[{"IntegerPart", "@", "NmaxE"}]}], "\[IndentingNewLine]", 
 RowBox[{"imaxE", "=", 
  RowBox[{"IntegerPart", "@", "imaxE"}]}]}], "Input",
 CellChangeTimes->{{3.664094145911415*^9, 3.664094149584659*^9}, {
  3.664094448318722*^9, 3.664094460581895*^9}, {3.66409939831627*^9, 
  3.664099401882806*^9}}],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{"IntegerPart", "[", "totalcells", "]"}], "]"}]], "Output",
 CellChangeTimes->{{3.664094431676642*^9, 3.6640944613472433`*^9}, {
   3.664095064022481*^9, 3.664095085791854*^9}, 3.664097452443685*^9, 
   3.6640997062131157`*^9, 3.6641761759337473`*^9, 3.664176275561586*^9, 
   3.664176393149013*^9, 3.664176590659693*^9, 3.664176711989214*^9, 
   3.664176874518199*^9, 3.664177178445511*^9, 3.664177286022644*^9, {
   3.664177375955913*^9, 3.6641774051375427`*^9}, 3.664177475259384*^9, {
   3.664177510759157*^9, 3.664177541872295*^9}, {3.664177605969967*^9, 
   3.664177612020418*^9}, {3.6641776940423107`*^9, 3.664177706261491*^9}, 
   3.6641777734604607`*^9, 3.6641879703484898`*^9, 3.6642589159412203`*^9, 
   3.6700636434085617`*^9, 3.672644018950122*^9, 3.7565671752557993`*^9, 
   3.756567385326125*^9}],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{"IntegerPart", "[", "NmaxE", "]"}], "]"}]], "Output",
 CellChangeTimes->{{3.664094431676642*^9, 3.6640944613472433`*^9}, {
   3.664095064022481*^9, 3.664095085791854*^9}, 3.664097452443685*^9, 
   3.6640997062131157`*^9, 3.6641761759337473`*^9, 3.664176275561586*^9, 
   3.664176393149013*^9, 3.664176590659693*^9, 3.664176711989214*^9, 
   3.664176874518199*^9, 3.664177178445511*^9, 3.664177286022644*^9, {
   3.664177375955913*^9, 3.6641774051375427`*^9}, 3.664177475259384*^9, {
   3.664177510759157*^9, 3.664177541872295*^9}, {3.664177605969967*^9, 
   3.664177612020418*^9}, {3.6641776940423107`*^9, 3.664177706261491*^9}, 
   3.6641777734604607`*^9, 3.6641879703484898`*^9, 3.6642589159412203`*^9, 
   3.6700636434085617`*^9, 3.672644018950122*^9, 3.7565671752557993`*^9, 
   3.756567385482423*^9}],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{"IntegerPart", "[", "imaxE", "]"}], "]"}]], "Output",
 CellChangeTimes->{{3.664094431676642*^9, 3.6640944613472433`*^9}, {
   3.664095064022481*^9, 3.664095085791854*^9}, 3.664097452443685*^9, 
   3.6640997062131157`*^9, 3.6641761759337473`*^9, 3.664176275561586*^9, 
   3.664176393149013*^9, 3.664176590659693*^9, 3.664176711989214*^9, 
   3.664176874518199*^9, 3.664177178445511*^9, 3.664177286022644*^9, {
   3.664177375955913*^9, 3.6641774051375427`*^9}, 3.664177475259384*^9, {
   3.664177510759157*^9, 3.664177541872295*^9}, {3.664177605969967*^9, 
   3.664177612020418*^9}, {3.6641776940423107`*^9, 3.664177706261491*^9}, 
   3.6641777734604607`*^9, 3.6641879703484898`*^9, 3.6642589159412203`*^9, 
   3.6700636434085617`*^9, 3.672644018950122*^9, 3.7565671752557993`*^9, 
   3.7565673856390343`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Print ",
 Cell[BoxData[
  ButtonBox["\<\"Evaluate\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
       EvaluationNotebook[], All, ButtonCell] SelectionMove[
       EvaluationNotebook[], All, CellGroup]) SelectionEvaluateCreateCell[
      EvaluationNotebook[]],
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False,
  CellChangeTimes->{3.6252904677946167`*^9, 3.626670633881194*^9, 
   3.6519101150134897`*^9}]
}], "Subsubsection",
 CellChangeTimes->{{3.651910339748372*^9, 3.651910345476472*^9}, {
  3.6519103897649527`*^9, 3.651910391384837*^9}, {3.651910480974146*^9, 
  3.651910484694303*^9}, {3.6642583962201366`*^9, 3.66425839871624*^9}, {
  3.664258471805106*^9, 3.664258472617021*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"populations", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.664177484892502*^9, 3.664177488356841*^9}, {
  3.6641883294848948`*^9, 3.664188331637144*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.664177488846148*^9, 3.6641775143567743`*^9}, 
   3.664177619936401*^9, 3.664177708240841*^9, 3.664187970434429*^9, 
   3.6641883319739933`*^9, 3.664258929066193*^9, 3.670063651525571*^9, 
   3.672644022186977*^9, 3.756567175953223*^9, 3.756567386168728*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Print", "[", "\"\<Results:\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "/@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Row", "[", 
       RowBox[{"#", ",", "\"\<      \>\""}], "]"}], "&"}], "/@", 
     RowBox[{"(", 
      RowBox[{"Transpose", "@", 
       RowBox[{"(", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"Length", "@", "populations"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"TableForm", "[", 
             RowBox[{
              RowBox[{"#1", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"TableHeadings", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"ToString", "/@", 
                  RowBox[{"Range", "[", 
                   RowBox[{"NmaxE", "+", "2"}], "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<drv\>\"", ",", 
                   "\"\<\!\(\*OverscriptBox[\(drv\), \(_\)]\)\>\"", ",", 
                   "\"\<k\>\"", ",", 
                   RowBox[{"Sequence", "@@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"\"\<mv\>\"", "<>", 
                    RowBox[{"ToString", "[", "#", "]"}]}], "&"}], "/@", 
                    RowBox[{"Range", "@", 
                    RowBox[{"(", 
                    RowBox[{"imaxE", "-", "1"}], ")"}]}]}], ")"}]}], ",", 
                   "\"\<\!\(\*OverscriptBox[\(mv5\), \(\[EmptySet]\)]\)\>\"", 
                   ",", 
                   RowBox[{"\"\<t=\>\"", "<>", 
                    RowBox[{"ToString", "@", 
                    RowBox[{"#1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}]}], "}"}]}], "}"}]}]}], 
             "]"}], "&"}], "/@", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"Transpose", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"states", "[", 
                  RowBox[{"[", "##", "]"}], "]"}], "&"}], "@@@", 
                RowBox[{"Transpose", "@", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Range", "[", 
                    RowBox[{"totalcells", "//", "Length"}], "]"}], ",", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"1", ";;", "#"}], "&"}], "/@", "totalcells"}], 
                    ")"}]}], "}"}]}]}], "}"}]}], ",", 
             RowBox[{"Transpose", "@", 
              RowBox[{"{", "eventtimes", "}"}]}], ",", "2"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Grid", "[", 
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", "Null", "}"}], ",", "##"}], "}"}], "&"}], "@@", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    SubscriptBox["\"\<k\>\"", "i"], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"Length", "@", "#"}]}], "}"}]}], "]"}]}], ",", 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"Table", "[", 
                    RowBox[{
                    SubscriptBox["\"\<i\>\"", "i"], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "0", ",", 
                    RowBox[{"imaxE", "-", "1"}]}], "}"}]}], "]"}], "}"}], ",",
                   "#"}], "]"}], ",", "2"}], "]"}], ",", 
              RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "&"}], "/@", 
           "populations"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Grid", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "\"\<\!\(\*SubscriptBox[\(P\), \(asyn\)]\)\>\"", ",", 
                  "\"\<\!\(\*SubscriptBox[\(P\), \(sync\)]\)\>\"", ",", 
                  "\"\<\!\(\*SubscriptBox[\(P\), \(apop\)]\)\>\"", ",", 
                  "\"\<\!\(\*SubscriptBox[\(P\), \(pass\)]\)\>\""}], "}"}], 
                ",", "#"}], "}"}], ",", 
              RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "&"}], "/@", 
           "probabilities"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Grid", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "\"\<\!\(\*SubscriptBox[\(P\), \(drv\)]\)\>\"", ",", 
                  "\"\<\!\(\*SubscriptBox[\(P\), \(\[EmptySet]\)]\)\>\"", 
                  ",", "\"\<\!\(\*SubscriptBox[\(P\), OverscriptBox[\(drv\), \
\(_\)]]\)\>\""}], "}"}], ",", "#"}], "}"}], ",", 
              RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "&"}], "/@", 
           "geneprobabilities"}]}], "}"}], ")"}]}], ")"}]}], ")"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6640952770306463`*^9, 3.664095288614086*^9}, {
   3.664096042304512*^9, 3.664096078838326*^9}, {3.664096270773423*^9, 
   3.664096368982634*^9}, {3.6640964289220467`*^9, 3.664096432000443*^9}, {
   3.664096501161704*^9, 3.664096504102231*^9}, {3.664097362224999*^9, 
   3.664097366415773*^9}, {3.6640994380852757`*^9, 3.66409944832577*^9}, {
   3.664099621592453*^9, 3.664099643439043*^9}, {3.664099775060514*^9, 
   3.664099783219932*^9}, {3.66409997364467*^9, 3.6641000059788427`*^9}, {
   3.664100101439137*^9, 3.664100114337222*^9}, {3.66410015127802*^9, 
   3.664100191401896*^9}, {3.664100270221766*^9, 3.664100309121181*^9}, {
   3.6641003616083803`*^9, 3.664100364161049*^9}, 3.664101774014216*^9, 
   3.664188151571557*^9, {3.6641884366529903`*^9, 3.664188439802429*^9}, 
   3.664258715783045*^9, 3.6646274496695557`*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Manipulate Output", "Subsection",
 CellChangeTimes->{{3.657006576744567*^9, 3.6570065805686617`*^9}, 
   3.657007431809258*^9, 3.66289321186264*^9, {3.663222793000924*^9, 
   3.663222803202347*^9}, {3.6640178852552357`*^9, 3.6640178859541597`*^9}, {
   3.664103214829464*^9, 3.664103221493799*^9}, {3.664712354877357*^9, 
   3.6647123584295483`*^9}}],

Cell["\<\
Il problema principale che ho e\[CloseCurlyQuote] che le mutazioni di tipo \
driver e semi-driver avvengono una alla volta, mentre le mutazioni di tipo \
non-driver possono avvenire anche piu\[CloseCurlyQuote] di una alla volta, \
cioe\[CloseCurlyQuote] in gruppo. Questo presenta un doppio problema:
1) il primo problema e\[CloseCurlyQuote] che un gruppo di mutazioni  \
non-driver avvengono in un tempo che mediamente corrisponde al tempo \
neccessario per fare una singola mutazione driver o semi-driver.
2) il secondo problema riguarda il fatto che se le mutazioni di tipo \
non-driver avvengono in gruppo, si crea una correlazione ossia l\
\[CloseCurlyQuote]evento mutazione non driver e\[CloseCurlyQuote] piu\
\[CloseCurlyQuote] persistente. Quindi, data l\[CloseCurlyQuote]occorrenza di \
una mutazione non-driver, c\[CloseCurlyQuote]e\[CloseCurlyQuote] una \
probbabilita\[CloseCurlyQuote] maggiore che la mutazione successiva sia anche \
essa non-driver (automaticamente senza riestrazione). Questo contraddice l\
\[CloseCurlyQuote]ipotesi che l\[CloseCurlyQuote]evento mutazione ha la \
stessa probabilita\[CloseCurlyQuote] di essere driver, semi-driver e \
non-driver.\
\>", "Text",
 CellChangeTimes->{{3.664103258786222*^9, 3.664103286342516*^9}, {
  3.664103349959179*^9, 3.664103716093671*^9}, {3.664104184524221*^9, 
  3.66410425718003*^9}, {3.664105393490508*^9, 3.664105434979313*^9}}],

Cell["\<\
Che tipo di errori generano i due problemi soprascritti?
1) le mutazioni non-driver sono generalmente piu\[CloseCurlyQuote] veloci e, \
poiche\[CloseCurlyQuote] molto spesso c\[CloseCurlyQuote]e\[CloseCurlyQuote] \
piu\[CloseCurlyQuote] probabilita\[CloseCurlyQuote] di avere una mutazione \
non-driver,  allora vedremo che le popolazioni accumulano piu mutazioni \
non-driver con un tempo accelerato e conseguentemente a) le cellule tendono a \
rimanere poco in uno stato perche\[CloseCurlyQuote] sono spinte piu\
\[CloseCurlyQuote] velocemente verso l\[CloseCurlyQuote]apoptosi, b) le \
popolazioni che si sono differenziate molto tendono, a causa di questa \
accelerazione, ad avere dei tempi di sopravvivenza meno discriminanti, ossia \
le traiettorie ottenute tramite media sullo stesso fenotipo tende a \
collassare ed essere simili anche se appartengono a fenotipi diversi. c) Le \
cellule accumulano piu\[CloseCurlyQuote] mutazioni non-driver in un singolo \
processo proliferativo, quindi il numero di cellule non aumenta in maniera \
proporzionale al numero di mutazioni. 
2) Questo comporta che la variazione negativa della stemness dovuta a \
mutazioni non-driver sono molto piu\[CloseCurlyQuote] grandi nel caso in cui \
le mutazioni non-driver sono persistenti che ne caso in cui le mutazioni di \
ogni tipo possono avvenire singolarmente e con la stessa probabilita\
\[CloseCurlyQuote].\
\>", "Text",
 CellChangeTimes->{{3.664103737835856*^9, 3.664104149330153*^9}, {
  3.6641042934128532`*^9, 3.6641044990236063`*^9}, {3.664104886668778*^9, 
  3.664104983054295*^9}}],

Cell["\<\
Soluzione ai problemi precedenti.
1)  E\[CloseCurlyQuote] sufficiente estrarre un numero di tempi uguale al \
numero di mutazioni non-driver avvenute in gruppo e aumentare la variabile \
temporale  di un valore pari alla sommatoria di questi tempi. Questa \
soluzione rende piu\[CloseCurlyQuote] difficile una probabile correzione del \
secondo problema.
2) Di fatto non e\[CloseCurlyQuote] possibile risolvere il secondo problema \
se non facendo avvenire le mutazioni non-driver una alla volta come avvine \
per le mutazioni driver e semi-driver. Si  si persiste con la possibilita di \
avere piu\[CloseCurlyQuote] mutazioni non-driver alla volta, allora si \
necessita una giustificazione di tipo logico. a) il raggruppamento \
sequenziale di un sottoinsieme di mutazioni non-driver implica che queste \
sono connesse, o possono avvenire perche\[CloseCurlyQuote] \
l\[CloseCurlyQuote]errore si propaga piu\[CloseCurlyQuote] infretta e durante \
un singolo processo di proliferazione. Cioe\[CloseCurlyQuote] le mutazioni \
non driver se avvengo, avvengon in cascata durante la singola proliferazione. \

Sperimentalmente vorrebbe dire che le mutazioni non-driver, gli error, sono \
piu\[CloseCurlyQuote] estesi, mentre le mutazioni driver e semi-driver sono \
singole come tipo e non sono estese, ma circoscritte. Questo vuol dire che il \
numero di basi che cambiano e\[CloseCurlyQuote] diverso nei due casi? Oppure \
e\[CloseCurlyQuote] il numero di geni coinvolti che cambia? Si puo\
\[CloseCurlyQuote] dire che le mutazioni driver non sono solo fortuite e \
rendono la cellula piu\[CloseCurlyQuote] capace, ma sono anche mirate e poco \
dispersive in termini di errore?
 
\
\>", "Text",
 CellChangeTimes->{{3.664104501118082*^9, 3.664104870595264*^9}, {
  3.664105014773224*^9, 3.664105092775079*^9}, {3.6641051568558397`*^9, 
  3.664105370203541*^9}}],

Cell["\<\
Quello che voglio e\[CloseCurlyQuote] poter modificare i parametri piu\
\[CloseCurlyQuote] importanti per la simulazione


{

cen2,wide2,slope2,

Aasym2, (*kmax asymmetric proliferation rate amplitudes *)
Asym2, (*kmax symmetric proliferation rate amplitudes *)
Aapop2, (*kmax apoptotic rate amplitudes *)
Apass2,

imax2, (*number of driver mutations+1 (for the non mutated case)*)
kmax2, (*number of compartments*)

Ccell2,(*capacities may be different in each compartment *)
ratio2,(*imax*kmax matrix of identical columns *)
EPCAMexp=1,CD47exp=1,CD44exp=1,METexp=1,EPCAMcnt=1,CD47cnt=1,CD44cnt=1,METcnt=\
1,
expG2,cntG2,

compkeystep2,
signature2, (*the 0 is for the semidriver mutations*)
maxsemidrivermut2, (*maximum number of semidriver mutations*)
maxnondrivermut2, (*this is mmax, the maximum number of non driver \
mutations*)
maxmjump2,maxtjump2,

Ntot2,Nmax2,(*>Ntot*)
scegli2,(*intero tra 0 e Ntot-Nmax*)
ctmax2,tmax2
}\
\>", "Text",
 CellChangeTimes->{{3.664103225848414*^9, 3.664103254670191*^9}, {
  3.6642585879743567`*^9, 3.664258588657346*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.664170782303134*^9, 3.6641707842042*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"vis", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"(", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Pane", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"40", ",", "300"}], "}"}], ",", 
           RowBox[{"Alignment", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Center", ",", "Top"}], "}"}]}]}], "]"}], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "@", "populations"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Pane", "[", 
          RowBox[{
           RowBox[{"TableForm", "[", 
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"TableHeadings", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"ToString", "/@", 
                 RowBox[{"Range", "[", 
                  RowBox[{"NmaxE", "+", "2"}], "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<drv\>\"", ",", 
                  "\"\<\!\(\*OverscriptBox[\(drv\), \(_\)]\)\>\"", ",", 
                  "\"\<k\>\"", ",", 
                  RowBox[{"Sequence", "@@", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"\"\<mv\>\"", "<>", 
                    RowBox[{"ToString", "[", "#", "]"}]}], "&"}], "/@", 
                    RowBox[{"Range", "@", 
                    RowBox[{"(", 
                    RowBox[{"imaxE", "-", "1"}], ")"}]}]}], ")"}]}], ",", 
                  "\"\<\!\(\*OverscriptBox[\(mv5\), \(\[EmptySet]\)]\)\>\"", 
                  ",", 
                  RowBox[{"\"\<t=\>\"", "<>", 
                   RowBox[{"ToString", "@", 
                    RowBox[{"#1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}]}], "}"}]}], "}"}]}]}], 
            "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"620", ",", "300"}], "}"}], ",", 
           RowBox[{"Alignment", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Center", ",", "Top"}], "}"}]}], ",", 
           RowBox[{"Scrollbars", "\[Rule]", "True"}], ",", 
           RowBox[{"AppearanceElements", "\[Rule]", "None"}]}], "]"}], "&"}], 
        "/@", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Transpose", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"states", "[", 
               RowBox[{"[", "##", "]"}], "]"}], "&"}], "@@@", 
             RowBox[{"Transpose", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Range", "[", 
                 RowBox[{"totalcells", "//", "Length"}], "]"}], ",", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"1", ";;", "#"}], "&"}], "/@", "totalcells"}], 
                 ")"}]}], "}"}]}]}], "}"}]}], ",", 
          RowBox[{"Transpose", "@", 
           RowBox[{"{", "eventtimes", "}"}]}], ",", "2"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Pane", "[", 
          RowBox[{
           RowBox[{"Grid", "[", 
            RowBox[{
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", "Null", "}"}], ",", "##"}], "}"}], "&"}], "@@", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   SubscriptBox["\"\<k\>\"", "i"], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", 
                    RowBox[{"Length", "@", "#"}]}], "}"}]}], "]"}]}], ",", 
               RowBox[{"Join", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    SubscriptBox["\"\<i\>\"", "i"], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "0", ",", 
                    RowBox[{"imaxE", "-", "1"}]}], "}"}]}], "]"}], "}"}], ",",
                  "#"}], "]"}], ",", "2"}], "]"}], ",", 
             RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"220", ",", "300"}], "}"}], ",", 
           RowBox[{"Alignment", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Center", ",", "Top"}], "}"}]}]}], "]"}], "&"}], "/@", 
        "populations"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Pane", "[", 
          RowBox[{
           RowBox[{"Grid", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(P\), \(asyn\)]\)\>\"", ",", 
                 "\"\<\!\(\*SubscriptBox[\(P\), \(sync\)]\)\>\"", ",", 
                 "\"\<\!\(\*SubscriptBox[\(P\), \(apop\)]\)\>\"", ",", 
                 "\"\<\!\(\*SubscriptBox[\(P\), \(pass\)]\)\>\""}], "}"}], 
               ",", "#"}], "}"}], ",", 
             RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"400", ",", "300"}], "}"}], ",", 
           RowBox[{"Alignment", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Center", ",", "Top"}], "}"}]}]}], "]"}], "&"}], "/@", 
        "probabilities"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Pane", "[", 
          RowBox[{
           RowBox[{"Grid", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(P\), \(drv\)]\)\>\"", ",", 
                 "\"\<\!\(\*SubscriptBox[\(P\), \(\[EmptySet]\)]\)\>\"", ",", 
                 
                 
                 SubscriptBox["\"\<P\>\"", 
                  "\"\<\!\(\*OverscriptBox[\(drv\), \(_\)]\)\>\""]}], "}"}], 
               ",", "#"}], "}"}], ",", 
             RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"200", ",", "300"}], "}"}], ",", 
           RowBox[{"Alignment", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Center", ",", "Top"}], "}"}]}]}], "]"}], "&"}], "/@", 
        "geneprobabilities"}]}], "}"}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6641708920360823`*^9, 3.664170900149316*^9}, {
   3.6641718037106133`*^9, 3.6641718140035467`*^9}, 3.6641881350403347`*^9, 
   3.66418847819557*^9, {3.664259545169743*^9, 3.664259560706678*^9}, {
   3.664259604810298*^9, 3.6642596407426023`*^9}, {3.6642596720830603`*^9, 
   3.6642597037966623`*^9}, {3.664259771621407*^9, 3.664259823824683*^9}, {
   3.66425986197475*^9, 3.664259939675506*^9}, 3.6642599729093513`*^9, {
   3.6642600056001053`*^9, 3.664260015742032*^9}, {3.664260056327054*^9, 
   3.6642601034823427`*^9}, {3.664260136444551*^9, 3.664260193425829*^9}, {
   3.6642602243628283`*^9, 3.664260314719554*^9}, {3.664260432791502*^9, 
   3.664260494087759*^9}, 3.664260651212349*^9, {3.664260737261891*^9, 
   3.6642607760047293`*^9}, {3.66426125137136*^9, 3.664261362371282*^9}, 
   3.664261458348421*^9, {3.664261563463787*^9, 3.6642617170413437`*^9}, {
   3.664261787985126*^9, 3.664261789697624*^9}, {3.664627469735713*^9, 
   3.664627478039906*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vis", "[", 
  RowBox[{"[", "20", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.664177327854732*^9, 3.6641773444821463`*^9}, {
  3.664259986515018*^9, 3.664259986826331*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   PaneBox["20",
    Alignment->{Center, Top},
    ImageSize->{40, 300}], ",", 
   PaneBox[
    TagBox[
     TagBox[GridBox[{
        {
         StyleBox["\[Null]",
          ShowStringCharacters->False], 
         TagBox["\<\"drv\"\>",
          HoldForm], 
         TagBox["\<\"\\!\\(\\*OverscriptBox[\\(drv\\), \\(_\\)]\\)\"\>",
          HoldForm], 
         TagBox["\<\"k\"\>",
          HoldForm], 
         TagBox["\<\"mv1\"\>",
          HoldForm], 
         TagBox["\<\"mv2\"\>",
          HoldForm], 
         TagBox["\<\"mv3\"\>",
          HoldForm], 
         TagBox["\<\"mv4\"\>",
          HoldForm], 
         TagBox["\<\"\\!\\(\\*OverscriptBox[\\(mv5\\), \
\\(\[EmptySet]\\)]\\)\"\>",
          HoldForm], 
         TagBox["\<\"t=3.29462\"\>",
          HoldForm]},
        {
         TagBox["\<\"1\"\>",
          HoldForm], "1.`", "4.`", "1.`", "0.`", "0.`", "1.`", "0.`", "1.`", 
         "3.312092618470494`"},
        {
         TagBox["\<\"2\"\>",
          HoldForm], "1.`", "4.`", "1.`", "0.`", "0.`", "1.`", "0.`", "1.`", 
         "3.315686317574701`"},
        {
         TagBox["\<\"3\"\>",
          HoldForm], "0.`", "1.`", "1.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
         "3.5628226994302414`"},
        {
         TagBox["\<\"4\"\>",
          HoldForm], "1.`", "0.`", "1.`", "0.`", "0.`", "1.`", "0.`", "1.`", 
         "4.131576934027776`"},
        {
         TagBox["\<\"5\"\>",
          HoldForm], "1.`", "0.`", "1.`", "1.`", "0.`", "0.`", "0.`", "0.`", 
         "4.165543236945976`"},
        {
         TagBox["\<\"6\"\>",
          HoldForm], "0.`", "3.`", "1.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
         "4.259165908922608`"},
        {
         TagBox["\<\"7\"\>",
          HoldForm], "0.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
         "4.3586707580873005`"},
        {
         TagBox["\<\"8\"\>",
          HoldForm], "0.`", "3.`", "1.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
         "4.740530234612433`"},
        {
         TagBox["\<\"9\"\>",
          HoldForm], "1.`", "3.`", "1.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
         "5.276688295166327`"},
        {
         TagBox["\<\"10\"\>",
          HoldForm], "0.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
         "6.2320100614577845`"},
        {
         TagBox["\<\"11\"\>",
          HoldForm], "1.`", "0.`", "1.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
         "6.676418755134896`"},
        {
         TagBox["\<\"12\"\>",
          HoldForm], "0.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
         "7.1661437514036015`"},
        {
         TagBox["\<\"13\"\>",
          HoldForm], "1.`", "4.`", "1.`", "1.`", "0.`", "0.`", "0.`", "0.`", 
         "7.92324819180852`"},
        {
         TagBox["\<\"14\"\>",
          HoldForm], "1.`", "4.`", "1.`", "1.`", "0.`", "0.`", "0.`", "0.`", 
         "8.216900791678208`"},
        {
         TagBox["\<\"15\"\>",
          HoldForm], "1.`", "2.`", "1.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
         "9.686442768398434`"},
        {
         TagBox["\<\"16\"\>",
          HoldForm], "1.`", "0.`", "1.`", "1.`", "0.`", "0.`", "0.`", "1.`", 
         "9.759454679467495`"},
        {
         TagBox["\<\"17\"\>",
          HoldForm], "0.`", "3.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
         "10.009167744168748`"},
        {
         TagBox["\<\"18\"\>",
          HoldForm], "0.`", "1.`", "1.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
         "10.465403339832084`"},
        {
         TagBox["\<\"19\"\>",
          HoldForm], "0.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
         "11.89304251059085`"},
        {
         TagBox["\<\"20\"\>",
          HoldForm], "0.`", "4.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
         "15.568913792203178`"},
        {
         TagBox["\<\"21\"\>",
          HoldForm], "1.`", "2.`", "1.`", "0.`", "0.`", "1.`", "0.`", "1.`", 
         "15.829460039623719`"},
        {
         TagBox["\<\"22\"\>",
          HoldForm], "1.`", "0.`", "1.`", "1.`", "0.`", "0.`", "0.`", "1.`", 
         "18.593304517240657`"},
        {
         TagBox["\<\"23\"\>",
          HoldForm], "0.`", "3.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
         "19.496938174737394`"},
        {
         TagBox["\<\"24\"\>",
          HoldForm], "0.`", "4.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
         "20.362984897529934`"},
        {
         TagBox["\<\"25\"\>",
          HoldForm], "0.`", "4.`", "1.`", "0.`", "0.`", "0.`", "0.`", "0.`", 
         "23.693613529704432`"},
        {
         TagBox["\<\"26\"\>",
          HoldForm], "1.`", "0.`", "1.`", "0.`", "0.`", "1.`", "0.`", "1.`", 
         "24.061851409422786`"},
        {
         TagBox["\<\"27\"\>",
          HoldForm], "1.`", "0.`", "1.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
         "24.68709805790899`"},
        {
         TagBox["\<\"28\"\>",
          HoldForm], "1.`", "3.`", "1.`", "0.`", "0.`", "1.`", "0.`", "0.`", 
         "28.643017555895078`"},
        {
         TagBox["\<\"29\"\>",
          HoldForm], "0.`", "0.`", "1.`", "0.`", "0.`", "0.`", "0.`", "1.`", 
         "42.71327916989774`"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxDividers->{
        "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
         "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[2.0999999999999996`]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
     Function[BoxForm`e$, 
      TableForm[
      BoxForm`e$, 
       TableHeadings -> {{
         "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", 
          "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", 
          "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", 
          "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", 
          "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", 
          "58", "59", "60", "61", "62", "63", "64", "65", "66", "67", "68", 
          "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", 
          "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", 
          "91", "92", "93", "94", "95", "96", "97", "98", "99", "100", "101", 
          "102", "103", "104", "105", "106", "107", "108", "109", "110", 
          "111", "112", "113", "114", "115", "116", "117", "118", "119", 
          "120", "121", "122", "123", "124", "125", "126", "127", "128", 
          "129", "130", "131", "132", "133", "134", "135", "136", "137", 
          "138", "139", "140", "141", "142", "143", "144", "145", "146", 
          "147", "148", "149", "150", "151", "152"}, {
         "drv", "\!\(\*OverscriptBox[\(drv\), \(_\)]\)", "k", "mv1", "mv2", 
          "mv3", "mv4", "\!\(\*OverscriptBox[\(mv5\), \(\[EmptySet]\)]\)", 
          "t=3.29462"}}]]],
    Alignment->{Center, Top},
    AppearanceElements->None,
    ImageSize->{620, 300},
    ScrollPosition->{0., 0.},
    Scrollbars->True], ",", 
   PaneBox[
    TagBox[GridBox[{
       {"", 
        SubscriptBox["\<\"i\"\>", "0"], 
        SubscriptBox["\<\"i\"\>", "1"], 
        SubscriptBox["\<\"i\"\>", "2"], 
        SubscriptBox["\<\"i\"\>", "3"], 
        SubscriptBox["\<\"i\"\>", "4"]},
       {
        SubscriptBox["\<\"k\"\>", "1"], "14.`", "15.`", "0.`", "0.`", "0.`"},
       {
        SubscriptBox["\<\"k\"\>", "2"], "0.`", "0.`", "0.`", "0.`", "0.`"},
       {
        SubscriptBox["\<\"k\"\>", "3"], "0.`", "0.`", "0.`", "0.`", "0.`"}
      },
      AutoDelete->False,
      GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"],
    Alignment->{Center, Top},
    ImageSize->{220, 300}], ",", 
   PaneBox[
    TagBox[GridBox[{
       {"\<\"\\!\\(\\*SubscriptBox[\\(P\\), \\(asyn\\)]\\)\"\>", \
"\<\"\\!\\(\\*SubscriptBox[\\(P\\), \\(sync\\)]\\)\"\>", \
"\<\"\\!\\(\\*SubscriptBox[\\(P\\), \\(apop\\)]\\)\"\>", \
"\<\"\\!\\(\\*SubscriptBox[\\(P\\), \\(pass\\)]\\)\"\>"},
       {"0.`", "0.46995812838082196`", "0.48185621510015597`", 
        "0.04818565651902194`"}
      },
      AutoDelete->False,
      GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"],
    Alignment->{Center, Top},
    ImageSize->{400, 300}], ",", 
   PaneBox[
    TagBox[GridBox[{
       {"\<\"\\!\\(\\*SubscriptBox[\\(P\\), \\(drv\\)]\\)\"\>", \
"\<\"\\!\\(\\*SubscriptBox[\\(P\\), \\(\[EmptySet]\\)]\\)\"\>", 
        SubscriptBox["\<\"P\"\>", "\<\"\\!\\(\\*OverscriptBox[\\(drv\\), \\(_\
\\)]\\)\"\>"]},
       {"0.30000000000000004`", "0.5`", "0.2`"}
      },
      AutoDelete->False,
      GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"],
    Alignment->{Center, Top},
    ImageSize->{200, 300}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.664177346329412*^9, 3.6641773927888727`*^9, 3.664177450099991*^9, 
   3.664177634175352*^9, 3.6641777165844717`*^9, 3.664177782472892*^9, 
   3.664189454026366*^9, 3.66425893896474*^9, {3.664259628684716*^9, 
   3.664259642785174*^9}, {3.664259691010648*^9, 3.664259706045721*^9}, {
   3.664259777520151*^9, 3.6642598257787867`*^9}, {3.664259880314171*^9, 
   3.664259942320043*^9}, {3.6642599748817*^9, 3.664260017365757*^9}, 
   3.664260068221384*^9, 3.6642601116880083`*^9, {3.6642601491479397`*^9, 
   3.664260195007388*^9}, {3.664260234662755*^9, 3.664260316214858*^9}, {
   3.6642604626096907`*^9, 3.664260495619957*^9}, 3.664260652727277*^9, {
   3.664260764456662*^9, 3.6642607779948263`*^9}, {3.6642612617081947`*^9, 
   3.664261363707645*^9}, 3.664261459501998*^9, 3.664261565826221*^9, {
   3.664261603675837*^9, 3.664261718349841*^9}, 3.664261791553362*^9, 
   3.670063669774983*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Remove", "[", "i", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"up", "\[Equal]", "True"}], "&&", " ", 
       RowBox[{"i", "<", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Length", "[", "vis", "]"}], "-", "1"}], ")"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"i", "=", 
       RowBox[{"i", "+", "1"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
    RowBox[{"up", "=", "False"}], ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"down", "\[Equal]", "True"}], " ", "&&", " ", 
       RowBox[{"i", ">", "1"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"i", "=", 
       RowBox[{"i", "-", "1"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
    RowBox[{"down", "=", "False"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Pane", "[", 
     RowBox[{
      RowBox[{"Column", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Column", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Before\>\"", ",", 
             RowBox[{"Row", "[", 
              RowBox[{
               RowBox[{"vis", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"Alignment", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"Left", ",", "Top"}], "}"}]}]}], "]"}], ",", 
             "\"\<After\>\"", ",", 
             RowBox[{"Row", "[", 
              RowBox[{
               RowBox[{"vis", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", 
               RowBox[{"Alignment", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"Left", ",", "Top"}], "}"}]}]}], "]"}]}], "}"}], ",", 
           RowBox[{"Frame", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"All", ",", "None", ",", "All", ",", "None"}], "}"}]}]}],
           "]"}], ",", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
            RowBox[{"Row", "[", 
             RowBox[{"#", ",", "\"\<,  \>\""}], "]"}], "&"}], "@"}], "*)"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Show", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ListLinePlot", "[", "#", "]"}], ",", 
               RowBox[{"Graphics", "[", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"i", "+", "1"}], ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"i", "+", "1"}], ",", "100"}], "}"}]}], "}"}], 
                 "]"}], "]"}]}], "}"}], "]"}], "&"}], "/@", 
           RowBox[{"Transpose", "[", 
            RowBox[{
             RowBox[{"populations", "[", 
              RowBox[{"[", ";;", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ")"}]}], 
        "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"1600", ",", "800"}], "}"}], ",", 
      RowBox[{"AppearanceElements", "\[Rule]", 
       RowBox[{"{", "\"\<ResizeArea\>\"", "}"}]}], ",", 
      RowBox[{"Scrollbars", "\[Rule]", "True"}]}], "]"}]}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"j", ",", "False"}], "}"}], ",", "None"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Dynamic", "@", 
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<i=\>\"", ",", 
           RowBox[{"Dynamic", "[", "i", "]"}]}], "}"}], "]"}]}]}], "}"}], ",",
      "1", ",", 
     RowBox[{
      RowBox[{"Length", "[", "vis", "]"}], "-", "1"}], ",", "1", ",", 
     RowBox[{"ControlType", "\[Rule]", "Slider"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"up", ",", "False"}], "}"}], ",", "None"}], "}"}], ",", 
   RowBox[{"Button", "[", 
    RowBox[{"\"\<\[DoubleUpArrow]\>\"", ",", 
     RowBox[{"up", "=", "True"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"down", ",", "False"}], "}"}], ",", "None"}], "}"}], ",", 
   RowBox[{"Button", "[", 
    RowBox[{"\"\<\[DoubleDownArrow]\>\"", ",", 
     RowBox[{"down", "=", "True"}]}], "]"}], ",", 
   RowBox[{"Initialization", "\[RuleDelayed]", 
    RowBox[{"{", 
     RowBox[{"i", "=", "1"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.664171317330785*^9, 3.6641713559407253`*^9}, {
   3.66417140632747*^9, 3.664171551097527*^9}, {3.664171618827517*^9, 
   3.664171638411569*^9}, {3.664171895687026*^9, 3.6641718966322517`*^9}, {
   3.664171939607853*^9, 3.66417196865322*^9}, {3.66417246328564*^9, 
   3.66417246635745*^9}, {3.664172513038142*^9, 3.664172528953466*^9}, {
   3.664172590347836*^9, 3.664172594195396*^9}, 3.664172899183305*^9, {
   3.6641731505664186`*^9, 3.664173181453689*^9}, {3.664173926550486*^9, 
   3.664174005840043*^9}, {3.664174042274797*^9, 3.664174068092519*^9}, {
   3.66417414246867*^9, 3.66417418802945*^9}, {3.664174233692717*^9, 
   3.664174277785728*^9}, {3.664174313791646*^9, 3.664174483968609*^9}, 
   3.6641746203478813`*^9, {3.664174659300103*^9, 3.6641746638943253`*^9}, {
   3.664174702485264*^9, 3.664174727253829*^9}, {3.664174803238822*^9, 
   3.664174872733056*^9}, {3.664174912128092*^9, 3.664175038929516*^9}, {
   3.664175082730214*^9, 3.664175106826956*^9}, {3.664175145965557*^9, 
   3.664175150905674*^9}, {3.664175863821026*^9, 3.664175872762822*^9}, {
   3.664177969203969*^9, 3.664178024048512*^9}, {3.664178121431818*^9, 
   3.664178156625782*^9}, {3.664178337269343*^9, 3.66417833906654*^9}, {
   3.664178369103532*^9, 3.6641783970375233`*^9}, {3.664178810275166*^9, 
   3.664178821160062*^9}, 3.66417889186591*^9, {3.664190784272477*^9, 
   3.664190828196348*^9}, {3.664190863806612*^9, 3.664190918116837*^9}, {
   3.664190954745653*^9, 3.66419095754957*^9}, {3.6641912261061363`*^9, 
   3.664191236665607*^9}, {3.664192597627771*^9, 3.664192620356028*^9}, {
   3.664192666534103*^9, 3.664192703396667*^9}, {3.664258992744454*^9, 
   3.664259025352573*^9}, {3.6642590889228773`*^9, 3.6642591193781137`*^9}, {
   3.664259314077011*^9, 3.664259358207279*^9}, {3.6642593906956053`*^9, 
   3.664259473720366*^9}, {3.6642603551715183`*^9, 3.664260355899805*^9}, {
   3.6642605811336727`*^9, 3.6642605873831577`*^9}, {3.6642606927679367`*^9, 
   3.664260693640048*^9}, 3.664261828240052*^9, {3.664261914183943*^9, 
   3.66426192731673*^9}, {3.6642621966584263`*^9, 3.664262248771117*^9}, {
   3.6642623236377573`*^9, 3.6642624008845997`*^9}, {3.6642624364005136`*^9, 
   3.664262524961782*^9}, {3.664262571937936*^9, 3.6642626337264233`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`down$$ = False, $CellContext`i$$ = 
    1, $CellContext`j$$ = False, $CellContext`up$$ = False, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`j$$], False}, 0}, {{
       Hold[$CellContext`i$$], 1, 
       Dynamic[
        Row[{"i=", 
          Dynamic[$CellContext`i$$]}]]}, 1, 100, 1}, {{
       Hold[$CellContext`up$$], False}, 0}, {
      Hold[
       Button["\[DoubleUpArrow]", $CellContext`up$$ = True]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`down$$], False}, 0}, {
      Hold[
       Button["\[DoubleDownArrow]", $CellContext`down$$ = True]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    1600., {396., 404.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`i$337635$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`down$$ = False, $CellContext`i$$ = 
        1, $CellContext`j$$ = False, $CellContext`up$$ = False}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$337635$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> (If[
         And[$CellContext`up$$ == True, $CellContext`i$$ < 
          Length[$CellContext`vis] - 1], $CellContext`i$$ = $CellContext`i$$ + 
          1]; $CellContext`up$$ = False; If[
         And[$CellContext`down$$ == True, $CellContext`i$$ > 
          1], $CellContext`i$$ = $CellContext`i$$ - 1]; $CellContext`down$$ = 
        False; Pane[
         Column[{
           Column[{"Before", 
             Row[
              Part[$CellContext`vis, $CellContext`i$$], 
              Alignment -> {Left, Top}], "After", 
             Row[
              Part[$CellContext`vis, $CellContext`i$$ + 1], 
              Alignment -> {Left, Top}]}, Frame -> {All, None, All, None}], 
           Map[Show[{
              ListLinePlot[#], 
              Graphics[
               
               Line[{{$CellContext`i$$ + 1, 0}, {$CellContext`i$$ + 1, 
                  100}}]]}]& , 
            Transpose[
             Part[$CellContext`populations, 
              Span[1, All]], {3, 1, 2}]]}], {1600, 800}, 
         AppearanceElements -> {"ResizeArea"}, Scrollbars -> True]), 
      "Specifications" :> {{{$CellContext`j$$, False}, 0, ControlType -> 
         None}, {{$CellContext`i$$, 1, 
          Dynamic[
           Row[{"i=", 
             Dynamic[$CellContext`i$$]}]]}, 1, 100, 1, ControlType -> 
         Slider}, {{$CellContext`up$$, False}, 0, ControlType -> None}, 
        Button[
        "\[DoubleUpArrow]", $CellContext`up$$ = 
         True], {{$CellContext`down$$, False}, 0, ControlType -> None}, 
        Button["\[DoubleDownArrow]", $CellContext`down$$ = True]}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{1647., {467., 474.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`i$$ = 1}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.664262335589594*^9, 3.664262401367568*^9}, {
   3.664262451366776*^9, 3.664262525501213*^9}, {3.6642625779537497`*^9, 
   3.664262634219207*^9}, 3.670063669846187*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Manipulate Simulation", "Subsection",
 CellChangeTimes->{{3.657006576744567*^9, 3.6570065805686617`*^9}, 
   3.657007431809258*^9, 3.66289321186264*^9, {3.663222793000924*^9, 
   3.663222803202347*^9}, {3.6640178852552357`*^9, 3.6640178859541597`*^9}, 
   3.664091095108634*^9, {3.664181094736466*^9, 3.664181095302546*^9}, {
   3.6647122959965363`*^9, 3.6647123155809593`*^9}, {3.664712346461278*^9, 
   3.6647123484053097`*^9}, {3.664712540327819*^9, 3.664712543944065*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"multiInput", "[", 
    RowBox[{
     RowBox[{"Dynamic", "[", "in_", "]"}], ",", "size_"}], "]"}], ":=", 
   RowBox[{"Panel", "@", 
    RowBox[{"DynamicModule", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"Grid", "[", 
       RowBox[{"Outer", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"InputField", "[", 
           RowBox[{
            RowBox[{"Dynamic", "[", 
             RowBox[{"in", "[", 
              RowBox[{"[", 
               RowBox[{"#1", ",", "#2"}], "]"}], "]"}], "]"}], ",", 
            RowBox[{"FieldSize", "\[Rule]", "5"}]}], "]"}], "&"}], ",", 
         RowBox[{"{", "1", "}"}], ",", 
         RowBox[{"Range", "[", "size", "]"}]}], "]"}], "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
      "cen2", ",", "wide2", ",", "slope2", ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "Aasym2", ",", " ", 
       RowBox[{"(*", 
        RowBox[{
        "kmax", " ", "asymmetric", " ", "proliferation", " ", "rate", " ", 
         "amplitudes"}], " ", "*)"}], "\[IndentingNewLine]", "Asym2", ",", 
       " ", 
       RowBox[{"(*", 
        RowBox[{
        "kmax", " ", "symmetric", " ", "proliferation", " ", "rate", " ", 
         "amplitudes"}], " ", "*)"}], "\[IndentingNewLine]", "Aapop2", ",", 
       " ", 
       RowBox[{"(*", 
        RowBox[{"kmax", " ", "apoptotic", " ", "rate", " ", "amplitudes"}], 
        " ", "*)"}], "\[IndentingNewLine]", "Apass2", ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "imax2", ",", " ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"number", " ", "of", " ", "driver", " ", "mutations"}], "+", 
         
         RowBox[{"1", " ", 
          RowBox[{"(", 
           RowBox[{
           "for", " ", "the", " ", "non", " ", "mutated", " ", "case"}], 
           ")"}]}]}], "*)"}], "\[IndentingNewLine]", "kmax2", ",", " ", 
       RowBox[{"(*", 
        RowBox[{"number", " ", "of", " ", "compartments"}], "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "Ccell2", ",", 
       RowBox[{"(*", 
        RowBox[{
        "capacities", " ", "may", " ", "be", " ", "different", " ", "in", " ",
          "each", " ", "compartment"}], " ", "*)"}], "\[IndentingNewLine]", 
       "ratio2", ",", 
       RowBox[{"(*", 
        RowBox[{
        "imax", "*", "kmax", " ", "matrix", " ", "of", " ", "identical", " ", 
         "columns"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"EPCAMexp", "=", "1"}], ",", 
         RowBox[{"CD47exp", "=", "1"}], ",", 
         RowBox[{"CD44exp", "=", "1"}], ",", 
         RowBox[{"METexp", "=", "1"}], ",", 
         RowBox[{"EPCAMcnt", "=", "1"}], ",", 
         RowBox[{"CD47cnt", "=", "1"}], ",", 
         RowBox[{"CD44cnt", "=", "1"}], ",", 
         RowBox[{"METcnt", "=", "1"}], ","}], "*)"}], "\[IndentingNewLine]", 
       "expG2", ",", "cntG2", ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "compkeystep2", ",", "\[IndentingNewLine]", 
       "signature2", ",", " ", 
       RowBox[{"(*", 
        RowBox[{
        "the", " ", "0", " ", "is", " ", "for", " ", "the", " ", "semidriver",
          " ", "mutations"}], "*)"}], "\[IndentingNewLine]", 
       "maxsemidrivermut2", ",", " ", 
       RowBox[{"(*", 
        RowBox[{
        "maximum", " ", "number", " ", "of", " ", "semidriver", " ", 
         "mutations"}], "*)"}], "\[IndentingNewLine]", "maxnondrivermut2", 
       ",", " ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"this", " ", "is", " ", "mmax"}], ",", " ", 
         RowBox[{
         "the", " ", "maximum", " ", "number", " ", "of", " ", "non", " ", 
          "driver", " ", "mutations"}]}], "*)"}], "\[IndentingNewLine]", 
       "maxmjump2", ",", "\[IndentingNewLine]", 
       RowBox[{"maxtjump2", "=", "1.0"}], ",", 
       RowBox[{"(*", 
        RowBox[{"not", " ", "used"}], "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "Ntot2", ",", "Nmax2", ",", 
       RowBox[{"(*", 
        RowBox[{">", "Ntot"}], "*)"}], "\[IndentingNewLine]", "scegli2", ",", 
       
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"intero", " ", "tra", " ", "0", " ", "e", " ", "Ntot"}], "-",
          "Nmax"}], "*)"}], "\[IndentingNewLine]", "ctmax2", ",", "tmax2"}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"cen2", "=", "0.5"}], ";", 
       RowBox[{"wide2", "=", "20"}], ";", 
       RowBox[{"slope2", "=", "0.01"}], ";"}], "*)"}], "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"cen2", "=", "0.5"}], ";", 
      RowBox[{"wide2", "=", "widectrl"}], ";", 
      RowBox[{"slope2", "=", "slopectrl"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Aasym2", "=", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ";", " ", 
        RowBox[{"(*", 
         RowBox[{
         "kmax", " ", "asymmetric", " ", "proliferation", " ", "rate", " ", 
          "amplitudes"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Asym2", "=", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ";", " ", 
        RowBox[{"(*", 
         RowBox[{
         "kmax", " ", "symmetric", " ", "proliferation", " ", "rate", " ", 
          "amplitudes"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Aapop2", "=", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ";", " ", 
        RowBox[{"(*", 
         RowBox[{"kmax", " ", "apoptotic", " ", "rate", " ", "amplitudes"}], 
         " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Apass2", "=", "0.1"}], ";"}], "*)"}], "\[IndentingNewLine]", 
      
      RowBox[{"Aasym2", "=", 
       RowBox[{"{", 
        RowBox[{"Aasymctrl", ",", "Aasymctrl", ",", "Aasymctrl"}], "}"}]}], 
      ";", " ", 
      RowBox[{"(*", 
       RowBox[{
       "kmax", " ", "asymmetric", " ", "proliferation", " ", "rate", " ", 
        "amplitudes"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Asym2", "=", 
       RowBox[{"{", 
        RowBox[{"Asymctrl", ",", "Asymctrl", ",", "Asymctrl"}], "}"}]}], ";", 
      " ", 
      RowBox[{"(*", 
       RowBox[{
       "kmax", " ", "symmetric", " ", "proliferation", " ", "rate", " ", 
        "amplitudes"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Aapop2", "=", 
       RowBox[{"{", 
        RowBox[{"Aapopctrl", ",", "Aapopctrl", ",", "Aapopctrl"}], "}"}]}], 
      ";", " ", 
      RowBox[{"(*", 
       RowBox[{"kmax", " ", "apoptotic", " ", "rate", " ", "amplitudes"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Apass2", "=", "Apassctrl"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"imax2", "=", "5"}], ";", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"number", " ", "of", " ", "driver", " ", "mutations"}], "+", 
          RowBox[{"1", " ", 
           RowBox[{"(", 
            RowBox[{
            "for", " ", "the", " ", "non", " ", "mutated", " ", "case"}], 
            ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"kmax2", "=", "3"}], ";"}], " ", 
       RowBox[{"(*", 
        RowBox[{"number", " ", "of", " ", "compartments"}], "*)"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"imax2", "=", "imaxctrl"}], ";", "\[IndentingNewLine]", 
      RowBox[{"kmax2", "=", "kmaxctrl"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Ccell2", "=", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"100", ",", "kmax2"}], "]"}]}], ";"}], "*)"}], 
      RowBox[{"(*", 
       RowBox[{
       "capacities", " ", "may", " ", "be", " ", "different", " ", "in", " ", 
        "each", " ", "compartment"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Ccell2", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Take", "[", 
             RowBox[{"#", ",", "kmax2"}], "]"}], "&"}], ",", 
           RowBox[{"Take", "[", 
            RowBox[{"Ccellctrl", ",", "1"}], "]"}]}], "]"}], ",", "kmax2"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"ratio2", "=", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1.2"}], "}"}], 
           ",", "kmax2"}], "]"}]}], ";"}], "*)"}], 
      RowBox[{"(*", 
       RowBox[{
       "imax", "*", "kmax", " ", "matrix", " ", "of", " ", "identical", " ", 
        "columns"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ratio2", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Take", "[", 
             RowBox[{"#", ",", "imax2"}], "]"}], "&"}], ",", 
           RowBox[{"Take", "[", 
            RowBox[{"ratioctrl", ",", "1"}], "]"}]}], "]"}], ",", "imax2"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"EPCAMexp", "=", "1"}], ";", 
        RowBox[{"CD47exp", "=", "1"}], ";", 
        RowBox[{"CD44exp", "=", "1"}], ";", 
        RowBox[{"METexp", "=", "1"}], ";", 
        RowBox[{"EPCAMcnt", "=", "1"}], ";", 
        RowBox[{"CD47cnt", "=", "1"}], ";", 
        RowBox[{"CD44cnt", "=", "1"}], ";", 
        RowBox[{"METcnt", "=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"expG2", "=", 
         RowBox[{"{", 
          RowBox[{
          "EPCAMexp", ",", "CD47exp", ",", "CD44exp", ",", "METexp", ",", 
           "1"}], "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"cntG2", "=", 
         RowBox[{"{", 
          RowBox[{
          "EPCAMcnt", ",", "CD47cnt", ",", "CD44cnt", ",", "METcnt", ",", 
           "\[ExponentialE]"}], "}"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"expG2", "=", 
       RowBox[{"{", 
        RowBox[{
        "EPCAMexpctrl", ",", "CD47expctrl", ",", "CD44expctrl", ",", 
         "METexpctrl", ",", 
         RowBox[{"(*", "1.", "*)"}], " ", "1."}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cntG2", "=", 
       RowBox[{"{", 
        RowBox[{
        "EPCAMcntctrl", ",", "CD47cntctrl", ",", "CD44cntctrl", ",", 
         "METcntctrl", ",", 
         RowBox[{"(*", "\[ExponentialE]", "*)"}], " ", "1."}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"compkeystep2", "=", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "4"}], "}"}]}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"compkeystep2", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Take", "[", 
           RowBox[{"#", ",", "kmax2"}], "]"}], "&"}], ",", 
         RowBox[{"Take", "[", 
          RowBox[{"compkeystepctrl", ",", "1"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"signature2", "=", "signaturectrl"}], "  ", 
        RowBox[{"(*", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "0"}], "}"}], "*)"}], 
        ";"}], " ", 
       RowBox[{"(*", 
        RowBox[{
        "the", " ", "0", " ", "is", " ", "for", " ", "the", " ", "semidriver",
          " ", "mutations"}], "*)"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"signature2", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Take", "[", 
           RowBox[{"#", ",", "imax2"}], "]"}], "&"}], ",", 
         RowBox[{"Take", "[", 
          RowBox[{"signaturectrl", ",", "1"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"maxsemidrivermut2", "=", "6"}], ";", " ", 
        RowBox[{"(*", 
         RowBox[{
         "maximum", " ", "number", " ", "of", " ", "semidriver", " ", 
          "mutations"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"maxnondrivermut2", "=", "6"}], ";", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"this", " ", "is", " ", "mmax"}], ",", " ", 
          RowBox[{
          "the", " ", "maximum", " ", "number", " ", "of", " ", "non", " ", 
           "driver", " ", "mutations"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"maxmjump2", "=", "5"}], ";", "\[IndentingNewLine]", 
        RowBox[{"maxtjump2", "=", "10."}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"maxsemidrivermut2", "=", "maxsemidrivermutctrl"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"maxnondrivermut2", "=", "maxnondrivermutctrl"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"maxmjump2", "=", "maxmjumpctrl"}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"maxtjump2", "=", "maxtjumpctrl"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Ntot2", "=", "10"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Nmax2", "=", "150"}], ";", 
      RowBox[{"(*", 
       RowBox[{">", "Ntot"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"scegli2", "=", "0"}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"intero", " ", "tra", " ", "0", " ", "e", " ", "Ntot"}], "-", 
        "Nmax"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ctmax2", "=", "100"}], ";", 
      RowBox[{"tmax2", "=", "30"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Ntot2", "=", "Ntotctrl"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Nmax2", "=", "Nmaxctrl"}], ";", "\[IndentingNewLine]", 
      RowBox[{"scegli2", "=", "sceglictrl"}], ";", 
      RowBox[{"(*", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", "--"}]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ctmax2", "=", "ctmaxctrl"}], ";", 
      RowBox[{"tmax2", "=", "tmaxctrl"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"rawresults", "=", 
       RowBox[{"Main2", "[", "\[IndentingNewLine]", 
        RowBox[{
        "Ntot2", ",", "Nmax2", ",", "scegli2", ",", "kmax2", ",", "imax2", 
         ",", "maxsemidrivermut2", ",", "\[IndentingNewLine]", 
         "maxnondrivermut2", ",", "signature2", ",", "compkeystep2", ",", 
         "expG2", ",", "cntG2", ",", "ctmax2", ",", "\[IndentingNewLine]", 
         "tmax2", ",", "maxmjump2", ",", "maxtjump2", ",", "Aasym2", ",", 
         "Asym2", ",", "Aapop2", ",", "\[IndentingNewLine]", "Apass2", ",", 
         "cen2", ",", "wide2", ",", "slope2", ",", "ratio2"}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "Delimiter", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"kmaxctrl", ",", "3", ",", "\"\<# of compartments\>\""}], "}"}],
      ",", 
     RowBox[{"Range", "[", "5", "]"}], ",", "PopupMenu"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Ntotctrl", ",", "20", ",", "\"\<max # of cells (CAs)\>\""}], 
      "}"}], ",", 
     RowBox[{"Sort", "@", 
      RowBox[{"Flatten", "@", 
       RowBox[{"Outer", "[", 
        RowBox[{"Times", ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "10", ",", "20"}], "}"}], ",", 
         RowBox[{"10", "^", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "2", ",", "3"}], "}"}]}]}], "]"}]}]}], 
     ",", "PopupMenu"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Nmaxctrl", ",", "10", ",", "\"\<initial # of cells\>\""}], 
      "}"}], ",", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"Sort", "@", 
        RowBox[{"Flatten", "@", 
         RowBox[{"Outer", "[", 
          RowBox[{"Times", ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "10", ",", "20"}], "}"}], ",", 
           RowBox[{"10", "^", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1", ",", "2", ",", "3"}], "}"}]}]}], 
          "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"#", "<", "Ntotctrl"}], "&"}]}], "]"}], ",", "PopupMenu"}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sceglictrl", ",", "5", ",", "\"\<cell distribution\>\""}], 
      "}"}], ",", "1", ",", 
     RowBox[{"Ntotctrl", "-", "Nmaxctrl"}], ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ctmaxctrl", ",", "10", ",", "\"\<max # of cycles\>\""}], "}"}],
      ",", "10", ",", "1000", ",", "10", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "tmaxctrl", ",", "10", ",", "\"\<total simulation time[d]\>\""}], "}"}],
      ",", "10", ",", "1000", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "Delimiter", ",", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"imaxctrl", ",", "5", ",", "\"\<max # of driver\>\""}], "}"}], 
     ",", 
     RowBox[{"Range", "[", "8", "]"}], ",", "PopupMenu"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"compkeystepctrl", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"kmaxctrl", "\[Equal]", "3"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "4"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Range", "[", "kmaxctrl", "]"}], "}"}]}], "]"}], ",", 
       "\"\<groupped driver index\>\""}], "}"}], ",", 
     RowBox[{
      RowBox[{"multiInput", "[", 
       RowBox[{"#", ",", "kmaxctrl"}], "]"}], "&"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "maxsemidrivermutctrl", ",", "6", ",", "\"\<max # of semidriver\>\""}], 
      "}"}], ",", 
     RowBox[{"Range", "[", "8", "]"}], ",", "PopupMenu"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "maxnondrivermutctrl", ",", "6", ",", "\"\<max # of nondriver\>\""}], 
      "}"}], ",", 
     RowBox[{"Range", "[", "30", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"maxmjumpctrl", ",", "5", ",", "\"\<nondriver extension\>\""}], 
      "}"}], ",", 
     RowBox[{"Range", "[", "10", "]"}]}], 
    RowBox[{"(*", 
     RowBox[{",", "PopupMenu"}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"maxtjumpctrl", ",", "10", ",", "\"\<max time step\>\""}], 
        "}"}], ",", "0.01", ",", "10"}], 
      RowBox[{"(*", 
       RowBox[{",", "PopupMenu"}], "*)"}], "}"}], ","}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "Delimiter", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"widectrl", ",", "20", ",", "\"\<support width\>\""}], "}"}], 
     ",", "1", ",", "40", 
     RowBox[{"(*", 
      RowBox[{",", "Slider"}], "*)"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"slopectrl", ",", "0.01", ",", "\"\<suppoprt slope\>\""}], 
      "}"}], ",", "0.001", ",", "0.02", 
     RowBox[{"(*", 
      RowBox[{",", "Slider"}], "*)"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "Delimiter", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "Aasymctrl", ",", "1", ",", 
       "\"\<asymmetric rate[\!\(\*SuperscriptBox[\(d\), \(-1\)]\)]\>\""}], 
      "}"}], ",", "0", ",", "2", 
     RowBox[{"(*", 
      RowBox[{",", "Slider"}], "*)"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "Asymctrl", ",", "1", ",", 
       "\"\<symmetric rate[\!\(\*SuperscriptBox[\(d\), \(-1\)]\)]\>\""}], 
      "}"}], ",", "0", ",", "2", 
     RowBox[{"(*", 
      RowBox[{",", "Slider"}], "*)"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "Aapopctrl", ",", "1", ",", 
       "\"\<apoptosis rate[\!\(\*SuperscriptBox[\(d\), \(-1\)]\)]\>\""}], 
      "}"}], ",", "0", ",", "2", 
     RowBox[{"(*", 
      RowBox[{",", "Slider"}], "*)"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "Apassctrl", ",", "1", ",", 
       "\"\<migration rate[\!\(\*SuperscriptBox[\(d\), \(-1\)]\)]\>\""}], 
      "}"}], ",", "0", ",", "2", 
     RowBox[{"(*", 
      RowBox[{",", "Slider"}], "*)"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "Delimiter", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"signaturectrl", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"imaxctrl", "\[Equal]", "5"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "0"}], "}"}], "}"}], 
         ",", 
         RowBox[{"Table", "[", 
          RowBox[{"1", ",", 
           RowBox[{"{", "1", "}"}], ",", 
           RowBox[{"{", "imaxctrl", "}"}]}], "]"}]}], "]"}], ",", 
       "\"\<GE deregulation sign\>\""}], "}"}], ",", 
     RowBox[{
      RowBox[{"multiInput", "[", 
       RowBox[{"#", ",", "imaxctrl"}], "]"}], "&"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"EPCAMexpctrl", ",", "1", ",", "\"\<EPICAM\>\""}], "}"}], ",", 
     "1", ",", "10", ",", "Slider", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"CD47expctrl", ",", "1", ",", "\"\<CD47\>\""}], "}"}], ",", "1",
      ",", "10", ",", "Slider", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"CD44expctrl", ",", "1", ",", "\"\<CD44\>\""}], "}"}], ",", "1",
      ",", "10", ",", "Slider", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"METexpctrl", ",", "1", ",", "\"\<MET\>\""}], "}"}], ",", "1", 
     ",", "10", ",", "Slider", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "EPCAMcntctrl", ",", "1", ",", 
       "\"\<\!\(\*SubscriptBox[\(EPICAM\), \(0\)]\)\>\""}], "}"}], ",", "1", 
     ",", "10", ",", "Slider", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "CD47cntctrl", ",", "1", ",", 
       "\"\<\!\(\*SubscriptBox[\(CD47\), \(0\)]\)\>\""}], "}"}], ",", "1", 
     ",", "10", ",", "Slider", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "CD44cntctrl", ",", "1", ",", 
       "\"\<\!\(\*SubscriptBox[\(CD44\), \(0\)]\)\>\""}], "}"}], ",", "1", 
     ",", "10", ",", "Slider", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "METcntctrl", ",", "1", ",", 
       "\"\<\!\(\*SubscriptBox[\(MET\), \(0\)]\)\>\""}], "}"}], ",", "1", ",",
      "10", ",", "Slider", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "Delimiter", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ratioctrl", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"imaxctrl", "\[Equal]", "5"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1.2"}], "}"}], 
          "}"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{"1", ",", 
           RowBox[{"{", "1", "}"}], ",", 
           RowBox[{"{", "imaxctrl", "}"}]}], "]"}]}], "]"}], ",", 
       "\"\<cell volumetric ratio\>\""}], "}"}], ",", 
     RowBox[{
      RowBox[{"multiInput", "[", 
       RowBox[{"#", ",", "imaxctrl"}], "]"}], "&"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Ccellctrl", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"kmaxctrl", "\[Equal]", "3"}], ",", 
         RowBox[{"{", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"100", ",", "kmaxctrl"}], "]"}], "}"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{"1", ",", 
           RowBox[{"{", "1", "}"}], ",", 
           RowBox[{"{", "kmaxctrl", "}"}]}], "]"}]}], "]"}], ",", 
       "\"\<compartment capacity\>\""}], "}"}], ",", 
     RowBox[{
      RowBox[{"multiInput", "[", 
       RowBox[{"#", ",", "kmaxctrl"}], "]"}], "&"}]}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.664712430041626*^9, 3.6647124455431147`*^9}, {
   3.6647125863798113`*^9, 3.664712591989334*^9}, {3.664712701755258*^9, 
   3.664712822375133*^9}, {3.664712907022346*^9, 3.664712953927248*^9}, {
   3.664713657650344*^9, 3.664713683532234*^9}, {3.6647137584947042`*^9, 
   3.664713784299172*^9}, {3.664713820377006*^9, 3.664713824154858*^9}, {
   3.664713950276133*^9, 3.664713983138693*^9}, {3.664714510534752*^9, 
   3.6647146065047607`*^9}, {3.664714709045141*^9, 3.664714736857259*^9}, {
   3.664714774806584*^9, 3.6647147802663403`*^9}, {3.664714967131406*^9, 
   3.664715117318213*^9}, {3.664715156846477*^9, 3.664715295839551*^9}, {
   3.664715356124069*^9, 3.664715356377736*^9}, {3.66471544995455*^9, 
   3.664715491099793*^9}, {3.6647171365654297`*^9, 3.6647171407319593`*^9}, {
   3.665387511374653*^9, 3.665387514019188*^9}, {3.6653875720295897`*^9, 
   3.665387582515888*^9}, {3.665387674281312*^9, 3.66538783230658*^9}, {
   3.665388098252714*^9, 3.665388100113715*^9}, {3.665388168161099*^9, 
   3.665388327789805*^9}, {3.6653883970613947`*^9, 3.665388464024935*^9}, {
   3.665389026619664*^9, 3.665389027099347*^9}, {3.665389064167247*^9, 
   3.665389068784638*^9}, {3.6653891050501757`*^9, 3.6653892169104233`*^9}, {
   3.6653892517185173`*^9, 3.665389296550149*^9}, {3.665389352836182*^9, 
   3.6653893735403957`*^9}, {3.665389406089098*^9, 3.665389431219027*^9}, {
   3.665389462922893*^9, 3.6653894702324133`*^9}, {3.665389525444283*^9, 
   3.6653895630346212`*^9}, {3.665389596630241*^9, 3.665389597024818*^9}, {
   3.6653896400743647`*^9, 3.66538976841225*^9}, {3.665389864850143*^9, 
   3.6653898701746693`*^9}, {3.66539220138664*^9, 3.665392273253631*^9}, {
   3.665392414384861*^9, 3.665392450879367*^9}, {3.665392505083416*^9, 
   3.6653925511752977`*^9}, {3.6653926444259357`*^9, 3.665392771797567*^9}, {
   3.6653930049093924`*^9, 3.665393107206654*^9}, 3.6653931396572657`*^9, {
   3.665469726262745*^9, 3.665469741601358*^9}, {3.665469804484014*^9, 
   3.665469829789703*^9}, {3.665469930240364*^9, 3.66546993928729*^9}, {
   3.665469980530283*^9, 3.665469999057548*^9}, {3.665470036018962*^9, 
   3.665470070384149*^9}, {3.665470111463793*^9, 3.665470111902932*^9}, {
   3.665470349753405*^9, 3.665470362397642*^9}, {3.6654704545525723`*^9, 
   3.665470490174385*^9}, 3.6654705244573793`*^9, {3.665470557650773*^9, 
   3.6654705741936283`*^9}, {3.665470643689432*^9, 3.66547068829319*^9}, {
   3.6654708023558903`*^9, 3.665471003092038*^9}, {3.665471038836211*^9, 
   3.665471043339422*^9}, {3.665471080133191*^9, 3.665471080706668*^9}, {
   3.6654711569049387`*^9, 3.6654711815750628`*^9}, {3.665471273116529*^9, 
   3.665471321038843*^9}, {3.6654713619642143`*^9, 3.665471411639064*^9}, {
   3.665471567775782*^9, 3.66547160928664*^9}, {3.665471698697569*^9, 
   3.665471704479382*^9}, {3.665473224143422*^9, 3.665473256080196*^9}, {
   3.665473388870048*^9, 3.665473421557654*^9}, {3.6654735824106407`*^9, 
   3.665473615148226*^9}, {3.6654744633524427`*^9, 3.665474499829234*^9}, {
   3.665474551937154*^9, 3.665474615808257*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Aapopctrl$$ = 1, $CellContext`Aasymctrl$$ = 
    1, $CellContext`Apassctrl$$ = 1, $CellContext`Asymctrl$$ = 
    1, $CellContext`Ccellctrl$$ = If[$CellContext`kmaxctrl$$ == 3, {
      ConstantArray[100, $CellContext`kmaxctrl$$]}, 
     Table[1, {1}, {$CellContext`kmaxctrl$$}]], $CellContext`CD44cntctrl$$ = 
    1, $CellContext`CD44expctrl$$ = 1, $CellContext`CD47cntctrl$$ = 
    1, $CellContext`CD47expctrl$$ = 1, $CellContext`compkeystepctrl$$ = 
    If[$CellContext`kmaxctrl$$ == 3, {{1, 2, 4}}, {
      Range[$CellContext`kmaxctrl$$]}], $CellContext`ctmaxctrl$$ = 
    10, $CellContext`EPCAMcntctrl$$ = 1, $CellContext`EPCAMexpctrl$$ = 
    1, $CellContext`imaxctrl$$ = 5, $CellContext`kmaxctrl$$ = 
    3, $CellContext`maxmjumpctrl$$ = 5, $CellContext`maxnondrivermutctrl$$ = 
    6, $CellContext`maxsemidrivermutctrl$$ = 6, $CellContext`METcntctrl$$ = 
    1, $CellContext`METexpctrl$$ = 1, $CellContext`Nmaxctrl$$ = 
    10, $CellContext`Ntotctrl$$ = 20, $CellContext`ratioctrl$$ = 
    If[$CellContext`imaxctrl$$ == 5, {{1, 1, 1, 1, 1.2}}, 
     Table[1, {1}, {$CellContext`imaxctrl$$}]], $CellContext`sceglictrl$$ = 
    5, $CellContext`signaturectrl$$ = 
    If[$CellContext`imaxctrl$$ == 5, {{1, -1, 1, 1, 0}}, 
     Table[1, {1}, {$CellContext`imaxctrl$$}]], $CellContext`slopectrl$$ = 
    0.01, $CellContext`tmaxctrl$$ = 10, $CellContext`widectrl$$ = 20, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`kmaxctrl$$], 3, "# of compartments"}, {1, 2, 3, 4, 
      5}}, {{
       Hold[$CellContext`Ntotctrl$$], 20, "max # of cells (CAs)"}, {5, 10, 20,
       50, 100, 200, 500, 1000, 2000, 5000, 10000, 20000}}, {{
       Hold[$CellContext`Nmaxctrl$$], 10, "initial # of cells"}, 
      Dynamic[
       Select[
        Sort[
         Flatten[
          Outer[
          Times, {5, 10, 20}, 
           10^{0, 1, 2, 3}]]], # < $CellContext`Ntotctrl$$& ]]}, {{
       Hold[$CellContext`sceglictrl$$], 5, "cell distribution"}, 1, 
      Dynamic[$CellContext`Ntotctrl$$ - $CellContext`Nmaxctrl$$], 1}, {{
       Hold[$CellContext`ctmaxctrl$$], 10, "max # of cycles"}, 10, 1000, 
      10}, {{
       Hold[$CellContext`tmaxctrl$$], 10, "total simulation time[d]"}, 10, 
      1000}, {{
       Hold[$CellContext`imaxctrl$$], 5, "max # of driver"}, {1, 2, 3, 4, 5, 
      6, 7, 8}}, {{
       Hold[$CellContext`compkeystepctrl$$], 
       If[$CellContext`kmaxctrl$$ == 3, {{1, 2, 4}}, {
         Range[$CellContext`kmaxctrl$$]}], "groupped driver index"}, 
      Dynamic[$CellContext`multiInput[#, $CellContext`kmaxctrl$$]& ]}, {{
       Hold[$CellContext`maxsemidrivermutctrl$$], 6, "max # of semidriver"}, {
      1, 2, 3, 4, 5, 6, 7, 8}}, {{
       Hold[$CellContext`maxnondrivermutctrl$$], 6, "max # of nondriver"}, {1,
       2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
       22, 23, 24, 25, 26, 27, 28, 29, 30}}, {{
       Hold[$CellContext`maxmjumpctrl$$], 5, "nondriver extension"}, {1, 2, 3,
       4, 5, 6, 7, 8, 9, 10}}, {{
       Hold[$CellContext`widectrl$$], 20, "support width"}, 1, 40}, {{
       Hold[$CellContext`slopectrl$$], 0.01, "suppoprt slope"}, 0.001, 
      0.02}, {{
       Hold[$CellContext`Aasymctrl$$], 1, 
       "asymmetric rate[\!\(\*SuperscriptBox[\(d\), \(-1\)]\)]"}, 0, 2}, {{
       Hold[$CellContext`Asymctrl$$], 1, 
       "symmetric rate[\!\(\*SuperscriptBox[\(d\), \(-1\)]\)]"}, 0, 2}, {{
       Hold[$CellContext`Aapopctrl$$], 1, 
       "apoptosis rate[\!\(\*SuperscriptBox[\(d\), \(-1\)]\)]"}, 0, 2}, {{
       Hold[$CellContext`Apassctrl$$], 1, 
       "migration rate[\!\(\*SuperscriptBox[\(d\), \(-1\)]\)]"}, 0, 2}, {{
       Hold[$CellContext`signaturectrl$$], 
       If[$CellContext`imaxctrl$$ == 5, {{1, -1, 1, 1, 0}}, 
        Table[1, {1}, {$CellContext`imaxctrl$$}]], "GE deregulation sign"}, 
      Dynamic[$CellContext`multiInput[#, $CellContext`imaxctrl$$]& ]}, {{
       Hold[$CellContext`EPCAMexpctrl$$], 1, "EPICAM"}, 1, 10}, {{
       Hold[$CellContext`CD47expctrl$$], 1, "CD47"}, 1, 10}, {{
       Hold[$CellContext`CD44expctrl$$], 1, "CD44"}, 1, 10}, {{
       Hold[$CellContext`METexpctrl$$], 1, "MET"}, 1, 10}, {{
       Hold[$CellContext`EPCAMcntctrl$$], 1, 
       "\!\(\*SubscriptBox[\(EPICAM\), \(0\)]\)"}, 1, 10}, {{
       Hold[$CellContext`CD47cntctrl$$], 1, 
       "\!\(\*SubscriptBox[\(CD47\), \(0\)]\)"}, 1, 10}, {{
       Hold[$CellContext`CD44cntctrl$$], 1, 
       "\!\(\*SubscriptBox[\(CD44\), \(0\)]\)"}, 1, 10}, {{
       Hold[$CellContext`METcntctrl$$], 1, 
       "\!\(\*SubscriptBox[\(MET\), \(0\)]\)"}, 1, 10}, {{
       Hold[$CellContext`ratioctrl$$], 
       If[$CellContext`imaxctrl$$ == 5, {{1, 1, 1, 1, 1.2}}, 
        Table[1, {1}, {$CellContext`imaxctrl$$}]], "cell volumetric ratio"}, 
      Dynamic[$CellContext`multiInput[#, $CellContext`imaxctrl$$]& ]}, {{
       Hold[$CellContext`Ccellctrl$$], 
       If[$CellContext`kmaxctrl$$ == 3, {
         ConstantArray[100, $CellContext`kmaxctrl$$]}, 
        Table[1, {1}, {$CellContext`kmaxctrl$$}]], "compartment capacity"}, 
      Dynamic[$CellContext`multiInput[#, $CellContext`kmaxctrl$$]& ]}}, 
    Typeset`size$$ = {39131.5, {20579., 51.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`kmaxctrl$357839$$ = 0, $CellContext`Ntotctrl$357840$$ =
     0, $CellContext`sceglictrl$357841$$ = 
    0, $CellContext`ctmaxctrl$357842$$ = 0, $CellContext`tmaxctrl$357843$$ = 
    0, $CellContext`imaxctrl$357844$$ = 
    0, $CellContext`maxsemidrivermutctrl$357845$$ = 
    0, $CellContext`maxnondrivermutctrl$357846$$ = 
    0, $CellContext`maxmjumpctrl$357847$$ = 
    0, $CellContext`widectrl$357848$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`Aapopctrl$$ = 1, $CellContext`Aasymctrl$$ = 
        1, $CellContext`Apassctrl$$ = 1, $CellContext`Asymctrl$$ = 
        1, $CellContext`Ccellctrl$$ = If[$CellContext`kmaxctrl$$ == 3, {
           ConstantArray[100, $CellContext`kmaxctrl$$]}, 
          Table[
          1, {1}, {$CellContext`kmaxctrl$$}]], $CellContext`CD44cntctrl$$ = 
        1, $CellContext`CD44expctrl$$ = 1, $CellContext`CD47cntctrl$$ = 
        1, $CellContext`CD47expctrl$$ = 1, $CellContext`compkeystepctrl$$ = 
        If[$CellContext`kmaxctrl$$ == 3, {{1, 2, 4}}, {
           Range[$CellContext`kmaxctrl$$]}], $CellContext`ctmaxctrl$$ = 
        10, $CellContext`EPCAMcntctrl$$ = 1, $CellContext`EPCAMexpctrl$$ = 
        1, $CellContext`imaxctrl$$ = 5, $CellContext`kmaxctrl$$ = 
        3, $CellContext`maxmjumpctrl$$ = 
        5, $CellContext`maxnondrivermutctrl$$ = 
        6, $CellContext`maxsemidrivermutctrl$$ = 6, $CellContext`METcntctrl$$ = 
        1, $CellContext`METexpctrl$$ = 1, $CellContext`Nmaxctrl$$ = 
        10, $CellContext`Ntotctrl$$ = 20, $CellContext`ratioctrl$$ = 
        If[$CellContext`imaxctrl$$ == 5, {{1, 1, 1, 1, 1.2}}, 
          Table[
          1, {1}, {$CellContext`imaxctrl$$}]], $CellContext`sceglictrl$$ = 
        5, $CellContext`signaturectrl$$ = 
        If[$CellContext`imaxctrl$$ == 5, {{1, -1, 1, 1, 0}}, 
          Table[1, {1}, {$CellContext`imaxctrl$$}]], $CellContext`slopectrl$$ = 
        0.01, $CellContext`tmaxctrl$$ = 10, $CellContext`widectrl$$ = 20}, 
      "ControllerVariables" :> {
        Hold[$CellContext`kmaxctrl$$, $CellContext`kmaxctrl$357839$$, 0], 
        Hold[$CellContext`Ntotctrl$$, $CellContext`Ntotctrl$357840$$, 0], 
        Hold[$CellContext`sceglictrl$$, $CellContext`sceglictrl$357841$$, 0], 
        
        Hold[$CellContext`ctmaxctrl$$, $CellContext`ctmaxctrl$357842$$, 0], 
        Hold[$CellContext`tmaxctrl$$, $CellContext`tmaxctrl$357843$$, 0], 
        Hold[$CellContext`imaxctrl$$, $CellContext`imaxctrl$357844$$, 0], 
        Hold[$CellContext`maxsemidrivermutctrl$$, \
$CellContext`maxsemidrivermutctrl$357845$$, 0], 
        Hold[$CellContext`maxnondrivermutctrl$$, \
$CellContext`maxnondrivermutctrl$357846$$, 0], 
        Hold[$CellContext`maxmjumpctrl$$, $CellContext`maxmjumpctrl$357847$$, 
         0], 
        Hold[$CellContext`widectrl$$, $CellContext`widectrl$357848$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Block[{$CellContext`cen2, $CellContext`wide2, $CellContext`slope2, \
$CellContext`Aasym2, $CellContext`Asym2, $CellContext`Aapop2, \
$CellContext`Apass2, $CellContext`imax2, $CellContext`kmax2, \
$CellContext`Ccell2, $CellContext`ratio2, $CellContext`expG2, \
$CellContext`cntG2, $CellContext`compkeystep2, $CellContext`signature2, \
$CellContext`maxsemidrivermut2, $CellContext`maxnondrivermut2, \
$CellContext`maxmjump2, $CellContext`maxtjump2 = 
         1., $CellContext`Ntot2, $CellContext`Nmax2, $CellContext`scegli2, \
$CellContext`ctmax2, $CellContext`tmax2}, $CellContext`cen2 = 
         0.5; $CellContext`wide2 = $CellContext`widectrl$$; \
$CellContext`slope2 = $CellContext`slopectrl$$; $CellContext`Aasym2 = \
{$CellContext`Aasymctrl$$, $CellContext`Aasymctrl$$, \
$CellContext`Aasymctrl$$}; $CellContext`Asym2 = {$CellContext`Asymctrl$$, \
$CellContext`Asymctrl$$, $CellContext`Asymctrl$$}; $CellContext`Aapop2 = \
{$CellContext`Aapopctrl$$, $CellContext`Aapopctrl$$, \
$CellContext`Aapopctrl$$}; $CellContext`Apass2 = $CellContext`Apassctrl$$; \
$CellContext`imax2 = $CellContext`imaxctrl$$; $CellContext`kmax2 = \
$CellContext`kmaxctrl$$; $CellContext`Ccell2 = ConstantArray[
           Map[Take[#, $CellContext`kmax2]& , 
            
            Take[$CellContext`Ccellctrl$$, 
             1]], $CellContext`kmax2]; $CellContext`ratio2 = ConstantArray[
           Map[Take[#, $CellContext`imax2]& , 
            
            Take[$CellContext`ratioctrl$$, 
             1]], $CellContext`imax2]; $CellContext`expG2 = \
{$CellContext`EPCAMexpctrl$$, $CellContext`CD47expctrl$$, \
$CellContext`CD44expctrl$$, $CellContext`METexpctrl$$, 
           1.}; $CellContext`cntG2 = {$CellContext`EPCAMcntctrl$$, \
$CellContext`CD47cntctrl$$, $CellContext`CD44cntctrl$$, \
$CellContext`METcntctrl$$, 1.}; $CellContext`compkeystep2 = 
         Map[Take[#, $CellContext`kmax2]& , 
           Take[$CellContext`compkeystepctrl$$, 1]]; $CellContext`signature2 = 
         Map[Take[#, $CellContext`imax2]& , 
           
           Take[$CellContext`signaturectrl$$, 
            1]]; $CellContext`maxsemidrivermut2 = \
$CellContext`maxsemidrivermutctrl$$; $CellContext`maxnondrivermut2 = \
$CellContext`maxnondrivermutctrl$$; $CellContext`maxmjump2 = \
$CellContext`maxmjumpctrl$$; $CellContext`Ntot2 = 10; $CellContext`Nmax2 = 
         150; $CellContext`scegli2 = 0; $CellContext`ctmax2 = 
         100; $CellContext`tmax2 = 
         30; $CellContext`Ntot2 = $CellContext`Ntotctrl$$; $CellContext`Nmax2 = \
$CellContext`Nmaxctrl$$; $CellContext`scegli2 = $CellContext`sceglictrl$$; \
$CellContext`ctmax2 = $CellContext`ctmaxctrl$$; $CellContext`tmax2 = \
$CellContext`tmaxctrl$$; $CellContext`rawresults = \
$CellContext`Main2[$CellContext`Ntot2, $CellContext`Nmax2, \
$CellContext`scegli2, $CellContext`kmax2, $CellContext`imax2, \
$CellContext`maxsemidrivermut2, $CellContext`maxnondrivermut2, \
$CellContext`signature2, $CellContext`compkeystep2, $CellContext`expG2, \
$CellContext`cntG2, $CellContext`ctmax2, $CellContext`tmax2, \
$CellContext`maxmjump2, $CellContext`maxtjump2, $CellContext`Aasym2, \
$CellContext`Asym2, $CellContext`Aapop2, $CellContext`Apass2, \
$CellContext`cen2, $CellContext`wide2, $CellContext`slope2, \
$CellContext`ratio2]], 
      "Specifications" :> {
       Delimiter, {{$CellContext`kmaxctrl$$, 3, "# of compartments"}, {1, 2, 
         3, 4, 5}, ControlType -> 
         PopupMenu}, {{$CellContext`Ntotctrl$$, 20, "max # of cells (CAs)"}, {
         5, 10, 20, 50, 100, 200, 500, 1000, 2000, 5000, 10000, 20000}, 
         ControlType -> 
         PopupMenu}, {{$CellContext`Nmaxctrl$$, 10, "initial # of cells"}, 
         Dynamic[
          Select[
           Sort[
            Flatten[
             Outer[
             Times, {5, 10, 20}, 
              10^{0, 1, 2, 3}]]], # < $CellContext`Ntotctrl$$& ]], 
         ControlType -> 
         PopupMenu}, {{$CellContext`sceglictrl$$, 5, "cell distribution"}, 1, 
         
         Dynamic[$CellContext`Ntotctrl$$ - $CellContext`Nmaxctrl$$], 1, 
         Appearance -> 
         "Labeled"}, {{$CellContext`ctmaxctrl$$, 10, "max # of cycles"}, 10, 
         1000, 10, Appearance -> 
         "Labeled"}, {{$CellContext`tmaxctrl$$, 10, 
          "total simulation time[d]"}, 10, 1000, Appearance -> "Labeled"}, 
        Delimiter, {{$CellContext`imaxctrl$$, 5, "max # of driver"}, {1, 2, 3,
          4, 5, 6, 7, 8}, ControlType -> 
         PopupMenu}, {{$CellContext`compkeystepctrl$$, 
          If[$CellContext`kmaxctrl$$ == 3, {{1, 2, 4}}, {
            Range[$CellContext`kmaxctrl$$]}], "groupped driver index"}, 
         Dynamic[$CellContext`multiInput[#, $CellContext`kmaxctrl$$]& ]}, \
{{$CellContext`maxsemidrivermutctrl$$, 6, "max # of semidriver"}, {1, 2, 3, 4,
          5, 6, 7, 8}, ControlType -> 
         PopupMenu}, {{$CellContext`maxnondrivermutctrl$$, 6, 
          "max # of nondriver"}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 
         14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 
         30}}, {{$CellContext`maxmjumpctrl$$, 5, "nondriver extension"}, {1, 
         2, 3, 4, 5, 6, 7, 8, 9, 10}}, 
        Delimiter, {{$CellContext`widectrl$$, 20, "support width"}, 1, 40, 
         Appearance -> 
         "Labeled"}, {{$CellContext`slopectrl$$, 0.01, "suppoprt slope"}, 
         0.001, 0.02, Appearance -> "Labeled"}, 
        Delimiter, {{$CellContext`Aasymctrl$$, 1, 
          "asymmetric rate[\!\(\*SuperscriptBox[\(d\), \(-1\)]\)]"}, 0, 2, 
         Appearance -> 
         "Labeled"}, {{$CellContext`Asymctrl$$, 1, 
          "symmetric rate[\!\(\*SuperscriptBox[\(d\), \(-1\)]\)]"}, 0, 2, 
         Appearance -> 
         "Labeled"}, {{$CellContext`Aapopctrl$$, 1, 
          "apoptosis rate[\!\(\*SuperscriptBox[\(d\), \(-1\)]\)]"}, 0, 2, 
         Appearance -> 
         "Labeled"}, {{$CellContext`Apassctrl$$, 1, 
          "migration rate[\!\(\*SuperscriptBox[\(d\), \(-1\)]\)]"}, 0, 2, 
         Appearance -> "Labeled"}, 
        Delimiter, {{$CellContext`signaturectrl$$, 
          If[$CellContext`imaxctrl$$ == 5, {{1, -1, 1, 1, 0}}, 
           Table[1, {1}, {$CellContext`imaxctrl$$}]], "GE deregulation sign"}, 
         Dynamic[$CellContext`multiInput[#, $CellContext`imaxctrl$$]& ]}, \
{{$CellContext`EPCAMexpctrl$$, 1, "EPICAM"}, 1, 10, ControlType -> Slider, 
         Appearance -> "Labeled"}, {{$CellContext`CD47expctrl$$, 1, "CD47"}, 
         1, 10, ControlType -> Slider, Appearance -> 
         "Labeled"}, {{$CellContext`CD44expctrl$$, 1, "CD44"}, 1, 10, 
         ControlType -> Slider, Appearance -> 
         "Labeled"}, {{$CellContext`METexpctrl$$, 1, "MET"}, 1, 10, 
         ControlType -> Slider, Appearance -> 
         "Labeled"}, {{$CellContext`EPCAMcntctrl$$, 1, 
          "\!\(\*SubscriptBox[\(EPICAM\), \(0\)]\)"}, 1, 10, ControlType -> 
         Slider, Appearance -> 
         "Labeled"}, {{$CellContext`CD47cntctrl$$, 1, 
          "\!\(\*SubscriptBox[\(CD47\), \(0\)]\)"}, 1, 10, ControlType -> 
         Slider, Appearance -> 
         "Labeled"}, {{$CellContext`CD44cntctrl$$, 1, 
          "\!\(\*SubscriptBox[\(CD44\), \(0\)]\)"}, 1, 10, ControlType -> 
         Slider, Appearance -> 
         "Labeled"}, {{$CellContext`METcntctrl$$, 1, 
          "\!\(\*SubscriptBox[\(MET\), \(0\)]\)"}, 1, 10, ControlType -> 
         Slider, Appearance -> "Labeled"}, 
        Delimiter, {{$CellContext`ratioctrl$$, 
          If[$CellContext`imaxctrl$$ == 5, {{1, 1, 1, 1, 1.2}}, 
           Table[1, {1}, {$CellContext`imaxctrl$$}]], 
          "cell volumetric ratio"}, 
         Dynamic[$CellContext`multiInput[#, $CellContext`imaxctrl$$]& ]}, \
{{$CellContext`Ccellctrl$$, 
          If[$CellContext`kmaxctrl$$ == 3, {
            ConstantArray[100, $CellContext`kmaxctrl$$]}, 
           Table[1, {1}, {$CellContext`kmaxctrl$$}]], "compartment capacity"}, 
         Dynamic[$CellContext`multiInput[#, $CellContext`kmaxctrl$$]& ]}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{39615., {61771., 61778.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6647152265684958`*^9, 3.664715246071498*^9}, 
   3.664715397861631*^9, 3.6653880169805307`*^9, 3.6653881009315577`*^9, 
   3.66538831396838*^9, {3.665389383978449*^9, 3.665389431952573*^9}, 
   3.665389471548155*^9, {3.665389741094273*^9, 3.6653897699681253`*^9}, 
   3.665392787734639*^9, 3.6654700031907043`*^9, {3.665470049794423*^9, 
   3.665470071467811*^9}, 3.665471096595395*^9, {3.665471160492482*^9, 
   3.665471182391645*^9}, 3.665471336118658*^9, {3.665471367551046*^9, 
   3.665471382126843*^9}, 3.665471413025587*^9, 3.6654715803161783`*^9, 
   3.665471614233366*^9, 3.665471706344549*^9, 3.665473261511791*^9, {
   3.665473396334676*^9, 3.665473424505411*^9}, {3.665473592887327*^9, 
   3.665473616567851*^9}, 3.665474465340948*^9, 3.6654745007784147`*^9, {
   3.6654745571025667`*^9, 3.6654745829551888`*^9}, 3.665474616542636*^9, {
   3.669978810100854*^9, 3.669978821453137*^9}, 3.669978874343361*^9, 
   3.670063721284149*^9, 3.6700638241248693`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"multiInput", "[", 
    RowBox[{
     RowBox[{"Dynamic", "[", "in_", "]"}], ",", "size_"}], "]"}], ":=", 
   RowBox[{"Panel", "@", 
    RowBox[{"DynamicModule", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"Grid", "[", 
       RowBox[{"Outer", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"InputField", "[", 
           RowBox[{
            RowBox[{"Dynamic", "[", 
             RowBox[{"in", "[", 
              RowBox[{"[", 
               RowBox[{"#1", ",", "#2"}], "]"}], "]"}], "]"}], ",", 
            RowBox[{"FieldSize", "\[Rule]", "5"}]}], "]"}], "&"}], ",", 
         RowBox[{"{", "1", "}"}], ",", 
         RowBox[{"Range", "[", "size", "]"}]}], "]"}], "]"}]}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"max", "=", "6"}], ",", " ", 
     RowBox[{"max2", "=", "6"}]}], "}"}], ",", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"mat", "=", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Take", "[", 
              RowBox[{"#", ",", "size"}], "]"}], "&"}], ",", 
            RowBox[{"Take", "[", 
             RowBox[{"bigMat", ",", "1"}], "]"}]}], "]"}]}], ",", 
         RowBox[{"mat2", "=", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Take", "[", 
              RowBox[{"#", ",", "size2"}], "]"}], "&"}], ",", 
            RowBox[{"Take", "[", 
             RowBox[{"bigMat2", ",", "1"}], "]"}]}], "]"}]}]}], "}"}], ",", 
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{"mat2", ",", "\"\< = \>\""}], "}"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"size", ",", "4"}], "}"}], ",", "1", ",", "max", ",", "1"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"bigMat", ",", 
         RowBox[{"Table", "[", 
          RowBox[{"1", ",", 
           RowBox[{"{", "1", "}"}], ",", 
           RowBox[{"{", "max", "}"}]}], "]"}], ",", "\"\<\>\""}], "}"}], ",", 
       
       RowBox[{
        RowBox[{"multiInput", "[", 
         RowBox[{"#", ",", "size"}], "]"}], "&"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"size2", ",", "4"}], "}"}], ",", "1", ",", "max2", ",", "1"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"bigMat2", ",", 
         RowBox[{"Table", "[", 
          RowBox[{"1", ",", 
           RowBox[{"{", "1", "}"}], ",", 
           RowBox[{"{", "max2", "}"}]}], "]"}], ",", "\"\<\>\""}], "}"}], ",", 
       RowBox[{
        RowBox[{"multiInput", "[", 
         RowBox[{"#", ",", "size2"}], "]"}], "&"}]}], "}"}], ",", 
     RowBox[{"SaveDefinitions", "\[RuleDelayed]", "True"}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.665386079329257*^9, 3.665386092433515*^9}, {
   3.665386203844672*^9, 3.665386223949923*^9}, {3.665386260635004*^9, 
   3.665386298845571*^9}, {3.665386386014436*^9, 3.665386404502886*^9}, 
   3.665386434569474*^9, {3.665386485089963*^9, 3.665386535890733*^9}, {
   3.6653866094185057`*^9, 3.665386610035597*^9}, {3.66538666396535*^9, 
   3.665386683721354*^9}, {3.6653867326440287`*^9, 3.665386761084434*^9}, {
   3.665386792374918*^9, 3.665386819358034*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`bigMat$$ = {{1, 1, 1, 1, 1, 
    1}}, $CellContext`bigMat2$$ = {{1, 1, 3, 1, 1, 1}}, $CellContext`size$$ = 
    4, $CellContext`size2$$ = 5, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`size$$], 4}, 1, 6, 1}, {{
       Hold[$CellContext`bigMat$$], {{1, 1, 1, 1, 1, 1}}, ""}, 
      Dynamic[$CellContext`multiInput[#, $CellContext`size$$]& ]}, {{
       Hold[$CellContext`size2$$], 4}, 1, 6, 1}, {{
       Hold[$CellContext`bigMat2$$], {{1, 1, 1, 1, 1, 1}}, ""}, 
      Dynamic[$CellContext`multiInput[#, $CellContext`size2$$]& ]}}, 
    Typeset`size$$ = {161., {3., 10.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`size$31592$$ = 0, $CellContext`size2$31593$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`bigMat$$ = {{1, 1, 1, 1, 1, 
         1}}, $CellContext`bigMat2$$ = {{1, 1, 1, 1, 1, 
         1}}, $CellContext`size$$ = 4, $CellContext`size2$$ = 4}, 
      "ControllerVariables" :> {
        Hold[$CellContext`size$$, $CellContext`size$31592$$, 0], 
        Hold[$CellContext`size2$$, $CellContext`size2$31593$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      With[{$CellContext`mat = Map[Take[#, $CellContext`size$$]& , 
           Take[$CellContext`bigMat$$, 1]], $CellContext`mat2 = 
         Map[Take[#, $CellContext`size2$$]& , 
           Take[$CellContext`bigMat2$$, 1]]}, 
        Row[{$CellContext`mat2, " = "}]], 
      "Specifications" :> {{{$CellContext`size$$, 4}, 1, 6, 
         1}, {{$CellContext`bigMat$$, {{1, 1, 1, 1, 1, 1}}, ""}, 
         Dynamic[$CellContext`multiInput[#, $CellContext`size$$]& ]}, \
{{$CellContext`size2$$, 4}, 1, 6, 
         1}, {{$CellContext`bigMat2$$, {{1, 1, 1, 1, 1, 1}}, ""}, 
         Dynamic[$CellContext`multiInput[#, $CellContext`size2$$]& ]}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{363., {105., 112.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`multiInput[
         Dynamic[
          Pattern[$CellContext`in, 
           Blank[]]], 
         Pattern[$CellContext`size, 
          Blank[]]] := Panel[
         DynamicModule[{}, 
          Grid[
           Outer[InputField[
             Dynamic[
              Part[$CellContext`in, #, #2]], FieldSize -> 5]& , {1}, 
            Range[$CellContext`size]]]]]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.665386224652566*^9, {3.6653862742471247`*^9, 3.665386278464944*^9}, 
   3.665386348253944*^9, {3.6653863887923813`*^9, 3.6653864057797337`*^9}, {
   3.6653864862894917`*^9, 3.66538653639524*^9}, 3.665386610719707*^9, {
   3.665386669014333*^9, 3.6653866844393167`*^9}, {3.665386810589685*^9, 
   3.665386820539605*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Big Run", "Subsection",
 CellChangeTimes->{{3.657006576744567*^9, 3.6570065805686617`*^9}, 
   3.657007431809258*^9, 3.66289321186264*^9, {3.663222793000924*^9, 
   3.663222803202347*^9}, {3.6640178852552357`*^9, 3.6640178859541597`*^9}, 
   3.664091095108634*^9, {3.664181094736466*^9, 3.664181095302546*^9}, {
   3.6647122959965363`*^9, 3.6647123155809593`*^9}, {3.664712346461278*^9, 
   3.6647123484053097`*^9}, {3.664712540327819*^9, 3.664712543944065*^9}, {
   3.672661005396304*^9, 3.672661010852559*^9}}],

Cell["\<\
Run the simulation a given amount of times and store the results in a easy \
way so that if more simulations are needed, then they can be added and easy \
average and data retrival methods can be applied\
\>", "Text",
 CellChangeTimes->{{3.672661028052314*^9, 3.672661065285605*^9}, {
  3.6726612191433563`*^9, 3.67266132543257*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test", "Subsection",
 CellChangeTimes->{{3.657006576744567*^9, 3.6570065805686617`*^9}, 
   3.657007431809258*^9, 3.66289321186264*^9, {3.663222793000924*^9, 
   3.663222803202347*^9}, {3.6640178852552357`*^9, 3.6640178859541597`*^9}, 
   3.664091095108634*^9, {3.664181094736466*^9, 3.664181095302546*^9}}],

Cell["\<\
Corretto un errore in giveiormC relativo alla capacita\[CloseCurlyQuote] \
della funzione select di scegliere i primi n termini\
\>", "Text",
 CellChangeTimes->{{3.664189841832211*^9, 3.664189875739998*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sp", "[", 
    RowBox[{
    "i_", ",", "m_", ",", "k_", ",", "mv_", ",", "maxnondrivermut_", ",", 
     "maxsemidrivermut_", ",", "maxdrivermut_"}], "]"}], ":=", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nondriverspace", ",", "semidriverspace", ",", "driverspace", ",", 
       "space", ",", "spaceprob"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nondriverspace", "=", 
        RowBox[{"maxnondrivermut", "-", "m"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"semidriverspace", "=", 
        RowBox[{"maxsemidrivermut", "-", 
         RowBox[{"mv", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"driverspace", "=", 
        RowBox[{"maxdrivermut", "-", 
         RowBox[{"Total", "[", 
          RowBox[{"mv", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", 
             RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"space", "=", 
        RowBox[{
        "nondriverspace", "+", "semidriverspace", "+", "driverspace"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"spaceprob", " ", "=", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "driverspace", ",", "semidriverspace", ",", "nondriverspace"}], 
          "}"}], "/", "space"}]}]}], ")"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Block", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
    "cen", ",", "wide", ",", "slope", ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "Aasym", ",", " ", 
     RowBox[{"(*", 
      RowBox[{
      "kmax", " ", "asymmetric", " ", "proliferation", " ", "rate", " ", 
       "amplitudes"}], " ", "*)"}], "\[IndentingNewLine]", "Asym", ",", " ", 
     RowBox[{"(*", 
      RowBox[{
      "kmax", " ", "symmetric", " ", "proliferation", " ", "rate", " ", 
       "amplitudes"}], " ", "*)"}], "\[IndentingNewLine]", "Aapop", ",", " ", 
     
     RowBox[{"(*", 
      RowBox[{"kmax", " ", "apoptotic", " ", "rate", " ", "amplitudes"}], " ",
       "*)"}], "\[IndentingNewLine]", "Apass", ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "imax", ",", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"number", " ", "of", " ", "driver", " ", "mutations"}], "+", 
       RowBox[{"1", " ", 
        RowBox[{"(", 
         RowBox[{"for", " ", "the", " ", "non", " ", "mutated", " ", "case"}],
          ")"}]}]}], "*)"}], "\[IndentingNewLine]", "kmax", ",", " ", 
     RowBox[{"(*", 
      RowBox[{"number", " ", "of", " ", "compartments"}], "*)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "CcellE", ",", 
     RowBox[{"(*", 
      RowBox[{
      "capacities", " ", "may", " ", "be", " ", "different", " ", "in", " ", 
       "each", " ", "compartment"}], " ", "*)"}], "\[IndentingNewLine]", 
     "ratio", ",", 
     RowBox[{"(*", 
      RowBox[{
      "imax", "*", "kmax", " ", "matrix", " ", "of", " ", "identical", " ", 
       "columns"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"EPCAMexp", "=", "1"}], ",", 
     RowBox[{"CD47exp", "=", "1"}], ",", 
     RowBox[{"CD44exp", "=", "1"}], ",", 
     RowBox[{"METexp", "=", "1"}], ",", 
     RowBox[{"EPCAMcnt", "=", "1"}], ",", 
     RowBox[{"CD47cnt", "=", "1"}], ",", 
     RowBox[{"CD44cnt", "=", "1"}], ",", 
     RowBox[{"METcnt", "=", "1"}], ",", "\[IndentingNewLine]", "expG", ",", 
     "cntG", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", "compkeystep",
      ",", "\[IndentingNewLine]", "signature", ",", " ", 
     RowBox[{"(*", 
      RowBox[{
      "the", " ", "0", " ", "is", " ", "for", " ", "the", " ", "semidriver", 
       " ", "mutations"}], "*)"}], "\[IndentingNewLine]", "maxsemidrivermut", 
     ",", " ", 
     RowBox[{"(*", 
      RowBox[{
      "maximum", " ", "number", " ", "of", " ", "semidriver", " ", 
       "mutations"}], "*)"}], "\[IndentingNewLine]", "maxnondrivermut", ",", 
     " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"this", " ", "is", " ", "mmax"}], ",", " ", 
       RowBox[{
       "the", " ", "maximum", " ", "number", " ", "of", " ", "non", " ", 
        "driver", " ", "mutations"}]}], "*)"}], "\[IndentingNewLine]", 
     "maxmjump", ",", "maxtjump", ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "NtotE", ",", "Nmax", ",", 
     RowBox[{"(*", 
      RowBox[{">", "Ntot"}], "*)"}], "\[IndentingNewLine]", "scegli", ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"intero", " ", "tra", " ", "0", " ", "e", " ", "Ntot"}], "-", 
       "Nmax"}], "*)"}], "\[IndentingNewLine]", "ctmax", ",", "tmax"}], 
    "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cen", "=", "0.5"}], ";", 
    RowBox[{"wide", "=", "20"}], ";", 
    RowBox[{"slope", "=", "0.01"}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"Aasym", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "kmax", " ", "asymmetric", " ", "proliferation", " ", "rate", " ", 
      "amplitudes"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"Asym", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "kmax", " ", "symmetric", " ", "proliferation", " ", "rate", " ", 
      "amplitudes"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"Aapop", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"kmax", " ", "apoptotic", " ", "rate", " ", "amplitudes"}], " ", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"Apass", "=", "0.1"}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"imax", "=", "5"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"number", " ", "of", " ", "driver", " ", "mutations"}], "+", 
      RowBox[{"1", " ", 
       RowBox[{"(", 
        RowBox[{"for", " ", "the", " ", "non", " ", "mutated", " ", "case"}], 
        ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"kmax", "=", "3"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"number", " ", "of", " ", "compartments"}], "*)"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"CcellE", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"100", ",", "kmax"}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "capacities", " ", "may", " ", "be", " ", "different", " ", "in", " ", 
      "each", " ", "compartment"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"ratio", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1.2"}], "}"}], ",", 
       "kmax"}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "imax", "*", "kmax", " ", "matrix", " ", "of", " ", "identical", " ", 
      "columns"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"EPCAMexp", "=", "1"}], ";", 
    RowBox[{"CD47exp", "=", "1"}], ";", 
    RowBox[{"CD44exp", "=", "1"}], ";", 
    RowBox[{"METexp", "=", "1"}], ";", 
    RowBox[{"EPCAMcnt", "=", "1"}], ";", 
    RowBox[{"CD47cnt", "=", "1"}], ";", 
    RowBox[{"CD44cnt", "=", "1"}], ";", 
    RowBox[{"METcnt", "=", "1"}], ";", "\[IndentingNewLine]", 
    RowBox[{"expG", "=", 
     RowBox[{"{", 
      RowBox[{
      "EPCAMexp", ",", "CD47exp", ",", "CD44exp", ",", "METexp", ",", "1"}], 
      "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"cntG", "=", 
     RowBox[{"{", 
      RowBox[{
      "EPCAMcnt", ",", "CD47cnt", ",", "CD44cnt", ",", "METcnt", ",", 
       "\[ExponentialE]"}], "}"}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"compkeystep", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "4"}], "}"}]}], ";", "\[IndentingNewLine]", 
    
    RowBox[{"signature", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "0"}], "}"}]}], ";", " ", 
    
    RowBox[{"(*", 
     RowBox[{
     "the", " ", "0", " ", "is", " ", "for", " ", "the", " ", "semidriver", 
      " ", "mutations"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"maxsemidrivermut", "=", "4"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "maximum", " ", "number", " ", "of", " ", "semidriver", " ", 
      "mutations"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"maxnondrivermut", "=", "4"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"this", " ", "is", " ", "mmax"}], ",", " ", 
      RowBox[{
      "the", " ", "maximum", " ", "number", " ", "of", " ", "non", " ", 
       "driver", " ", "mutations"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"maxmjump", "=", "1"}], ";", 
    RowBox[{"maxtjump", "=", "10"}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"NtotE", "=", "10"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Nmax", "=", "150"}], ";", 
    RowBox[{"(*", 
     RowBox[{">", "Ntot"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"scegli", "=", "0"}], ";", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"intero", " ", "tra", " ", "0", " ", "e", " ", "Ntot"}], "-", 
      "Nmax"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"ctmax", "=", "10"}], ";", 
    RowBox[{"tmax", "=", "30"}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Ntot", ",", 
        RowBox[{"Empty", "=", "0"}], ",", 
        RowBox[{"Ncell", "=", 
         RowBox[{"{", 
          RowBox[{"{", "0", "}"}], "}"}]}], ",", 
        RowBox[{"ord", "=", 
         RowBox[{"{", "1", "}"}]}], ",", 
        RowBox[{"times", "=", 
         RowBox[{"{", "0.", "}"}]}], ",", 
        RowBox[{"state", "=", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0."}], "}"}], "}"}]}], ",", 
        RowBox[{"Ccell", "=", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"t", "=", "0.0"}], ",", 
        RowBox[{"ct", "=", "0"}], ",", "\[IndentingNewLine]", "maxdrivermut", 
        ",", "smv0", ",", "state0", ",", "sstate0", ",", "Cmut", ",", "genes",
         ",", 
        RowBox[{"krates", "=", 
         RowBox[{"{", "1.0", "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"i", "=", "0"}], ",", 
        RowBox[{"m", "=", "0"}], ",", 
        RowBox[{"k", "=", "1"}], ",", 
        RowBox[{"mv", "=", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"p", "=", "0.1"}], ",", " ", 
        RowBox[{"r", "=", "0.1"}], ",", " ", "mv0", ",", 
        RowBox[{"imkmv", "=", 
         RowBox[{"{", "0", "}"}]}], ",", 
        RowBox[{"in", "=", "0"}], ",", 
        RowBox[{"fn", "=", "0"}], ",", 
        RowBox[{"mid", "=", "0"}], ",", 
        RowBox[{"midr", "=", "0."}], ",", 
        RowBox[{"CT", "=", "False"}], ",", "statetmp1", ",", "statetmp2", ",",
         "NewNcell", ",", 
        RowBox[{"\[CapitalDelta]i", "=", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"\[CapitalDelta]Nc", "=", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"\[CapitalDelta]Nc2", "=", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"\[CapitalDelta]k", "=", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"chooseiorm", "=", 
         RowBox[{"{", "10", "}"}]}], ",", "s", ",", "rnn", ",", "rc", ",", 
        "stateslist", ",", "Ncslist", ",", "probslist", ",", "spprobslist", 
        ",", "Ntslist", ",", "tslist", ",", "key", ",", "ss", ",", "keyg", 
        ",", "rates", ",", "rcs", ",", "rnns", ",", "rnns1", ",", 
        "nondriverspace", ",", "semidriverspace", ",", "driverspace", ",", 
        "space", ",", "spaceprob"}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"derivated", " ", "variables"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"maxdrivermut", "=", 
        RowBox[{"imax", "-", "1"}]}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{"number", " ", "of", " ", "driver", " ", "mutations"}], 
        "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"mv0", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"maxdrivermut", "+", "1"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"state0", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"maxdrivermut", "+", "1", "+", "3"}]}], "}"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Cmut", "=", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{"1", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "maxdrivermut"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", "maxsemidrivermut", "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"genes", "=", 
        RowBox[{"Log", "[", 
         RowBox[{"expG", "/", "cntG"}], "]"}]}], ";", " ", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"krates", "=", 
        RowBox[{"Apass", " ", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{"1", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"kmax", "-", "1"}]}], "}"}]}], "]"}], ",", 
           RowBox[{"{", "0", "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Ntot", "=", "NtotE"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Empty", "=", 
        RowBox[{"Nmax", "-", "Ntot", "-", "scegli"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Ncell", "=", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"Ntot", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
           "}"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{"mv0", ",", 
            RowBox[{"{", 
             RowBox[{"l", ",", "1", ",", 
              RowBox[{"kmax", "-", "1"}]}], "}"}]}], "]"}]}], "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{
        "this", " ", "should", " ", "be", " ", "less", " ", "than", " ", 
         "nm"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"state", "=", 
        RowBox[{"createstate0C", "[", 
         RowBox[{
          RowBox[{"Nmax", "+", "2"}], ",", "t"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Ccell", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Floor", "[", 
           RowBox[{"Ntot", "+", "Empty"}], "]"}], ",", 
          RowBox[{"Max", "[", 
           RowBox[{"0", ",", 
            RowBox[{"Floor", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Nmax", "-", "Ntot", "-", "Empty"}], ")"}], "/", "2"}],
              "]"}]}], "]"}], ",", 
          RowBox[{"Max", "[", 
           RowBox[{"0", ",", 
            RowBox[{"Floor", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Nmax", "-", "Ntot", "-", "Empty"}], ")"}], "/", "2"}],
              "]"}]}], "]"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"times", "=", 
        RowBox[{
         RowBox[{"Transpose", "[", "state", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ord", "=", 
        RowBox[{"Ordering", "[", "times", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"state", "=", 
        RowBox[{"state", "[", 
         RowBox[{"[", "ord", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"imkmv", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{"state", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", 
            RowBox[{"1", ";;", 
             RowBox[{"-", "2"}]}]}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"nondriverspace", "=", 
        RowBox[{"maxnondrivermut", "-", 
         RowBox[{"imkmv", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"semidriverspace", "=", 
        RowBox[{"maxsemidrivermut", "-", 
         RowBox[{"imkmv", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"driverspace", "=", 
        RowBox[{"maxdrivermut", "-", 
         RowBox[{"Total", "[", 
          RowBox[{"imkmv", "[", 
           RowBox[{"[", 
            RowBox[{"4", ";;", 
             RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"space", "=", 
        RowBox[{
        "nondriverspace", "+", "semidriverspace", "+", "driverspace"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"spaceprob", " ", "=", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "driverspace", ",", "semidriverspace", ",", "nondriverspace"}], 
          "}"}], "/", "space"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"do", " ", "something"}], "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"And", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"state", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", 
               RowBox[{"-", "1"}]}], "]"}], "]"}], "<", "tmax"}], ",", " ", 
           RowBox[{"ct", "<", "ctmax"}]}], "]"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{
          RowBox[{"ct", "+=", "1"}], ";", "\[IndentingNewLine]", 
          RowBox[{"t", "=", 
           RowBox[{"state", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", 
              RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"imkmv", "=", 
           RowBox[{"IntegerPart", "[", 
            RowBox[{"state", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", 
               RowBox[{"1", ";;", 
                RowBox[{"-", "2"}]}]}], "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"symmetricC", "[", 
             RowBox[{
              RowBox[{"imkmv", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"imkmv", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"imkmv", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"imkmv", "[", 
               RowBox[{"[", 
                RowBox[{"4", ";;", 
                 RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "r"}], "]"}], ";"}],
            "*)"}], "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"fateC", "[", 
             RowBox[{
              RowBox[{"imkmv", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"imkmv", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"imkmv", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"imkmv", "[", 
               RowBox[{"[", 
                RowBox[{"4", ";;", 
                 RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
              RowBox[{"givepC", "[", "]"}], ",", "r"}], "]"}], ";"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"a", "=", 
           RowBox[{"giveiormC", "[", 
            RowBox[{"0", ",", "0", ",", "1", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"spa", "=", 
           RowBox[{"1.", " ", 
            RowBox[{"sp", "[", 
             RowBox[{"0", ",", "0", ",", "1", ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
              ",", "maxnondrivermut", ",", "maxsemidrivermut", ",", 
              "maxdrivermut"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"b", "=", 
           RowBox[{"giveiormC", "[", 
            RowBox[{"0", ",", "maxnondrivermut", ",", "1", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"spb", "=", 
           RowBox[{"1.", " ", 
            RowBox[{"sp", "[", 
             RowBox[{"0", ",", "maxnondrivermut", ",", "1", ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
              ",", "maxnondrivermut", ",", "maxsemidrivermut", ",", 
              "maxdrivermut"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"c", "=", 
           RowBox[{"giveiormC", "[", 
            RowBox[{"0", ",", "0", ",", "1", ",", 
             RowBox[{"{", 
              RowBox[{
              "0", ",", "0", ",", "0", ",", "0", ",", "maxsemidrivermut"}], 
              "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"spc", "=", 
           RowBox[{"1.", " ", 
            RowBox[{"sp", "[", 
             RowBox[{"0", ",", "0", ",", "1", ",", 
              RowBox[{"{", 
               RowBox[{
               "0", ",", "0", ",", "0", ",", "0", ",", "maxsemidrivermut"}], 
               "}"}], ",", "maxnondrivermut", ",", "maxsemidrivermut", ",", 
              "maxdrivermut"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"d", "=", 
           RowBox[{"giveiormC", "[", 
            RowBox[{"0", ",", "maxnondrivermut", ",", "1", ",", 
             RowBox[{"{", 
              RowBox[{
              "0", ",", "0", ",", "0", ",", "0", ",", "maxsemidrivermut"}], 
              "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"spd", "=", 
           RowBox[{"1.", 
            RowBox[{"sp", "[", 
             RowBox[{"0", ",", "maxnondrivermut", ",", "1", ",", 
              RowBox[{"{", 
               RowBox[{
               "0", ",", "0", ",", "0", ",", "0", ",", "maxsemidrivermut"}], 
               "}"}], ",", "maxnondrivermut", ",", "maxsemidrivermut", ",", 
              "maxdrivermut"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"nondriverspace", "=", 
           RowBox[{"maxnondrivermut", "-", 
            RowBox[{"imkmv", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"semidriverspace", "=", 
           RowBox[{"maxsemidrivermut", "-", 
            RowBox[{"imkmv", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"driverspace", "=", 
           RowBox[{"maxdrivermut", "-", 
            RowBox[{"Total", "[", 
             RowBox[{"imkmv", "[", 
              RowBox[{"[", 
               RowBox[{"4", ";;", 
                RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"space", "=", 
           RowBox[{
           "nondriverspace", "+", "semidriverspace", "+", "driverspace"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"spaceprob", " ", "=", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "driverspace", ",", "semidriverspace", ",", "nondriverspace"}], 
             "}"}], "/", "space"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"Grid", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"a", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", 
                RowBox[{"a", "[", 
                 RowBox[{"[", 
                  RowBox[{"4", ";;"}], "]"}], "]"}], ",", "spa"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"b", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", 
                RowBox[{"b", "[", 
                 RowBox[{"[", 
                  RowBox[{"4", ";;"}], "]"}], "]"}], ",", "spb"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"c", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", 
                RowBox[{"c", "[", 
                 RowBox[{"[", 
                  RowBox[{"4", ";;"}], "]"}], "]"}], ",", "spc"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"d", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", 
                RowBox[{"d", "[", 
                 RowBox[{"[", 
                  RowBox[{"4", ";;"}], "]"}], "]"}], ",", "spd"}], "}"}]}], 
             "}"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", " ", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ct", "=", 
        RowBox[{"-", "100"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"b", "=", 
        RowBox[{"{", 
         RowBox[{
         "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
           "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"And", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"state", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", 
               RowBox[{"-", "1"}]}], "]"}], "]"}], "<", "tmax"}], ",", " ", 
           RowBox[{"ct", "<", "ctmax"}]}], "]"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{
          RowBox[{"ct", "+=", "1"}], ";", "\[IndentingNewLine]", 
          RowBox[{"t", "=", 
           RowBox[{"state", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", 
              RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"imkmv", "=", 
           RowBox[{"IntegerPart", "[", 
            RowBox[{"state", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", 
               RowBox[{"1", ";;", 
                RowBox[{"-", "2"}]}]}], "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"symmetricC", "[", 
             RowBox[{
              RowBox[{"imkmv", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"imkmv", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"imkmv", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"imkmv", "[", 
               RowBox[{"[", 
                RowBox[{"4", ";;", 
                 RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "r"}], "]"}], ";"}],
            "*)"}], "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"fateC", "[", 
             RowBox[{
              RowBox[{"imkmv", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"imkmv", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"imkmv", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"imkmv", "[", 
               RowBox[{"[", 
                RowBox[{"4", ";;", 
                 RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
              RowBox[{"givepC", "[", "]"}], ",", "r"}], "]"}], ";"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"a", "=", 
           RowBox[{"giveiormC", "[", 
            RowBox[{"4", ",", "maxnondrivermut", ",", "1", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"b", "=", 
           RowBox[{"b", "+", "a"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"nondriverspace", "=", 
           RowBox[{"maxnondrivermut", "-", 
            RowBox[{"imkmv", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"semidriverspace", "=", 
           RowBox[{"maxsemidrivermut", "-", 
            RowBox[{"imkmv", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"driverspace", "=", 
           RowBox[{"maxdrivermut", "-", 
            RowBox[{"Total", "[", 
             RowBox[{"imkmv", "[", 
              RowBox[{"[", 
               RowBox[{"4", ";;", 
                RowBox[{"-", "2"}]}], "]"}], "]"}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"space", "=", 
           RowBox[{
           "nondriverspace", "+", "semidriverspace", "+", "driverspace"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"spaceprob", " ", "=", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "driverspace", ",", "semidriverspace", ",", "nondriverspace"}], 
             "}"}], "/", "space"}]}], ";"}]}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"Grid", "@", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"a", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", 
               RowBox[{"a", "[", 
                RowBox[{"[", 
                 RowBox[{"4", ";;"}], "]"}], "]"}], ",", "spa"}], "}"}], 
             "}"}]}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", " ", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", "b", "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}],
   "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.664094117165552*^9, 3.664094120540743*^9}, 
   3.6640945162899427`*^9, {3.6640948703311863`*^9, 3.66409487439193*^9}, 
   3.664097450750594*^9, 3.6641762696398573`*^9, {3.664176376156743*^9, 
   3.664176388387895*^9}, {3.66417658011649*^9, 3.6641765867503643`*^9}, {
   3.664176703962508*^9, 3.664176706800387*^9}, {3.6641768538779716`*^9, 
   3.664176854169723*^9}, 3.664177171134535*^9, {3.66417737169521*^9, 
   3.664177401003343*^9}, 3.664177603189044*^9, {3.6641776907088213`*^9, 
   3.664177704322896*^9}, 3.664181469148048*^9, 3.664181822155506*^9, {
   3.6641819181058702`*^9, 3.664181997783037*^9}, {3.664182033636697*^9, 
   3.664182127817679*^9}, {3.664182214692637*^9, 3.664182244565983*^9}, {
   3.664182338992923*^9, 3.6641823647644663`*^9}, {3.664182396660075*^9, 
   3.664182433561922*^9}, {3.664182493514112*^9, 3.6641825048078737`*^9}, {
   3.6641825835938*^9, 3.664182601502657*^9}, {3.664182680439846*^9, 
   3.664182824589334*^9}, {3.664182957292848*^9, 3.6641829588359003`*^9}, {
   3.66418303113211*^9, 3.664183034307876*^9}, {3.6641831997074966`*^9, 
   3.664183222157138*^9}, {3.664183305448147*^9, 3.664183345394455*^9}, {
   3.664183378577527*^9, 3.6641835009871073`*^9}, {3.66418353662948*^9, 
   3.6641836936952753`*^9}, {3.664184197320471*^9, 3.6641842045449047`*^9}, {
   3.664185597730679*^9, 3.664185631268427*^9}, {3.664185666563539*^9, 
   3.66418569662081*^9}, {3.664185802080574*^9, 3.6641858282177753`*^9}, {
   3.6641858809185677`*^9, 3.664185910132226*^9}, 3.664185952342998*^9, 
   3.66418603952497*^9, 3.664186095954507*^9, {3.664186133765561*^9, 
   3.664186181467671*^9}, {3.6641862128269033`*^9, 3.664186330561153*^9}, {
   3.6641863853303823`*^9, 3.664186421307145*^9}, {3.664186456687078*^9, 
   3.664186465280464*^9}, 3.664186633386297*^9, 3.664187248972992*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.664185725304969*^9, 3.6641857277792683`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"giveiorm", "[", 
    RowBox[{
    "i_", ",", "m_", ",", "k_", ",", "mv_", ",", "maxnondrivermut_", ",", 
     "maxsemidrivermut_", ",", "maxdrivermut_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"nondriverspace", "=", "0"}], ",", 
       RowBox[{"space", "=", "0"}], ",", 
       RowBox[{"currentmut", "=", "0"}], ",", 
       RowBox[{"range", "=", 
        RowBox[{"{", "0", "}"}]}], ",", 
       RowBox[{"mut", "=", "0"}], ",", 
       RowBox[{"gm", "=", "0"}], ",", 
       RowBox[{"dmv", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", "5"}], "]"}]}], ",", 
       RowBox[{"Cmut", "=", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{"1", ",", 
            RowBox[{"{", 
             RowBox[{"ll", ",", "maxdrivermut"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", "maxsemidrivermut", "}"}]}], "]"}]}], ",", 
       RowBox[{"maxmjump", "=", "4"}]}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nondriverspace", "=", 
       RowBox[{"maxnondrivermut", "-", "m"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
       "number", " ", "of", " ", "non", " ", "driver", " ", "mutations", " ", 
        "not", " ", "yet", " ", "occurred"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"space", "=", 
       RowBox[{"maxsemidrivermut", "+", "maxdrivermut", "-", 
        RowBox[{"Total", "[", "mv", "]"}], "+", "nondriverspace"}]}], ";", 
      " ", "\[IndentingNewLine]", 
      RowBox[{"currentmut", "=", 
       RowBox[{
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Min", "[", 
            RowBox[{"1", ",", "space"}], "]"}], ",", "space"}], "}"}], "]"}], 
        "-", "nondriverspace"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"currentmut", ">", "0"}], ",", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "if", " ", "it", " ", "is", " ", "a", " ", "semidriver", " ", "or", 
           " ", "dirver"}], "..."}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"range", "=", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Range", "[", "5", "]"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"mv", "[", 
                RowBox[{"[", "#", "]"}], "]"}], "<", 
               RowBox[{"Cmut", "[", 
                RowBox[{"[", "#", "]"}], "]"}]}], ")"}], "&"}], ",", 
            "currentmut"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"mut", "=", 
          RowBox[{"Last", "[", "range", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"dmv", "[", 
           RowBox[{"[", "mut", "]"}], "]"}], "+=", "1"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"gm", "=", 
         RowBox[{"IntegerPart", "@", 
          RowBox[{"givemC", "[", "]"}]}]}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Total", "[", " ", 
           RowBox[{"Most", "[", "dmv", "]"}], "]"}], ",", 
          RowBox[{"Min", "[", 
           RowBox[{"gm", ",", "nondriverspace"}], "]"}], ",", "0"}], "}"}], 
        ",", "dmv"}], "]"}], " ", ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Total", "[", " ", 
             RowBox[{"Most", "[", "dmv", "]"}], "]"}], ",", 
            RowBox[{"Min", "[", 
             RowBox[{"gm", ",", "nondriverspace"}], "]"}], ",", "0"}], "}"}], 
          ",", "dmv"}], "]"}], ",", "\"\< nondriverspace=\>\"", ",", 
        "nondriverspace", ",", "\"\< space=\>\"", ",", "space", ",", 
        "\"\< currentmut=\>\"", ",", "currentmut", ",", "\"\< range=\>\"", 
        ",", "range", ",", "\"\< Cmut=\>\"", ",", "Cmut"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.664184259214719*^9, 3.664184300051321*^9}, {
  3.6641843355188427`*^9, 3.664184558783764*^9}, {3.6641847825909033`*^9, 
  3.6641848172942533`*^9}, {3.664184996198781*^9, 3.6641850006385813`*^9}, {
  3.6641852636660223`*^9, 3.664185264442226*^9}, {3.664185336622335*^9, 
  3.664185371142817*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "go ",
 Cell[BoxData[
  ButtonBox["\<\"Evaluate\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
       EvaluationNotebook[], All, ButtonCell] SelectionMove[
       EvaluationNotebook[], All, CellGroup]) SelectionEvaluateCreateCell[
      EvaluationNotebook[]],
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False,
  CellChangeTimes->{3.6252904677946167`*^9, 3.626670633881194*^9, 
   3.6519101150134897`*^9}]
}], "Subsubsection",
 CellChangeTimes->{{3.651910339748372*^9, 3.651910345476472*^9}, {
  3.6519103897649527`*^9, 3.651910391384837*^9}, {3.651910480974146*^9, 
  3.651910484694303*^9}, {3.664184855622817*^9, 3.664184858023122*^9}, {
  3.6641851543790627`*^9, 3.6641851553866863`*^9}}],

Cell[BoxData[
 RowBox[{"giveiorm", "[", 
  RowBox[{"1", ",", "4", ",", "1", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "3"}], "}"}], ",", "4", 
   ",", "4", ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.664184574141575*^9, 3.664184595230734*^9}, {
   3.664185427954775*^9, 3.6641854313701077`*^9}, 3.6641854636664057`*^9, {
   3.664185524827814*^9, 3.664185549364151*^9}}]
}, Open  ]]
}, Closed]]
},
WindowSize->{1280, 753},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
ShowCellTags->True,
FrontEndVersion->"10.1 for Linux x86 (64-bit) (March 23, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 118, 2, 31, "Input"],
Cell[679, 24, 433, 9, 72, "Input"],
Cell[CellGroupData[{
Cell[1137, 37, 182, 2, 45, "Subsection"],
Cell[1322, 41, 527, 9, 77, "Text"],
Cell[CellGroupData[{
Cell[1874, 54, 701, 18, 39, "Subsubsection"],
Cell[2578, 74, 7020, 158, 671, "Input"],
Cell[9601, 234, 134, 1, 31, "Text"],
Cell[9738, 237, 5127, 134, 517, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[14914, 377, 180, 2, 37, "Subsection"],
Cell[CellGroupData[{
Cell[15119, 383, 705, 18, 39, "Subsubsection"],
Cell[15827, 403, 959, 26, 59, "Input"],
Cell[CellGroupData[{
Cell[16811, 433, 364, 9, 32, "Input"],
Cell[17178, 444, 1138, 18, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[18365, 468, 704, 18, 33, "Subsubsection"],
Cell[19072, 488, 1053, 26, 41, "Input",
 CellID->2053928453],
Cell[CellGroupData[{
Cell[20150, 518, 354, 8, 32, "Input"],
Cell[20507, 528, 1345, 23, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[21901, 557, 714, 18, 33, "Subsubsection"],
Cell[22618, 577, 6267, 136, 407, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[28922, 718, 800, 19, 33, "Subsubsection"],
Cell[29725, 739, 4983, 74, 32, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[34745, 818, 707, 18, 33, "Subsubsection"],
Cell[35455, 838, 1594, 30, 55, "Input"],
Cell[37052, 870, 1336, 24, 55, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[38425, 899, 760, 18, 33, "Subsubsection"],
Cell[39188, 919, 2435, 55, 231, "Input"],
Cell[41626, 976, 1877, 44, 165, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[43540, 1025, 698, 18, 33, "Subsubsection"],
Cell[44241, 1045, 772, 14, 32, "Input"],
Cell[45016, 1061, 1126, 18, 32, "Input"],
Cell[46145, 1081, 732, 18, 32, "Input"],
Cell[46880, 1101, 1653, 29, 32, "Input"],
Cell[48536, 1132, 5649, 122, 407, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[54222, 1259, 697, 18, 33, "Subsubsection"],
Cell[54922, 1279, 593, 14, 55, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[55552, 1298, 695, 18, 33, "Subsubsection"],
Cell[56250, 1318, 392, 8, 77, "Text"],
Cell[56645, 1328, 1529, 28, 32, "Input"],
Cell[58177, 1358, 1736, 44, 121, "Input"],
Cell[59916, 1404, 2321, 52, 165, "Input"],
Cell[62240, 1458, 2048, 48, 165, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[64337, 1512, 364, 5, 37, "Subsection"],
Cell[64704, 1519, 218, 5, 33, "Text"],
Cell[CellGroupData[{
Cell[64947, 1528, 699, 18, 39, "Subsubsection"],
Cell[65649, 1548, 11127, 251, 935, "Input"],
Cell[76779, 1801, 5005, 115, 451, "Input"],
Cell[81787, 1918, 12490, 270, 1056, "Input"],
Cell[94280, 2190, 14659, 316, 1210, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[108976, 2511, 794, 19, 33, "Subsubsection"],
Cell[109773, 2532, 9196, 166, 451, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[119018, 2704, 339, 5, 36, "Subsection"],
Cell[119360, 2711, 691, 18, 72, "Input"],
Cell[120054, 2731, 154, 3, 31, "Input"],
Cell[120211, 2736, 152, 3, 31, "Input"],
Cell[120366, 2741, 155, 3, 31, "Input"],
Cell[120524, 2746, 187, 4, 31, "Input"],
Cell[120714, 2752, 177, 4, 31, "Input"],
Cell[120894, 2758, 4179, 115, 452, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[125110, 2878, 425, 5, 37, "Subsection"],
Cell[125538, 2885, 33362, 706, 3289, "Input"],
Cell[158903, 3593, 180, 4, 32, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[159120, 3602, 344, 4, 37, "Subsection"],
Cell[CellGroupData[{
Cell[159489, 3610, 46053, 883, 3751, "Input"],
Cell[205545, 4495, 185587, 3519, 70, "Output"],
Cell[391135, 8016, 5346, 75, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[396530, 8097, 290, 4, 36, "Subsection"],
Cell[CellGroupData[{
Cell[396845, 8105, 797, 19, 39, "Subsubsection"],
Cell[397645, 8126, 10169, 220, 1793, "Input"]
}, Closed]]
}, Closed]],
Cell[407841, 8350, 791, 19, 40, "Subsection"],
Cell[CellGroupData[{
Cell[408657, 8373, 240, 3, 36, "Subsection"],
Cell[CellGroupData[{
Cell[408922, 8380, 802, 19, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[409749, 8403, 859, 21, 143, "Input"],
Cell[410611, 8426, 1396, 21, 70, "Output"],
Cell[412010, 8449, 901, 12, 70, "Output"],
Cell[412914, 8463, 900, 12, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[413863, 8481, 791, 19, 33, "Subsubsection"],
Cell[CellGroupData[{
Cell[414679, 8504, 233, 5, 32, "Input"],
Cell[414915, 8511, 432, 6, 70, "Output"]
}, Open  ]],
Cell[415362, 8520, 6099, 142, 449, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[421510, 8668, 311, 4, 37, "Subsection"],
Cell[421824, 8674, 459, 8, 99, "Text"],
Cell[422286, 8684, 344, 6, 33, "Text"],
Cell[422633, 8692, 93, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[422751, 8697, 53811, 1124, 3912, "Input"],
Cell[476565, 9823, 29979, 516, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[506593, 10345, 393, 5, 37, "Subsection"],
Cell[CellGroupData[{
Cell[507011, 10354, 793, 19, 39, "Subsubsection"],
Cell[507807, 10375, 26370, 633, 2992, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[534226, 11014, 341, 4, 37, "Subsection"],
Cell[CellGroupData[{
Cell[534592, 11022, 742, 18, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[535359, 11044, 46105, 884, 3773, "Input"],
Cell[581467, 11930, 181088, 3457, 70, "Output"],
Cell[762558, 15389, 848, 13, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[763467, 15409, 267, 4, 36, "Subsection"],
Cell[CellGroupData[{
Cell[763759, 15417, 859, 20, 39, "Subsubsection"],
Cell[764621, 15439, 14047, 292, 1712, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[778705, 15736, 797, 19, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[779527, 15759, 14695, 308, 2233, "Input"],
Cell[794225, 16069, 339476, 5916, 70, "Output"],
Cell[1133704, 21987, 698, 11, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[1134441, 22003, 1109, 29, 41, "Subsection"],
Cell[CellGroupData[{
Cell[1135575, 22036, 1055, 28, 41, "Subsection"],
Cell[1136633, 22066, 140, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[1136798, 22072, 34, 0, 31, "Input"],
Cell[1136835, 22074, 94, 1, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1136966, 22080, 210, 3, 31, "Input"],
Cell[1137179, 22085, 9342, 223, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1146570, 22314, 240, 3, 36, "Subsection"],
Cell[CellGroupData[{
Cell[1146835, 22321, 854, 20, 39, "Subsubsection"],
Cell[1147692, 22343, 338, 9, 52, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1148067, 22357, 802, 19, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[1148894, 22380, 859, 21, 112, "Input"],
Cell[1149756, 22403, 857, 13, 70, "Output"],
Cell[1150616, 22418, 852, 13, 70, "Output"],
Cell[1151471, 22433, 854, 13, 70, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1152374, 22452, 791, 19, 39, "Subsubsection"],
Cell[CellGroupData[{
Cell[1153190, 22475, 233, 5, 32, "Input"],
Cell[1153426, 22482, 308, 4, 70, "Output"]
}, Open  ]],
Cell[1153749, 22489, 6099, 142, 449, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1159897, 22637, 356, 5, 37, "Subsection"],
Cell[1160256, 22644, 1412, 21, 231, "Text"],
Cell[1161671, 22667, 1593, 24, 275, "Text"],
Cell[1163267, 22693, 1868, 31, 385, "Text"],
Cell[1165138, 22726, 1071, 36, 671, "Text"],
Cell[1166212, 22764, 90, 1, 32, "Input"],
Cell[1166305, 22767, 7390, 177, 490, "Input"],
Cell[CellGroupData[{
Cell[1173720, 22948, 197, 4, 32, "Input"],
Cell[1173920, 22954, 10337, 255, 985, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1184294, 23214, 6873, 154, 341, "Input"],
Cell[1191170, 23370, 3934, 83, 958, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1195153, 23459, 482, 6, 37, "Subsection"],
Cell[CellGroupData[{
Cell[1195660, 23469, 29823, 721, 3679, "Input"],
Cell[1225486, 24192, 18028, 315, 123566, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1243551, 24512, 3465, 96, 231, "Input"],
Cell[1247019, 24610, 3570, 71, 234, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1250638, 24687, 518, 7, 37, "Subsection"],
Cell[1251159, 24696, 343, 6, 55, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1251539, 24707, 313, 4, 44, "Subsection"],
Cell[1251855, 24713, 217, 4, 31, "Text"],
Cell[1252075, 24719, 32563, 765, 3553, "Input"],
Cell[1284641, 25486, 94, 1, 32, "Input"],
Cell[1284738, 25489, 4555, 111, 407, "Input"],
Cell[CellGroupData[{
Cell[1289318, 25604, 791, 19, 39, "Subsubsection"],
Cell[1290112, 25625, 409, 8, 32, "Input"]
}, Open  ]]
}, Closed]]
}
]
*)

(* End of internal cache information *)
